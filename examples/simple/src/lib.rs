use anyhow::Error;
use pulumi_wasm_random::source::random_string::*;
use pulumi_wasm_rust::Output;
use pulumi_wasm_rust::{add_export, pulumi_main};

// Causes compilation errors
// Generated by cargo-component
// mod bindings;

#[pulumi_main]
fn test_main() -> Result<(), Error> {
    let length: Output<i32> = Output::new(&12).map(|i: i32| i * 3);
    let random_string = random_string(RandomStringArgs {
        name: "test",
        keepers: None.into(),
        length,
        lower: None.into(),
        min_lower: None.into(),
        min_numeric: None.into(),
        min_special: None.into(),
        min_upper: None.into(),
        number: None.into(),
        numeric: None.into(),
        override_special: None.into(),
        special: None.into(),
        upper: None.into(),
    });
    add_export("result", random_string.result);
    Ok(())
}
