#[derive(serde::Serialize)]
pub struct PageRuleActions {
    #[serde(rename = "alwaysUseHttps")]
    pub r#always_use_https: Box<Option<bool>>,
    #[serde(rename = "automaticHttpsRewrites")]
    pub r#automatic_https_rewrites: Box<Option<String>>,
    #[serde(rename = "browserCacheTtl")]
    pub r#browser_cache_ttl: Box<Option<String>>,
    #[serde(rename = "browserCheck")]
    pub r#browser_check: Box<Option<String>>,
    #[serde(rename = "bypassCacheOnCookie")]
    pub r#bypass_cache_on_cookie: Box<Option<String>>,
    #[serde(rename = "cacheByDeviceType")]
    pub r#cache_by_device_type: Box<Option<String>>,
    #[serde(rename = "cacheDeceptionArmor")]
    pub r#cache_deception_armor: Box<Option<String>>,
    #[serde(rename = "cacheKeyFields")]
    pub r#cache_key_fields: Box<Option<crate::types::PageRuleActionsCacheKeyFields>>,
    #[serde(rename = "cacheLevel")]
    pub r#cache_level: Box<Option<String>>,
    #[serde(rename = "cacheOnCookie")]
    pub r#cache_on_cookie: Box<Option<String>>,
    #[serde(rename = "cacheTtlByStatuses")]
    pub r#cache_ttl_by_statuses: Box<Option<Vec<crate::types::PageRuleActionsCacheTtlByStatus>>>,
    #[serde(rename = "disableApps")]
    pub r#disable_apps: Box<Option<bool>>,
    #[serde(rename = "disablePerformance")]
    pub r#disable_performance: Box<Option<bool>>,
    #[serde(rename = "disableRailgun")]
    pub r#disable_railgun: Box<Option<bool>>,
    #[serde(rename = "disableSecurity")]
    pub r#disable_security: Box<Option<bool>>,
    #[serde(rename = "disableZaraz")]
    pub r#disable_zaraz: Box<Option<bool>>,
    #[serde(rename = "edgeCacheTtl")]
    pub r#edge_cache_ttl: Box<Option<i32>>,
    #[serde(rename = "emailObfuscation")]
    pub r#email_obfuscation: Box<Option<String>>,
    #[serde(rename = "explicitCacheControl")]
    pub r#explicit_cache_control: Box<Option<String>>,
    #[serde(rename = "forwardingUrl")]
    pub r#forwarding_url: Box<Option<crate::types::PageRuleActionsForwardingUrl>>,
    #[serde(rename = "hostHeaderOverride")]
    pub r#host_header_override: Box<Option<String>>,
    #[serde(rename = "ipGeolocation")]
    pub r#ip_geolocation: Box<Option<String>>,
    #[serde(rename = "minifies")]
    pub r#minifies: Box<Option<Vec<crate::types::PageRuleActionsMinify>>>,
    #[serde(rename = "mirage")]
    pub r#mirage: Box<Option<String>>,
    #[serde(rename = "opportunisticEncryption")]
    pub r#opportunistic_encryption: Box<Option<String>>,
    #[serde(rename = "originErrorPagePassThru")]
    pub r#origin_error_page_pass_thru: Box<Option<String>>,
    #[serde(rename = "polish")]
    pub r#polish: Box<Option<String>>,
    #[serde(rename = "resolveOverride")]
    pub r#resolve_override: Box<Option<String>>,
    #[serde(rename = "respectStrongEtag")]
    pub r#respect_strong_etag: Box<Option<String>>,
    #[serde(rename = "responseBuffering")]
    pub r#response_buffering: Box<Option<String>>,
    #[serde(rename = "rocketLoader")]
    pub r#rocket_loader: Box<Option<String>>,
    #[serde(rename = "securityLevel")]
    pub r#security_level: Box<Option<String>>,
    #[serde(rename = "serverSideExclude")]
    pub r#server_side_exclude: Box<Option<String>>,
    #[serde(rename = "sortQueryStringForCache")]
    pub r#sort_query_string_for_cache: Box<Option<String>>,
    #[serde(rename = "ssl")]
    pub r#ssl: Box<Option<String>>,
    #[serde(rename = "trueClientIpHeader")]
    pub r#true_client_ip_header: Box<Option<String>>,
    #[serde(rename = "waf")]
    pub r#waf: Box<Option<String>>,
}
