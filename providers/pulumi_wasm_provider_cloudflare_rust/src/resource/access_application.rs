pub struct AccessApplicationArgs {
    pub account_id: pulumi_wasm_rust::Output<Option<String>>,
    pub allow_authenticate_via_warp: pulumi_wasm_rust::Output<Option<bool>>,
    pub allowed_idps: pulumi_wasm_rust::Output<Option<Vec<String>>>,
    pub app_launcher_logo_url: pulumi_wasm_rust::Output<Option<String>>,
    pub app_launcher_visible: pulumi_wasm_rust::Output<Option<bool>>,
    pub auto_redirect_to_identity: pulumi_wasm_rust::Output<Option<bool>>,
    pub bg_color: pulumi_wasm_rust::Output<Option<String>>,
    pub cors_headers:
        pulumi_wasm_rust::Output<Option<Vec<crate::types::AccessApplicationCorsHeader>>>,
    pub custom_deny_message: pulumi_wasm_rust::Output<Option<String>>,
    pub custom_deny_url: pulumi_wasm_rust::Output<Option<String>>,
    pub custom_non_identity_deny_url: pulumi_wasm_rust::Output<Option<String>>,
    pub custom_pages: pulumi_wasm_rust::Output<Option<Vec<String>>>,
    pub domain: pulumi_wasm_rust::Output<Option<String>>,
    pub enable_binding_cookie: pulumi_wasm_rust::Output<Option<bool>>,
    pub footer_links:
        pulumi_wasm_rust::Output<Option<Vec<crate::types::AccessApplicationFooterLink>>>,
    pub header_bg_color: pulumi_wasm_rust::Output<Option<String>>,
    pub http_only_cookie_attribute: pulumi_wasm_rust::Output<Option<bool>>,
    pub landing_page_design:
        pulumi_wasm_rust::Output<Option<crate::types::AccessApplicationLandingPageDesign>>,
    pub logo_url: pulumi_wasm_rust::Output<Option<String>>,
    pub name: pulumi_wasm_rust::Output<Option<String>>,
    pub saas_app: pulumi_wasm_rust::Output<Option<crate::types::AccessApplicationSaasApp>>,
    pub same_site_cookie_attribute: pulumi_wasm_rust::Output<Option<String>>,
    pub self_hosted_domains: pulumi_wasm_rust::Output<Option<Vec<String>>>,
    pub service_auth401_redirect: pulumi_wasm_rust::Output<Option<bool>>,
    pub session_duration: pulumi_wasm_rust::Output<Option<String>>,
    pub skip_interstitial: pulumi_wasm_rust::Output<Option<bool>>,
    pub tags: pulumi_wasm_rust::Output<Option<Vec<String>>>,
    pub type_: pulumi_wasm_rust::Output<Option<String>>,
    pub zone_id: pulumi_wasm_rust::Output<Option<String>>,
}

pub struct AccessApplicationResult {
    pub account_id: pulumi_wasm_rust::Output<String>,
    pub allow_authenticate_via_warp: pulumi_wasm_rust::Output<Option<bool>>,
    pub allowed_idps: pulumi_wasm_rust::Output<Option<Vec<String>>>,
    pub app_launcher_logo_url: pulumi_wasm_rust::Output<Option<String>>,
    pub app_launcher_visible: pulumi_wasm_rust::Output<Option<bool>>,
    pub aud: pulumi_wasm_rust::Output<String>,
    pub auto_redirect_to_identity: pulumi_wasm_rust::Output<Option<bool>>,
    pub bg_color: pulumi_wasm_rust::Output<Option<String>>,
    pub cors_headers:
        pulumi_wasm_rust::Output<Option<Vec<crate::types::AccessApplicationCorsHeader>>>,
    pub custom_deny_message: pulumi_wasm_rust::Output<Option<String>>,
    pub custom_deny_url: pulumi_wasm_rust::Output<Option<String>>,
    pub custom_non_identity_deny_url: pulumi_wasm_rust::Output<Option<String>>,
    pub custom_pages: pulumi_wasm_rust::Output<Option<Vec<String>>>,
    pub domain: pulumi_wasm_rust::Output<String>,
    pub enable_binding_cookie: pulumi_wasm_rust::Output<Option<bool>>,
    pub footer_links:
        pulumi_wasm_rust::Output<Option<Vec<crate::types::AccessApplicationFooterLink>>>,
    pub header_bg_color: pulumi_wasm_rust::Output<Option<String>>,
    pub http_only_cookie_attribute: pulumi_wasm_rust::Output<Option<bool>>,
    pub landing_page_design:
        pulumi_wasm_rust::Output<Option<crate::types::AccessApplicationLandingPageDesign>>,
    pub logo_url: pulumi_wasm_rust::Output<Option<String>>,
    pub name: pulumi_wasm_rust::Output<String>,
    pub saas_app: pulumi_wasm_rust::Output<Option<crate::types::AccessApplicationSaasApp>>,
    pub same_site_cookie_attribute: pulumi_wasm_rust::Output<Option<String>>,
    pub self_hosted_domains: pulumi_wasm_rust::Output<Option<Vec<String>>>,
    pub service_auth401_redirect: pulumi_wasm_rust::Output<Option<bool>>,
    pub session_duration: pulumi_wasm_rust::Output<Option<String>>,
    pub skip_interstitial: pulumi_wasm_rust::Output<Option<bool>>,
    pub tags: pulumi_wasm_rust::Output<Option<Vec<String>>>,
    pub type_: pulumi_wasm_rust::Output<Option<String>>,
    pub zone_id: pulumi_wasm_rust::Output<String>,
}

pub fn create(name: &str, args: AccessApplicationArgs) -> AccessApplicationResult {
    let result = crate::bindings::pulumi::cloudflare::access_application::invoke(
        name,
        &crate::bindings::pulumi::cloudflare::access_application::Args {
            account_id: args.account_id.get_inner(),
            allow_authenticate_via_warp: args.allow_authenticate_via_warp.get_inner(),
            allowed_idps: args.allowed_idps.get_inner(),
            app_launcher_logo_url: args.app_launcher_logo_url.get_inner(),
            app_launcher_visible: args.app_launcher_visible.get_inner(),
            auto_redirect_to_identity: args.auto_redirect_to_identity.get_inner(),
            bg_color: args.bg_color.get_inner(),
            cors_headers: args.cors_headers.get_inner(),
            custom_deny_message: args.custom_deny_message.get_inner(),
            custom_deny_url: args.custom_deny_url.get_inner(),
            custom_non_identity_deny_url: args.custom_non_identity_deny_url.get_inner(),
            custom_pages: args.custom_pages.get_inner(),
            domain: args.domain.get_inner(),
            enable_binding_cookie: args.enable_binding_cookie.get_inner(),
            footer_links: args.footer_links.get_inner(),
            header_bg_color: args.header_bg_color.get_inner(),
            http_only_cookie_attribute: args.http_only_cookie_attribute.get_inner(),
            landing_page_design: args.landing_page_design.get_inner(),
            logo_url: args.logo_url.get_inner(),
            name: args.name.get_inner(),
            saas_app: args.saas_app.get_inner(),
            same_site_cookie_attribute: args.same_site_cookie_attribute.get_inner(),
            self_hosted_domains: args.self_hosted_domains.get_inner(),
            service_auth401_redirect: args.service_auth401_redirect.get_inner(),
            session_duration: args.session_duration.get_inner(),
            skip_interstitial: args.skip_interstitial.get_inner(),
            tags: args.tags.get_inner(),
            type_: args.type_.get_inner(),
            zone_id: args.zone_id.get_inner(),
        },
    );

    AccessApplicationResult {
        account_id: crate::into_domain(result.account_id),
        allow_authenticate_via_warp: crate::into_domain(result.allow_authenticate_via_warp),
        allowed_idps: crate::into_domain(result.allowed_idps),
        app_launcher_logo_url: crate::into_domain(result.app_launcher_logo_url),
        app_launcher_visible: crate::into_domain(result.app_launcher_visible),
        aud: crate::into_domain(result.aud),
        auto_redirect_to_identity: crate::into_domain(result.auto_redirect_to_identity),
        bg_color: crate::into_domain(result.bg_color),
        cors_headers: crate::into_domain(result.cors_headers),
        custom_deny_message: crate::into_domain(result.custom_deny_message),
        custom_deny_url: crate::into_domain(result.custom_deny_url),
        custom_non_identity_deny_url: crate::into_domain(result.custom_non_identity_deny_url),
        custom_pages: crate::into_domain(result.custom_pages),
        domain: crate::into_domain(result.domain),
        enable_binding_cookie: crate::into_domain(result.enable_binding_cookie),
        footer_links: crate::into_domain(result.footer_links),
        header_bg_color: crate::into_domain(result.header_bg_color),
        http_only_cookie_attribute: crate::into_domain(result.http_only_cookie_attribute),
        landing_page_design: crate::into_domain(result.landing_page_design),
        logo_url: crate::into_domain(result.logo_url),
        name: crate::into_domain(result.name),
        saas_app: crate::into_domain(result.saas_app),
        same_site_cookie_attribute: crate::into_domain(result.same_site_cookie_attribute),
        self_hosted_domains: crate::into_domain(result.self_hosted_domains),
        service_auth401_redirect: crate::into_domain(result.service_auth401_redirect),
        session_duration: crate::into_domain(result.session_duration),
        skip_interstitial: crate::into_domain(result.skip_interstitial),
        tags: crate::into_domain(result.tags),
        type_: crate::into_domain(result.type_),
        zone_id: crate::into_domain(result.zone_id),
    }
}
