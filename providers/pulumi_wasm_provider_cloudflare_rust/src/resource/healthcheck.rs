pub struct HealthcheckArgs {
    pub address: pulumi_wasm_rust::Output<String>,
    pub allow_insecure: pulumi_wasm_rust::Output<Option<bool>>,
    pub check_regions: pulumi_wasm_rust::Output<Option<Vec<String>>>,
    pub consecutive_fails: pulumi_wasm_rust::Output<Option<i32>>,
    pub consecutive_successes: pulumi_wasm_rust::Output<Option<i32>>,
    pub description: pulumi_wasm_rust::Output<Option<String>>,
    pub expected_body: pulumi_wasm_rust::Output<Option<String>>,
    pub expected_codes: pulumi_wasm_rust::Output<Option<Vec<String>>>,
    pub follow_redirects: pulumi_wasm_rust::Output<Option<bool>>,
    pub headers: pulumi_wasm_rust::Output<Option<Vec<crate::types::HealthcheckHeader>>>,
    pub interval: pulumi_wasm_rust::Output<Option<i32>>,
    pub method: pulumi_wasm_rust::Output<Option<String>>,
    pub name: pulumi_wasm_rust::Output<String>,
    pub path: pulumi_wasm_rust::Output<Option<String>>,
    pub port: pulumi_wasm_rust::Output<Option<i32>>,
    pub retries: pulumi_wasm_rust::Output<Option<i32>>,
    pub suspended: pulumi_wasm_rust::Output<Option<bool>>,
    pub timeout: pulumi_wasm_rust::Output<Option<i32>>,
    pub type_: pulumi_wasm_rust::Output<String>,
    pub zone_id: pulumi_wasm_rust::Output<String>,
}

pub struct HealthcheckResult {
    pub address: pulumi_wasm_rust::Output<String>,
    pub allow_insecure: pulumi_wasm_rust::Output<Option<bool>>,
    pub check_regions: pulumi_wasm_rust::Output<Vec<String>>,
    pub consecutive_fails: pulumi_wasm_rust::Output<Option<i32>>,
    pub consecutive_successes: pulumi_wasm_rust::Output<Option<i32>>,
    pub created_on: pulumi_wasm_rust::Output<String>,
    pub description: pulumi_wasm_rust::Output<Option<String>>,
    pub expected_body: pulumi_wasm_rust::Output<Option<String>>,
    pub expected_codes: pulumi_wasm_rust::Output<Option<Vec<String>>>,
    pub follow_redirects: pulumi_wasm_rust::Output<Option<bool>>,
    pub headers: pulumi_wasm_rust::Output<Option<Vec<crate::types::HealthcheckHeader>>>,
    pub interval: pulumi_wasm_rust::Output<Option<i32>>,
    pub method: pulumi_wasm_rust::Output<String>,
    pub modified_on: pulumi_wasm_rust::Output<String>,
    pub name: pulumi_wasm_rust::Output<String>,
    pub path: pulumi_wasm_rust::Output<Option<String>>,
    pub port: pulumi_wasm_rust::Output<Option<i32>>,
    pub retries: pulumi_wasm_rust::Output<Option<i32>>,
    pub suspended: pulumi_wasm_rust::Output<Option<bool>>,
    pub timeout: pulumi_wasm_rust::Output<Option<i32>>,
    pub type_: pulumi_wasm_rust::Output<String>,
    pub zone_id: pulumi_wasm_rust::Output<String>,
}

pub fn create(name: &str, args: HealthcheckArgs) -> HealthcheckResult {
    let result = crate::bindings::pulumi::cloudflare::healthcheck::invoke(
        name,
        &crate::bindings::pulumi::cloudflare::healthcheck::Args {
            address: args.address.get_inner(),
            allow_insecure: args.allow_insecure.get_inner(),
            check_regions: args.check_regions.get_inner(),
            consecutive_fails: args.consecutive_fails.get_inner(),
            consecutive_successes: args.consecutive_successes.get_inner(),
            description: args.description.get_inner(),
            expected_body: args.expected_body.get_inner(),
            expected_codes: args.expected_codes.get_inner(),
            follow_redirects: args.follow_redirects.get_inner(),
            headers: args.headers.get_inner(),
            interval: args.interval.get_inner(),
            method: args.method.get_inner(),
            name: args.name.get_inner(),
            path: args.path.get_inner(),
            port: args.port.get_inner(),
            retries: args.retries.get_inner(),
            suspended: args.suspended.get_inner(),
            timeout: args.timeout.get_inner(),
            type_: args.type_.get_inner(),
            zone_id: args.zone_id.get_inner(),
        },
    );

    HealthcheckResult {
        address: crate::into_domain(result.address),
        allow_insecure: crate::into_domain(result.allow_insecure),
        check_regions: crate::into_domain(result.check_regions),
        consecutive_fails: crate::into_domain(result.consecutive_fails),
        consecutive_successes: crate::into_domain(result.consecutive_successes),
        created_on: crate::into_domain(result.created_on),
        description: crate::into_domain(result.description),
        expected_body: crate::into_domain(result.expected_body),
        expected_codes: crate::into_domain(result.expected_codes),
        follow_redirects: crate::into_domain(result.follow_redirects),
        headers: crate::into_domain(result.headers),
        interval: crate::into_domain(result.interval),
        method: crate::into_domain(result.method),
        modified_on: crate::into_domain(result.modified_on),
        name: crate::into_domain(result.name),
        path: crate::into_domain(result.path),
        port: crate::into_domain(result.port),
        retries: crate::into_domain(result.retries),
        suspended: crate::into_domain(result.suspended),
        timeout: crate::into_domain(result.timeout),
        type_: crate::into_domain(result.type_),
        zone_id: crate::into_domain(result.zone_id),
    }
}
