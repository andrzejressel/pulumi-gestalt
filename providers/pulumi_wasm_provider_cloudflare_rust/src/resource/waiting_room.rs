pub struct WaitingRoomArgs {
    pub additional_routes:
        pulumi_wasm_rust::Output<Option<Vec<crate::types::WaitingRoomAdditionalRoute>>>,
    pub cookie_suffix: pulumi_wasm_rust::Output<Option<String>>,
    pub custom_page_html: pulumi_wasm_rust::Output<Option<String>>,
    pub default_template_language: pulumi_wasm_rust::Output<Option<String>>,
    pub description: pulumi_wasm_rust::Output<Option<String>>,
    pub disable_session_renewal: pulumi_wasm_rust::Output<Option<bool>>,
    pub host: pulumi_wasm_rust::Output<String>,
    pub json_response_enabled: pulumi_wasm_rust::Output<Option<bool>>,
    pub name: pulumi_wasm_rust::Output<String>,
    pub new_users_per_minute: pulumi_wasm_rust::Output<i32>,
    pub path: pulumi_wasm_rust::Output<Option<String>>,
    pub queue_all: pulumi_wasm_rust::Output<Option<bool>>,
    pub queueing_method: pulumi_wasm_rust::Output<Option<String>>,
    pub queueing_status_code: pulumi_wasm_rust::Output<Option<i32>>,
    pub session_duration: pulumi_wasm_rust::Output<Option<i32>>,
    pub suspended: pulumi_wasm_rust::Output<Option<bool>>,
    pub total_active_users: pulumi_wasm_rust::Output<i32>,
    pub zone_id: pulumi_wasm_rust::Output<String>,
}

pub struct WaitingRoomResult {
    pub additional_routes:
        pulumi_wasm_rust::Output<Option<Vec<crate::types::WaitingRoomAdditionalRoute>>>,
    pub cookie_suffix: pulumi_wasm_rust::Output<Option<String>>,
    pub custom_page_html: pulumi_wasm_rust::Output<Option<String>>,
    pub default_template_language: pulumi_wasm_rust::Output<Option<String>>,
    pub description: pulumi_wasm_rust::Output<Option<String>>,
    pub disable_session_renewal: pulumi_wasm_rust::Output<Option<bool>>,
    pub host: pulumi_wasm_rust::Output<String>,
    pub json_response_enabled: pulumi_wasm_rust::Output<Option<bool>>,
    pub name: pulumi_wasm_rust::Output<String>,
    pub new_users_per_minute: pulumi_wasm_rust::Output<i32>,
    pub path: pulumi_wasm_rust::Output<Option<String>>,
    pub queue_all: pulumi_wasm_rust::Output<Option<bool>>,
    pub queueing_method: pulumi_wasm_rust::Output<Option<String>>,
    pub queueing_status_code: pulumi_wasm_rust::Output<Option<i32>>,
    pub session_duration: pulumi_wasm_rust::Output<Option<i32>>,
    pub suspended: pulumi_wasm_rust::Output<Option<bool>>,
    pub total_active_users: pulumi_wasm_rust::Output<i32>,
    pub zone_id: pulumi_wasm_rust::Output<String>,
}

pub fn create(name: &str, args: WaitingRoomArgs) -> WaitingRoomResult {
    let result = crate::bindings::pulumi::cloudflare::waiting_room::invoke(
        name,
        &crate::bindings::pulumi::cloudflare::waiting_room::Args {
            additional_routes: args.additional_routes.get_inner(),
            cookie_suffix: args.cookie_suffix.get_inner(),
            custom_page_html: args.custom_page_html.get_inner(),
            default_template_language: args.default_template_language.get_inner(),
            description: args.description.get_inner(),
            disable_session_renewal: args.disable_session_renewal.get_inner(),
            host: args.host.get_inner(),
            json_response_enabled: args.json_response_enabled.get_inner(),
            name: args.name.get_inner(),
            new_users_per_minute: args.new_users_per_minute.get_inner(),
            path: args.path.get_inner(),
            queue_all: args.queue_all.get_inner(),
            queueing_method: args.queueing_method.get_inner(),
            queueing_status_code: args.queueing_status_code.get_inner(),
            session_duration: args.session_duration.get_inner(),
            suspended: args.suspended.get_inner(),
            total_active_users: args.total_active_users.get_inner(),
            zone_id: args.zone_id.get_inner(),
        },
    );

    WaitingRoomResult {
        additional_routes: crate::into_domain(result.additional_routes),
        cookie_suffix: crate::into_domain(result.cookie_suffix),
        custom_page_html: crate::into_domain(result.custom_page_html),
        default_template_language: crate::into_domain(result.default_template_language),
        description: crate::into_domain(result.description),
        disable_session_renewal: crate::into_domain(result.disable_session_renewal),
        host: crate::into_domain(result.host),
        json_response_enabled: crate::into_domain(result.json_response_enabled),
        name: crate::into_domain(result.name),
        new_users_per_minute: crate::into_domain(result.new_users_per_minute),
        path: crate::into_domain(result.path),
        queue_all: crate::into_domain(result.queue_all),
        queueing_method: crate::into_domain(result.queueing_method),
        queueing_status_code: crate::into_domain(result.queueing_status_code),
        session_duration: crate::into_domain(result.session_duration),
        suspended: crate::into_domain(result.suspended),
        total_active_users: crate::into_domain(result.total_active_users),
        zone_id: crate::into_domain(result.zone_id),
    }
}
