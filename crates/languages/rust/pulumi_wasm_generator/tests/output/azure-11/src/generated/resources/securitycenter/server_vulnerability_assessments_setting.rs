/// Manages the Server Vulnerability Assesments Setting for Azure Security Center.
///
/// > **NOTE:** This resource requires the `Owner` permission on the Subscription.
///
/// > **NOTE:** Deletion of this resource disables the setting.
///
/// ## Example Usage
///
/// ```ignore
/// use pulumi_wasm_rust::Output;
/// use pulumi_wasm_rust::{add_export, pulumi_main};
/// #[pulumi_main]
/// fn test_main() -> Result<(), Error> {
///     let example = server_vulnerability_assessments_setting::create(
///         "example",
///         ServerVulnerabilityAssessmentsSettingArgs::builder()
///             .vulnerability_assessment_provider("MdeTvm")
///             .build_struct(),
///     );
/// }
/// ```
///
/// ## Import
///
/// The setting can be imported using the `resource id`, e.g.
///
/// ```sh
/// $ pulumi import azure:securitycenter/serverVulnerabilityAssessmentsSetting:ServerVulnerabilityAssessmentsSetting example /subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Security/serverVulnerabilityAssessmentsSettings/AzureServersSetting
/// ```
///
pub mod server_vulnerability_assessments_setting {
    #[derive(pulumi_wasm_rust::__private::bon::Builder)]
    #[builder(finish_fn = build_struct)]
    #[allow(dead_code)]
    pub struct ServerVulnerabilityAssessmentsSettingArgs {
        /// The vulnerability assesment provider to use. The only possible values is `MdeTvm`.
        #[builder(into)]
        pub vulnerability_assessment_provider: pulumi_wasm_rust::InputOrOutput<String>,
    }
    #[allow(dead_code)]
    pub struct ServerVulnerabilityAssessmentsSettingResult {
        /// The vulnerability assesment provider to use. The only possible values is `MdeTvm`.
        pub vulnerability_assessment_provider: pulumi_wasm_rust::Output<String>,
    }
    ///
    /// Registers a new resource with the given unique name and arguments
    ///
    #[allow(non_snake_case, unused_imports, dead_code)]
    pub fn create(
        context: &pulumi_wasm_rust::PulumiContext,
        name: &str,
        args: ServerVulnerabilityAssessmentsSettingArgs,
    ) -> ServerVulnerabilityAssessmentsSettingResult {
        use pulumi_wasm_rust::__private::pulumi_gestalt_adapter_wasm_wit::client_bindings::component::pulumi_wasm::register_interface;
        use std::collections::HashMap;
        let vulnerability_assessment_provider_binding = args
            .vulnerability_assessment_provider
            .get_output(context)
            .get_inner();
        let request = register_interface::RegisterResourceRequest {
            type_: "azure:securitycenter/serverVulnerabilityAssessmentsSetting:ServerVulnerabilityAssessmentsSetting"
                .into(),
            name: name.to_string(),
            version: super::super::get_version(),
            object: Vec::from([
                register_interface::ObjectField {
                    name: "vulnerabilityAssessmentProvider".into(),
                    value: &vulnerability_assessment_provider_binding,
                },
            ]),
        };
        let o = register_interface::register(context.get_inner(), &request);
        ServerVulnerabilityAssessmentsSettingResult {
            vulnerability_assessment_provider: pulumi_wasm_rust::__private::into_domain(
                o.extract_field("vulnerabilityAssessmentProvider"),
            ),
        }
    }
}
