///
///
/// ## Import
///
/// Databrick Workspaces can be imported using the `resource id`, e.g.
///
/// ```sh
/// $ pulumi import azure:databricks/workspace:Workspace workspace1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Databricks/workspaces/workspace1
/// ```
///
pub mod workspace {
    #[derive(pulumi_gestalt_rust::__private::bon::Builder)]
    #[builder(finish_fn = build_struct)]
    #[allow(dead_code)]
    pub struct WorkspaceArgs {
        /// Access Connector ID to use when default storage account firewall is enabled.
        ///
        /// > **Note:** The `access_connector_id` field is only required if `default_storage_firewall_enabled` is set to `true`.
        #[builder(into, default)]
        pub access_connector_id: pulumi_gestalt_rust::InputOrOutput<Option<String>>,
        /// A `custom_parameters` block as documented below.
        #[builder(into, default)]
        pub custom_parameters: pulumi_gestalt_rust::InputOrOutput<
            Option<super::super::types::databricks::WorkspaceCustomParameters>,
        >,
        /// Is the workspace enabled for customer managed key encryption? If `true` this enables the Managed Identity for the managed storage account. Possible values are `true` or `false`. Defaults to `false`. This field is only valid if the Databricks Workspace `sku` is set to `premium`.
        #[builder(into, default)]
        pub customer_managed_key_enabled: pulumi_gestalt_rust::InputOrOutput<
            Option<bool>,
        >,
        /// Disallow public access to default storage account. Defaults to `false`.
        #[builder(into, default)]
        pub default_storage_firewall_enabled: pulumi_gestalt_rust::InputOrOutput<
            Option<bool>,
        >,
        /// An `enhanced_security_compliance` block as documented below. This feature is only valid if `sku` is set to `premium`.
        #[builder(into, default)]
        pub enhanced_security_compliance: pulumi_gestalt_rust::InputOrOutput<
            Option<super::super::types::databricks::WorkspaceEnhancedSecurityCompliance>,
        >,
        /// Is the Databricks File System root file system enabled with a secondary layer of encryption with platform managed keys? Possible values are `true` or `false`. Defaults to `false`. This field is only valid if the Databricks Workspace `sku` is set to `premium`. Changing this forces a new resource to be created.
        #[builder(into, default)]
        pub infrastructure_encryption_enabled: pulumi_gestalt_rust::InputOrOutput<
            Option<bool>,
        >,
        /// Resource ID of the Outbound Load balancer Backend Address Pool for Secure Cluster Connectivity (No Public IP) workspace with managed virtual network. Changing this forces a new resource to be created.
        #[builder(into, default)]
        pub load_balancer_backend_address_pool_id: pulumi_gestalt_rust::InputOrOutput<
            Option<String>,
        >,
        /// Specifies the supported Azure location where the resource has to be created. Changing this forces a new resource to be created.
        #[builder(into, default)]
        pub location: pulumi_gestalt_rust::InputOrOutput<Option<String>>,
        #[builder(into, default)]
        pub managed_disk_cmk_key_vault_id: pulumi_gestalt_rust::InputOrOutput<
            Option<String>,
        >,
        /// Customer managed encryption properties for the Databricks Workspace managed disks.
        #[builder(into, default)]
        pub managed_disk_cmk_key_vault_key_id: pulumi_gestalt_rust::InputOrOutput<
            Option<String>,
        >,
        /// Whether customer managed keys for disk encryption will automatically be rotated to the latest version.
        #[builder(into, default)]
        pub managed_disk_cmk_rotation_to_latest_version_enabled: pulumi_gestalt_rust::InputOrOutput<
            Option<bool>,
        >,
        /// The name of the resource group where Azure should place the managed Databricks resources. Changing this forces a new resource to be created.
        ///
        /// > **Note:** Make sure that this field is unique if you have multiple Databrick Workspaces deployed in your subscription and choose to not have the `managed_resource_group_name` auto generated by the Azure Resource Provider. Having multiple Databrick Workspaces deployed in the same subscription with the same `manage_resource_group_name` may result in some resources that cannot be deleted.
        #[builder(into, default)]
        pub managed_resource_group_name: pulumi_gestalt_rust::InputOrOutput<
            Option<String>,
        >,
        #[builder(into, default)]
        pub managed_services_cmk_key_vault_id: pulumi_gestalt_rust::InputOrOutput<
            Option<String>,
        >,
        /// Customer managed encryption properties for the Databricks Workspace managed resources(e.g. Notebooks and Artifacts).
        #[builder(into, default)]
        pub managed_services_cmk_key_vault_key_id: pulumi_gestalt_rust::InputOrOutput<
            Option<String>,
        >,
        /// Specifies the name of the Databricks Workspace resource. Changing this forces a new resource to be created.
        #[builder(into, default)]
        pub name: pulumi_gestalt_rust::InputOrOutput<Option<String>>,
        /// Does the data plane (clusters) to control plane communication happen over private link endpoint only or publicly? Possible values `AllRules`, `NoAzureDatabricksRules` or `NoAzureServiceRules`. Required when `public_network_access_enabled` is set to `false`.
        #[builder(into, default)]
        pub network_security_group_rules_required: pulumi_gestalt_rust::InputOrOutput<
            Option<String>,
        >,
        /// Allow public access for accessing workspace. Set value to `false` to access workspace only via private link endpoint. Possible values include `true` or `false`. Defaults to `true`.
        #[builder(into, default)]
        pub public_network_access_enabled: pulumi_gestalt_rust::InputOrOutput<
            Option<bool>,
        >,
        /// The name of the Resource Group in which the Databricks Workspace should exist. Changing this forces a new resource to be created.
        #[builder(into)]
        pub resource_group_name: pulumi_gestalt_rust::InputOrOutput<String>,
        /// The `sku` to use for the Databricks Workspace. Possible values are `standard`, `premium`, or `trial`.
        ///
        /// > **Note:** Downgrading to a `trial sku` from a `standard` or `premium sku` will force a new resource to be created.
        #[builder(into)]
        pub sku: pulumi_gestalt_rust::InputOrOutput<String>,
        /// A mapping of tags to assign to the resource.
        #[builder(into, default)]
        pub tags: pulumi_gestalt_rust::InputOrOutput<
            Option<std::collections::HashMap<String, String>>,
        >,
    }
    #[allow(dead_code)]
    pub struct WorkspaceResult {
        /// Access Connector ID to use when default storage account firewall is enabled.
        ///
        /// > **Note:** The `access_connector_id` field is only required if `default_storage_firewall_enabled` is set to `true`.
        pub access_connector_id: pulumi_gestalt_rust::Output<Option<String>>,
        /// A `custom_parameters` block as documented below.
        pub custom_parameters: pulumi_gestalt_rust::Output<
            super::super::types::databricks::WorkspaceCustomParameters,
        >,
        /// Is the workspace enabled for customer managed key encryption? If `true` this enables the Managed Identity for the managed storage account. Possible values are `true` or `false`. Defaults to `false`. This field is only valid if the Databricks Workspace `sku` is set to `premium`.
        pub customer_managed_key_enabled: pulumi_gestalt_rust::Output<Option<bool>>,
        /// Disallow public access to default storage account. Defaults to `false`.
        pub default_storage_firewall_enabled: pulumi_gestalt_rust::Output<Option<bool>>,
        /// The ID of Managed Disk Encryption Set created by the Databricks Workspace.
        pub disk_encryption_set_id: pulumi_gestalt_rust::Output<String>,
        /// An `enhanced_security_compliance` block as documented below. This feature is only valid if `sku` is set to `premium`.
        pub enhanced_security_compliance: pulumi_gestalt_rust::Output<
            Option<super::super::types::databricks::WorkspaceEnhancedSecurityCompliance>,
        >,
        /// Is the Databricks File System root file system enabled with a secondary layer of encryption with platform managed keys? Possible values are `true` or `false`. Defaults to `false`. This field is only valid if the Databricks Workspace `sku` is set to `premium`. Changing this forces a new resource to be created.
        pub infrastructure_encryption_enabled: pulumi_gestalt_rust::Output<Option<bool>>,
        /// Resource ID of the Outbound Load balancer Backend Address Pool for Secure Cluster Connectivity (No Public IP) workspace with managed virtual network. Changing this forces a new resource to be created.
        pub load_balancer_backend_address_pool_id: pulumi_gestalt_rust::Output<
            Option<String>,
        >,
        /// Specifies the supported Azure location where the resource has to be created. Changing this forces a new resource to be created.
        pub location: pulumi_gestalt_rust::Output<String>,
        pub managed_disk_cmk_key_vault_id: pulumi_gestalt_rust::Output<Option<String>>,
        /// Customer managed encryption properties for the Databricks Workspace managed disks.
        pub managed_disk_cmk_key_vault_key_id: pulumi_gestalt_rust::Output<
            Option<String>,
        >,
        /// Whether customer managed keys for disk encryption will automatically be rotated to the latest version.
        pub managed_disk_cmk_rotation_to_latest_version_enabled: pulumi_gestalt_rust::Output<
            Option<bool>,
        >,
        /// A `managed_disk_identity` block as documented below.
        pub managed_disk_identities: pulumi_gestalt_rust::Output<
            Vec<super::super::types::databricks::WorkspaceManagedDiskIdentity>,
        >,
        /// The ID of the Managed Resource Group created by the Databricks Workspace.
        pub managed_resource_group_id: pulumi_gestalt_rust::Output<String>,
        /// The name of the resource group where Azure should place the managed Databricks resources. Changing this forces a new resource to be created.
        ///
        /// > **Note:** Make sure that this field is unique if you have multiple Databrick Workspaces deployed in your subscription and choose to not have the `managed_resource_group_name` auto generated by the Azure Resource Provider. Having multiple Databrick Workspaces deployed in the same subscription with the same `manage_resource_group_name` may result in some resources that cannot be deleted.
        pub managed_resource_group_name: pulumi_gestalt_rust::Output<String>,
        pub managed_services_cmk_key_vault_id: pulumi_gestalt_rust::Output<
            Option<String>,
        >,
        /// Customer managed encryption properties for the Databricks Workspace managed resources(e.g. Notebooks and Artifacts).
        pub managed_services_cmk_key_vault_key_id: pulumi_gestalt_rust::Output<
            Option<String>,
        >,
        /// Specifies the name of the Databricks Workspace resource. Changing this forces a new resource to be created.
        pub name: pulumi_gestalt_rust::Output<String>,
        /// Does the data plane (clusters) to control plane communication happen over private link endpoint only or publicly? Possible values `AllRules`, `NoAzureDatabricksRules` or `NoAzureServiceRules`. Required when `public_network_access_enabled` is set to `false`.
        pub network_security_group_rules_required: pulumi_gestalt_rust::Output<
            Option<String>,
        >,
        /// Allow public access for accessing workspace. Set value to `false` to access workspace only via private link endpoint. Possible values include `true` or `false`. Defaults to `true`.
        pub public_network_access_enabled: pulumi_gestalt_rust::Output<Option<bool>>,
        /// The name of the Resource Group in which the Databricks Workspace should exist. Changing this forces a new resource to be created.
        pub resource_group_name: pulumi_gestalt_rust::Output<String>,
        /// The `sku` to use for the Databricks Workspace. Possible values are `standard`, `premium`, or `trial`.
        ///
        /// > **Note:** Downgrading to a `trial sku` from a `standard` or `premium sku` will force a new resource to be created.
        pub sku: pulumi_gestalt_rust::Output<String>,
        /// A `storage_account_identity` block as documented below.
        pub storage_account_identities: pulumi_gestalt_rust::Output<
            Vec<super::super::types::databricks::WorkspaceStorageAccountIdentity>,
        >,
        /// A mapping of tags to assign to the resource.
        pub tags: pulumi_gestalt_rust::Output<
            Option<std::collections::HashMap<String, String>>,
        >,
        /// The unique identifier of the databricks workspace in Databricks control plane.
        pub workspace_id: pulumi_gestalt_rust::Output<String>,
        /// The workspace URL which is of the format 'adb-{workspaceId}.{random}.azuredatabricks.net'
        pub workspace_url: pulumi_gestalt_rust::Output<String>,
    }
    ///
    /// Registers a new resource with the given unique name and arguments
    ///
    #[allow(non_snake_case, unused_imports, dead_code)]
    pub fn create(
        context: &pulumi_gestalt_rust::PulumiContext,
        name: &str,
        args: WorkspaceArgs,
    ) -> WorkspaceResult {
        use pulumi_gestalt_rust::__private::pulumi_gestalt_wit::client_bindings::component::pulumi_gestalt::register_interface;
        use std::collections::HashMap;
        let access_connector_id_binding = args
            .access_connector_id
            .get_output(context)
            .get_inner();
        let custom_parameters_binding = args
            .custom_parameters
            .get_output(context)
            .get_inner();
        let customer_managed_key_enabled_binding = args
            .customer_managed_key_enabled
            .get_output(context)
            .get_inner();
        let default_storage_firewall_enabled_binding = args
            .default_storage_firewall_enabled
            .get_output(context)
            .get_inner();
        let enhanced_security_compliance_binding = args
            .enhanced_security_compliance
            .get_output(context)
            .get_inner();
        let infrastructure_encryption_enabled_binding = args
            .infrastructure_encryption_enabled
            .get_output(context)
            .get_inner();
        let load_balancer_backend_address_pool_id_binding = args
            .load_balancer_backend_address_pool_id
            .get_output(context)
            .get_inner();
        let location_binding = args.location.get_output(context).get_inner();
        let managed_disk_cmk_key_vault_id_binding = args
            .managed_disk_cmk_key_vault_id
            .get_output(context)
            .get_inner();
        let managed_disk_cmk_key_vault_key_id_binding = args
            .managed_disk_cmk_key_vault_key_id
            .get_output(context)
            .get_inner();
        let managed_disk_cmk_rotation_to_latest_version_enabled_binding = args
            .managed_disk_cmk_rotation_to_latest_version_enabled
            .get_output(context)
            .get_inner();
        let managed_resource_group_name_binding = args
            .managed_resource_group_name
            .get_output(context)
            .get_inner();
        let managed_services_cmk_key_vault_id_binding = args
            .managed_services_cmk_key_vault_id
            .get_output(context)
            .get_inner();
        let managed_services_cmk_key_vault_key_id_binding = args
            .managed_services_cmk_key_vault_key_id
            .get_output(context)
            .get_inner();
        let name_binding = args.name.get_output(context).get_inner();
        let network_security_group_rules_required_binding = args
            .network_security_group_rules_required
            .get_output(context)
            .get_inner();
        let public_network_access_enabled_binding = args
            .public_network_access_enabled
            .get_output(context)
            .get_inner();
        let resource_group_name_binding = args
            .resource_group_name
            .get_output(context)
            .get_inner();
        let sku_binding = args.sku.get_output(context).get_inner();
        let tags_binding = args.tags.get_output(context).get_inner();
        let request = register_interface::RegisterResourceRequest {
            type_: "azure:databricks/workspace:Workspace".into(),
            name: name.to_string(),
            version: super::super::get_version(),
            object: Vec::from([
                register_interface::ObjectField {
                    name: "accessConnectorId".into(),
                    value: &access_connector_id_binding,
                },
                register_interface::ObjectField {
                    name: "customParameters".into(),
                    value: &custom_parameters_binding,
                },
                register_interface::ObjectField {
                    name: "customerManagedKeyEnabled".into(),
                    value: &customer_managed_key_enabled_binding,
                },
                register_interface::ObjectField {
                    name: "defaultStorageFirewallEnabled".into(),
                    value: &default_storage_firewall_enabled_binding,
                },
                register_interface::ObjectField {
                    name: "enhancedSecurityCompliance".into(),
                    value: &enhanced_security_compliance_binding,
                },
                register_interface::ObjectField {
                    name: "infrastructureEncryptionEnabled".into(),
                    value: &infrastructure_encryption_enabled_binding,
                },
                register_interface::ObjectField {
                    name: "loadBalancerBackendAddressPoolId".into(),
                    value: &load_balancer_backend_address_pool_id_binding,
                },
                register_interface::ObjectField {
                    name: "location".into(),
                    value: &location_binding,
                },
                register_interface::ObjectField {
                    name: "managedDiskCmkKeyVaultId".into(),
                    value: &managed_disk_cmk_key_vault_id_binding,
                },
                register_interface::ObjectField {
                    name: "managedDiskCmkKeyVaultKeyId".into(),
                    value: &managed_disk_cmk_key_vault_key_id_binding,
                },
                register_interface::ObjectField {
                    name: "managedDiskCmkRotationToLatestVersionEnabled".into(),
                    value: &managed_disk_cmk_rotation_to_latest_version_enabled_binding,
                },
                register_interface::ObjectField {
                    name: "managedResourceGroupName".into(),
                    value: &managed_resource_group_name_binding,
                },
                register_interface::ObjectField {
                    name: "managedServicesCmkKeyVaultId".into(),
                    value: &managed_services_cmk_key_vault_id_binding,
                },
                register_interface::ObjectField {
                    name: "managedServicesCmkKeyVaultKeyId".into(),
                    value: &managed_services_cmk_key_vault_key_id_binding,
                },
                register_interface::ObjectField {
                    name: "name".into(),
                    value: &name_binding,
                },
                register_interface::ObjectField {
                    name: "networkSecurityGroupRulesRequired".into(),
                    value: &network_security_group_rules_required_binding,
                },
                register_interface::ObjectField {
                    name: "publicNetworkAccessEnabled".into(),
                    value: &public_network_access_enabled_binding,
                },
                register_interface::ObjectField {
                    name: "resourceGroupName".into(),
                    value: &resource_group_name_binding,
                },
                register_interface::ObjectField {
                    name: "sku".into(),
                    value: &sku_binding,
                },
                register_interface::ObjectField {
                    name: "tags".into(),
                    value: &tags_binding,
                },
            ]),
        };
        let o = register_interface::register(context.get_inner(), &request);
        WorkspaceResult {
            access_connector_id: pulumi_gestalt_rust::__private::into_domain(
                o.extract_field("accessConnectorId"),
            ),
            custom_parameters: pulumi_gestalt_rust::__private::into_domain(
                o.extract_field("customParameters"),
            ),
            customer_managed_key_enabled: pulumi_gestalt_rust::__private::into_domain(
                o.extract_field("customerManagedKeyEnabled"),
            ),
            default_storage_firewall_enabled: pulumi_gestalt_rust::__private::into_domain(
                o.extract_field("defaultStorageFirewallEnabled"),
            ),
            disk_encryption_set_id: pulumi_gestalt_rust::__private::into_domain(
                o.extract_field("diskEncryptionSetId"),
            ),
            enhanced_security_compliance: pulumi_gestalt_rust::__private::into_domain(
                o.extract_field("enhancedSecurityCompliance"),
            ),
            infrastructure_encryption_enabled: pulumi_gestalt_rust::__private::into_domain(
                o.extract_field("infrastructureEncryptionEnabled"),
            ),
            load_balancer_backend_address_pool_id: pulumi_gestalt_rust::__private::into_domain(
                o.extract_field("loadBalancerBackendAddressPoolId"),
            ),
            location: pulumi_gestalt_rust::__private::into_domain(
                o.extract_field("location"),
            ),
            managed_disk_cmk_key_vault_id: pulumi_gestalt_rust::__private::into_domain(
                o.extract_field("managedDiskCmkKeyVaultId"),
            ),
            managed_disk_cmk_key_vault_key_id: pulumi_gestalt_rust::__private::into_domain(
                o.extract_field("managedDiskCmkKeyVaultKeyId"),
            ),
            managed_disk_cmk_rotation_to_latest_version_enabled: pulumi_gestalt_rust::__private::into_domain(
                o.extract_field("managedDiskCmkRotationToLatestVersionEnabled"),
            ),
            managed_disk_identities: pulumi_gestalt_rust::__private::into_domain(
                o.extract_field("managedDiskIdentities"),
            ),
            managed_resource_group_id: pulumi_gestalt_rust::__private::into_domain(
                o.extract_field("managedResourceGroupId"),
            ),
            managed_resource_group_name: pulumi_gestalt_rust::__private::into_domain(
                o.extract_field("managedResourceGroupName"),
            ),
            managed_services_cmk_key_vault_id: pulumi_gestalt_rust::__private::into_domain(
                o.extract_field("managedServicesCmkKeyVaultId"),
            ),
            managed_services_cmk_key_vault_key_id: pulumi_gestalt_rust::__private::into_domain(
                o.extract_field("managedServicesCmkKeyVaultKeyId"),
            ),
            name: pulumi_gestalt_rust::__private::into_domain(o.extract_field("name")),
            network_security_group_rules_required: pulumi_gestalt_rust::__private::into_domain(
                o.extract_field("networkSecurityGroupRulesRequired"),
            ),
            public_network_access_enabled: pulumi_gestalt_rust::__private::into_domain(
                o.extract_field("publicNetworkAccessEnabled"),
            ),
            resource_group_name: pulumi_gestalt_rust::__private::into_domain(
                o.extract_field("resourceGroupName"),
            ),
            sku: pulumi_gestalt_rust::__private::into_domain(o.extract_field("sku")),
            storage_account_identities: pulumi_gestalt_rust::__private::into_domain(
                o.extract_field("storageAccountIdentities"),
            ),
            tags: pulumi_gestalt_rust::__private::into_domain(o.extract_field("tags")),
            workspace_id: pulumi_gestalt_rust::__private::into_domain(
                o.extract_field("workspaceId"),
            ),
            workspace_url: pulumi_gestalt_rust::__private::into_domain(
                o.extract_field("workspaceUrl"),
            ),
        }
    }
}
