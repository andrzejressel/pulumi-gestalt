#[derive(pulumi_gestalt_rust::__private::serde::Deserialize, pulumi_gestalt_rust::__private::serde::Serialize, pulumi_gestalt_rust::__private::bon::Builder, Debug, PartialEq, Clone)]
#[builder(finish_fn = build_struct)]
#[allow(dead_code)]
#[allow(clippy::doc_lazy_continuation, clippy::tabs_in_doc_comments)]
pub struct TriggerBitbucketServerTriggerConfig {
    /// The Bitbucket server config resource that this trigger config maps to.
    #[builder(into)]
    #[serde(rename = "bitbucketServerConfigResource")]
    pub r#bitbucket_server_config_resource: Box<String>,
    /// Key of the project that the repo is in. For example: The key for https://mybitbucket.server/projects/TEST/repos/test-repo is "TEST".
    #[builder(into)]
    #[serde(rename = "projectKey")]
    pub r#project_key: Box<String>,
    /// Filter to match changes in pull requests.
    /// Structure is documented below.
    #[builder(into, default)]
    #[serde(rename = "pullRequest")]
    pub r#pull_request: Box<Option<super::super::types::cloudbuild::TriggerBitbucketServerTriggerConfigPullRequest>>,
    /// Filter to match changes in refs like branches, tags.
    /// Structure is documented below.
    #[builder(into, default)]
    #[serde(rename = "push")]
    pub r#push: Box<Option<super::super::types::cloudbuild::TriggerBitbucketServerTriggerConfigPush>>,
    /// Slug of the repository. A repository slug is a URL-friendly version of a repository name, automatically generated by Bitbucket for use in the URL.
    /// For example, if the repository name is 'test repo', in the URL it would become 'test-repo' as in https://mybitbucket.server/projects/TEST/repos/test-repo.
    #[builder(into)]
    #[serde(rename = "repoSlug")]
    pub r#repo_slug: Box<String>,
}
