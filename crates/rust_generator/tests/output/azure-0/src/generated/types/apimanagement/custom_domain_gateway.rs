#[derive(pulumi_wasm_rust::__private::serde::Deserialize, pulumi_wasm_rust::__private::serde::Serialize, pulumi_wasm_rust::__private::bon::Builder, Debug, PartialEq, Clone)]
#[builder(finish_fn = build_struct)]
#[allow(dead_code)]
pub struct CustomDomainGateway {
    /// The Base64 Encoded Certificate. (Mutually exclusive with `key_vault_id`.)
    #[builder(into, default)]
    #[serde(rename = "certificate")]
    pub r#certificate: Box<Option<String>>,
    /// The password associated with the certificate provided above.
    #[builder(into, default)]
    #[serde(rename = "certificatePassword")]
    pub r#certificate_password: Box<Option<String>>,
    #[builder(into, default)]
    #[serde(rename = "certificateSource")]
    pub r#certificate_source: Box<Option<String>>,
    #[builder(into, default)]
    #[serde(rename = "certificateStatus")]
    pub r#certificate_status: Box<Option<String>>,
    /// Is the certificate associated with this Hostname the Default SSL Certificate? This is used when an SNI header isn't specified by a client. Defaults to `false`.
    #[builder(into, default)]
    #[serde(rename = "defaultSslBinding")]
    pub r#default_ssl_binding: Box<Option<bool>>,
    #[builder(into, default)]
    #[serde(rename = "expiry")]
    pub r#expiry: Box<Option<String>>,
    /// The Hostname to use for the API Proxy Endpoint.
    #[builder(into)]
    #[serde(rename = "hostName")]
    pub r#host_name: Box<String>,
    /// The ID of the Key Vault Secret containing the SSL Certificate, which must be should be of the type application/x-pkcs12.
    #[builder(into, default)]
    #[serde(rename = "keyVaultId")]
    pub r#key_vault_id: Box<Option<String>>,
    /// Should Client Certificate Negotiation be enabled for this Hostname? Defaults to `false`.
    #[builder(into, default)]
    #[serde(rename = "negotiateClientCertificate")]
    pub r#negotiate_client_certificate: Box<Option<bool>>,
    /// System or User Assigned Managed identity clientId as generated by Azure AD, which has `GET` access to the keyVault containing the SSL certificate.
    /// 
    /// > **NOTE:** If a User Assigned Managed identity is specified for `ssl_keyvault_identity_client_id` then this identity must be associated to the `azure.apimanagement.Service` within an `identity` block.
    #[builder(into, default)]
    #[serde(rename = "sslKeyvaultIdentityClientId")]
    pub r#ssl_keyvault_identity_client_id: Box<Option<String>>,
    #[builder(into, default)]
    #[serde(rename = "subject")]
    pub r#subject: Box<Option<String>>,
    #[builder(into, default)]
    #[serde(rename = "thumbprint")]
    pub r#thumbprint: Box<Option<String>>,
}
