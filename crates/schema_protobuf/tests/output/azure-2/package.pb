
azureAzure"6.14.0*±Å
>
	blueprint
Assignment%azure:blueprint/assignment:Assignmentø¬Manages a Blueprint Assignment resource

> **NOTE:** Azure Blueprints are in Preview and potentially subject to breaking change without notice.

> **NOTE:** Azure Blueprint Assignments can only be applied to Subscriptions.  Assignments to Management Groups is not currently supported by the service or by this provider.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const current = azure.core.getClientConfig({});
const example = azure.core.getSubscription({});
const exampleGetDefinition = example.then(example => azure.blueprint.getDefinition({
    name: "exampleBlueprint",
    scopeId: example.id,
}));
const exampleGetPublishedVersion = Promise.all([exampleGetDefinition, exampleGetDefinition]).then(([exampleGetDefinition, exampleGetDefinition1]) => azure.blueprint.getPublishedVersion({
    scopeId: exampleGetDefinition.scopeId,
    blueprintName: exampleGetDefinition1.name,
    version: "v1.0.0",
}));
const exampleResourceGroup = new azure.core.ResourceGroup("example", {
    name: "exampleRG-bp",
    location: "West Europe",
    tags: {
        Environment: "example",
    },
});
const exampleUserAssignedIdentity = new azure.authorization.UserAssignedIdentity("example", {
    resourceGroupName: exampleResourceGroup.name,
    location: exampleResourceGroup.location,
    name: "bp-user-example",
});
const operator = new azure.authorization.Assignment("operator", {
    scope: example.then(example => example.id),
    roleDefinitionName: "Blueprint Operator",
    principalId: exampleUserAssignedIdentity.principalId,
});
const owner = new azure.authorization.Assignment("owner", {
    scope: example.then(example => example.id),
    roleDefinitionName: "Owner",
    principalId: exampleUserAssignedIdentity.principalId,
});
const exampleAssignment = new azure.blueprint.Assignment("example", {
    name: "testAccBPAssignment",
    targetSubscriptionId: example.then(example => example.id),
    versionId: exampleGetPublishedVersion.then(exampleGetPublishedVersion => exampleGetPublishedVersion.id),
    location: exampleResourceGroup.location,
    lockMode: "AllResourcesDoNotDelete",
    lockExcludePrincipals: [current.then(current => current.objectId)],
    identity: {
        type: "UserAssigned",
        identityIds: [exampleUserAssignedIdentity.id],
    },
    resourceGroups: `    {
      "ResourceGroup": {
        "name": "exampleRG-bp"
      }
    }
`,
    parameterValues: `    {
      "allowedlocationsforresourcegroups_listOfAllowedLocations": {
        "value": ["westus", "westus2", "eastus", "centralus", "centraluseuap", "southcentralus", "northcentralus", "westcentralus", "eastus2", "eastus2euap", "brazilsouth", "brazilus", "northeurope", "westeurope", "eastasia", "southeastasia", "japanwest", "japaneast", "koreacentral", "koreasouth", "indiasouth", "indiawest", "indiacentral", "australiaeast", "australiasoutheast", "canadacentral", "canadaeast", "uknorth", "uksouth2", "uksouth", "ukwest", "francecentral", "francesouth", "australiacentral", "australiacentral2", "uaecentral", "uaenorth", "southafricanorth", "southafricawest", "switzerlandnorth", "switzerlandwest", "germanynorth", "germanywestcentral", "norwayeast", "norwaywest"]
      }
    }
`,
}, {
    dependsOn: [
        operator,
        owner,
    ],
});
```
```python
import pulumi
import pulumi_azure as azure

current = azure.core.get_client_config()
example = azure.core.get_subscription()
example_get_definition = azure.blueprint.get_definition(name="exampleBlueprint",
    scope_id=example.id)
example_get_published_version = azure.blueprint.get_published_version(scope_id=example_get_definition.scope_id,
    blueprint_name=example_get_definition.name,
    version="v1.0.0")
example_resource_group = azure.core.ResourceGroup("example",
    name="exampleRG-bp",
    location="West Europe",
    tags={
        "Environment": "example",
    })
example_user_assigned_identity = azure.authorization.UserAssignedIdentity("example",
    resource_group_name=example_resource_group.name,
    location=example_resource_group.location,
    name="bp-user-example")
operator = azure.authorization.Assignment("operator",
    scope=example.id,
    role_definition_name="Blueprint Operator",
    principal_id=example_user_assigned_identity.principal_id)
owner = azure.authorization.Assignment("owner",
    scope=example.id,
    role_definition_name="Owner",
    principal_id=example_user_assigned_identity.principal_id)
example_assignment = azure.blueprint.Assignment("example",
    name="testAccBPAssignment",
    target_subscription_id=example.id,
    version_id=example_get_published_version.id,
    location=example_resource_group.location,
    lock_mode="AllResourcesDoNotDelete",
    lock_exclude_principals=[current.object_id],
    identity={
        "type": "UserAssigned",
        "identity_ids": [example_user_assigned_identity.id],
    },
    resource_groups="""    {
      "ResourceGroup": {
        "name": "exampleRG-bp"
      }
    }
""",
    parameter_values="""    {
      "allowedlocationsforresourcegroups_listOfAllowedLocations": {
        "value": ["westus", "westus2", "eastus", "centralus", "centraluseuap", "southcentralus", "northcentralus", "westcentralus", "eastus2", "eastus2euap", "brazilsouth", "brazilus", "northeurope", "westeurope", "eastasia", "southeastasia", "japanwest", "japaneast", "koreacentral", "koreasouth", "indiasouth", "indiawest", "indiacentral", "australiaeast", "australiasoutheast", "canadacentral", "canadaeast", "uknorth", "uksouth2", "uksouth", "ukwest", "francecentral", "francesouth", "australiacentral", "australiacentral2", "uaecentral", "uaenorth", "southafricanorth", "southafricawest", "switzerlandnorth", "switzerlandwest", "germanynorth", "germanywestcentral", "norwayeast", "norwaywest"]
      }
    }
""",
    opts = pulumi.ResourceOptions(depends_on=[
            operator,
            owner,
        ]))
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var current = Azure.Core.GetClientConfig.Invoke();

    var example = Azure.Core.GetSubscription.Invoke();

    var exampleGetDefinition = Azure.Blueprint.GetDefinition.Invoke(new()
    {
        Name = "exampleBlueprint",
        ScopeId = example.Apply(getSubscriptionResult => getSubscriptionResult.Id),
    });

    var exampleGetPublishedVersion = Azure.Blueprint.GetPublishedVersion.Invoke(new()
    {
        ScopeId = exampleGetDefinition.Apply(getDefinitionResult => getDefinitionResult.ScopeId),
        BlueprintName = exampleGetDefinition.Apply(getDefinitionResult => getDefinitionResult.Name),
        Version = "v1.0.0",
    });

    var exampleResourceGroup = new Azure.Core.ResourceGroup("example", new()
    {
        Name = "exampleRG-bp",
        Location = "West Europe",
        Tags = 
        {
            { "Environment", "example" },
        },
    });

    var exampleUserAssignedIdentity = new Azure.Authorization.UserAssignedIdentity("example", new()
    {
        ResourceGroupName = exampleResourceGroup.Name,
        Location = exampleResourceGroup.Location,
        Name = "bp-user-example",
    });

    var @operator = new Azure.Authorization.Assignment("operator", new()
    {
        Scope = example.Apply(getSubscriptionResult => getSubscriptionResult.Id),
        RoleDefinitionName = "Blueprint Operator",
        PrincipalId = exampleUserAssignedIdentity.PrincipalId,
    });

    var owner = new Azure.Authorization.Assignment("owner", new()
    {
        Scope = example.Apply(getSubscriptionResult => getSubscriptionResult.Id),
        RoleDefinitionName = "Owner",
        PrincipalId = exampleUserAssignedIdentity.PrincipalId,
    });

    var exampleAssignment = new Azure.Blueprint.Assignment("example", new()
    {
        Name = "testAccBPAssignment",
        TargetSubscriptionId = example.Apply(getSubscriptionResult => getSubscriptionResult.Id),
        VersionId = exampleGetPublishedVersion.Apply(getPublishedVersionResult => getPublishedVersionResult.Id),
        Location = exampleResourceGroup.Location,
        LockMode = "AllResourcesDoNotDelete",
        LockExcludePrincipals = new[]
        {
            current.Apply(getClientConfigResult => getClientConfigResult.ObjectId),
        },
        Identity = new Azure.Blueprint.Inputs.AssignmentIdentityArgs
        {
            Type = "UserAssigned",
            IdentityIds = new[]
            {
                exampleUserAssignedIdentity.Id,
            },
        },
        ResourceGroups = @"    {
      ""ResourceGroup"": {
        ""name"": ""exampleRG-bp""
      }
    }
",
        ParameterValues = @"    {
      ""allowedlocationsforresourcegroups_listOfAllowedLocations"": {
        ""value"": [""westus"", ""westus2"", ""eastus"", ""centralus"", ""centraluseuap"", ""southcentralus"", ""northcentralus"", ""westcentralus"", ""eastus2"", ""eastus2euap"", ""brazilsouth"", ""brazilus"", ""northeurope"", ""westeurope"", ""eastasia"", ""southeastasia"", ""japanwest"", ""japaneast"", ""koreacentral"", ""koreasouth"", ""indiasouth"", ""indiawest"", ""indiacentral"", ""australiaeast"", ""australiasoutheast"", ""canadacentral"", ""canadaeast"", ""uknorth"", ""uksouth2"", ""uksouth"", ""ukwest"", ""francecentral"", ""francesouth"", ""australiacentral"", ""australiacentral2"", ""uaecentral"", ""uaenorth"", ""southafricanorth"", ""southafricawest"", ""switzerlandnorth"", ""switzerlandwest"", ""germanynorth"", ""germanywestcentral"", ""norwayeast"", ""norwaywest""]
      }
    }
",
    }, new CustomResourceOptions
    {
        DependsOn =
        {
            @operator,
            owner,
        },
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/authorization"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/blueprint"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		current, err := core.GetClientConfig(ctx, map[string]interface{}{}, nil)
		if err != nil {
			return err
		}
		example, err := core.LookupSubscription(ctx, &core.LookupSubscriptionArgs{}, nil)
		if err != nil {
			return err
		}
		exampleGetDefinition, err := blueprint.GetDefinition(ctx, &blueprint.GetDefinitionArgs{
			Name:    "exampleBlueprint",
			ScopeId: example.Id,
		}, nil)
		if err != nil {
			return err
		}
		exampleGetPublishedVersion, err := blueprint.GetPublishedVersion(ctx, &blueprint.GetPublishedVersionArgs{
			ScopeId:       exampleGetDefinition.ScopeId,
			BlueprintName: exampleGetDefinition.Name,
			Version:       "v1.0.0",
		}, nil)
		if err != nil {
			return err
		}
		exampleResourceGroup, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
			Name:     pulumi.String("exampleRG-bp"),
			Location: pulumi.String("West Europe"),
			Tags: pulumi.StringMap{
				"Environment": pulumi.String("example"),
			},
		})
		if err != nil {
			return err
		}
		exampleUserAssignedIdentity, err := authorization.NewUserAssignedIdentity(ctx, "example", &authorization.UserAssignedIdentityArgs{
			ResourceGroupName: exampleResourceGroup.Name,
			Location:          exampleResourceGroup.Location,
			Name:              pulumi.String("bp-user-example"),
		})
		if err != nil {
			return err
		}
		operator, err := authorization.NewAssignment(ctx, "operator", &authorization.AssignmentArgs{
			Scope:              pulumi.String(example.Id),
			RoleDefinitionName: pulumi.String("Blueprint Operator"),
			PrincipalId:        exampleUserAssignedIdentity.PrincipalId,
		})
		if err != nil {
			return err
		}
		owner, err := authorization.NewAssignment(ctx, "owner", &authorization.AssignmentArgs{
			Scope:              pulumi.String(example.Id),
			RoleDefinitionName: pulumi.String("Owner"),
			PrincipalId:        exampleUserAssignedIdentity.PrincipalId,
		})
		if err != nil {
			return err
		}
		_, err = blueprint.NewAssignment(ctx, "example", &blueprint.AssignmentArgs{
			Name:                 pulumi.String("testAccBPAssignment"),
			TargetSubscriptionId: pulumi.String(example.Id),
			VersionId:            pulumi.String(exampleGetPublishedVersion.Id),
			Location:             exampleResourceGroup.Location,
			LockMode:             pulumi.String("AllResourcesDoNotDelete"),
			LockExcludePrincipals: pulumi.StringArray{
				pulumi.String(current.ObjectId),
			},
			Identity: &blueprint.AssignmentIdentityArgs{
				Type: pulumi.String("UserAssigned"),
				IdentityIds: pulumi.StringArray{
					exampleUserAssignedIdentity.ID(),
				},
			},
			ResourceGroups: pulumi.String(`    {
      "ResourceGroup": {
        "name": "exampleRG-bp"
      }
    }
`),
			ParameterValues: pulumi.String(`    {
      "allowedlocationsforresourcegroups_listOfAllowedLocations": {
        "value": ["westus", "westus2", "eastus", "centralus", "centraluseuap", "southcentralus", "northcentralus", "westcentralus", "eastus2", "eastus2euap", "brazilsouth", "brazilus", "northeurope", "westeurope", "eastasia", "southeastasia", "japanwest", "japaneast", "koreacentral", "koreasouth", "indiasouth", "indiawest", "indiacentral", "australiaeast", "australiasoutheast", "canadacentral", "canadaeast", "uknorth", "uksouth2", "uksouth", "ukwest", "francecentral", "francesouth", "australiacentral", "australiacentral2", "uaecentral", "uaenorth", "southafricanorth", "southafricawest", "switzerlandnorth", "switzerlandwest", "germanynorth", "germanywestcentral", "norwayeast", "norwaywest"]
      }
    }
`),
		}, pulumi.DependsOn([]pulumi.Resource{
			operator,
			owner,
		}))
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.core.CoreFunctions;
import com.pulumi.azure.core.inputs.GetSubscriptionArgs;
import com.pulumi.azure.blueprint.BlueprintFunctions;
import com.pulumi.azure.blueprint.inputs.GetDefinitionArgs;
import com.pulumi.azure.blueprint.inputs.GetPublishedVersionArgs;
import com.pulumi.azure.core.ResourceGroup;
import com.pulumi.azure.core.ResourceGroupArgs;
import com.pulumi.azure.authorization.UserAssignedIdentity;
import com.pulumi.azure.authorization.UserAssignedIdentityArgs;
import com.pulumi.azure.authorization.Assignment;
import com.pulumi.azure.authorization.AssignmentArgs;
import com.pulumi.azure.blueprint.Assignment;
import com.pulumi.azure.blueprint.AssignmentArgs;
import com.pulumi.azure.blueprint.inputs.AssignmentIdentityArgs;
import com.pulumi.resources.CustomResourceOptions;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        final var current = CoreFunctions.getClientConfig();

        final var example = CoreFunctions.getSubscription();

        final var exampleGetDefinition = BlueprintFunctions.getDefinition(GetDefinitionArgs.builder()
            .name("exampleBlueprint")
            .scopeId(example.applyValue(getSubscriptionResult -> getSubscriptionResult.id()))
            .build());

        final var exampleGetPublishedVersion = BlueprintFunctions.getPublishedVersion(GetPublishedVersionArgs.builder()
            .scopeId(exampleGetDefinition.applyValue(getDefinitionResult -> getDefinitionResult.scopeId()))
            .blueprintName(exampleGetDefinition.applyValue(getDefinitionResult -> getDefinitionResult.name()))
            .version("v1.0.0")
            .build());

        var exampleResourceGroup = new ResourceGroup("exampleResourceGroup", ResourceGroupArgs.builder()
            .name("exampleRG-bp")
            .location("West Europe")
            .tags(Map.of("Environment", "example"))
            .build());

        var exampleUserAssignedIdentity = new UserAssignedIdentity("exampleUserAssignedIdentity", UserAssignedIdentityArgs.builder()
            .resourceGroupName(exampleResourceGroup.name())
            .location(exampleResourceGroup.location())
            .name("bp-user-example")
            .build());

        var operator = new Assignment("operator", AssignmentArgs.builder()
            .scope(example.applyValue(getSubscriptionResult -> getSubscriptionResult.id()))
            .roleDefinitionName("Blueprint Operator")
            .principalId(exampleUserAssignedIdentity.principalId())
            .build());

        var owner = new Assignment("owner", AssignmentArgs.builder()
            .scope(example.applyValue(getSubscriptionResult -> getSubscriptionResult.id()))
            .roleDefinitionName("Owner")
            .principalId(exampleUserAssignedIdentity.principalId())
            .build());

        var exampleAssignment = new Assignment("exampleAssignment", AssignmentArgs.builder()
            .name("testAccBPAssignment")
            .targetSubscriptionId(example.applyValue(getSubscriptionResult -> getSubscriptionResult.id()))
            .versionId(exampleGetPublishedVersion.applyValue(getPublishedVersionResult -> getPublishedVersionResult.id()))
            .location(exampleResourceGroup.location())
            .lockMode("AllResourcesDoNotDelete")
            .lockExcludePrincipals(current.applyValue(getClientConfigResult -> getClientConfigResult.objectId()))
            .identity(AssignmentIdentityArgs.builder()
                .type("UserAssigned")
                .identityIds(exampleUserAssignedIdentity.id())
                .build())
            .resourceGroups("""
    {
      "ResourceGroup": {
        "name": "exampleRG-bp"
      }
    }
            """)
            .parameterValues("""
    {
      "allowedlocationsforresourcegroups_listOfAllowedLocations": {
        "value": ["westus", "westus2", "eastus", "centralus", "centraluseuap", "southcentralus", "northcentralus", "westcentralus", "eastus2", "eastus2euap", "brazilsouth", "brazilus", "northeurope", "westeurope", "eastasia", "southeastasia", "japanwest", "japaneast", "koreacentral", "koreasouth", "indiasouth", "indiawest", "indiacentral", "australiaeast", "australiasoutheast", "canadacentral", "canadaeast", "uknorth", "uksouth2", "uksouth", "ukwest", "francecentral", "francesouth", "australiacentral", "australiacentral2", "uaecentral", "uaenorth", "southafricanorth", "southafricawest", "switzerlandnorth", "switzerlandwest", "germanynorth", "germanywestcentral", "norwayeast", "norwaywest"]
      }
    }
            """)
            .build(), CustomResourceOptions.builder()
                .dependsOn(                
                    operator,
                    owner)
                .build());

    }
}
```
```yaml
resources:
  exampleResourceGroup:
    type: azure:core:ResourceGroup
    name: example
    properties:
      name: exampleRG-bp
      location: West Europe
      tags:
        Environment: example
  exampleUserAssignedIdentity:
    type: azure:authorization:UserAssignedIdentity
    name: example
    properties:
      resourceGroupName: ${exampleResourceGroup.name}
      location: ${exampleResourceGroup.location}
      name: bp-user-example
  operator:
    type: azure:authorization:Assignment
    properties:
      scope: ${example.id}
      roleDefinitionName: Blueprint Operator
      principalId: ${exampleUserAssignedIdentity.principalId}
  owner:
    type: azure:authorization:Assignment
    properties:
      scope: ${example.id}
      roleDefinitionName: Owner
      principalId: ${exampleUserAssignedIdentity.principalId}
  exampleAssignment:
    type: azure:blueprint:Assignment
    name: example
    properties:
      name: testAccBPAssignment
      targetSubscriptionId: ${example.id}
      versionId: ${exampleGetPublishedVersion.id}
      location: ${exampleResourceGroup.location}
      lockMode: AllResourcesDoNotDelete
      lockExcludePrincipals:
        - ${current.objectId}
      identity:
        type: UserAssigned
        identityIds:
          - ${exampleUserAssignedIdentity.id}
      resourceGroups: |2
            {
              "ResourceGroup": {
                "name": "exampleRG-bp"
              }
            }
      parameterValues: |2
            {
              "allowedlocationsforresourcegroups_listOfAllowedLocations": {
                "value": ["westus", "westus2", "eastus", "centralus", "centraluseuap", "southcentralus", "northcentralus", "westcentralus", "eastus2", "eastus2euap", "brazilsouth", "brazilus", "northeurope", "westeurope", "eastasia", "southeastasia", "japanwest", "japaneast", "koreacentral", "koreasouth", "indiasouth", "indiawest", "indiacentral", "australiaeast", "australiasoutheast", "canadacentral", "canadaeast", "uknorth", "uksouth2", "uksouth", "ukwest", "francecentral", "francesouth", "australiacentral", "australiacentral2", "uaecentral", "uaenorth", "southafricanorth", "southafricawest", "switzerlandnorth", "switzerlandwest", "germanynorth", "germanywestcentral", "norwayeast", "norwaywest"]
              }
            }
    options:
      dependsOn:
        - ${operator}
        - ${owner}
variables:
  current:
    fn::invoke:
      function: azure:core:getClientConfig
      arguments: {}
  example:
    fn::invoke:
      function: azure:core:getSubscription
      arguments: {}
  exampleGetDefinition:
    fn::invoke:
      function: azure:blueprint:getDefinition
      arguments:
        name: exampleBlueprint
        scopeId: ${example.id}
  exampleGetPublishedVersion:
    fn::invoke:
      function: azure:blueprint:getPublishedVersion
      arguments:
        scopeId: ${exampleGetDefinition.scopeId}
        blueprintName: ${exampleGetDefinition.name}
        version: v1.0.0
```
<!--End PulumiCodeChooser -->

## Import

Azure Blueprint Assignments can be imported using the `resource id`, e.g.

```sh
$ pulumi import azure:blueprint/assignment:Assignment example "/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Blueprint/blueprintAssignments/assignSimpleBlueprint"
```


identityZ:X
V
	blueprintAssignmentIdentity5azure:blueprint/AssignmentIdentity:AssignmentIdentity&An `identity` block as defined below.
k
locationB" YThe Azure location of the Assignment. Changing this forces a new resource to be created.
{
lockExcludeActionsB*" ]a list of up to 200 actions that are permitted to bypass the locks applied by the Blueprint.

lockExcludePrincipalsB*" aa list of up to 5 Principal IDs that are permitted to bypass the locks applied by the Blueprint.
¤
lockModeB" The locking mode of the Blueprint Assignment. One of `None` (Default), `AllResourcesReadOnly`, or `AllResourcesDoNotDelete`. Defaults to `None`.
g
nameB" YThe name of the Blueprint Assignment. Changing this forces a new resource to be created.
Î
parameterValuesB" ´a JSON string to supply Blueprint Assignment parameter values.

> **NOTE:** Improperly formatted JSON, or missing values required by a Blueprint will cause the assignment to fail.
Ð
resourceGroupsB" ·a JSON string to supply the Blueprint Resource Group information.

> **NOTE:** Improperly formatted JSON, or missing values required by a Blueprint will cause the assignment to fail.

targetSubscriptionId" |The Subscription ID the Blueprint Published Version is to be applied to. Changing this forces a new resource to be created.
R
	versionId" AThe ID of the Published Version of the blueprint to be assigned.
"8
blueprintName" #The name of the blueprint assigned
"4
description" !The Description on the Blueprint
"5
displayName" "The display name of the blueprint
"
identityZ:X
V
	blueprintAssignmentIdentity5azure:blueprint/AssignmentIdentity:AssignmentIdentity&An `identity` block as defined below.
"i
location" YThe Azure location of the Assignment. Changing this forces a new resource to be created.
"{
lockExcludeActionsB*" ]a list of up to 200 actions that are permitted to bypass the locks applied by the Blueprint.
"
lockExcludePrincipalsB*" aa list of up to 5 Principal IDs that are permitted to bypass the locks applied by the Blueprint.
"¤
lockModeB" The locking mode of the Blueprint Assignment. One of `None` (Default), `AllResourcesReadOnly`, or `AllResourcesDoNotDelete`. Defaults to `None`.
"e
name" YThe name of the Blueprint Assignment. Changing this forces a new resource to be created.
"Î
parameterValuesB" ´a JSON string to supply Blueprint Assignment parameter values.

> **NOTE:** Improperly formatted JSON, or missing values required by a Blueprint will cause the assignment to fail.
"Ð
resourceGroupsB" ·a JSON string to supply the Blueprint Resource Group information.

> **NOTE:** Improperly formatted JSON, or missing values required by a Blueprint will cause the assignment to fail.
"
targetSubscriptionId" |The Subscription ID the Blueprint Published Version is to be applied to. Changing this forces a new resource to be created.
"

type" "R
	versionId" AThe ID of the Published Version of the blueprint to be assigned.
*í=
8
botChannelAlexa#azure:bot/channelAlexa:ChannelAlexaü5Manages an Alexa integration for a Bot Channel

> **Note** A bot can only have a single Alexa Channel associated with it.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const current = azure.core.getClientConfig({});
const example = new azure.core.ResourceGroup("example", {
    name: "example-resources",
    location: "West Europe",
});
const exampleChannelsRegistration = new azure.bot.ChannelsRegistration("example", {
    name: "example-bcr",
    location: "global",
    resourceGroupName: example.name,
    sku: "F0",
    microsoftAppId: current.then(current => current.clientId),
});
const exampleChannelAlexa = new azure.bot.ChannelAlexa("example", {
    botName: exampleChannelsRegistration.name,
    location: exampleChannelsRegistration.location,
    resourceGroupName: example.name,
    skillId: "amzn1.ask.skill.00000000-0000-0000-0000-000000000000",
});
```
```python
import pulumi
import pulumi_azure as azure

current = azure.core.get_client_config()
example = azure.core.ResourceGroup("example",
    name="example-resources",
    location="West Europe")
example_channels_registration = azure.bot.ChannelsRegistration("example",
    name="example-bcr",
    location="global",
    resource_group_name=example.name,
    sku="F0",
    microsoft_app_id=current.client_id)
example_channel_alexa = azure.bot.ChannelAlexa("example",
    bot_name=example_channels_registration.name,
    location=example_channels_registration.location,
    resource_group_name=example.name,
    skill_id="amzn1.ask.skill.00000000-0000-0000-0000-000000000000")
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var current = Azure.Core.GetClientConfig.Invoke();

    var example = new Azure.Core.ResourceGroup("example", new()
    {
        Name = "example-resources",
        Location = "West Europe",
    });

    var exampleChannelsRegistration = new Azure.Bot.ChannelsRegistration("example", new()
    {
        Name = "example-bcr",
        Location = "global",
        ResourceGroupName = example.Name,
        Sku = "F0",
        MicrosoftAppId = current.Apply(getClientConfigResult => getClientConfigResult.ClientId),
    });

    var exampleChannelAlexa = new Azure.Bot.ChannelAlexa("example", new()
    {
        BotName = exampleChannelsRegistration.Name,
        Location = exampleChannelsRegistration.Location,
        ResourceGroupName = example.Name,
        SkillId = "amzn1.ask.skill.00000000-0000-0000-0000-000000000000",
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/bot"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		current, err := core.GetClientConfig(ctx, map[string]interface{}{}, nil)
		if err != nil {
			return err
		}
		example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
			Name:     pulumi.String("example-resources"),
			Location: pulumi.String("West Europe"),
		})
		if err != nil {
			return err
		}
		exampleChannelsRegistration, err := bot.NewChannelsRegistration(ctx, "example", &bot.ChannelsRegistrationArgs{
			Name:              pulumi.String("example-bcr"),
			Location:          pulumi.String("global"),
			ResourceGroupName: example.Name,
			Sku:               pulumi.String("F0"),
			MicrosoftAppId:    pulumi.String(current.ClientId),
		})
		if err != nil {
			return err
		}
		_, err = bot.NewChannelAlexa(ctx, "example", &bot.ChannelAlexaArgs{
			BotName:           exampleChannelsRegistration.Name,
			Location:          exampleChannelsRegistration.Location,
			ResourceGroupName: example.Name,
			SkillId:           pulumi.String("amzn1.ask.skill.00000000-0000-0000-0000-000000000000"),
		})
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.core.CoreFunctions;
import com.pulumi.azure.core.ResourceGroup;
import com.pulumi.azure.core.ResourceGroupArgs;
import com.pulumi.azure.bot.ChannelsRegistration;
import com.pulumi.azure.bot.ChannelsRegistrationArgs;
import com.pulumi.azure.bot.ChannelAlexa;
import com.pulumi.azure.bot.ChannelAlexaArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        final var current = CoreFunctions.getClientConfig();

        var example = new ResourceGroup("example", ResourceGroupArgs.builder()
            .name("example-resources")
            .location("West Europe")
            .build());

        var exampleChannelsRegistration = new ChannelsRegistration("exampleChannelsRegistration", ChannelsRegistrationArgs.builder()
            .name("example-bcr")
            .location("global")
            .resourceGroupName(example.name())
            .sku("F0")
            .microsoftAppId(current.applyValue(getClientConfigResult -> getClientConfigResult.clientId()))
            .build());

        var exampleChannelAlexa = new ChannelAlexa("exampleChannelAlexa", ChannelAlexaArgs.builder()
            .botName(exampleChannelsRegistration.name())
            .location(exampleChannelsRegistration.location())
            .resourceGroupName(example.name())
            .skillId("amzn1.ask.skill.00000000-0000-0000-0000-000000000000")
            .build());

    }
}
```
```yaml
resources:
  example:
    type: azure:core:ResourceGroup
    properties:
      name: example-resources
      location: West Europe
  exampleChannelsRegistration:
    type: azure:bot:ChannelsRegistration
    name: example
    properties:
      name: example-bcr
      location: global
      resourceGroupName: ${example.name}
      sku: F0
      microsoftAppId: ${current.clientId}
  exampleChannelAlexa:
    type: azure:bot:ChannelAlexa
    name: example
    properties:
      botName: ${exampleChannelsRegistration.name}
      location: ${exampleChannelsRegistration.location}
      resourceGroupName: ${example.name}
      skillId: amzn1.ask.skill.00000000-0000-0000-0000-000000000000
variables:
  current:
    fn::invoke:
      function: azure:core:getClientConfig
      arguments: {}
```
<!--End PulumiCodeChooser -->

## Import

The Alexa Integration for a Bot Channel can be imported using the `resource id`, e.g.

```sh
$ pulumi import azure:bot/channelAlexa:ChannelAlexa example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.BotService/botServices/botService1/channels/AlexaChannel
```


botName" vThe name of the Bot Resource this channel will be associated with. Changing this forces a new resource to be created.
}
locationB" kThe supported Azure location where the resource exists. Changing this forces a new resource to be created.

resourceGroupName" }The name of the resource group where the Alexa Channel should be created. Changing this forces a new resource to be created.
9
skillId" *The Alexa skill ID for the Alexa Channel.
"
botName" vThe name of the Bot Resource this channel will be associated with. Changing this forces a new resource to be created.
"{
location" kThe supported Azure location where the resource exists. Changing this forces a new resource to be created.
"
resourceGroupName" }The name of the resource group where the Alexa Channel should be created. Changing this forces a new resource to be created.
"9
skillId" *The Alexa skill ID for the Alexa Channel.
*ñB
G
botChannelDirectLine-azure:bot/channelDirectLine:ChannelDirectLineµ8Manages a Directline integration for a Bot Channel

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const current = azure.core.getClientConfig({});
const example = new azure.core.ResourceGroup("example", {
    name: "example-resources",
    location: "West Europe",
});
const exampleChannelsRegistration = new azure.bot.ChannelsRegistration("example", {
    name: "example",
    location: "global",
    resourceGroupName: example.name,
    sku: "F0",
    microsoftAppId: current.then(current => current.clientId),
});
const exampleChannelDirectLine = new azure.bot.ChannelDirectLine("example", {
    botName: exampleChannelsRegistration.name,
    location: exampleChannelsRegistration.location,
    resourceGroupName: example.name,
    sites: [{
        name: "default",
        enabled: true,
    }],
});
```
```python
import pulumi
import pulumi_azure as azure

current = azure.core.get_client_config()
example = azure.core.ResourceGroup("example",
    name="example-resources",
    location="West Europe")
example_channels_registration = azure.bot.ChannelsRegistration("example",
    name="example",
    location="global",
    resource_group_name=example.name,
    sku="F0",
    microsoft_app_id=current.client_id)
example_channel_direct_line = azure.bot.ChannelDirectLine("example",
    bot_name=example_channels_registration.name,
    location=example_channels_registration.location,
    resource_group_name=example.name,
    sites=[{
        "name": "default",
        "enabled": True,
    }])
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var current = Azure.Core.GetClientConfig.Invoke();

    var example = new Azure.Core.ResourceGroup("example", new()
    {
        Name = "example-resources",
        Location = "West Europe",
    });

    var exampleChannelsRegistration = new Azure.Bot.ChannelsRegistration("example", new()
    {
        Name = "example",
        Location = "global",
        ResourceGroupName = example.Name,
        Sku = "F0",
        MicrosoftAppId = current.Apply(getClientConfigResult => getClientConfigResult.ClientId),
    });

    var exampleChannelDirectLine = new Azure.Bot.ChannelDirectLine("example", new()
    {
        BotName = exampleChannelsRegistration.Name,
        Location = exampleChannelsRegistration.Location,
        ResourceGroupName = example.Name,
        Sites = new[]
        {
            new Azure.Bot.Inputs.ChannelDirectLineSiteArgs
            {
                Name = "default",
                Enabled = true,
            },
        },
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/bot"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		current, err := core.GetClientConfig(ctx, map[string]interface{}{}, nil)
		if err != nil {
			return err
		}
		example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
			Name:     pulumi.String("example-resources"),
			Location: pulumi.String("West Europe"),
		})
		if err != nil {
			return err
		}
		exampleChannelsRegistration, err := bot.NewChannelsRegistration(ctx, "example", &bot.ChannelsRegistrationArgs{
			Name:              pulumi.String("example"),
			Location:          pulumi.String("global"),
			ResourceGroupName: example.Name,
			Sku:               pulumi.String("F0"),
			MicrosoftAppId:    pulumi.String(current.ClientId),
		})
		if err != nil {
			return err
		}
		_, err = bot.NewChannelDirectLine(ctx, "example", &bot.ChannelDirectLineArgs{
			BotName:           exampleChannelsRegistration.Name,
			Location:          exampleChannelsRegistration.Location,
			ResourceGroupName: example.Name,
			Sites: bot.ChannelDirectLineSiteArray{
				&bot.ChannelDirectLineSiteArgs{
					Name:    pulumi.String("default"),
					Enabled: pulumi.Bool(true),
				},
			},
		})
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.core.CoreFunctions;
import com.pulumi.azure.core.ResourceGroup;
import com.pulumi.azure.core.ResourceGroupArgs;
import com.pulumi.azure.bot.ChannelsRegistration;
import com.pulumi.azure.bot.ChannelsRegistrationArgs;
import com.pulumi.azure.bot.ChannelDirectLine;
import com.pulumi.azure.bot.ChannelDirectLineArgs;
import com.pulumi.azure.bot.inputs.ChannelDirectLineSiteArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        final var current = CoreFunctions.getClientConfig();

        var example = new ResourceGroup("example", ResourceGroupArgs.builder()
            .name("example-resources")
            .location("West Europe")
            .build());

        var exampleChannelsRegistration = new ChannelsRegistration("exampleChannelsRegistration", ChannelsRegistrationArgs.builder()
            .name("example")
            .location("global")
            .resourceGroupName(example.name())
            .sku("F0")
            .microsoftAppId(current.applyValue(getClientConfigResult -> getClientConfigResult.clientId()))
            .build());

        var exampleChannelDirectLine = new ChannelDirectLine("exampleChannelDirectLine", ChannelDirectLineArgs.builder()
            .botName(exampleChannelsRegistration.name())
            .location(exampleChannelsRegistration.location())
            .resourceGroupName(example.name())
            .sites(ChannelDirectLineSiteArgs.builder()
                .name("default")
                .enabled(true)
                .build())
            .build());

    }
}
```
```yaml
resources:
  example:
    type: azure:core:ResourceGroup
    properties:
      name: example-resources
      location: West Europe
  exampleChannelsRegistration:
    type: azure:bot:ChannelsRegistration
    name: example
    properties:
      name: example
      location: global
      resourceGroupName: ${example.name}
      sku: F0
      microsoftAppId: ${current.clientId}
  exampleChannelDirectLine:
    type: azure:bot:ChannelDirectLine
    name: example
    properties:
      botName: ${exampleChannelsRegistration.name}
      location: ${exampleChannelsRegistration.location}
      resourceGroupName: ${example.name}
      sites:
        - name: default
          enabled: true
variables:
  current:
    fn::invoke:
      function: azure:core:getClientConfig
      arguments: {}
```
<!--End PulumiCodeChooser -->

## Import

The Directline Channel for a Bot can be imported using the `resource id`, e.g.

```sh
$ pulumi import azure:bot/channelDirectLine:ChannelDirectLine example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/example/providers/Microsoft.BotService/botServices/example/channels/DirectlineChannel
```


botName" vThe name of the Bot Resource this channel will be associated with. Changing this forces a new resource to be created.
}
locationB" kThe supported Azure location where the resource exists. Changing this forces a new resource to be created.

resourceGroupName" vThe name of the resource group in which to create the Bot Channel. Changing this forces a new resource to be created.
Ý
sitesY*W:U
S
botChannelDirectLineSite5azure:bot/ChannelDirectLineSite:ChannelDirectLineSiteyA site represents a client application that you want to connect to your bot. One or more `site` blocks as defined below.
"
botName" vThe name of the Bot Resource this channel will be associated with. Changing this forces a new resource to be created.
"{
location" kThe supported Azure location where the resource exists. Changing this forces a new resource to be created.
"
resourceGroupName" vThe name of the resource group in which to create the Bot Channel. Changing this forces a new resource to be created.
"Ý
sitesY*W:U
S
botChannelDirectLineSite5azure:bot/ChannelDirectLineSite:ChannelDirectLineSiteyA site represents a client application that you want to connect to your bot. One or more `site` blocks as defined below.
*±V
Y
botChannelDirectLineSpeech9azure:bot/channelDirectLineSpeech:ChannelDirectLineSpeechõFManages a Direct Line Speech integration for a Bot Channel

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const current = azure.core.getClientConfig({});
const example = new azure.core.ResourceGroup("example", {
    name: "example-resources",
    location: "West Europe",
});
const exampleAccount = new azure.cognitive.Account("example", {
    name: "example-cogacct",
    location: example.location,
    resourceGroupName: example.name,
    kind: "SpeechServices",
    skuName: "S0",
});
const exampleChannelsRegistration = new azure.bot.ChannelsRegistration("example", {
    name: "example-bcr",
    location: "global",
    resourceGroupName: example.name,
    sku: "F0",
    microsoftAppId: current.then(current => current.clientId),
});
const exampleChannelDirectLineSpeech = new azure.bot.ChannelDirectLineSpeech("example", {
    botName: exampleChannelsRegistration.name,
    location: exampleChannelsRegistration.location,
    resourceGroupName: example.name,
    cognitiveServiceLocation: exampleAccount.location,
    cognitiveServiceAccessKey: exampleAccount.primaryAccessKey,
});
```
```python
import pulumi
import pulumi_azure as azure

current = azure.core.get_client_config()
example = azure.core.ResourceGroup("example",
    name="example-resources",
    location="West Europe")
example_account = azure.cognitive.Account("example",
    name="example-cogacct",
    location=example.location,
    resource_group_name=example.name,
    kind="SpeechServices",
    sku_name="S0")
example_channels_registration = azure.bot.ChannelsRegistration("example",
    name="example-bcr",
    location="global",
    resource_group_name=example.name,
    sku="F0",
    microsoft_app_id=current.client_id)
example_channel_direct_line_speech = azure.bot.ChannelDirectLineSpeech("example",
    bot_name=example_channels_registration.name,
    location=example_channels_registration.location,
    resource_group_name=example.name,
    cognitive_service_location=example_account.location,
    cognitive_service_access_key=example_account.primary_access_key)
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var current = Azure.Core.GetClientConfig.Invoke();

    var example = new Azure.Core.ResourceGroup("example", new()
    {
        Name = "example-resources",
        Location = "West Europe",
    });

    var exampleAccount = new Azure.Cognitive.Account("example", new()
    {
        Name = "example-cogacct",
        Location = example.Location,
        ResourceGroupName = example.Name,
        Kind = "SpeechServices",
        SkuName = "S0",
    });

    var exampleChannelsRegistration = new Azure.Bot.ChannelsRegistration("example", new()
    {
        Name = "example-bcr",
        Location = "global",
        ResourceGroupName = example.Name,
        Sku = "F0",
        MicrosoftAppId = current.Apply(getClientConfigResult => getClientConfigResult.ClientId),
    });

    var exampleChannelDirectLineSpeech = new Azure.Bot.ChannelDirectLineSpeech("example", new()
    {
        BotName = exampleChannelsRegistration.Name,
        Location = exampleChannelsRegistration.Location,
        ResourceGroupName = example.Name,
        CognitiveServiceLocation = exampleAccount.Location,
        CognitiveServiceAccessKey = exampleAccount.PrimaryAccessKey,
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/bot"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/cognitive"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		current, err := core.GetClientConfig(ctx, map[string]interface{}{}, nil)
		if err != nil {
			return err
		}
		example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
			Name:     pulumi.String("example-resources"),
			Location: pulumi.String("West Europe"),
		})
		if err != nil {
			return err
		}
		exampleAccount, err := cognitive.NewAccount(ctx, "example", &cognitive.AccountArgs{
			Name:              pulumi.String("example-cogacct"),
			Location:          example.Location,
			ResourceGroupName: example.Name,
			Kind:              pulumi.String("SpeechServices"),
			SkuName:           pulumi.String("S0"),
		})
		if err != nil {
			return err
		}
		exampleChannelsRegistration, err := bot.NewChannelsRegistration(ctx, "example", &bot.ChannelsRegistrationArgs{
			Name:              pulumi.String("example-bcr"),
			Location:          pulumi.String("global"),
			ResourceGroupName: example.Name,
			Sku:               pulumi.String("F0"),
			MicrosoftAppId:    pulumi.String(current.ClientId),
		})
		if err != nil {
			return err
		}
		_, err = bot.NewChannelDirectLineSpeech(ctx, "example", &bot.ChannelDirectLineSpeechArgs{
			BotName:                   exampleChannelsRegistration.Name,
			Location:                  exampleChannelsRegistration.Location,
			ResourceGroupName:         example.Name,
			CognitiveServiceLocation:  exampleAccount.Location,
			CognitiveServiceAccessKey: exampleAccount.PrimaryAccessKey,
		})
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.core.CoreFunctions;
import com.pulumi.azure.core.ResourceGroup;
import com.pulumi.azure.core.ResourceGroupArgs;
import com.pulumi.azure.cognitive.Account;
import com.pulumi.azure.cognitive.AccountArgs;
import com.pulumi.azure.bot.ChannelsRegistration;
import com.pulumi.azure.bot.ChannelsRegistrationArgs;
import com.pulumi.azure.bot.ChannelDirectLineSpeech;
import com.pulumi.azure.bot.ChannelDirectLineSpeechArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        final var current = CoreFunctions.getClientConfig();

        var example = new ResourceGroup("example", ResourceGroupArgs.builder()
            .name("example-resources")
            .location("West Europe")
            .build());

        var exampleAccount = new Account("exampleAccount", AccountArgs.builder()
            .name("example-cogacct")
            .location(example.location())
            .resourceGroupName(example.name())
            .kind("SpeechServices")
            .skuName("S0")
            .build());

        var exampleChannelsRegistration = new ChannelsRegistration("exampleChannelsRegistration", ChannelsRegistrationArgs.builder()
            .name("example-bcr")
            .location("global")
            .resourceGroupName(example.name())
            .sku("F0")
            .microsoftAppId(current.applyValue(getClientConfigResult -> getClientConfigResult.clientId()))
            .build());

        var exampleChannelDirectLineSpeech = new ChannelDirectLineSpeech("exampleChannelDirectLineSpeech", ChannelDirectLineSpeechArgs.builder()
            .botName(exampleChannelsRegistration.name())
            .location(exampleChannelsRegistration.location())
            .resourceGroupName(example.name())
            .cognitiveServiceLocation(exampleAccount.location())
            .cognitiveServiceAccessKey(exampleAccount.primaryAccessKey())
            .build());

    }
}
```
```yaml
resources:
  example:
    type: azure:core:ResourceGroup
    properties:
      name: example-resources
      location: West Europe
  exampleAccount:
    type: azure:cognitive:Account
    name: example
    properties:
      name: example-cogacct
      location: ${example.location}
      resourceGroupName: ${example.name}
      kind: SpeechServices
      skuName: S0
  exampleChannelsRegistration:
    type: azure:bot:ChannelsRegistration
    name: example
    properties:
      name: example-bcr
      location: global
      resourceGroupName: ${example.name}
      sku: F0
      microsoftAppId: ${current.clientId}
  exampleChannelDirectLineSpeech:
    type: azure:bot:ChannelDirectLineSpeech
    name: example
    properties:
      botName: ${exampleChannelsRegistration.name}
      location: ${exampleChannelsRegistration.location}
      resourceGroupName: ${example.name}
      cognitiveServiceLocation: ${exampleAccount.location}
      cognitiveServiceAccessKey: ${exampleAccount.primaryAccessKey}
variables:
  current:
    fn::invoke:
      function: azure:core:getClientConfig
      arguments: {}
```
<!--End PulumiCodeChooser -->

## Import

Direct Line Speech Channels can be imported using the `resource id`, e.g.

```sh
$ pulumi import azure:bot/channelDirectLineSpeech:ChannelDirectLineSpeech example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.BotService/botServices/botService1/channels/DirectLineSpeechChannel
```


botName" vThe name of the Bot Resource this channel will be associated with. Changing this forces a new resource to be created.
h
cognitiveAccountIdB" LThe ID of the Cognitive Account this Bot Channel should be associated with.
Q
cognitiveServiceAccessKey" 0The access key to access the Cognitive Service.
t
cognitiveServiceLocation" TSpecifies the supported Azure location where the Cognitive Service resource exists.
\
customSpeechModelIdB" ?The custom speech model id for the Direct Line Speech Channel.
d
customVoiceDeploymentIdB" CThe custom voice deployment id for the Direct Line Speech Channel.

locationB" uSpecifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
¤
resourceGroupName" The name of the resource group where the Direct Line Speech Channel should be created. Changing this forces a new resource to be created.
"
botName" vThe name of the Bot Resource this channel will be associated with. Changing this forces a new resource to be created.
"h
cognitiveAccountIdB" LThe ID of the Cognitive Account this Bot Channel should be associated with.
"Q
cognitiveServiceAccessKey" 0The access key to access the Cognitive Service.
"t
cognitiveServiceLocation" TSpecifies the supported Azure location where the Cognitive Service resource exists.
"\
customSpeechModelIdB" ?The custom speech model id for the Direct Line Speech Channel.
"d
customVoiceDeploymentIdB" CThe custom voice deployment id for the Direct Line Speech Channel.
"
location" uSpecifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
"¤
resourceGroupName" The name of the resource group where the Direct Line Speech Channel should be created. Changing this forces a new resource to be created.
*@
8
botChannelEmail#azure:bot/channelEmail:ChannelEmailÑ5Manages a Email integration for a Bot Channel

> **Note** A bot can only have a single Email Channel associated with it.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const current = azure.core.getClientConfig({});
const example = new azure.core.ResourceGroup("example", {
    name: "example-resources",
    location: "West Europe",
});
const exampleChannelsRegistration = new azure.bot.ChannelsRegistration("example", {
    name: "example",
    location: "global",
    resourceGroupName: example.name,
    sku: "F0",
    microsoftAppId: current.then(current => current.clientId),
});
const exampleChannelEmail = new azure.bot.ChannelEmail("example", {
    botName: exampleChannelsRegistration.name,
    location: exampleChannelsRegistration.location,
    resourceGroupName: example.name,
    emailAddress: "example.com",
    emailPassword: "123456",
});
```
```python
import pulumi
import pulumi_azure as azure

current = azure.core.get_client_config()
example = azure.core.ResourceGroup("example",
    name="example-resources",
    location="West Europe")
example_channels_registration = azure.bot.ChannelsRegistration("example",
    name="example",
    location="global",
    resource_group_name=example.name,
    sku="F0",
    microsoft_app_id=current.client_id)
example_channel_email = azure.bot.ChannelEmail("example",
    bot_name=example_channels_registration.name,
    location=example_channels_registration.location,
    resource_group_name=example.name,
    email_address="example.com",
    email_password="123456")
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var current = Azure.Core.GetClientConfig.Invoke();

    var example = new Azure.Core.ResourceGroup("example", new()
    {
        Name = "example-resources",
        Location = "West Europe",
    });

    var exampleChannelsRegistration = new Azure.Bot.ChannelsRegistration("example", new()
    {
        Name = "example",
        Location = "global",
        ResourceGroupName = example.Name,
        Sku = "F0",
        MicrosoftAppId = current.Apply(getClientConfigResult => getClientConfigResult.ClientId),
    });

    var exampleChannelEmail = new Azure.Bot.ChannelEmail("example", new()
    {
        BotName = exampleChannelsRegistration.Name,
        Location = exampleChannelsRegistration.Location,
        ResourceGroupName = example.Name,
        EmailAddress = "example.com",
        EmailPassword = "123456",
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/bot"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		current, err := core.GetClientConfig(ctx, map[string]interface{}{}, nil)
		if err != nil {
			return err
		}
		example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
			Name:     pulumi.String("example-resources"),
			Location: pulumi.String("West Europe"),
		})
		if err != nil {
			return err
		}
		exampleChannelsRegistration, err := bot.NewChannelsRegistration(ctx, "example", &bot.ChannelsRegistrationArgs{
			Name:              pulumi.String("example"),
			Location:          pulumi.String("global"),
			ResourceGroupName: example.Name,
			Sku:               pulumi.String("F0"),
			MicrosoftAppId:    pulumi.String(current.ClientId),
		})
		if err != nil {
			return err
		}
		_, err = bot.NewChannelEmail(ctx, "example", &bot.ChannelEmailArgs{
			BotName:           exampleChannelsRegistration.Name,
			Location:          exampleChannelsRegistration.Location,
			ResourceGroupName: example.Name,
			EmailAddress:      pulumi.String("example.com"),
			EmailPassword:     pulumi.String("123456"),
		})
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.core.CoreFunctions;
import com.pulumi.azure.core.ResourceGroup;
import com.pulumi.azure.core.ResourceGroupArgs;
import com.pulumi.azure.bot.ChannelsRegistration;
import com.pulumi.azure.bot.ChannelsRegistrationArgs;
import com.pulumi.azure.bot.ChannelEmail;
import com.pulumi.azure.bot.ChannelEmailArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        final var current = CoreFunctions.getClientConfig();

        var example = new ResourceGroup("example", ResourceGroupArgs.builder()
            .name("example-resources")
            .location("West Europe")
            .build());

        var exampleChannelsRegistration = new ChannelsRegistration("exampleChannelsRegistration", ChannelsRegistrationArgs.builder()
            .name("example")
            .location("global")
            .resourceGroupName(example.name())
            .sku("F0")
            .microsoftAppId(current.applyValue(getClientConfigResult -> getClientConfigResult.clientId()))
            .build());

        var exampleChannelEmail = new ChannelEmail("exampleChannelEmail", ChannelEmailArgs.builder()
            .botName(exampleChannelsRegistration.name())
            .location(exampleChannelsRegistration.location())
            .resourceGroupName(example.name())
            .emailAddress("example.com")
            .emailPassword("123456")
            .build());

    }
}
```
```yaml
resources:
  example:
    type: azure:core:ResourceGroup
    properties:
      name: example-resources
      location: West Europe
  exampleChannelsRegistration:
    type: azure:bot:ChannelsRegistration
    name: example
    properties:
      name: example
      location: global
      resourceGroupName: ${example.name}
      sku: F0
      microsoftAppId: ${current.clientId}
  exampleChannelEmail:
    type: azure:bot:ChannelEmail
    name: example
    properties:
      botName: ${exampleChannelsRegistration.name}
      location: ${exampleChannelsRegistration.location}
      resourceGroupName: ${example.name}
      emailAddress: example.com
      emailPassword: '123456'
variables:
  current:
    fn::invoke:
      function: azure:core:getClientConfig
      arguments: {}
```
<!--End PulumiCodeChooser -->

## Import

The Email Integration for a Bot Channel can be imported using the `resource id`, e.g.

```sh
$ pulumi import azure:bot/channelEmail:ChannelEmail example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/example/providers/Microsoft.BotService/botServices/example/channels/EmailChannel
```


botName" vThe name of the Bot Resource this channel will be associated with. Changing this forces a new resource to be created.
K
emailAddress" 7The email address that the Bot will authenticate with.
O
emailPasswordB" 8The email password that the Bot will authenticate with.
}
locationB" kThe supported Azure location where the resource exists. Changing this forces a new resource to be created.
G
	magicCodeB" 4The magic code used to set up OAUTH authentication.

resourceGroupName" vThe name of the resource group in which to create the Bot Channel. Changing this forces a new resource to be created.
"
botName" vThe name of the Bot Resource this channel will be associated with. Changing this forces a new resource to be created.
"K
emailAddress" 7The email address that the Bot will authenticate with.
"O
emailPasswordB" 8The email password that the Bot will authenticate with.
"{
location" kThe supported Azure location where the resource exists. Changing this forces a new resource to be created.
"G
	magicCodeB" 4The magic code used to set up OAUTH authentication.
"
resourceGroupName" vThe name of the resource group in which to create the Bot Channel. Changing this forces a new resource to be created.
*øT
A
botChannelFacebook)azure:bot/channelFacebook:ChannelFacebookØHManages a Facebook integration for a Bot Channel

> **Note** A bot can only have a single Facebook Channel associated with it.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const current = azure.core.getClientConfig({});
const example = new azure.core.ResourceGroup("example", {
    name: "example-resources",
    location: "West Europe",
});
const exampleChannelsRegistration = new azure.bot.ChannelsRegistration("example", {
    name: "example-bcr",
    location: "global",
    resourceGroupName: example.name,
    sku: "F0",
    microsoftAppId: current.then(current => current.clientId),
});
const exampleChannelFacebook = new azure.bot.ChannelFacebook("example", {
    botName: exampleChannelsRegistration.name,
    location: exampleChannelsRegistration.location,
    resourceGroupName: example.name,
    facebookApplicationId: "563490254873576",
    facebookApplicationSecret: "8976d2536445ad5b976dee8437b9beb0",
    pages: [{
        id: "876248795081953",
        accessToken: "CGGCec3UAFPMBAKwK3Ft8SEpO8ZCuvpNBI5DClaJCDfqJj2BgEHCKxcY0FDarmUQap6XxpZC9GWCW4nZCzjcKosAZAP7SO44X8Q8gAntbDIXgYUBGp9xtS8wUkwgKPobUePcOOVFkvClxvYZByuiQxoTiK9fQ9jZCPEorbmZCsKDZAx4VLnrNwCTZAPUwXxO61gfq4ZD",
    }],
});
```
```python
import pulumi
import pulumi_azure as azure

current = azure.core.get_client_config()
example = azure.core.ResourceGroup("example",
    name="example-resources",
    location="West Europe")
example_channels_registration = azure.bot.ChannelsRegistration("example",
    name="example-bcr",
    location="global",
    resource_group_name=example.name,
    sku="F0",
    microsoft_app_id=current.client_id)
example_channel_facebook = azure.bot.ChannelFacebook("example",
    bot_name=example_channels_registration.name,
    location=example_channels_registration.location,
    resource_group_name=example.name,
    facebook_application_id="563490254873576",
    facebook_application_secret="8976d2536445ad5b976dee8437b9beb0",
    pages=[{
        "id": "876248795081953",
        "access_token": "CGGCec3UAFPMBAKwK3Ft8SEpO8ZCuvpNBI5DClaJCDfqJj2BgEHCKxcY0FDarmUQap6XxpZC9GWCW4nZCzjcKosAZAP7SO44X8Q8gAntbDIXgYUBGp9xtS8wUkwgKPobUePcOOVFkvClxvYZByuiQxoTiK9fQ9jZCPEorbmZCsKDZAx4VLnrNwCTZAPUwXxO61gfq4ZD",
    }])
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var current = Azure.Core.GetClientConfig.Invoke();

    var example = new Azure.Core.ResourceGroup("example", new()
    {
        Name = "example-resources",
        Location = "West Europe",
    });

    var exampleChannelsRegistration = new Azure.Bot.ChannelsRegistration("example", new()
    {
        Name = "example-bcr",
        Location = "global",
        ResourceGroupName = example.Name,
        Sku = "F0",
        MicrosoftAppId = current.Apply(getClientConfigResult => getClientConfigResult.ClientId),
    });

    var exampleChannelFacebook = new Azure.Bot.ChannelFacebook("example", new()
    {
        BotName = exampleChannelsRegistration.Name,
        Location = exampleChannelsRegistration.Location,
        ResourceGroupName = example.Name,
        FacebookApplicationId = "563490254873576",
        FacebookApplicationSecret = "8976d2536445ad5b976dee8437b9beb0",
        Pages = new[]
        {
            new Azure.Bot.Inputs.ChannelFacebookPageArgs
            {
                Id = "876248795081953",
                AccessToken = "CGGCec3UAFPMBAKwK3Ft8SEpO8ZCuvpNBI5DClaJCDfqJj2BgEHCKxcY0FDarmUQap6XxpZC9GWCW4nZCzjcKosAZAP7SO44X8Q8gAntbDIXgYUBGp9xtS8wUkwgKPobUePcOOVFkvClxvYZByuiQxoTiK9fQ9jZCPEorbmZCsKDZAx4VLnrNwCTZAPUwXxO61gfq4ZD",
            },
        },
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/bot"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		current, err := core.GetClientConfig(ctx, map[string]interface{}{}, nil)
		if err != nil {
			return err
		}
		example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
			Name:     pulumi.String("example-resources"),
			Location: pulumi.String("West Europe"),
		})
		if err != nil {
			return err
		}
		exampleChannelsRegistration, err := bot.NewChannelsRegistration(ctx, "example", &bot.ChannelsRegistrationArgs{
			Name:              pulumi.String("example-bcr"),
			Location:          pulumi.String("global"),
			ResourceGroupName: example.Name,
			Sku:               pulumi.String("F0"),
			MicrosoftAppId:    pulumi.String(current.ClientId),
		})
		if err != nil {
			return err
		}
		_, err = bot.NewChannelFacebook(ctx, "example", &bot.ChannelFacebookArgs{
			BotName:                   exampleChannelsRegistration.Name,
			Location:                  exampleChannelsRegistration.Location,
			ResourceGroupName:         example.Name,
			FacebookApplicationId:     pulumi.String("563490254873576"),
			FacebookApplicationSecret: pulumi.String("8976d2536445ad5b976dee8437b9beb0"),
			Pages: bot.ChannelFacebookPageArray{
				&bot.ChannelFacebookPageArgs{
					Id:          pulumi.String("876248795081953"),
					AccessToken: pulumi.String("CGGCec3UAFPMBAKwK3Ft8SEpO8ZCuvpNBI5DClaJCDfqJj2BgEHCKxcY0FDarmUQap6XxpZC9GWCW4nZCzjcKosAZAP7SO44X8Q8gAntbDIXgYUBGp9xtS8wUkwgKPobUePcOOVFkvClxvYZByuiQxoTiK9fQ9jZCPEorbmZCsKDZAx4VLnrNwCTZAPUwXxO61gfq4ZD"),
				},
			},
		})
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.core.CoreFunctions;
import com.pulumi.azure.core.ResourceGroup;
import com.pulumi.azure.core.ResourceGroupArgs;
import com.pulumi.azure.bot.ChannelsRegistration;
import com.pulumi.azure.bot.ChannelsRegistrationArgs;
import com.pulumi.azure.bot.ChannelFacebook;
import com.pulumi.azure.bot.ChannelFacebookArgs;
import com.pulumi.azure.bot.inputs.ChannelFacebookPageArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        final var current = CoreFunctions.getClientConfig();

        var example = new ResourceGroup("example", ResourceGroupArgs.builder()
            .name("example-resources")
            .location("West Europe")
            .build());

        var exampleChannelsRegistration = new ChannelsRegistration("exampleChannelsRegistration", ChannelsRegistrationArgs.builder()
            .name("example-bcr")
            .location("global")
            .resourceGroupName(example.name())
            .sku("F0")
            .microsoftAppId(current.applyValue(getClientConfigResult -> getClientConfigResult.clientId()))
            .build());

        var exampleChannelFacebook = new ChannelFacebook("exampleChannelFacebook", ChannelFacebookArgs.builder()
            .botName(exampleChannelsRegistration.name())
            .location(exampleChannelsRegistration.location())
            .resourceGroupName(example.name())
            .facebookApplicationId("563490254873576")
            .facebookApplicationSecret("8976d2536445ad5b976dee8437b9beb0")
            .pages(ChannelFacebookPageArgs.builder()
                .id("876248795081953")
                .accessToken("CGGCec3UAFPMBAKwK3Ft8SEpO8ZCuvpNBI5DClaJCDfqJj2BgEHCKxcY0FDarmUQap6XxpZC9GWCW4nZCzjcKosAZAP7SO44X8Q8gAntbDIXgYUBGp9xtS8wUkwgKPobUePcOOVFkvClxvYZByuiQxoTiK9fQ9jZCPEorbmZCsKDZAx4VLnrNwCTZAPUwXxO61gfq4ZD")
                .build())
            .build());

    }
}
```
```yaml
resources:
  example:
    type: azure:core:ResourceGroup
    properties:
      name: example-resources
      location: West Europe
  exampleChannelsRegistration:
    type: azure:bot:ChannelsRegistration
    name: example
    properties:
      name: example-bcr
      location: global
      resourceGroupName: ${example.name}
      sku: F0
      microsoftAppId: ${current.clientId}
  exampleChannelFacebook:
    type: azure:bot:ChannelFacebook
    name: example
    properties:
      botName: ${exampleChannelsRegistration.name}
      location: ${exampleChannelsRegistration.location}
      resourceGroupName: ${example.name}
      facebookApplicationId: '563490254873576'
      facebookApplicationSecret: 8976d2536445ad5b976dee8437b9beb0
      pages:
        - id: '876248795081953'
          accessToken: CGGCec3UAFPMBAKwK3Ft8SEpO8ZCuvpNBI5DClaJCDfqJj2BgEHCKxcY0FDarmUQap6XxpZC9GWCW4nZCzjcKosAZAP7SO44X8Q8gAntbDIXgYUBGp9xtS8wUkwgKPobUePcOOVFkvClxvYZByuiQxoTiK9fQ9jZCPEorbmZCsKDZAx4VLnrNwCTZAPUwXxO61gfq4ZD
variables:
  current:
    fn::invoke:
      function: azure:core:getClientConfig
      arguments: {}
```
<!--End PulumiCodeChooser -->

## Import

The Facebook Integration for a Bot Channel can be imported using the `resource id`, e.g.

```sh
$ pulumi import azure:bot/channelFacebook:ChannelFacebook example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.BotService/botServices/botService1/channels/FacebookChannel
```


botName" vThe name of the Bot Resource this channel will be associated with. Changing this forces a new resource to be created.
S
facebookApplicationId" 6The Facebook Application ID for the Facebook Channel.
[
facebookApplicationSecret" :The Facebook Application Secret for the Facebook Channel.

locationB" uSpecifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.

pagesS*Q:O
M
botChannelFacebookPage1azure:bot/ChannelFacebookPage:ChannelFacebookPage,One or more `page` blocks as defined below.

resourceGroupName" The name of the resource group where the Facebook Channel should be created. Changing this forces a new resource to be created.
"
botName" vThe name of the Bot Resource this channel will be associated with. Changing this forces a new resource to be created.
"S
facebookApplicationId" 6The Facebook Application ID for the Facebook Channel.
"[
facebookApplicationSecret" :The Facebook Application Secret for the Facebook Channel.
"
location" uSpecifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
"
pagesS*Q:O
M
botChannelFacebookPage1azure:bot/ChannelFacebookPage:ChannelFacebookPage,One or more `page` blocks as defined below.
"
resourceGroupName" The name of the resource group where the Facebook Channel should be created. Changing this forces a new resource to be created.
*D
5
botChannelLine!azure:bot/channelLine:ChannelLine²:Manages a Line integration for a Bot Channel

> **Note** A bot can only have a single Line Channel associated with it.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const current = azure.core.getClientConfig({});
const example = new azure.core.ResourceGroup("example", {
    name: "example-resources",
    location: "West Europe",
});
const exampleChannelsRegistration = new azure.bot.ChannelsRegistration("example", {
    name: "example-bcr",
    location: "global",
    resourceGroupName: example.name,
    sku: "F0",
    microsoftAppId: current.then(current => current.clientId),
});
const exampleChannelLine = new azure.bot.ChannelLine("example", {
    botName: exampleChannelsRegistration.name,
    location: exampleChannelsRegistration.location,
    resourceGroupName: example.name,
    lineChannels: [{
        accessToken: "asdfdsdfTYUIOIoj1231hkjhk",
        secret: "aagfdgfd123567",
    }],
});
```
```python
import pulumi
import pulumi_azure as azure

current = azure.core.get_client_config()
example = azure.core.ResourceGroup("example",
    name="example-resources",
    location="West Europe")
example_channels_registration = azure.bot.ChannelsRegistration("example",
    name="example-bcr",
    location="global",
    resource_group_name=example.name,
    sku="F0",
    microsoft_app_id=current.client_id)
example_channel_line = azure.bot.ChannelLine("example",
    bot_name=example_channels_registration.name,
    location=example_channels_registration.location,
    resource_group_name=example.name,
    line_channels=[{
        "access_token": "asdfdsdfTYUIOIoj1231hkjhk",
        "secret": "aagfdgfd123567",
    }])
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var current = Azure.Core.GetClientConfig.Invoke();

    var example = new Azure.Core.ResourceGroup("example", new()
    {
        Name = "example-resources",
        Location = "West Europe",
    });

    var exampleChannelsRegistration = new Azure.Bot.ChannelsRegistration("example", new()
    {
        Name = "example-bcr",
        Location = "global",
        ResourceGroupName = example.Name,
        Sku = "F0",
        MicrosoftAppId = current.Apply(getClientConfigResult => getClientConfigResult.ClientId),
    });

    var exampleChannelLine = new Azure.Bot.ChannelLine("example", new()
    {
        BotName = exampleChannelsRegistration.Name,
        Location = exampleChannelsRegistration.Location,
        ResourceGroupName = example.Name,
        LineChannels = new[]
        {
            new Azure.Bot.Inputs.ChannelLineLineChannelArgs
            {
                AccessToken = "asdfdsdfTYUIOIoj1231hkjhk",
                Secret = "aagfdgfd123567",
            },
        },
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/bot"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		current, err := core.GetClientConfig(ctx, map[string]interface{}{}, nil)
		if err != nil {
			return err
		}
		example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
			Name:     pulumi.String("example-resources"),
			Location: pulumi.String("West Europe"),
		})
		if err != nil {
			return err
		}
		exampleChannelsRegistration, err := bot.NewChannelsRegistration(ctx, "example", &bot.ChannelsRegistrationArgs{
			Name:              pulumi.String("example-bcr"),
			Location:          pulumi.String("global"),
			ResourceGroupName: example.Name,
			Sku:               pulumi.String("F0"),
			MicrosoftAppId:    pulumi.String(current.ClientId),
		})
		if err != nil {
			return err
		}
		_, err = bot.NewChannelLine(ctx, "example", &bot.ChannelLineArgs{
			BotName:           exampleChannelsRegistration.Name,
			Location:          exampleChannelsRegistration.Location,
			ResourceGroupName: example.Name,
			LineChannels: bot.ChannelLineLineChannelArray{
				&bot.ChannelLineLineChannelArgs{
					AccessToken: pulumi.String("asdfdsdfTYUIOIoj1231hkjhk"),
					Secret:      pulumi.String("aagfdgfd123567"),
				},
			},
		})
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.core.CoreFunctions;
import com.pulumi.azure.core.ResourceGroup;
import com.pulumi.azure.core.ResourceGroupArgs;
import com.pulumi.azure.bot.ChannelsRegistration;
import com.pulumi.azure.bot.ChannelsRegistrationArgs;
import com.pulumi.azure.bot.ChannelLine;
import com.pulumi.azure.bot.ChannelLineArgs;
import com.pulumi.azure.bot.inputs.ChannelLineLineChannelArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        final var current = CoreFunctions.getClientConfig();

        var example = new ResourceGroup("example", ResourceGroupArgs.builder()
            .name("example-resources")
            .location("West Europe")
            .build());

        var exampleChannelsRegistration = new ChannelsRegistration("exampleChannelsRegistration", ChannelsRegistrationArgs.builder()
            .name("example-bcr")
            .location("global")
            .resourceGroupName(example.name())
            .sku("F0")
            .microsoftAppId(current.applyValue(getClientConfigResult -> getClientConfigResult.clientId()))
            .build());

        var exampleChannelLine = new ChannelLine("exampleChannelLine", ChannelLineArgs.builder()
            .botName(exampleChannelsRegistration.name())
            .location(exampleChannelsRegistration.location())
            .resourceGroupName(example.name())
            .lineChannels(ChannelLineLineChannelArgs.builder()
                .accessToken("asdfdsdfTYUIOIoj1231hkjhk")
                .secret("aagfdgfd123567")
                .build())
            .build());

    }
}
```
```yaml
resources:
  example:
    type: azure:core:ResourceGroup
    properties:
      name: example-resources
      location: West Europe
  exampleChannelsRegistration:
    type: azure:bot:ChannelsRegistration
    name: example
    properties:
      name: example-bcr
      location: global
      resourceGroupName: ${example.name}
      sku: F0
      microsoftAppId: ${current.clientId}
  exampleChannelLine:
    type: azure:bot:ChannelLine
    name: example
    properties:
      botName: ${exampleChannelsRegistration.name}
      location: ${exampleChannelsRegistration.location}
      resourceGroupName: ${example.name}
      lineChannels:
        - accessToken: asdfdsdfTYUIOIoj1231hkjhk
          secret: aagfdgfd123567
variables:
  current:
    fn::invoke:
      function: azure:core:getClientConfig
      arguments: {}
```
<!--End PulumiCodeChooser -->

## Import

The Line Integration for a Bot Channel can be imported using the `resource id`, e.g.

```sh
$ pulumi import azure:bot/channelLine:ChannelLine example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.BotService/botServices/botService1/channels/LineChannel
```


botName" vThe name of the Bot Resource this channel will be associated with. Changing this forces a new resource to be created.
¢
lineChannels\*Z:X
V
botChannelLineLineChannel7azure:bot/ChannelLineLineChannel:ChannelLineLineChannel4One or more `line_channel` blocks as defined below.

locationB" uSpecifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.

resourceGroupName" |The name of the resource group where the Line Channel should be created. Changing this forces a new resource to be created.
"
botName" vThe name of the Bot Resource this channel will be associated with. Changing this forces a new resource to be created.
"¢
lineChannels\*Z:X
V
botChannelLineLineChannel7azure:bot/ChannelLineLineChannel:ChannelLineLineChannel4One or more `line_channel` blocks as defined below.
"
location" uSpecifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
"
resourceGroupName" |The name of the resource group where the Line Channel should be created. Changing this forces a new resource to be created.
*©E
8
botChannelSlack#azure:bot/channelSlack:ChannelSlack 8Manages a Slack integration for a Bot Channel

> **Note** A bot can only have a single Slack Channel associated with it.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const current = azure.core.getClientConfig({});
const example = new azure.core.ResourceGroup("example", {
    name: "example-resources",
    location: "West Europe",
});
const exampleChannelsRegistration = new azure.bot.ChannelsRegistration("example", {
    name: "example",
    location: "global",
    resourceGroupName: example.name,
    sku: "F0",
    microsoftAppId: current.then(current => current.clientId),
});
const exampleChannelSlack = new azure.bot.ChannelSlack("example", {
    botName: exampleChannelsRegistration.name,
    location: exampleChannelsRegistration.location,
    resourceGroupName: example.name,
    clientId: "exampleId",
    clientSecret: "exampleSecret",
    verificationToken: "exampleVerificationToken",
});
```
```python
import pulumi
import pulumi_azure as azure

current = azure.core.get_client_config()
example = azure.core.ResourceGroup("example",
    name="example-resources",
    location="West Europe")
example_channels_registration = azure.bot.ChannelsRegistration("example",
    name="example",
    location="global",
    resource_group_name=example.name,
    sku="F0",
    microsoft_app_id=current.client_id)
example_channel_slack = azure.bot.ChannelSlack("example",
    bot_name=example_channels_registration.name,
    location=example_channels_registration.location,
    resource_group_name=example.name,
    client_id="exampleId",
    client_secret="exampleSecret",
    verification_token="exampleVerificationToken")
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var current = Azure.Core.GetClientConfig.Invoke();

    var example = new Azure.Core.ResourceGroup("example", new()
    {
        Name = "example-resources",
        Location = "West Europe",
    });

    var exampleChannelsRegistration = new Azure.Bot.ChannelsRegistration("example", new()
    {
        Name = "example",
        Location = "global",
        ResourceGroupName = example.Name,
        Sku = "F0",
        MicrosoftAppId = current.Apply(getClientConfigResult => getClientConfigResult.ClientId),
    });

    var exampleChannelSlack = new Azure.Bot.ChannelSlack("example", new()
    {
        BotName = exampleChannelsRegistration.Name,
        Location = exampleChannelsRegistration.Location,
        ResourceGroupName = example.Name,
        ClientId = "exampleId",
        ClientSecret = "exampleSecret",
        VerificationToken = "exampleVerificationToken",
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/bot"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		current, err := core.GetClientConfig(ctx, map[string]interface{}{}, nil)
		if err != nil {
			return err
		}
		example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
			Name:     pulumi.String("example-resources"),
			Location: pulumi.String("West Europe"),
		})
		if err != nil {
			return err
		}
		exampleChannelsRegistration, err := bot.NewChannelsRegistration(ctx, "example", &bot.ChannelsRegistrationArgs{
			Name:              pulumi.String("example"),
			Location:          pulumi.String("global"),
			ResourceGroupName: example.Name,
			Sku:               pulumi.String("F0"),
			MicrosoftAppId:    pulumi.String(current.ClientId),
		})
		if err != nil {
			return err
		}
		_, err = bot.NewChannelSlack(ctx, "example", &bot.ChannelSlackArgs{
			BotName:           exampleChannelsRegistration.Name,
			Location:          exampleChannelsRegistration.Location,
			ResourceGroupName: example.Name,
			ClientId:          pulumi.String("exampleId"),
			ClientSecret:      pulumi.String("exampleSecret"),
			VerificationToken: pulumi.String("exampleVerificationToken"),
		})
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.core.CoreFunctions;
import com.pulumi.azure.core.ResourceGroup;
import com.pulumi.azure.core.ResourceGroupArgs;
import com.pulumi.azure.bot.ChannelsRegistration;
import com.pulumi.azure.bot.ChannelsRegistrationArgs;
import com.pulumi.azure.bot.ChannelSlack;
import com.pulumi.azure.bot.ChannelSlackArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        final var current = CoreFunctions.getClientConfig();

        var example = new ResourceGroup("example", ResourceGroupArgs.builder()
            .name("example-resources")
            .location("West Europe")
            .build());

        var exampleChannelsRegistration = new ChannelsRegistration("exampleChannelsRegistration", ChannelsRegistrationArgs.builder()
            .name("example")
            .location("global")
            .resourceGroupName(example.name())
            .sku("F0")
            .microsoftAppId(current.applyValue(getClientConfigResult -> getClientConfigResult.clientId()))
            .build());

        var exampleChannelSlack = new ChannelSlack("exampleChannelSlack", ChannelSlackArgs.builder()
            .botName(exampleChannelsRegistration.name())
            .location(exampleChannelsRegistration.location())
            .resourceGroupName(example.name())
            .clientId("exampleId")
            .clientSecret("exampleSecret")
            .verificationToken("exampleVerificationToken")
            .build());

    }
}
```
```yaml
resources:
  example:
    type: azure:core:ResourceGroup
    properties:
      name: example-resources
      location: West Europe
  exampleChannelsRegistration:
    type: azure:bot:ChannelsRegistration
    name: example
    properties:
      name: example
      location: global
      resourceGroupName: ${example.name}
      sku: F0
      microsoftAppId: ${current.clientId}
  exampleChannelSlack:
    type: azure:bot:ChannelSlack
    name: example
    properties:
      botName: ${exampleChannelsRegistration.name}
      location: ${exampleChannelsRegistration.location}
      resourceGroupName: ${example.name}
      clientId: exampleId
      clientSecret: exampleSecret
      verificationToken: exampleVerificationToken
variables:
  current:
    fn::invoke:
      function: azure:core:getClientConfig
      arguments: {}
```
<!--End PulumiCodeChooser -->

## Import

The Slack Integration for a Bot Channel can be imported using the `resource id`, e.g.

```sh
$ pulumi import azure:bot/channelSlack:ChannelSlack example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/example/providers/Microsoft.BotService/botServices/example/channels/SlackChannel
```


botName" vThe name of the Bot Resource this channel will be associated with. Changing this forces a new resource to be created.
L
clientId" <The Client ID that will be used to authenticate with Slack.
T
clientSecret" @The Client Secret that will be used to authenticate with Slack.
4
landingPageUrlB" The Slack Landing Page URL.
}
locationB" kThe supported Azure location where the resource exists. Changing this forces a new resource to be created.

resourceGroupName" vThe name of the resource group in which to create the Bot Channel. Changing this forces a new resource to be created.
R
signingSecretB" ;The Signing Secret that will be used to sign the requests.
^
verificationToken" EThe Verification Token that will be used to authenticate with Slack.
"
botName" vThe name of the Bot Resource this channel will be associated with. Changing this forces a new resource to be created.
"L
clientId" <The Client ID that will be used to authenticate with Slack.
"T
clientSecret" @The Client Secret that will be used to authenticate with Slack.
"4
landingPageUrlB" The Slack Landing Page URL.
"{
location" kThe supported Azure location where the resource exists. Changing this forces a new resource to be created.
"
resourceGroupName" vThe name of the resource group in which to create the Bot Channel. Changing this forces a new resource to be created.
"R
signingSecretB" ;The Signing Secret that will be used to sign the requests.
"^
verificationToken" EThe Verification Token that will be used to authenticate with Slack.
*ÁE
2
bot
ChannelSmsazure:bot/channelSms:ChannelSmsð:Manages a SMS integration for a Bot Channel

> **Note** A bot can only have a single SMS Channel associated with it.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const current = azure.core.getClientConfig({});
const example = new azure.core.ResourceGroup("example", {
    name: "example-resources",
    location: "West Europe",
});
const exampleChannelsRegistration = new azure.bot.ChannelsRegistration("example", {
    name: "example-bcr",
    location: "global",
    resourceGroupName: example.name,
    sku: "F0",
    microsoftAppId: current.then(current => current.clientId),
});
const exampleChannelSms = new azure.bot.ChannelSms("example", {
    botName: exampleChannelsRegistration.name,
    location: exampleChannelsRegistration.location,
    resourceGroupName: example.name,
    smsChannelAccountSecurityId: "BG61f7cf5157f439b084e98256409c2815",
    smsChannelAuthToken: "jh8980432610052ed4e29565c5e232f",
    phoneNumber: "+12313803556",
});
```
```python
import pulumi
import pulumi_azure as azure

current = azure.core.get_client_config()
example = azure.core.ResourceGroup("example",
    name="example-resources",
    location="West Europe")
example_channels_registration = azure.bot.ChannelsRegistration("example",
    name="example-bcr",
    location="global",
    resource_group_name=example.name,
    sku="F0",
    microsoft_app_id=current.client_id)
example_channel_sms = azure.bot.ChannelSms("example",
    bot_name=example_channels_registration.name,
    location=example_channels_registration.location,
    resource_group_name=example.name,
    sms_channel_account_security_id="BG61f7cf5157f439b084e98256409c2815",
    sms_channel_auth_token="jh8980432610052ed4e29565c5e232f",
    phone_number="+12313803556")
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var current = Azure.Core.GetClientConfig.Invoke();

    var example = new Azure.Core.ResourceGroup("example", new()
    {
        Name = "example-resources",
        Location = "West Europe",
    });

    var exampleChannelsRegistration = new Azure.Bot.ChannelsRegistration("example", new()
    {
        Name = "example-bcr",
        Location = "global",
        ResourceGroupName = example.Name,
        Sku = "F0",
        MicrosoftAppId = current.Apply(getClientConfigResult => getClientConfigResult.ClientId),
    });

    var exampleChannelSms = new Azure.Bot.ChannelSms("example", new()
    {
        BotName = exampleChannelsRegistration.Name,
        Location = exampleChannelsRegistration.Location,
        ResourceGroupName = example.Name,
        SmsChannelAccountSecurityId = "BG61f7cf5157f439b084e98256409c2815",
        SmsChannelAuthToken = "jh8980432610052ed4e29565c5e232f",
        PhoneNumber = "+12313803556",
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/bot"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		current, err := core.GetClientConfig(ctx, map[string]interface{}{}, nil)
		if err != nil {
			return err
		}
		example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
			Name:     pulumi.String("example-resources"),
			Location: pulumi.String("West Europe"),
		})
		if err != nil {
			return err
		}
		exampleChannelsRegistration, err := bot.NewChannelsRegistration(ctx, "example", &bot.ChannelsRegistrationArgs{
			Name:              pulumi.String("example-bcr"),
			Location:          pulumi.String("global"),
			ResourceGroupName: example.Name,
			Sku:               pulumi.String("F0"),
			MicrosoftAppId:    pulumi.String(current.ClientId),
		})
		if err != nil {
			return err
		}
		_, err = bot.NewChannelSms(ctx, "example", &bot.ChannelSmsArgs{
			BotName:                     exampleChannelsRegistration.Name,
			Location:                    exampleChannelsRegistration.Location,
			ResourceGroupName:           example.Name,
			SmsChannelAccountSecurityId: pulumi.String("BG61f7cf5157f439b084e98256409c2815"),
			SmsChannelAuthToken:         pulumi.String("jh8980432610052ed4e29565c5e232f"),
			PhoneNumber:                 pulumi.String("+12313803556"),
		})
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.core.CoreFunctions;
import com.pulumi.azure.core.ResourceGroup;
import com.pulumi.azure.core.ResourceGroupArgs;
import com.pulumi.azure.bot.ChannelsRegistration;
import com.pulumi.azure.bot.ChannelsRegistrationArgs;
import com.pulumi.azure.bot.ChannelSms;
import com.pulumi.azure.bot.ChannelSmsArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        final var current = CoreFunctions.getClientConfig();

        var example = new ResourceGroup("example", ResourceGroupArgs.builder()
            .name("example-resources")
            .location("West Europe")
            .build());

        var exampleChannelsRegistration = new ChannelsRegistration("exampleChannelsRegistration", ChannelsRegistrationArgs.builder()
            .name("example-bcr")
            .location("global")
            .resourceGroupName(example.name())
            .sku("F0")
            .microsoftAppId(current.applyValue(getClientConfigResult -> getClientConfigResult.clientId()))
            .build());

        var exampleChannelSms = new ChannelSms("exampleChannelSms", ChannelSmsArgs.builder()
            .botName(exampleChannelsRegistration.name())
            .location(exampleChannelsRegistration.location())
            .resourceGroupName(example.name())
            .smsChannelAccountSecurityId("BG61f7cf5157f439b084e98256409c2815")
            .smsChannelAuthToken("jh8980432610052ed4e29565c5e232f")
            .phoneNumber("+12313803556")
            .build());

    }
}
```
```yaml
resources:
  example:
    type: azure:core:ResourceGroup
    properties:
      name: example-resources
      location: West Europe
  exampleChannelsRegistration:
    type: azure:bot:ChannelsRegistration
    name: example
    properties:
      name: example-bcr
      location: global
      resourceGroupName: ${example.name}
      sku: F0
      microsoftAppId: ${current.clientId}
  exampleChannelSms:
    type: azure:bot:ChannelSms
    name: example
    properties:
      botName: ${exampleChannelsRegistration.name}
      location: ${exampleChannelsRegistration.location}
      resourceGroupName: ${example.name}
      smsChannelAccountSecurityId: BG61f7cf5157f439b084e98256409c2815
      smsChannelAuthToken: jh8980432610052ed4e29565c5e232f
      phoneNumber: '+12313803556'
variables:
  current:
    fn::invoke:
      function: azure:core:getClientConfig
      arguments: {}
```
<!--End PulumiCodeChooser -->

## Import

The SMS Integration for a Bot Channel can be imported using the `resource id`, e.g.

```sh
$ pulumi import azure:bot/channelSms:ChannelSms example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.BotService/botServices/botService1/channels/SmsChannel
```


botName" vThe name of the Bot Resource this channel will be associated with. Changing this forces a new resource to be created.

locationB" uSpecifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
9
phoneNumber" &The phone number for the SMS Channel.

resourceGroupName" {The name of the resource group where the SMS Channel should be created. Changing this forces a new resource to be created.
^
smsChannelAccountSecurityId" ;The account security identifier (SID) for the SMS Channel.
H
smsChannelAuthToken" -The authorization token for the SMS Channel.
"
botName" vThe name of the Bot Resource this channel will be associated with. Changing this forces a new resource to be created.
"
location" uSpecifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
"9
phoneNumber" &The phone number for the SMS Channel.
"
resourceGroupName" {The name of the resource group where the SMS Channel should be created. Changing this forces a new resource to be created.
"^
smsChannelAccountSecurityId" ;The account security identifier (SID) for the SMS Channel.
"H
smsChannelAuthToken" -The authorization token for the SMS Channel.
*·?
8
botChannelTeams#azure:bot/channelTeams:ChannelTeams°2Manages a MS Teams integration for a Bot Channel

> **Note** A bot can only have a single MS Teams Channel associated with it.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const current = azure.core.getClientConfig({});
const example = new azure.core.ResourceGroup("example", {
    name: "example-resources",
    location: "West Europe",
});
const exampleChannelsRegistration = new azure.bot.ChannelsRegistration("example", {
    name: "example",
    location: "global",
    resourceGroupName: example.name,
    sku: "F0",
    microsoftAppId: current.then(current => current.clientId),
});
const exampleChannelTeams = new azure.bot.ChannelTeams("example", {
    botName: exampleChannelsRegistration.name,
    location: exampleChannelsRegistration.location,
    resourceGroupName: example.name,
});
```
```python
import pulumi
import pulumi_azure as azure

current = azure.core.get_client_config()
example = azure.core.ResourceGroup("example",
    name="example-resources",
    location="West Europe")
example_channels_registration = azure.bot.ChannelsRegistration("example",
    name="example",
    location="global",
    resource_group_name=example.name,
    sku="F0",
    microsoft_app_id=current.client_id)
example_channel_teams = azure.bot.ChannelTeams("example",
    bot_name=example_channels_registration.name,
    location=example_channels_registration.location,
    resource_group_name=example.name)
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var current = Azure.Core.GetClientConfig.Invoke();

    var example = new Azure.Core.ResourceGroup("example", new()
    {
        Name = "example-resources",
        Location = "West Europe",
    });

    var exampleChannelsRegistration = new Azure.Bot.ChannelsRegistration("example", new()
    {
        Name = "example",
        Location = "global",
        ResourceGroupName = example.Name,
        Sku = "F0",
        MicrosoftAppId = current.Apply(getClientConfigResult => getClientConfigResult.ClientId),
    });

    var exampleChannelTeams = new Azure.Bot.ChannelTeams("example", new()
    {
        BotName = exampleChannelsRegistration.Name,
        Location = exampleChannelsRegistration.Location,
        ResourceGroupName = example.Name,
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/bot"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		current, err := core.GetClientConfig(ctx, map[string]interface{}{}, nil)
		if err != nil {
			return err
		}
		example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
			Name:     pulumi.String("example-resources"),
			Location: pulumi.String("West Europe"),
		})
		if err != nil {
			return err
		}
		exampleChannelsRegistration, err := bot.NewChannelsRegistration(ctx, "example", &bot.ChannelsRegistrationArgs{
			Name:              pulumi.String("example"),
			Location:          pulumi.String("global"),
			ResourceGroupName: example.Name,
			Sku:               pulumi.String("F0"),
			MicrosoftAppId:    pulumi.String(current.ClientId),
		})
		if err != nil {
			return err
		}
		_, err = bot.NewChannelTeams(ctx, "example", &bot.ChannelTeamsArgs{
			BotName:           exampleChannelsRegistration.Name,
			Location:          exampleChannelsRegistration.Location,
			ResourceGroupName: example.Name,
		})
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.core.CoreFunctions;
import com.pulumi.azure.core.ResourceGroup;
import com.pulumi.azure.core.ResourceGroupArgs;
import com.pulumi.azure.bot.ChannelsRegistration;
import com.pulumi.azure.bot.ChannelsRegistrationArgs;
import com.pulumi.azure.bot.ChannelTeams;
import com.pulumi.azure.bot.ChannelTeamsArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        final var current = CoreFunctions.getClientConfig();

        var example = new ResourceGroup("example", ResourceGroupArgs.builder()
            .name("example-resources")
            .location("West Europe")
            .build());

        var exampleChannelsRegistration = new ChannelsRegistration("exampleChannelsRegistration", ChannelsRegistrationArgs.builder()
            .name("example")
            .location("global")
            .resourceGroupName(example.name())
            .sku("F0")
            .microsoftAppId(current.applyValue(getClientConfigResult -> getClientConfigResult.clientId()))
            .build());

        var exampleChannelTeams = new ChannelTeams("exampleChannelTeams", ChannelTeamsArgs.builder()
            .botName(exampleChannelsRegistration.name())
            .location(exampleChannelsRegistration.location())
            .resourceGroupName(example.name())
            .build());

    }
}
```
```yaml
resources:
  example:
    type: azure:core:ResourceGroup
    properties:
      name: example-resources
      location: West Europe
  exampleChannelsRegistration:
    type: azure:bot:ChannelsRegistration
    name: example
    properties:
      name: example
      location: global
      resourceGroupName: ${example.name}
      sku: F0
      microsoftAppId: ${current.clientId}
  exampleChannelTeams:
    type: azure:bot:ChannelTeams
    name: example
    properties:
      botName: ${exampleChannelsRegistration.name}
      location: ${exampleChannelsRegistration.location}
      resourceGroupName: ${example.name}
variables:
  current:
    fn::invoke:
      function: azure:core:getClientConfig
      arguments: {}
```
<!--End PulumiCodeChooser -->

## Import

The Microsoft Teams Integration for a Bot Channel can be imported using the `resource id`, e.g.

```sh
$ pulumi import azure:bot/channelTeams:ChannelTeams example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/example/providers/Microsoft.BotService/botServices/example/channels/MsTeamsChannel
```


botName" vThe name of the Bot Resource this channel will be associated with. Changing this forces a new resource to be created.
Q
callingWebHookB" 9Specifies the webhook for Microsoft Teams channel calls.
Ê
deploymentEnvironmentB" ªThe deployment environment for Microsoft Teams channel calls. Possible values are `CommercialDeployment` and `GCCModerateDeployment`. Defaults to `CommercialDeployment`.
l
enableCallingB
 USpecifies whether to enable Microsoft Teams channel calls. This defaults to `false`.
}
locationB" kThe supported Azure location where the resource exists. Changing this forces a new resource to be created.

resourceGroupName" vThe name of the resource group in which to create the Bot Channel. Changing this forces a new resource to be created.
"
botName" vThe name of the Bot Resource this channel will be associated with. Changing this forces a new resource to be created.
"O
callingWebHook" 9Specifies the webhook for Microsoft Teams channel calls.
"Ê
deploymentEnvironmentB" ªThe deployment environment for Microsoft Teams channel calls. Possible values are `CommercialDeployment` and `GCCModerateDeployment`. Defaults to `CommercialDeployment`.
"l
enableCallingB
 USpecifies whether to enable Microsoft Teams channel calls. This defaults to `false`.
"{
location" kThe supported Azure location where the resource exists. Changing this forces a new resource to be created.
"
resourceGroupName" vThe name of the resource group in which to create the Bot Channel. Changing this forces a new resource to be created.
*£A
>
botChannelWebChat'azure:bot/channelWebChat:ChannelWebChatÒ6Manages a Web Chat integration for a Bot Channel

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const current = azure.core.getClientConfig({});
const example = new azure.core.ResourceGroup("example", {
    name: "example-resources",
    location: "West Europe",
});
const exampleChannelsRegistration = new azure.bot.ChannelsRegistration("example", {
    name: "example-bcr",
    location: "global",
    resourceGroupName: example.name,
    sku: "F0",
    microsoftAppId: current.then(current => current.clientId),
});
const exampleChannelWebChat = new azure.bot.ChannelWebChat("example", {
    botName: exampleChannelsRegistration.name,
    location: exampleChannelsRegistration.location,
    resourceGroupName: example.name,
    sites: [{
        name: "TestSite",
    }],
});
```
```python
import pulumi
import pulumi_azure as azure

current = azure.core.get_client_config()
example = azure.core.ResourceGroup("example",
    name="example-resources",
    location="West Europe")
example_channels_registration = azure.bot.ChannelsRegistration("example",
    name="example-bcr",
    location="global",
    resource_group_name=example.name,
    sku="F0",
    microsoft_app_id=current.client_id)
example_channel_web_chat = azure.bot.ChannelWebChat("example",
    bot_name=example_channels_registration.name,
    location=example_channels_registration.location,
    resource_group_name=example.name,
    sites=[{
        "name": "TestSite",
    }])
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var current = Azure.Core.GetClientConfig.Invoke();

    var example = new Azure.Core.ResourceGroup("example", new()
    {
        Name = "example-resources",
        Location = "West Europe",
    });

    var exampleChannelsRegistration = new Azure.Bot.ChannelsRegistration("example", new()
    {
        Name = "example-bcr",
        Location = "global",
        ResourceGroupName = example.Name,
        Sku = "F0",
        MicrosoftAppId = current.Apply(getClientConfigResult => getClientConfigResult.ClientId),
    });

    var exampleChannelWebChat = new Azure.Bot.ChannelWebChat("example", new()
    {
        BotName = exampleChannelsRegistration.Name,
        Location = exampleChannelsRegistration.Location,
        ResourceGroupName = example.Name,
        Sites = new[]
        {
            new Azure.Bot.Inputs.ChannelWebChatSiteArgs
            {
                Name = "TestSite",
            },
        },
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/bot"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		current, err := core.GetClientConfig(ctx, map[string]interface{}{}, nil)
		if err != nil {
			return err
		}
		example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
			Name:     pulumi.String("example-resources"),
			Location: pulumi.String("West Europe"),
		})
		if err != nil {
			return err
		}
		exampleChannelsRegistration, err := bot.NewChannelsRegistration(ctx, "example", &bot.ChannelsRegistrationArgs{
			Name:              pulumi.String("example-bcr"),
			Location:          pulumi.String("global"),
			ResourceGroupName: example.Name,
			Sku:               pulumi.String("F0"),
			MicrosoftAppId:    pulumi.String(current.ClientId),
		})
		if err != nil {
			return err
		}
		_, err = bot.NewChannelWebChat(ctx, "example", &bot.ChannelWebChatArgs{
			BotName:           exampleChannelsRegistration.Name,
			Location:          exampleChannelsRegistration.Location,
			ResourceGroupName: example.Name,
			Sites: bot.ChannelWebChatSiteArray{
				&bot.ChannelWebChatSiteArgs{
					Name: pulumi.String("TestSite"),
				},
			},
		})
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.core.CoreFunctions;
import com.pulumi.azure.core.ResourceGroup;
import com.pulumi.azure.core.ResourceGroupArgs;
import com.pulumi.azure.bot.ChannelsRegistration;
import com.pulumi.azure.bot.ChannelsRegistrationArgs;
import com.pulumi.azure.bot.ChannelWebChat;
import com.pulumi.azure.bot.ChannelWebChatArgs;
import com.pulumi.azure.bot.inputs.ChannelWebChatSiteArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        final var current = CoreFunctions.getClientConfig();

        var example = new ResourceGroup("example", ResourceGroupArgs.builder()
            .name("example-resources")
            .location("West Europe")
            .build());

        var exampleChannelsRegistration = new ChannelsRegistration("exampleChannelsRegistration", ChannelsRegistrationArgs.builder()
            .name("example-bcr")
            .location("global")
            .resourceGroupName(example.name())
            .sku("F0")
            .microsoftAppId(current.applyValue(getClientConfigResult -> getClientConfigResult.clientId()))
            .build());

        var exampleChannelWebChat = new ChannelWebChat("exampleChannelWebChat", ChannelWebChatArgs.builder()
            .botName(exampleChannelsRegistration.name())
            .location(exampleChannelsRegistration.location())
            .resourceGroupName(example.name())
            .sites(ChannelWebChatSiteArgs.builder()
                .name("TestSite")
                .build())
            .build());

    }
}
```
```yaml
resources:
  example:
    type: azure:core:ResourceGroup
    properties:
      name: example-resources
      location: West Europe
  exampleChannelsRegistration:
    type: azure:bot:ChannelsRegistration
    name: example
    properties:
      name: example-bcr
      location: global
      resourceGroupName: ${example.name}
      sku: F0
      microsoftAppId: ${current.clientId}
  exampleChannelWebChat:
    type: azure:bot:ChannelWebChat
    name: example
    properties:
      botName: ${exampleChannelsRegistration.name}
      location: ${exampleChannelsRegistration.location}
      resourceGroupName: ${example.name}
      sites:
        - name: TestSite
variables:
  current:
    fn::invoke:
      function: azure:core:getClientConfig
      arguments: {}
```
<!--End PulumiCodeChooser -->

## Import

Web Chat Channels can be imported using the `resource id`, e.g.

```sh
$ pulumi import azure:bot/channelWebChat:ChannelWebChat example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.BotService/botServices/botService1/channels/WebChatChannel
```


botName" vThe name of the Bot Resource this channel will be associated with. Changing this forces a new resource to be created.

locationB" uSpecifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.

resourceGroupName" The name of the resource group where the Web Chat Channel should be created. Changing this forces a new resource to be created.
Ö
sitesRBP*N:L
J
botChannelWebChatSite/azure:bot/ChannelWebChatSite:ChannelWebChatSiteyA site represents a client application that you want to connect to your bot. One or more `site` blocks as defined below.
"
botName" vThe name of the Bot Resource this channel will be associated with. Changing this forces a new resource to be created.
"
location" uSpecifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
"
resourceGroupName" The name of the resource group where the Web Chat Channel should be created. Changing this forces a new resource to be created.
"Ö
sitesRBP*N:L
J
botChannelWebChatSite/azure:bot/ChannelWebChatSite:ChannelWebChatSiteyA site represents a client application that you want to connect to your bot. One or more `site` blocks as defined below.
*¶P
P
botChannelsRegistration3azure:bot/channelsRegistration:ChannelsRegistrationç'Manages a Bot Channels Registration.

> **Note:** Bot Channels Registration has been [deprecated by Azure](https://learn.microsoft.com/en-us/azure/bot-service/bot-service-resources-faq-azure?view=azure-bot-service-4.0#why-are-web-app-bot-and-bot-channel-registration-being-deprecated). New implementations should use the `azure.bot.ServiceAzureBot` resource.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const current = azure.core.getClientConfig({});
const example = new azure.core.ResourceGroup("example", {
    name: "example-resources",
    location: "West Europe",
});
const exampleChannelsRegistration = new azure.bot.ChannelsRegistration("example", {
    name: "example",
    location: "global",
    resourceGroupName: example.name,
    sku: "F0",
    microsoftAppId: current.then(current => current.clientId),
});
```
```python
import pulumi
import pulumi_azure as azure

current = azure.core.get_client_config()
example = azure.core.ResourceGroup("example",
    name="example-resources",
    location="West Europe")
example_channels_registration = azure.bot.ChannelsRegistration("example",
    name="example",
    location="global",
    resource_group_name=example.name,
    sku="F0",
    microsoft_app_id=current.client_id)
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var current = Azure.Core.GetClientConfig.Invoke();

    var example = new Azure.Core.ResourceGroup("example", new()
    {
        Name = "example-resources",
        Location = "West Europe",
    });

    var exampleChannelsRegistration = new Azure.Bot.ChannelsRegistration("example", new()
    {
        Name = "example",
        Location = "global",
        ResourceGroupName = example.Name,
        Sku = "F0",
        MicrosoftAppId = current.Apply(getClientConfigResult => getClientConfigResult.ClientId),
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/bot"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		current, err := core.GetClientConfig(ctx, map[string]interface{}{}, nil)
		if err != nil {
			return err
		}
		example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
			Name:     pulumi.String("example-resources"),
			Location: pulumi.String("West Europe"),
		})
		if err != nil {
			return err
		}
		_, err = bot.NewChannelsRegistration(ctx, "example", &bot.ChannelsRegistrationArgs{
			Name:              pulumi.String("example"),
			Location:          pulumi.String("global"),
			ResourceGroupName: example.Name,
			Sku:               pulumi.String("F0"),
			MicrosoftAppId:    pulumi.String(current.ClientId),
		})
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.core.CoreFunctions;
import com.pulumi.azure.core.ResourceGroup;
import com.pulumi.azure.core.ResourceGroupArgs;
import com.pulumi.azure.bot.ChannelsRegistration;
import com.pulumi.azure.bot.ChannelsRegistrationArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        final var current = CoreFunctions.getClientConfig();

        var example = new ResourceGroup("example", ResourceGroupArgs.builder()
            .name("example-resources")
            .location("West Europe")
            .build());

        var exampleChannelsRegistration = new ChannelsRegistration("exampleChannelsRegistration", ChannelsRegistrationArgs.builder()
            .name("example")
            .location("global")
            .resourceGroupName(example.name())
            .sku("F0")
            .microsoftAppId(current.applyValue(getClientConfigResult -> getClientConfigResult.clientId()))
            .build());

    }
}
```
```yaml
resources:
  example:
    type: azure:core:ResourceGroup
    properties:
      name: example-resources
      location: West Europe
  exampleChannelsRegistration:
    type: azure:bot:ChannelsRegistration
    name: example
    properties:
      name: example
      location: global
      resourceGroupName: ${example.name}
      sku: F0
      microsoftAppId: ${current.clientId}
variables:
  current:
    fn::invoke:
      function: azure:core:getClientConfig
      arguments: {}
```
<!--End PulumiCodeChooser -->

## Import

Bot Channels Registration can be imported using the `resource id`, e.g.

```sh
$ pulumi import azure:bot/channelsRegistration:ChannelsRegistration example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/example/providers/Microsoft.BotService/botServices/example
```

á
cmkKeyVaultUrlB" ÈThe CMK Key Vault Key URL to encrypt the Bot Channels Registration with the Customer Managed Encryption Key.

> **Note:** It has to add the Key Vault Access Policy for the `Bot Service CMEK Prod` Service Principal and the `soft_delete_enabled` and the `purge_protection_enabled` is enabled on the `azure.keyvault.KeyVault` resource while using `cmk_key_vault_url`.

> **Note:** It has to turn off the CMK feature before revoking Key Vault Access Policy. For more information, please refer to [Revoke access to customer-managed keys](https://docs.microsoft.com/azure/bot-service/bot-service-encryption?view=azure-bot-service-4.0&WT.mc_id=Portal-Microsoft_Azure_BotService#revoke-access-to-customer-managed-keys).
G
descriptionB" 2The description of the Bot Channels Registration.
v
developerAppInsightsApiKeyB" RThe Application Insights API Key to associate with the Bot Channels Registration.

!developerAppInsightsApplicationIdB" YThe Application Insights Application ID to associate with the Bot Channels Registration.
o
developerAppInsightsKeyB" NThe Application Insights Key to associate with the Bot Channels Registration.

displayNameB" jThe name of the Bot Channels Registration will be displayed as. This defaults to `name` if not specified.
:
endpointB" (The Bot Channels Registration endpoint.
¹
iconUrlB" §The icon URL to visually identify the Bot Channels Registration. Defaults to `https://docs.botframework.com/static/devportal/client/images/bot-framework-default.png`.
}
locationB" kThe supported Azure location where the resource exists. Changing this forces a new resource to be created.

microsoftAppId" sThe Microsoft Application ID for the Bot Channels Registration. Changing this forces a new resource to be created.

nameB" Specifies the name of the Bot Channels Registration. Changing this forces a new resource to be created. Must be globally unique.
]
publicNetworkAccessEnabledB
 9Is the Bot Channels Registration in an isolated network?

resourceGroupName" The name of the resource group in which to create the Bot Channels Registration. Changing this forces a new resource to be created.

sku" The SKU of the Bot Channels Registration. Valid values include `F0` or `S1`. Changing this forces a new resource to be created.
|
streamingEndpointEnabledB
 ZIs the streaming endpoint enabled for the Bot Channels Registration. Defaults to `false`.
=
tagsB2" -A mapping of tags to assign to the resource.
"á
cmkKeyVaultUrlB" ÈThe CMK Key Vault Key URL to encrypt the Bot Channels Registration with the Customer Managed Encryption Key.

> **Note:** It has to add the Key Vault Access Policy for the `Bot Service CMEK Prod` Service Principal and the `soft_delete_enabled` and the `purge_protection_enabled` is enabled on the `azure.keyvault.KeyVault` resource while using `cmk_key_vault_url`.

> **Note:** It has to turn off the CMK feature before revoking Key Vault Access Policy. For more information, please refer to [Revoke access to customer-managed keys](https://docs.microsoft.com/azure/bot-service/bot-service-encryption?view=azure-bot-service-4.0&WT.mc_id=Portal-Microsoft_Azure_BotService#revoke-access-to-customer-managed-keys).
"G
descriptionB" 2The description of the Bot Channels Registration.
"v
developerAppInsightsApiKeyB" RThe Application Insights API Key to associate with the Bot Channels Registration.
"
!developerAppInsightsApplicationIdB" YThe Application Insights Application ID to associate with the Bot Channels Registration.
"o
developerAppInsightsKeyB" NThe Application Insights Key to associate with the Bot Channels Registration.
"}
displayName" jThe name of the Bot Channels Registration will be displayed as. This defaults to `name` if not specified.
":
endpointB" (The Bot Channels Registration endpoint.
"¹
iconUrlB" §The icon URL to visually identify the Bot Channels Registration. Defaults to `https://docs.botframework.com/static/devportal/client/images/bot-framework-default.png`.
"{
location" kThe supported Azure location where the resource exists. Changing this forces a new resource to be created.
"
microsoftAppId" sThe Microsoft Application ID for the Bot Channels Registration. Changing this forces a new resource to be created.
"
name" Specifies the name of the Bot Channels Registration. Changing this forces a new resource to be created. Must be globally unique.
"]
publicNetworkAccessEnabledB
 9Is the Bot Channels Registration in an isolated network?
"
resourceGroupName" The name of the resource group in which to create the Bot Channels Registration. Changing this forces a new resource to be created.
"
sku" The SKU of the Bot Channels Registration. Valid values include `F0` or `S1`. Changing this forces a new resource to be created.
"|
streamingEndpointEnabledB
 ZIs the streaming endpoint enabled for the Bot Channels Registration. Defaults to `false`.
"=
tagsB2" -A mapping of tags to assign to the resource.
*»H
2
bot
Connectionazure:bot/connection:ConnectionÀ7Manages a Bot Connection.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const current = azure.core.getClientConfig({});
const example = new azure.core.ResourceGroup("example", {
    name: "example-resources",
    location: "West Europe",
});
const exampleChannelsRegistration = new azure.bot.ChannelsRegistration("example", {
    name: "example",
    location: "global",
    resourceGroupName: example.name,
    sku: "F0",
    microsoftAppId: current.then(current => current.clientId),
});
const exampleConnection = new azure.bot.Connection("example", {
    name: "example",
    botName: exampleChannelsRegistration.name,
    location: exampleChannelsRegistration.location,
    resourceGroupName: example.name,
    serviceProviderName: "box",
    clientId: "exampleId",
    clientSecret: "exampleSecret",
});
```
```python
import pulumi
import pulumi_azure as azure

current = azure.core.get_client_config()
example = azure.core.ResourceGroup("example",
    name="example-resources",
    location="West Europe")
example_channels_registration = azure.bot.ChannelsRegistration("example",
    name="example",
    location="global",
    resource_group_name=example.name,
    sku="F0",
    microsoft_app_id=current.client_id)
example_connection = azure.bot.Connection("example",
    name="example",
    bot_name=example_channels_registration.name,
    location=example_channels_registration.location,
    resource_group_name=example.name,
    service_provider_name="box",
    client_id="exampleId",
    client_secret="exampleSecret")
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var current = Azure.Core.GetClientConfig.Invoke();

    var example = new Azure.Core.ResourceGroup("example", new()
    {
        Name = "example-resources",
        Location = "West Europe",
    });

    var exampleChannelsRegistration = new Azure.Bot.ChannelsRegistration("example", new()
    {
        Name = "example",
        Location = "global",
        ResourceGroupName = example.Name,
        Sku = "F0",
        MicrosoftAppId = current.Apply(getClientConfigResult => getClientConfigResult.ClientId),
    });

    var exampleConnection = new Azure.Bot.Connection("example", new()
    {
        Name = "example",
        BotName = exampleChannelsRegistration.Name,
        Location = exampleChannelsRegistration.Location,
        ResourceGroupName = example.Name,
        ServiceProviderName = "box",
        ClientId = "exampleId",
        ClientSecret = "exampleSecret",
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/bot"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		current, err := core.GetClientConfig(ctx, map[string]interface{}{}, nil)
		if err != nil {
			return err
		}
		example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
			Name:     pulumi.String("example-resources"),
			Location: pulumi.String("West Europe"),
		})
		if err != nil {
			return err
		}
		exampleChannelsRegistration, err := bot.NewChannelsRegistration(ctx, "example", &bot.ChannelsRegistrationArgs{
			Name:              pulumi.String("example"),
			Location:          pulumi.String("global"),
			ResourceGroupName: example.Name,
			Sku:               pulumi.String("F0"),
			MicrosoftAppId:    pulumi.String(current.ClientId),
		})
		if err != nil {
			return err
		}
		_, err = bot.NewConnection(ctx, "example", &bot.ConnectionArgs{
			Name:                pulumi.String("example"),
			BotName:             exampleChannelsRegistration.Name,
			Location:            exampleChannelsRegistration.Location,
			ResourceGroupName:   example.Name,
			ServiceProviderName: pulumi.String("box"),
			ClientId:            pulumi.String("exampleId"),
			ClientSecret:        pulumi.String("exampleSecret"),
		})
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.core.CoreFunctions;
import com.pulumi.azure.core.ResourceGroup;
import com.pulumi.azure.core.ResourceGroupArgs;
import com.pulumi.azure.bot.ChannelsRegistration;
import com.pulumi.azure.bot.ChannelsRegistrationArgs;
import com.pulumi.azure.bot.Connection;
import com.pulumi.azure.bot.ConnectionArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        final var current = CoreFunctions.getClientConfig();

        var example = new ResourceGroup("example", ResourceGroupArgs.builder()
            .name("example-resources")
            .location("West Europe")
            .build());

        var exampleChannelsRegistration = new ChannelsRegistration("exampleChannelsRegistration", ChannelsRegistrationArgs.builder()
            .name("example")
            .location("global")
            .resourceGroupName(example.name())
            .sku("F0")
            .microsoftAppId(current.applyValue(getClientConfigResult -> getClientConfigResult.clientId()))
            .build());

        var exampleConnection = new Connection("exampleConnection", ConnectionArgs.builder()
            .name("example")
            .botName(exampleChannelsRegistration.name())
            .location(exampleChannelsRegistration.location())
            .resourceGroupName(example.name())
            .serviceProviderName("box")
            .clientId("exampleId")
            .clientSecret("exampleSecret")
            .build());

    }
}
```
```yaml
resources:
  example:
    type: azure:core:ResourceGroup
    properties:
      name: example-resources
      location: West Europe
  exampleChannelsRegistration:
    type: azure:bot:ChannelsRegistration
    name: example
    properties:
      name: example
      location: global
      resourceGroupName: ${example.name}
      sku: F0
      microsoftAppId: ${current.clientId}
  exampleConnection:
    type: azure:bot:Connection
    name: example
    properties:
      name: example
      botName: ${exampleChannelsRegistration.name}
      location: ${exampleChannelsRegistration.location}
      resourceGroupName: ${example.name}
      serviceProviderName: box
      clientId: exampleId
      clientSecret: exampleSecret
variables:
  current:
    fn::invoke:
      function: azure:core:getClientConfig
      arguments: {}
```
<!--End PulumiCodeChooser -->

## Import

Bot Connection can be imported using the `resource id`, e.g.

```sh
$ pulumi import azure:bot/connection:Connection example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/example/providers/Microsoft.BotService/botServices/example/connections/example
```


botName" yThe name of the Bot Resource this connection will be associated with. Changing this forces a new resource to be created.
[
clientId" KThe Client ID that will be used to authenticate with the service provider.
c
clientSecret" OThe Client Secret that will be used to authenticate with the service provider.
}
locationB" kThe supported Azure location where the resource exists. Changing this forces a new resource to be created.

nameB" vSpecifies the name of the Bot Connection. Changing this forces a new resource to be created. Must be globally unique.
Q

parametersB2" ;A map of additional parameters to apply to the connection.

resourceGroupName" yThe name of the resource group in which to create the Bot Connection. Changing this forces a new resource to be created.
F
scopesB" 6The Scopes at which the connection should be applied.

serviceProviderName" The name of the service provider that will be associated with this connection. Changing this forces a new resource to be created.
"
botName" yThe name of the Bot Resource this connection will be associated with. Changing this forces a new resource to be created.
"[
clientId" KThe Client ID that will be used to authenticate with the service provider.
"c
clientSecret" OThe Client Secret that will be used to authenticate with the service provider.
"{
location" kThe supported Azure location where the resource exists. Changing this forces a new resource to be created.
"
name" vSpecifies the name of the Bot Connection. Changing this forces a new resource to be created. Must be globally unique.
"Q

parametersB2" ;A map of additional parameters to apply to the connection.
"
resourceGroupName" yThe name of the resource group in which to create the Bot Connection. Changing this forces a new resource to be created.
"F
scopesB" 6The Scopes at which the connection should be applied.
"
serviceProviderName" The name of the service provider that will be associated with this connection. Changing this forces a new resource to be created.
*×'
/
bot	Healthbotazure:bot/healthbot:HealthbotºManages a Healthbot Service.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const example = new azure.core.ResourceGroup("example", {
    name: "example-healthbot",
    location: "West Europe",
});
const exampleHealthbot = new azure.bot.Healthbot("example", {
    name: "example-bot",
    resourceGroupName: example.name,
    location: example.location,
    skuName: "F0",
});
```
```python
import pulumi
import pulumi_azure as azure

example = azure.core.ResourceGroup("example",
    name="example-healthbot",
    location="West Europe")
example_healthbot = azure.bot.Healthbot("example",
    name="example-bot",
    resource_group_name=example.name,
    location=example.location,
    sku_name="F0")
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var example = new Azure.Core.ResourceGroup("example", new()
    {
        Name = "example-healthbot",
        Location = "West Europe",
    });

    var exampleHealthbot = new Azure.Bot.Healthbot("example", new()
    {
        Name = "example-bot",
        ResourceGroupName = example.Name,
        Location = example.Location,
        SkuName = "F0",
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/bot"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
			Name:     pulumi.String("example-healthbot"),
			Location: pulumi.String("West Europe"),
		})
		if err != nil {
			return err
		}
		_, err = bot.NewHealthbot(ctx, "example", &bot.HealthbotArgs{
			Name:              pulumi.String("example-bot"),
			ResourceGroupName: example.Name,
			Location:          example.Location,
			SkuName:           pulumi.String("F0"),
		})
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.core.ResourceGroup;
import com.pulumi.azure.core.ResourceGroupArgs;
import com.pulumi.azure.bot.Healthbot;
import com.pulumi.azure.bot.HealthbotArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        var example = new ResourceGroup("example", ResourceGroupArgs.builder()
            .name("example-healthbot")
            .location("West Europe")
            .build());

        var exampleHealthbot = new Healthbot("exampleHealthbot", HealthbotArgs.builder()
            .name("example-bot")
            .resourceGroupName(example.name())
            .location(example.location())
            .skuName("F0")
            .build());

    }
}
```
```yaml
resources:
  example:
    type: azure:core:ResourceGroup
    properties:
      name: example-healthbot
      location: West Europe
  exampleHealthbot:
    type: azure:bot:Healthbot
    name: example
    properties:
      name: example-bot
      resourceGroupName: ${example.name}
      location: ${example.location}
      skuName: F0
```
<!--End PulumiCodeChooser -->

## Import

Healthbot Service can be imported using the `resource id`, e.g.

```sh
$ pulumi import azure:bot/healthbot:Healthbot example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.HealthBot/healthBots/bot1
```

z
locationB" hSpecifies The Azure Region where the resource exists. Changing this force a new resource to be created.
w
nameB" iSpecifies The name of the Healthbot Service resource. Changing this forces a new resource to be created.
 
resourceGroupName" Specifies The name of the Resource Group in which to create the Healthbot Service. changing this forces a new resource to be created.
r
skuName" cThe name which should be used for the SKU of the service. Possible values are `C0`, `F0` and `S1`.
K
tagsB2" ;A mapping of tags which should be assigned to the service.
"9
botManagementPortalUrl" The management portal url.
"x
location" hSpecifies The Azure Region where the resource exists. Changing this force a new resource to be created.
"u
name" iSpecifies The name of the Healthbot Service resource. Changing this forces a new resource to be created.
" 
resourceGroupName" Specifies The name of the Resource Group in which to create the Healthbot Service. changing this forces a new resource to be created.
"r
skuName" cThe name which should be used for the SKU of the service. Possible values are `C0`, `F0` and `S1`.
"K
tagsB2" ;A mapping of tags which should be assigned to the service.
*õ}
A
botServiceAzureBot)azure:bot/serviceAzureBot:ServiceAzureBotMManages an Azure Bot Service.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const example = new azure.core.ResourceGroup("example", {
    name: "example-resources",
    location: "West Europe",
});
const exampleInsights = new azure.appinsights.Insights("example", {
    name: "example-appinsights",
    location: example.location,
    resourceGroupName: example.name,
    applicationType: "web",
});
const exampleApiKey = new azure.appinsights.ApiKey("example", {
    name: "example-appinsightsapikey",
    applicationInsightsId: exampleInsights.id,
    readPermissions: [
        "aggregate",
        "api",
        "draft",
        "extendqueries",
        "search",
    ],
});
const current = azure.core.getClientConfig({});
const exampleServiceAzureBot = new azure.bot.ServiceAzureBot("example", {
    name: "exampleazurebot",
    resourceGroupName: example.name,
    location: "global",
    microsoftAppId: current.then(current => current.clientId),
    sku: "F0",
    endpoint: "https://example.com",
    developerAppInsightsApiKey: exampleApiKey.apiKey,
    developerAppInsightsApplicationId: exampleInsights.appId,
    tags: {
        environment: "test",
    },
});
```
```python
import pulumi
import pulumi_azure as azure

example = azure.core.ResourceGroup("example",
    name="example-resources",
    location="West Europe")
example_insights = azure.appinsights.Insights("example",
    name="example-appinsights",
    location=example.location,
    resource_group_name=example.name,
    application_type="web")
example_api_key = azure.appinsights.ApiKey("example",
    name="example-appinsightsapikey",
    application_insights_id=example_insights.id,
    read_permissions=[
        "aggregate",
        "api",
        "draft",
        "extendqueries",
        "search",
    ])
current = azure.core.get_client_config()
example_service_azure_bot = azure.bot.ServiceAzureBot("example",
    name="exampleazurebot",
    resource_group_name=example.name,
    location="global",
    microsoft_app_id=current.client_id,
    sku="F0",
    endpoint="https://example.com",
    developer_app_insights_api_key=example_api_key.api_key,
    developer_app_insights_application_id=example_insights.app_id,
    tags={
        "environment": "test",
    })
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var example = new Azure.Core.ResourceGroup("example", new()
    {
        Name = "example-resources",
        Location = "West Europe",
    });

    var exampleInsights = new Azure.AppInsights.Insights("example", new()
    {
        Name = "example-appinsights",
        Location = example.Location,
        ResourceGroupName = example.Name,
        ApplicationType = "web",
    });

    var exampleApiKey = new Azure.AppInsights.ApiKey("example", new()
    {
        Name = "example-appinsightsapikey",
        ApplicationInsightsId = exampleInsights.Id,
        ReadPermissions = new[]
        {
            "aggregate",
            "api",
            "draft",
            "extendqueries",
            "search",
        },
    });

    var current = Azure.Core.GetClientConfig.Invoke();

    var exampleServiceAzureBot = new Azure.Bot.ServiceAzureBot("example", new()
    {
        Name = "exampleazurebot",
        ResourceGroupName = example.Name,
        Location = "global",
        MicrosoftAppId = current.Apply(getClientConfigResult => getClientConfigResult.ClientId),
        Sku = "F0",
        Endpoint = "https://example.com",
        DeveloperAppInsightsApiKey = exampleApiKey.ApiKey,
        DeveloperAppInsightsApplicationId = exampleInsights.AppId,
        Tags = 
        {
            { "environment", "test" },
        },
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/appinsights"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/bot"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
			Name:     pulumi.String("example-resources"),
			Location: pulumi.String("West Europe"),
		})
		if err != nil {
			return err
		}
		exampleInsights, err := appinsights.NewInsights(ctx, "example", &appinsights.InsightsArgs{
			Name:              pulumi.String("example-appinsights"),
			Location:          example.Location,
			ResourceGroupName: example.Name,
			ApplicationType:   pulumi.String("web"),
		})
		if err != nil {
			return err
		}
		exampleApiKey, err := appinsights.NewApiKey(ctx, "example", &appinsights.ApiKeyArgs{
			Name:                  pulumi.String("example-appinsightsapikey"),
			ApplicationInsightsId: exampleInsights.ID(),
			ReadPermissions: pulumi.StringArray{
				pulumi.String("aggregate"),
				pulumi.String("api"),
				pulumi.String("draft"),
				pulumi.String("extendqueries"),
				pulumi.String("search"),
			},
		})
		if err != nil {
			return err
		}
		current, err := core.GetClientConfig(ctx, map[string]interface{}{}, nil)
		if err != nil {
			return err
		}
		_, err = bot.NewServiceAzureBot(ctx, "example", &bot.ServiceAzureBotArgs{
			Name:                              pulumi.String("exampleazurebot"),
			ResourceGroupName:                 example.Name,
			Location:                          pulumi.String("global"),
			MicrosoftAppId:                    pulumi.String(current.ClientId),
			Sku:                               pulumi.String("F0"),
			Endpoint:                          pulumi.String("https://example.com"),
			DeveloperAppInsightsApiKey:        exampleApiKey.ApiKey,
			DeveloperAppInsightsApplicationId: exampleInsights.AppId,
			Tags: pulumi.StringMap{
				"environment": pulumi.String("test"),
			},
		})
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.core.ResourceGroup;
import com.pulumi.azure.core.ResourceGroupArgs;
import com.pulumi.azure.appinsights.Insights;
import com.pulumi.azure.appinsights.InsightsArgs;
import com.pulumi.azure.appinsights.ApiKey;
import com.pulumi.azure.appinsights.ApiKeyArgs;
import com.pulumi.azure.core.CoreFunctions;
import com.pulumi.azure.bot.ServiceAzureBot;
import com.pulumi.azure.bot.ServiceAzureBotArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        var example = new ResourceGroup("example", ResourceGroupArgs.builder()
            .name("example-resources")
            .location("West Europe")
            .build());

        var exampleInsights = new Insights("exampleInsights", InsightsArgs.builder()
            .name("example-appinsights")
            .location(example.location())
            .resourceGroupName(example.name())
            .applicationType("web")
            .build());

        var exampleApiKey = new ApiKey("exampleApiKey", ApiKeyArgs.builder()
            .name("example-appinsightsapikey")
            .applicationInsightsId(exampleInsights.id())
            .readPermissions(            
                "aggregate",
                "api",
                "draft",
                "extendqueries",
                "search")
            .build());

        final var current = CoreFunctions.getClientConfig();

        var exampleServiceAzureBot = new ServiceAzureBot("exampleServiceAzureBot", ServiceAzureBotArgs.builder()
            .name("exampleazurebot")
            .resourceGroupName(example.name())
            .location("global")
            .microsoftAppId(current.applyValue(getClientConfigResult -> getClientConfigResult.clientId()))
            .sku("F0")
            .endpoint("https://example.com")
            .developerAppInsightsApiKey(exampleApiKey.apiKey())
            .developerAppInsightsApplicationId(exampleInsights.appId())
            .tags(Map.of("environment", "test"))
            .build());

    }
}
```
```yaml
resources:
  example:
    type: azure:core:ResourceGroup
    properties:
      name: example-resources
      location: West Europe
  exampleInsights:
    type: azure:appinsights:Insights
    name: example
    properties:
      name: example-appinsights
      location: ${example.location}
      resourceGroupName: ${example.name}
      applicationType: web
  exampleApiKey:
    type: azure:appinsights:ApiKey
    name: example
    properties:
      name: example-appinsightsapikey
      applicationInsightsId: ${exampleInsights.id}
      readPermissions:
        - aggregate
        - api
        - draft
        - extendqueries
        - search
  exampleServiceAzureBot:
    type: azure:bot:ServiceAzureBot
    name: example
    properties:
      name: exampleazurebot
      resourceGroupName: ${example.name}
      location: global
      microsoftAppId: ${current.clientId}
      sku: F0
      endpoint: https://example.com
      developerAppInsightsApiKey: ${exampleApiKey.apiKey}
      developerAppInsightsApplicationId: ${exampleInsights.appId}
      tags:
        environment: test
variables:
  current:
    fn::invoke:
      function: azure:core:getClientConfig
      arguments: {}
```
<!--End PulumiCodeChooser -->

## Import

Azure Bot Services can be imported using the `resource id`, e.g.

```sh
$ pulumi import azure:bot/serviceAzureBot:ServiceAzureBot example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/resGroup1/providers/Microsoft.BotService/botServices/botService1
```

ð
cmkKeyVaultKeyUrlB" ÔThe CMK Key Vault Key URL that will be used to encrypt the Bot with the Customer Managed Encryption Key.

> **Note:** In order to utilize CMEK, you must add the `Key Vault Crypto Service Encryption User` role to the Azure-defined `Bot Service CMEK Prod` Service Principal. You must also enable `soft_delete_enabled` and `purge_protection_enabled` on the `azure.keyvault.KeyVault` that `cmk_key_vault_key_url` refers to. [See Azure Documentation](https://learn.microsoft.com/en-us/azure/bot-service/bot-service-encryption?view=azure-bot-service-4.0#how-to-configure-your-azure-key-vault-instance)
o
developerAppInsightsApiKeyB" KThe Application Insights API Key to associate with this Azure Bot Service.

!developerAppInsightsApplicationIdB" _The resource ID of the Application Insights instance to associate with this Azure Bot Service.
g
developerAppInsightsKeyB" FThe Application Insight Key to associate with this Azure Bot Service.

displayNameB" vThe name that the Azure Bot Service will be displayed as. This defaults to the value set for `name` if not specified.
2
endpointB"  The Azure Bot Service endpoint.

iconUrlB" The Icon Url of the Azure Bot Service. Defaults to `https://docs.botframework.com/static/devportal/client/images/bot-framework-default.png`.
Y
localAuthenticationEnabledB
 5Is local authentication enabled? Defaults to `true`.

locationB" zThe supported Azure location where the Azure Bot Service should exist. Changing this forces a new resource to be created.
W

luisAppIdsB*" AA list of LUIS App IDs to associate with this Azure Bot Service.
H
luisKeyB" 7The LUIS key to associate with this Azure Bot Service.

microsoftAppId" kThe Microsoft Application ID for the Azure Bot Service. Changing this forces a new resource to be created.

microsoftAppMsiIdB" |The ID of the Microsoft App Managed Identity for this Azure Bot Service. Changing this forces a new resource to be created.

microsoftAppTenantIdB" rThe Tenant ID of the Microsoft App for this Azure Bot Service. Changing this forces a new resource to be created.
Ê
microsoftAppTypeB" ¯The Microsoft App Type for this Azure Bot Service. Possible values are `MultiTenant`, `SingleTenant` and `UserAssignedMSI`. Changing this forces a new resource to be created.
{
nameB" mThe name which should be used for this Azure Bot Service. Changing this forces a new resource to be created.
b
publicNetworkAccessEnabledB
 >Whether public network access is enabled. Defaults to `true`.

resourceGroupName" |The name of the Resource Group where the Azure Bot Service should exist. Changing this forces a new resource to be created.

sku" wThe SKU of the Azure Bot Service. Accepted values are `F0` or `S1`. Changing this forces a new resource to be created.
u
streamingEndpointEnabledB
 SIs the streaming endpoint enabled for this Azure Bot Service. Defaults to `false`.
V
tagsB2" FA mapping of tags which should be assigned to this Azure Bot Service.
"ð
cmkKeyVaultKeyUrlB" ÔThe CMK Key Vault Key URL that will be used to encrypt the Bot with the Customer Managed Encryption Key.

> **Note:** In order to utilize CMEK, you must add the `Key Vault Crypto Service Encryption User` role to the Azure-defined `Bot Service CMEK Prod` Service Principal. You must also enable `soft_delete_enabled` and `purge_protection_enabled` on the `azure.keyvault.KeyVault` that `cmk_key_vault_key_url` refers to. [See Azure Documentation](https://learn.microsoft.com/en-us/azure/bot-service/bot-service-encryption?view=azure-bot-service-4.0#how-to-configure-your-azure-key-vault-instance)
"o
developerAppInsightsApiKeyB" KThe Application Insights API Key to associate with this Azure Bot Service.
"
!developerAppInsightsApplicationIdB" _The resource ID of the Application Insights instance to associate with this Azure Bot Service.
"g
developerAppInsightsKeyB" FThe Application Insight Key to associate with this Azure Bot Service.
"
displayName" vThe name that the Azure Bot Service will be displayed as. This defaults to the value set for `name` if not specified.
"2
endpointB"  The Azure Bot Service endpoint.
"
iconUrlB" The Icon Url of the Azure Bot Service. Defaults to `https://docs.botframework.com/static/devportal/client/images/bot-framework-default.png`.
"Y
localAuthenticationEnabledB
 5Is local authentication enabled? Defaults to `true`.
"
location" zThe supported Azure location where the Azure Bot Service should exist. Changing this forces a new resource to be created.
"W

luisAppIdsB*" AA list of LUIS App IDs to associate with this Azure Bot Service.
"H
luisKeyB" 7The LUIS key to associate with this Azure Bot Service.
"
microsoftAppId" kThe Microsoft Application ID for the Azure Bot Service. Changing this forces a new resource to be created.
"
microsoftAppMsiIdB" |The ID of the Microsoft App Managed Identity for this Azure Bot Service. Changing this forces a new resource to be created.
"
microsoftAppTenantIdB" rThe Tenant ID of the Microsoft App for this Azure Bot Service. Changing this forces a new resource to be created.
"Ê
microsoftAppTypeB" ¯The Microsoft App Type for this Azure Bot Service. Possible values are `MultiTenant`, `SingleTenant` and `UserAssignedMSI`. Changing this forces a new resource to be created.
"y
name" mThe name which should be used for this Azure Bot Service. Changing this forces a new resource to be created.
"b
publicNetworkAccessEnabledB
 >Whether public network access is enabled. Defaults to `true`.
"
resourceGroupName" |The name of the Resource Group where the Azure Bot Service should exist. Changing this forces a new resource to be created.
"
sku" wThe SKU of the Azure Bot Service. Accepted values are `F0` or `S1`. Changing this forces a new resource to be created.
"u
streamingEndpointEnabledB
 SIs the streaming endpoint enabled for this Azure Bot Service. Defaults to `false`.
"V
tagsB2" FA mapping of tags which should be assigned to this Azure Bot Service.
*É8
&
botWebAppazure:bot/webApp:WebApp#Manages a Bot Web App.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const current = azure.core.getClientConfig({});
const example = new azure.core.ResourceGroup("example", {
    name: "example-resources",
    location: "West Europe",
});
const exampleWebApp = new azure.bot.WebApp("example", {
    name: "example",
    location: "global",
    resourceGroupName: example.name,
    sku: "F0",
    microsoftAppId: current.then(current => current.clientId),
});
```
```python
import pulumi
import pulumi_azure as azure

current = azure.core.get_client_config()
example = azure.core.ResourceGroup("example",
    name="example-resources",
    location="West Europe")
example_web_app = azure.bot.WebApp("example",
    name="example",
    location="global",
    resource_group_name=example.name,
    sku="F0",
    microsoft_app_id=current.client_id)
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var current = Azure.Core.GetClientConfig.Invoke();

    var example = new Azure.Core.ResourceGroup("example", new()
    {
        Name = "example-resources",
        Location = "West Europe",
    });

    var exampleWebApp = new Azure.Bot.WebApp("example", new()
    {
        Name = "example",
        Location = "global",
        ResourceGroupName = example.Name,
        Sku = "F0",
        MicrosoftAppId = current.Apply(getClientConfigResult => getClientConfigResult.ClientId),
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/bot"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		current, err := core.GetClientConfig(ctx, map[string]interface{}{}, nil)
		if err != nil {
			return err
		}
		example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
			Name:     pulumi.String("example-resources"),
			Location: pulumi.String("West Europe"),
		})
		if err != nil {
			return err
		}
		_, err = bot.NewWebApp(ctx, "example", &bot.WebAppArgs{
			Name:              pulumi.String("example"),
			Location:          pulumi.String("global"),
			ResourceGroupName: example.Name,
			Sku:               pulumi.String("F0"),
			MicrosoftAppId:    pulumi.String(current.ClientId),
		})
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.core.CoreFunctions;
import com.pulumi.azure.core.ResourceGroup;
import com.pulumi.azure.core.ResourceGroupArgs;
import com.pulumi.azure.bot.WebApp;
import com.pulumi.azure.bot.WebAppArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        final var current = CoreFunctions.getClientConfig();

        var example = new ResourceGroup("example", ResourceGroupArgs.builder()
            .name("example-resources")
            .location("West Europe")
            .build());

        var exampleWebApp = new WebApp("exampleWebApp", WebAppArgs.builder()
            .name("example")
            .location("global")
            .resourceGroupName(example.name())
            .sku("F0")
            .microsoftAppId(current.applyValue(getClientConfigResult -> getClientConfigResult.clientId()))
            .build());

    }
}
```
```yaml
resources:
  example:
    type: azure:core:ResourceGroup
    properties:
      name: example-resources
      location: West Europe
  exampleWebApp:
    type: azure:bot:WebApp
    name: example
    properties:
      name: example
      location: global
      resourceGroupName: ${example.name}
      sku: F0
      microsoftAppId: ${current.clientId}
variables:
  current:
    fn::invoke:
      function: azure:core:getClientConfig
      arguments: {}
```
<!--End PulumiCodeChooser -->

## Import

Bot Web App's can be imported using the `resource id`, e.g.

```sh
$ pulumi import azure:bot/webApp:WebApp example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/example/providers/Microsoft.BotService/botServices/example
```

h
developerAppInsightsApiKeyB" DThe Application Insights API Key to associate with the Web App Bot.
v
!developerAppInsightsApplicationIdB" KThe Application Insights Application ID to associate with the Web App Bot.
a
developerAppInsightsKeyB" @The Application Insights Key to associate with the Web App Bot.
q
displayNameB" \The name of the Web App Bot will be displayed as. This defaults to `name` if not specified.
,
endpointB" The Web App Bot endpoint.
}
locationB" kThe supported Azure location where the resource exists. Changing this forces a new resource to be created.
P

luisAppIdsB*" :A list of LUIS App IDs to associate with the Web App Bot.
A
luisKeyB" 0The LUIS key to associate with the Web App Bot.
{
microsoftAppId" eThe Microsoft Application ID for the Web App Bot. Changing this forces a new resource to be created.

nameB" sSpecifies the name of the Web App Bot. Changing this forces a new resource to be created. Must be globally unique.

resourceGroupName" vThe name of the resource group in which to create the Web App Bot. Changing this forces a new resource to be created.
}
sku" rThe SKU of the Web App Bot. Valid values include `F0` or `S1`. Changing this forces a new resource to be created.
=
tagsB2" -A mapping of tags to assign to the resource.
"h
developerAppInsightsApiKeyB" DThe Application Insights API Key to associate with the Web App Bot.
"v
!developerAppInsightsApplicationIdB" KThe Application Insights Application ID to associate with the Web App Bot.
"a
developerAppInsightsKeyB" @The Application Insights Key to associate with the Web App Bot.
"o
displayName" \The name of the Web App Bot will be displayed as. This defaults to `name` if not specified.
",
endpointB" The Web App Bot endpoint.
"{
location" kThe supported Azure location where the resource exists. Changing this forces a new resource to be created.
"P

luisAppIdsB*" :A list of LUIS App IDs to associate with the Web App Bot.
"A
luisKeyB" 0The LUIS key to associate with the Web App Bot.
"{
microsoftAppId" eThe Microsoft Application ID for the Web App Bot. Changing this forces a new resource to be created.
"
name" sSpecifies the name of the Web App Bot. Changing this forces a new resource to be created. Must be globally unique.
"
resourceGroupName" vThe name of the resource group in which to create the Web App Bot. Changing this forces a new resource to be created.
"}
sku" rThe SKU of the Web App Bot. Valid values include `F0` or `S1`. Changing this forces a new resource to be created.
"=
tagsB2" -A mapping of tags to assign to the resource.
*Ñd
,
cdnEndpointazure:cdn/endpoint:Endpoint4A CDN Endpoint is the entity within a CDN Profile containing configuration information regarding caching behaviours and origins. The CDN Endpoint is exposed using the URL format `<endpointname>.azureedge.net`.

!> **Be Aware:** Azure is rolling out a breaking change on Friday 9th April 2021 which may cause issues with the CDN/FrontDoor resources. More information is available in this GitHub issue - however unfortunately this may necessitate a breaking change to the CDN and FrontDoor resources, more information will be posted in the GitHub issue as the necessary changes are identified.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const example = new azure.core.ResourceGroup("example", {
    name: "example-resources",
    location: "West Europe",
});
const exampleProfile = new azure.cdn.Profile("example", {
    name: "example-cdn",
    location: example.location,
    resourceGroupName: example.name,
    sku: "Standard_Verizon",
});
const exampleEndpoint = new azure.cdn.Endpoint("example", {
    name: "example",
    profileName: exampleProfile.name,
    location: example.location,
    resourceGroupName: example.name,
    origins: [{
        name: "example",
        hostName: "www.contoso.com",
    }],
});
```
```python
import pulumi
import pulumi_azure as azure

example = azure.core.ResourceGroup("example",
    name="example-resources",
    location="West Europe")
example_profile = azure.cdn.Profile("example",
    name="example-cdn",
    location=example.location,
    resource_group_name=example.name,
    sku="Standard_Verizon")
example_endpoint = azure.cdn.Endpoint("example",
    name="example",
    profile_name=example_profile.name,
    location=example.location,
    resource_group_name=example.name,
    origins=[{
        "name": "example",
        "host_name": "www.contoso.com",
    }])
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var example = new Azure.Core.ResourceGroup("example", new()
    {
        Name = "example-resources",
        Location = "West Europe",
    });

    var exampleProfile = new Azure.Cdn.Profile("example", new()
    {
        Name = "example-cdn",
        Location = example.Location,
        ResourceGroupName = example.Name,
        Sku = "Standard_Verizon",
    });

    var exampleEndpoint = new Azure.Cdn.Endpoint("example", new()
    {
        Name = "example",
        ProfileName = exampleProfile.Name,
        Location = example.Location,
        ResourceGroupName = example.Name,
        Origins = new[]
        {
            new Azure.Cdn.Inputs.EndpointOriginArgs
            {
                Name = "example",
                HostName = "www.contoso.com",
            },
        },
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/cdn"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
			Name:     pulumi.String("example-resources"),
			Location: pulumi.String("West Europe"),
		})
		if err != nil {
			return err
		}
		exampleProfile, err := cdn.NewProfile(ctx, "example", &cdn.ProfileArgs{
			Name:              pulumi.String("example-cdn"),
			Location:          example.Location,
			ResourceGroupName: example.Name,
			Sku:               pulumi.String("Standard_Verizon"),
		})
		if err != nil {
			return err
		}
		_, err = cdn.NewEndpoint(ctx, "example", &cdn.EndpointArgs{
			Name:              pulumi.String("example"),
			ProfileName:       exampleProfile.Name,
			Location:          example.Location,
			ResourceGroupName: example.Name,
			Origins: cdn.EndpointOriginArray{
				&cdn.EndpointOriginArgs{
					Name:     pulumi.String("example"),
					HostName: pulumi.String("www.contoso.com"),
				},
			},
		})
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.core.ResourceGroup;
import com.pulumi.azure.core.ResourceGroupArgs;
import com.pulumi.azure.cdn.Profile;
import com.pulumi.azure.cdn.ProfileArgs;
import com.pulumi.azure.cdn.Endpoint;
import com.pulumi.azure.cdn.EndpointArgs;
import com.pulumi.azure.cdn.inputs.EndpointOriginArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        var example = new ResourceGroup("example", ResourceGroupArgs.builder()
            .name("example-resources")
            .location("West Europe")
            .build());

        var exampleProfile = new Profile("exampleProfile", ProfileArgs.builder()
            .name("example-cdn")
            .location(example.location())
            .resourceGroupName(example.name())
            .sku("Standard_Verizon")
            .build());

        var exampleEndpoint = new Endpoint("exampleEndpoint", EndpointArgs.builder()
            .name("example")
            .profileName(exampleProfile.name())
            .location(example.location())
            .resourceGroupName(example.name())
            .origins(EndpointOriginArgs.builder()
                .name("example")
                .hostName("www.contoso.com")
                .build())
            .build());

    }
}
```
```yaml
resources:
  example:
    type: azure:core:ResourceGroup
    properties:
      name: example-resources
      location: West Europe
  exampleProfile:
    type: azure:cdn:Profile
    name: example
    properties:
      name: example-cdn
      location: ${example.location}
      resourceGroupName: ${example.name}
      sku: Standard_Verizon
  exampleEndpoint:
    type: azure:cdn:Endpoint
    name: example
    properties:
      name: example
      profileName: ${exampleProfile.name}
      location: ${example.location}
      resourceGroupName: ${example.name}
      origins:
        - name: example
          hostName: www.contoso.com
```
<!--End PulumiCodeChooser -->

## Import

CDN Endpoints can be imported using the `resource id`, e.g.

```sh
$ pulumi import azure:cdn/endpoint:Endpoint example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Cdn/profiles/myprofile1/endpoints/myendpoint1
```

¯
contentTypesToCompressesB*" An array of strings that indicates a content types on which compression will be applied. The value for the elements should be MIME types.

deliveryRulesXBV*T:R
P
cdnEndpointDeliveryRule3azure:cdn/EndpointDeliveryRule:EndpointDeliveryRule¡Rules for the rules engine. An endpoint can contain up until 4 of those rules that consist of conditions and actions. A `delivery_rule` blocks as defined below.
Å

geoFiltersOBM*K:I
G
cdnEndpointGeoFilter-azure:cdn/EndpointGeoFilter:EndpointGeoFilterfA set of Geo Filters for this CDN Endpoint. Each `geo_filter` block supports fields documented below.
ø
globalDeliveryRulehBf:d
b
cdnEndpointGlobalDeliveryRule?azure:cdn/EndpointGlobalDeliveryRule:EndpointGlobalDeliveryRulexActions that are valid for all resources regardless of any conditions. A `global_delivery_rule` block as defined below.
N
isCompressionEnabledB
 0Indicates whether compression is to be enabled.
F
isHttpAllowedB
 /Specifies if http allowed. Defaults to `true`.
H
isHttpsAllowedB
 0Specifies if https allowed. Defaults to `true`.

locationB" uSpecifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
i
nameB" [Specifies the name of the CDN Endpoint. Changing this forces a new resource to be created.
ö
optimizationTypeB" ÛWhat types of optimization should this CDN Endpoint optimize for? Possible values include `DynamicSiteAcceleration`, `GeneralMediaStreaming`, `GeneralWebDelivery`, `LargeFileDownload` and `VideoOnDemandMediaStreaming`.
i
originHostHeaderB" OThe host header CDN provider will send along with content requests to origins.
:

originPathB" &The path used at for origin requests.
Ô
originsD*B:@
>
cdnEndpointOrigin'azure:cdn/EndpointOrigin:EndpointOriginThe set of origins of the CDN endpoint. When multiple origins exist, the first origin will be used as primary and rest will be used as failover options. Each `origin` block supports fields documented below. Changing this forces a new resource to be created.
É
	probePathB" µthe path to a file hosted on the origin which helps accelerate delivery of the dynamic content and calculate the most optimal routes for the CDN. This is relative to the `origin_path`.

> **NOTE:** `global_delivery_rule` and `delivery_rule` are currently only available for `Microsoft_Standard` CDN profiles.
{
profileName" hThe CDN Profile to which to attach the CDN Endpoint. Changing this forces a new resource to be created.
÷
querystringCachingBehaviourB" ÑSets query string caching behavior. Allowed values are `IgnoreQueryString`, `BypassCaching` and `UseQueryString`. `NotSet` value can be used for `Premium Verizon` CDN profile. Defaults to `IgnoreQueryString`.

resourceGroupName" wThe name of the resource group in which to create the CDN Endpoint. Changing this forces a new resource to be created.
=
tagsB2" -A mapping of tags to assign to the resource.
"¯
contentTypesToCompressesB*" An array of strings that indicates a content types on which compression will be applied. The value for the elements should be MIME types.
"
deliveryRulesXBV*T:R
P
cdnEndpointDeliveryRule3azure:cdn/EndpointDeliveryRule:EndpointDeliveryRule¡Rules for the rules engine. An endpoint can contain up until 4 of those rules that consist of conditions and actions. A `delivery_rule` blocks as defined below.
"A
fqdn" 5The Fully Qualified Domain Name of the CDN Endpoint.
"Å

geoFiltersOBM*K:I
G
cdnEndpointGeoFilter-azure:cdn/EndpointGeoFilter:EndpointGeoFilterfA set of Geo Filters for this CDN Endpoint. Each `geo_filter` block supports fields documented below.
"ø
globalDeliveryRulehBf:d
b
cdnEndpointGlobalDeliveryRule?azure:cdn/EndpointGlobalDeliveryRule:EndpointGlobalDeliveryRulexActions that are valid for all resources regardless of any conditions. A `global_delivery_rule` block as defined below.
"N
isCompressionEnabledB
 0Indicates whether compression is to be enabled.
"F
isHttpAllowedB
 /Specifies if http allowed. Defaults to `true`.
"H
isHttpsAllowedB
 0Specifies if https allowed. Defaults to `true`.
"
location" uSpecifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
"g
name" [Specifies the name of the CDN Endpoint. Changing this forces a new resource to be created.
"ö
optimizationTypeB" ÛWhat types of optimization should this CDN Endpoint optimize for? Possible values include `DynamicSiteAcceleration`, `GeneralMediaStreaming`, `GeneralWebDelivery`, `LargeFileDownload` and `VideoOnDemandMediaStreaming`.
"i
originHostHeaderB" OThe host header CDN provider will send along with content requests to origins.
":

originPathB" &The path used at for origin requests.
"Ô
originsD*B:@
>
cdnEndpointOrigin'azure:cdn/EndpointOrigin:EndpointOriginThe set of origins of the CDN endpoint. When multiple origins exist, the first origin will be used as primary and rest will be used as failover options. Each `origin` block supports fields documented below. Changing this forces a new resource to be created.
"É
	probePathB" µthe path to a file hosted on the origin which helps accelerate delivery of the dynamic content and calculate the most optimal routes for the CDN. This is relative to the `origin_path`.

> **NOTE:** `global_delivery_rule` and `delivery_rule` are currently only available for `Microsoft_Standard` CDN profiles.
"{
profileName" hThe CDN Profile to which to attach the CDN Endpoint. Changing this forces a new resource to be created.
"÷
querystringCachingBehaviourB" ÑSets query string caching behavior. Allowed values are `IgnoreQueryString`, `BypassCaching` and `UseQueryString`. `NotSet` value can be used for `Premium Verizon` CDN profile. Defaults to `IgnoreQueryString`.
"
resourceGroupName" wThe name of the resource group in which to create the CDN Endpoint. Changing this forces a new resource to be created.
"=
tagsB2" -A mapping of tags to assign to the resource.
*Ýy
P
cdnEndpointCustomDomain3azure:cdn/endpointCustomDomain:EndpointCustomDomainkManages a Custom Domain for a CDN Endpoint.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const exampleResourceGroup = new azure.core.ResourceGroup("example", {
    name: "example-rg",
    location: "west europe",
});
const exampleAccount = new azure.storage.Account("example", {
    name: "example",
    resourceGroupName: exampleResourceGroup.name,
    location: exampleResourceGroup.location,
    accountTier: "Standard",
    accountReplicationType: "GRS",
});
const exampleProfile = new azure.cdn.Profile("example", {
    name: "example-profile",
    location: exampleResourceGroup.location,
    resourceGroupName: exampleResourceGroup.name,
    sku: "Standard_Verizon",
});
const exampleEndpoint = new azure.cdn.Endpoint("example", {
    name: "example-endpoint",
    profileName: exampleProfile.name,
    location: exampleResourceGroup.location,
    resourceGroupName: exampleResourceGroup.name,
    origins: [{
        name: "example",
        hostName: exampleAccount.primaryBlobHost,
    }],
});
const example = azure.dns.getZone({
    name: "example-domain.com",
    resourceGroupName: "domain-rg",
});
const exampleCNameRecord = new azure.dns.CNameRecord("example", {
    name: "example",
    zoneName: example.then(example => example.name),
    resourceGroupName: example.then(example => example.resourceGroupName),
    ttl: 3600,
    targetResourceId: exampleEndpoint.id,
});
const exampleEndpointCustomDomain = new azure.cdn.EndpointCustomDomain("example", {
    name: "example-domain",
    cdnEndpointId: exampleEndpoint.id,
    hostName: pulumi.all([exampleCNameRecord.name, example]).apply(([name, example]) => `${name}.${example.name}`),
});
```
```python
import pulumi
import pulumi_azure as azure

example_resource_group = azure.core.ResourceGroup("example",
    name="example-rg",
    location="west europe")
example_account = azure.storage.Account("example",
    name="example",
    resource_group_name=example_resource_group.name,
    location=example_resource_group.location,
    account_tier="Standard",
    account_replication_type="GRS")
example_profile = azure.cdn.Profile("example",
    name="example-profile",
    location=example_resource_group.location,
    resource_group_name=example_resource_group.name,
    sku="Standard_Verizon")
example_endpoint = azure.cdn.Endpoint("example",
    name="example-endpoint",
    profile_name=example_profile.name,
    location=example_resource_group.location,
    resource_group_name=example_resource_group.name,
    origins=[{
        "name": "example",
        "host_name": example_account.primary_blob_host,
    }])
example = azure.dns.get_zone(name="example-domain.com",
    resource_group_name="domain-rg")
example_c_name_record = azure.dns.CNameRecord("example",
    name="example",
    zone_name=example.name,
    resource_group_name=example.resource_group_name,
    ttl=3600,
    target_resource_id=example_endpoint.id)
example_endpoint_custom_domain = azure.cdn.EndpointCustomDomain("example",
    name="example-domain",
    cdn_endpoint_id=example_endpoint.id,
    host_name=example_c_name_record.name.apply(lambda name: f"{name}.{example.name}"))
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var exampleResourceGroup = new Azure.Core.ResourceGroup("example", new()
    {
        Name = "example-rg",
        Location = "west europe",
    });

    var exampleAccount = new Azure.Storage.Account("example", new()
    {
        Name = "example",
        ResourceGroupName = exampleResourceGroup.Name,
        Location = exampleResourceGroup.Location,
        AccountTier = "Standard",
        AccountReplicationType = "GRS",
    });

    var exampleProfile = new Azure.Cdn.Profile("example", new()
    {
        Name = "example-profile",
        Location = exampleResourceGroup.Location,
        ResourceGroupName = exampleResourceGroup.Name,
        Sku = "Standard_Verizon",
    });

    var exampleEndpoint = new Azure.Cdn.Endpoint("example", new()
    {
        Name = "example-endpoint",
        ProfileName = exampleProfile.Name,
        Location = exampleResourceGroup.Location,
        ResourceGroupName = exampleResourceGroup.Name,
        Origins = new[]
        {
            new Azure.Cdn.Inputs.EndpointOriginArgs
            {
                Name = "example",
                HostName = exampleAccount.PrimaryBlobHost,
            },
        },
    });

    var example = Azure.Dns.GetZone.Invoke(new()
    {
        Name = "example-domain.com",
        ResourceGroupName = "domain-rg",
    });

    var exampleCNameRecord = new Azure.Dns.CNameRecord("example", new()
    {
        Name = "example",
        ZoneName = example.Apply(getZoneResult => getZoneResult.Name),
        ResourceGroupName = example.Apply(getZoneResult => getZoneResult.ResourceGroupName),
        Ttl = 3600,
        TargetResourceId = exampleEndpoint.Id,
    });

    var exampleEndpointCustomDomain = new Azure.Cdn.EndpointCustomDomain("example", new()
    {
        Name = "example-domain",
        CdnEndpointId = exampleEndpoint.Id,
        HostName = Output.Tuple(exampleCNameRecord.Name, example).Apply(values =>
        {
            var name = values.Item1;
            var example = values.Item2;
            return $"{name}.{example.Apply(getZoneResult => getZoneResult.Name)}";
        }),
    });

});
```
```go
package main

import (
	"fmt"

	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/cdn"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/dns"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/storage"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		exampleResourceGroup, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
			Name:     pulumi.String("example-rg"),
			Location: pulumi.String("west europe"),
		})
		if err != nil {
			return err
		}
		exampleAccount, err := storage.NewAccount(ctx, "example", &storage.AccountArgs{
			Name:                   pulumi.String("example"),
			ResourceGroupName:      exampleResourceGroup.Name,
			Location:               exampleResourceGroup.Location,
			AccountTier:            pulumi.String("Standard"),
			AccountReplicationType: pulumi.String("GRS"),
		})
		if err != nil {
			return err
		}
		exampleProfile, err := cdn.NewProfile(ctx, "example", &cdn.ProfileArgs{
			Name:              pulumi.String("example-profile"),
			Location:          exampleResourceGroup.Location,
			ResourceGroupName: exampleResourceGroup.Name,
			Sku:               pulumi.String("Standard_Verizon"),
		})
		if err != nil {
			return err
		}
		exampleEndpoint, err := cdn.NewEndpoint(ctx, "example", &cdn.EndpointArgs{
			Name:              pulumi.String("example-endpoint"),
			ProfileName:       exampleProfile.Name,
			Location:          exampleResourceGroup.Location,
			ResourceGroupName: exampleResourceGroup.Name,
			Origins: cdn.EndpointOriginArray{
				&cdn.EndpointOriginArgs{
					Name:     pulumi.String("example"),
					HostName: exampleAccount.PrimaryBlobHost,
				},
			},
		})
		if err != nil {
			return err
		}
		example, err := dns.LookupZone(ctx, &dns.LookupZoneArgs{
			Name:              "example-domain.com",
			ResourceGroupName: pulumi.StringRef("domain-rg"),
		}, nil)
		if err != nil {
			return err
		}
		exampleCNameRecord, err := dns.NewCNameRecord(ctx, "example", &dns.CNameRecordArgs{
			Name:              pulumi.String("example"),
			ZoneName:          pulumi.String(example.Name),
			ResourceGroupName: pulumi.String(example.ResourceGroupName),
			Ttl:               pulumi.Int(3600),
			TargetResourceId:  exampleEndpoint.ID(),
		})
		if err != nil {
			return err
		}
		_, err = cdn.NewEndpointCustomDomain(ctx, "example", &cdn.EndpointCustomDomainArgs{
			Name:          pulumi.String("example-domain"),
			CdnEndpointId: exampleEndpoint.ID(),
			HostName: exampleCNameRecord.Name.ApplyT(func(name string) (string, error) {
				return fmt.Sprintf("%v.%v", name, example.Name), nil
			}).(pulumi.StringOutput),
		})
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.core.ResourceGroup;
import com.pulumi.azure.core.ResourceGroupArgs;
import com.pulumi.azure.storage.Account;
import com.pulumi.azure.storage.AccountArgs;
import com.pulumi.azure.cdn.Profile;
import com.pulumi.azure.cdn.ProfileArgs;
import com.pulumi.azure.cdn.Endpoint;
import com.pulumi.azure.cdn.EndpointArgs;
import com.pulumi.azure.cdn.inputs.EndpointOriginArgs;
import com.pulumi.azure.dns.DnsFunctions;
import com.pulumi.azure.dns.inputs.GetZoneArgs;
import com.pulumi.azure.dns.CNameRecord;
import com.pulumi.azure.dns.CNameRecordArgs;
import com.pulumi.azure.cdn.EndpointCustomDomain;
import com.pulumi.azure.cdn.EndpointCustomDomainArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        var exampleResourceGroup = new ResourceGroup("exampleResourceGroup", ResourceGroupArgs.builder()
            .name("example-rg")
            .location("west europe")
            .build());

        var exampleAccount = new Account("exampleAccount", AccountArgs.builder()
            .name("example")
            .resourceGroupName(exampleResourceGroup.name())
            .location(exampleResourceGroup.location())
            .accountTier("Standard")
            .accountReplicationType("GRS")
            .build());

        var exampleProfile = new Profile("exampleProfile", ProfileArgs.builder()
            .name("example-profile")
            .location(exampleResourceGroup.location())
            .resourceGroupName(exampleResourceGroup.name())
            .sku("Standard_Verizon")
            .build());

        var exampleEndpoint = new Endpoint("exampleEndpoint", EndpointArgs.builder()
            .name("example-endpoint")
            .profileName(exampleProfile.name())
            .location(exampleResourceGroup.location())
            .resourceGroupName(exampleResourceGroup.name())
            .origins(EndpointOriginArgs.builder()
                .name("example")
                .hostName(exampleAccount.primaryBlobHost())
                .build())
            .build());

        final var example = DnsFunctions.getZone(GetZoneArgs.builder()
            .name("example-domain.com")
            .resourceGroupName("domain-rg")
            .build());

        var exampleCNameRecord = new CNameRecord("exampleCNameRecord", CNameRecordArgs.builder()
            .name("example")
            .zoneName(example.applyValue(getZoneResult -> getZoneResult.name()))
            .resourceGroupName(example.applyValue(getZoneResult -> getZoneResult.resourceGroupName()))
            .ttl(3600)
            .targetResourceId(exampleEndpoint.id())
            .build());

        var exampleEndpointCustomDomain = new EndpointCustomDomain("exampleEndpointCustomDomain", EndpointCustomDomainArgs.builder()
            .name("example-domain")
            .cdnEndpointId(exampleEndpoint.id())
            .hostName(exampleCNameRecord.name().applyValue(name -> String.format("%s.%s", name,example.applyValue(getZoneResult -> getZoneResult.name()))))
            .build());

    }
}
```
```yaml
resources:
  exampleResourceGroup:
    type: azure:core:ResourceGroup
    name: example
    properties:
      name: example-rg
      location: west europe
  exampleAccount:
    type: azure:storage:Account
    name: example
    properties:
      name: example
      resourceGroupName: ${exampleResourceGroup.name}
      location: ${exampleResourceGroup.location}
      accountTier: Standard
      accountReplicationType: GRS
  exampleProfile:
    type: azure:cdn:Profile
    name: example
    properties:
      name: example-profile
      location: ${exampleResourceGroup.location}
      resourceGroupName: ${exampleResourceGroup.name}
      sku: Standard_Verizon
  exampleEndpoint:
    type: azure:cdn:Endpoint
    name: example
    properties:
      name: example-endpoint
      profileName: ${exampleProfile.name}
      location: ${exampleResourceGroup.location}
      resourceGroupName: ${exampleResourceGroup.name}
      origins:
        - name: example
          hostName: ${exampleAccount.primaryBlobHost}
  exampleCNameRecord:
    type: azure:dns:CNameRecord
    name: example
    properties:
      name: example
      zoneName: ${example.name}
      resourceGroupName: ${example.resourceGroupName}
      ttl: 3600
      targetResourceId: ${exampleEndpoint.id}
  exampleEndpointCustomDomain:
    type: azure:cdn:EndpointCustomDomain
    name: example
    properties:
      name: example-domain
      cdnEndpointId: ${exampleEndpoint.id}
      hostName: ${exampleCNameRecord.name}.${example.name}
variables:
  example:
    fn::invoke:
      function: azure:dns:getZone
      arguments:
        name: example-domain.com
        resourceGroupName: domain-rg
```
<!--End PulumiCodeChooser -->

## Import

CDN Endpoint Custom Domains can be imported using the `resource id`, e.g.

```sh
$ pulumi import azure:cdn/endpointCustomDomain:EndpointCustomDomain example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Cdn/profiles/profile1/endpoints/endpoint1/customDomains/domain1
```

v
cdnEndpointId" aThe ID of the CDN Endpoint. Changing this forces a new CDN Endpoint Custom Domain to be created.
È
cdnManagedHttpsB:
}
cdn#EndpointCustomDomainCdnManagedHttpsQazure:cdn/EndpointCustomDomainCdnManagedHttps:EndpointCustomDomainCdnManagedHttps.A `cdn_managed_https` block as defined below.
y
hostName" iThe host name of the custom domain. Changing this forces a new CDN Endpoint Custom Domain to be created.

nameB" The name which should be used for this CDN Endpoint Custom Domain. Changing this forces a new CDN Endpoint Custom Domain to be created.
§
userManagedHttpsB:

cdn$EndpointCustomDomainUserManagedHttpsSazure:cdn/EndpointCustomDomainUserManagedHttps:EndpointCustomDomainUserManagedHttpsA `user_managed_https` block as defined below.

> **NOTE** Only one of `cdn_managed_https` and `user_managed_https` can be specified.
"v
cdnEndpointId" aThe ID of the CDN Endpoint. Changing this forces a new CDN Endpoint Custom Domain to be created.
"È
cdnManagedHttpsB:
}
cdn#EndpointCustomDomainCdnManagedHttpsQazure:cdn/EndpointCustomDomainCdnManagedHttps:EndpointCustomDomainCdnManagedHttps.A `cdn_managed_https` block as defined below.
"y
hostName" iThe host name of the custom domain. Changing this forces a new CDN Endpoint Custom Domain to be created.
"
name" The name which should be used for this CDN Endpoint Custom Domain. Changing this forces a new CDN Endpoint Custom Domain to be created.
"§
userManagedHttpsB:

cdn$EndpointCustomDomainUserManagedHttpsSazure:cdn/EndpointCustomDomainUserManagedHttps:EndpointCustomDomainUserManagedHttpsA `user_managed_https` block as defined below.

> **NOTE** Only one of `cdn_managed_https` and `user_managed_https` can be specified.
*í£
S
cdnFrontdoorCustomDomain5azure:cdn/frontdoorCustomDomain:FrontdoorCustomDomain## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const example = new azure.core.ResourceGroup("example", {
    name: "example-cdn-frontdoor",
    location: "West Europe",
});
const exampleZone = new azure.dns.Zone("example", {
    name: "sub-domain.domain.com",
    resourceGroupName: example.name,
});
const exampleFrontdoorProfile = new azure.cdn.FrontdoorProfile("example", {
    name: "example-profile",
    resourceGroupName: example.name,
    skuName: "Standard_AzureFrontDoor",
});
const exampleFrontdoorCustomDomain = new azure.cdn.FrontdoorCustomDomain("example", {
    name: "example-customDomain",
    cdnFrontdoorProfileId: exampleFrontdoorProfile.id,
    dnsZoneId: exampleZone.id,
    hostName: "contoso.fabrikam.com",
    tls: {
        certificateType: "ManagedCertificate",
        minimumTlsVersion: "TLS12",
    },
});
```
```python
import pulumi
import pulumi_azure as azure

example = azure.core.ResourceGroup("example",
    name="example-cdn-frontdoor",
    location="West Europe")
example_zone = azure.dns.Zone("example",
    name="sub-domain.domain.com",
    resource_group_name=example.name)
example_frontdoor_profile = azure.cdn.FrontdoorProfile("example",
    name="example-profile",
    resource_group_name=example.name,
    sku_name="Standard_AzureFrontDoor")
example_frontdoor_custom_domain = azure.cdn.FrontdoorCustomDomain("example",
    name="example-customDomain",
    cdn_frontdoor_profile_id=example_frontdoor_profile.id,
    dns_zone_id=example_zone.id,
    host_name="contoso.fabrikam.com",
    tls={
        "certificate_type": "ManagedCertificate",
        "minimum_tls_version": "TLS12",
    })
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var example = new Azure.Core.ResourceGroup("example", new()
    {
        Name = "example-cdn-frontdoor",
        Location = "West Europe",
    });

    var exampleZone = new Azure.Dns.Zone("example", new()
    {
        Name = "sub-domain.domain.com",
        ResourceGroupName = example.Name,
    });

    var exampleFrontdoorProfile = new Azure.Cdn.FrontdoorProfile("example", new()
    {
        Name = "example-profile",
        ResourceGroupName = example.Name,
        SkuName = "Standard_AzureFrontDoor",
    });

    var exampleFrontdoorCustomDomain = new Azure.Cdn.FrontdoorCustomDomain("example", new()
    {
        Name = "example-customDomain",
        CdnFrontdoorProfileId = exampleFrontdoorProfile.Id,
        DnsZoneId = exampleZone.Id,
        HostName = "contoso.fabrikam.com",
        Tls = new Azure.Cdn.Inputs.FrontdoorCustomDomainTlsArgs
        {
            CertificateType = "ManagedCertificate",
            MinimumTlsVersion = "TLS12",
        },
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/cdn"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/dns"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
			Name:     pulumi.String("example-cdn-frontdoor"),
			Location: pulumi.String("West Europe"),
		})
		if err != nil {
			return err
		}
		exampleZone, err := dns.NewZone(ctx, "example", &dns.ZoneArgs{
			Name:              pulumi.String("sub-domain.domain.com"),
			ResourceGroupName: example.Name,
		})
		if err != nil {
			return err
		}
		exampleFrontdoorProfile, err := cdn.NewFrontdoorProfile(ctx, "example", &cdn.FrontdoorProfileArgs{
			Name:              pulumi.String("example-profile"),
			ResourceGroupName: example.Name,
			SkuName:           pulumi.String("Standard_AzureFrontDoor"),
		})
		if err != nil {
			return err
		}
		_, err = cdn.NewFrontdoorCustomDomain(ctx, "example", &cdn.FrontdoorCustomDomainArgs{
			Name:                  pulumi.String("example-customDomain"),
			CdnFrontdoorProfileId: exampleFrontdoorProfile.ID(),
			DnsZoneId:             exampleZone.ID(),
			HostName:              pulumi.String("contoso.fabrikam.com"),
			Tls: &cdn.FrontdoorCustomDomainTlsArgs{
				CertificateType:   pulumi.String("ManagedCertificate"),
				MinimumTlsVersion: pulumi.String("TLS12"),
			},
		})
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.core.ResourceGroup;
import com.pulumi.azure.core.ResourceGroupArgs;
import com.pulumi.azure.dns.Zone;
import com.pulumi.azure.dns.ZoneArgs;
import com.pulumi.azure.cdn.FrontdoorProfile;
import com.pulumi.azure.cdn.FrontdoorProfileArgs;
import com.pulumi.azure.cdn.FrontdoorCustomDomain;
import com.pulumi.azure.cdn.FrontdoorCustomDomainArgs;
import com.pulumi.azure.cdn.inputs.FrontdoorCustomDomainTlsArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        var example = new ResourceGroup("example", ResourceGroupArgs.builder()
            .name("example-cdn-frontdoor")
            .location("West Europe")
            .build());

        var exampleZone = new Zone("exampleZone", ZoneArgs.builder()
            .name("sub-domain.domain.com")
            .resourceGroupName(example.name())
            .build());

        var exampleFrontdoorProfile = new FrontdoorProfile("exampleFrontdoorProfile", FrontdoorProfileArgs.builder()
            .name("example-profile")
            .resourceGroupName(example.name())
            .skuName("Standard_AzureFrontDoor")
            .build());

        var exampleFrontdoorCustomDomain = new FrontdoorCustomDomain("exampleFrontdoorCustomDomain", FrontdoorCustomDomainArgs.builder()
            .name("example-customDomain")
            .cdnFrontdoorProfileId(exampleFrontdoorProfile.id())
            .dnsZoneId(exampleZone.id())
            .hostName("contoso.fabrikam.com")
            .tls(FrontdoorCustomDomainTlsArgs.builder()
                .certificateType("ManagedCertificate")
                .minimumTlsVersion("TLS12")
                .build())
            .build());

    }
}
```
```yaml
resources:
  example:
    type: azure:core:ResourceGroup
    properties:
      name: example-cdn-frontdoor
      location: West Europe
  exampleZone:
    type: azure:dns:Zone
    name: example
    properties:
      name: sub-domain.domain.com
      resourceGroupName: ${example.name}
  exampleFrontdoorProfile:
    type: azure:cdn:FrontdoorProfile
    name: example
    properties:
      name: example-profile
      resourceGroupName: ${example.name}
      skuName: Standard_AzureFrontDoor
  exampleFrontdoorCustomDomain:
    type: azure:cdn:FrontdoorCustomDomain
    name: example
    properties:
      name: example-customDomain
      cdnFrontdoorProfileId: ${exampleFrontdoorProfile.id}
      dnsZoneId: ${exampleZone.id}
      hostName: contoso.fabrikam.com
      tls:
        certificateType: ManagedCertificate
        minimumTlsVersion: TLS12
```
<!--End PulumiCodeChooser -->

## Example DNS Auth TXT Record Usage

The name of your DNS TXT record should be in the format of `_dnsauth.<your_subdomain>`. So, for example, if we use the `host_name` in the example usage above you would create a DNS TXT record with the name of `_dnsauth.contoso` which contains the value of the Front Door Custom Domains `validation_token` field. See the [product documentation](https://learn.microsoft.com/azure/frontdoor/standard-premium/how-to-add-custom-domain) for more information.

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";
import * as std from "@pulumi/std";

const example = new azure.dns.TxtRecord("example", {
    name: std.join({
        separator: ".",
        input: [
            "_dnsauth",
            "contoso",
        ],
    }).then(invoke => invoke.result),
    zoneName: exampleAzurermDnsZone.name,
    resourceGroupName: exampleAzurermResourceGroup.name,
    ttl: 3600,
    records: [{
        value: exampleAzurermCdnFrontdoorCustomDomain.validationToken,
    }],
});
```
```python
import pulumi
import pulumi_azure as azure
import pulumi_std as std

example = azure.dns.TxtRecord("example",
    name=std.join(separator=".",
        input=[
            "_dnsauth",
            "contoso",
        ]).result,
    zone_name=example_azurerm_dns_zone["name"],
    resource_group_name=example_azurerm_resource_group["name"],
    ttl=3600,
    records=[{
        "value": example_azurerm_cdn_frontdoor_custom_domain["validationToken"],
    }])
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;
using Std = Pulumi.Std;

return await Deployment.RunAsync(() => 
{
    var example = new Azure.Dns.TxtRecord("example", new()
    {
        Name = Std.Join.Invoke(new()
        {
            Separator = ".",
            Input = new[]
            {
                "_dnsauth",
                "contoso",
            },
        }).Apply(invoke => invoke.Result),
        ZoneName = exampleAzurermDnsZone.Name,
        ResourceGroupName = exampleAzurermResourceGroup.Name,
        Ttl = 3600,
        Records = new[]
        {
            new Azure.Dns.Inputs.TxtRecordRecordArgs
            {
                Value = exampleAzurermCdnFrontdoorCustomDomain.ValidationToken,
            },
        },
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/dns"
	"github.com/pulumi/pulumi-std/sdk/go/std"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		invokeJoin, err := std.Join(ctx, &std.JoinArgs{
			Separator: ".",
			Input: []string{
				"_dnsauth",
				"contoso",
			},
		}, nil)
		if err != nil {
			return err
		}
		_, err = dns.NewTxtRecord(ctx, "example", &dns.TxtRecordArgs{
			Name:              pulumi.String(invokeJoin.Result),
			ZoneName:          pulumi.Any(exampleAzurermDnsZone.Name),
			ResourceGroupName: pulumi.Any(exampleAzurermResourceGroup.Name),
			Ttl:               pulumi.Int(3600),
			Records: dns.TxtRecordRecordArray{
				&dns.TxtRecordRecordArgs{
					Value: pulumi.Any(exampleAzurermCdnFrontdoorCustomDomain.ValidationToken),
				},
			},
		})
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.dns.TxtRecord;
import com.pulumi.azure.dns.TxtRecordArgs;
import com.pulumi.azure.dns.inputs.TxtRecordRecordArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        var example = new TxtRecord("example", TxtRecordArgs.builder()
            .name(StdFunctions.join(JoinArgs.builder()
                .separator(".")
                .input(                
                    "_dnsauth",
                    "contoso")
                .build()).result())
            .zoneName(exampleAzurermDnsZone.name())
            .resourceGroupName(exampleAzurermResourceGroup.name())
            .ttl(3600)
            .records(TxtRecordRecordArgs.builder()
                .value(exampleAzurermCdnFrontdoorCustomDomain.validationToken())
                .build())
            .build());

    }
}
```
```yaml
resources:
  example:
    type: azure:dns:TxtRecord
    properties:
      name:
        fn::invoke:
          function: std:join
          arguments:
            separator: .
            input:
              - _dnsauth
              - contoso
          return: result
      zoneName: ${exampleAzurermDnsZone.name}
      resourceGroupName: ${exampleAzurermResourceGroup.name}
      ttl: 3600
      records:
        - value: ${exampleAzurermCdnFrontdoorCustomDomain.validationToken}
```
<!--End PulumiCodeChooser -->

## Example CNAME Record Usage

!>**IMPORTANT:** You **must** include the `depends_on` meta-argument which references both the `azure.cdn.FrontdoorRoute` and the `azure.cdn.FrontdoorSecurityPolicy` that are associated with your Custom Domain. The reason for these `depends_on` meta-arguments is because all of the resources for the Custom Domain need to be associated within Front Door before the CNAME record can be written to the domains DNS, else the CNAME validation will fail and Front Door will not enable traffic to the Domain.

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const example = new azure.dns.CNameRecord("example", {
    name: "contoso",
    zoneName: exampleAzurermDnsZone.name,
    resourceGroupName: exampleAzurermResourceGroup.name,
    ttl: 3600,
    record: exampleAzurermCdnFrontdoorEndpoint.hostName,
}, {
    dependsOn: [
        exampleAzurermCdnFrontdoorRoute,
        exampleAzurermCdnFrontdoorSecurityPolicy,
    ],
});
```
```python
import pulumi
import pulumi_azure as azure

example = azure.dns.CNameRecord("example",
    name="contoso",
    zone_name=example_azurerm_dns_zone["name"],
    resource_group_name=example_azurerm_resource_group["name"],
    ttl=3600,
    record=example_azurerm_cdn_frontdoor_endpoint["hostName"],
    opts = pulumi.ResourceOptions(depends_on=[
            example_azurerm_cdn_frontdoor_route,
            example_azurerm_cdn_frontdoor_security_policy,
        ]))
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var example = new Azure.Dns.CNameRecord("example", new()
    {
        Name = "contoso",
        ZoneName = exampleAzurermDnsZone.Name,
        ResourceGroupName = exampleAzurermResourceGroup.Name,
        Ttl = 3600,
        Record = exampleAzurermCdnFrontdoorEndpoint.HostName,
    }, new CustomResourceOptions
    {
        DependsOn =
        {
            exampleAzurermCdnFrontdoorRoute,
            exampleAzurermCdnFrontdoorSecurityPolicy,
        },
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/dns"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		_, err := dns.NewCNameRecord(ctx, "example", &dns.CNameRecordArgs{
			Name:              pulumi.String("contoso"),
			ZoneName:          pulumi.Any(exampleAzurermDnsZone.Name),
			ResourceGroupName: pulumi.Any(exampleAzurermResourceGroup.Name),
			Ttl:               pulumi.Int(3600),
			Record:            pulumi.Any(exampleAzurermCdnFrontdoorEndpoint.HostName),
		}, pulumi.DependsOn([]pulumi.Resource{
			exampleAzurermCdnFrontdoorRoute,
			exampleAzurermCdnFrontdoorSecurityPolicy,
		}))
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.dns.CNameRecord;
import com.pulumi.azure.dns.CNameRecordArgs;
import com.pulumi.resources.CustomResourceOptions;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        var example = new CNameRecord("example", CNameRecordArgs.builder()
            .name("contoso")
            .zoneName(exampleAzurermDnsZone.name())
            .resourceGroupName(exampleAzurermResourceGroup.name())
            .ttl(3600)
            .record(exampleAzurermCdnFrontdoorEndpoint.hostName())
            .build(), CustomResourceOptions.builder()
                .dependsOn(                
                    exampleAzurermCdnFrontdoorRoute,
                    exampleAzurermCdnFrontdoorSecurityPolicy)
                .build());

    }
}
```
```yaml
resources:
  example:
    type: azure:dns:CNameRecord
    properties:
      name: contoso
      zoneName: ${exampleAzurermDnsZone.name}
      resourceGroupName: ${exampleAzurermResourceGroup.name}
      ttl: 3600
      record: ${exampleAzurermCdnFrontdoorEndpoint.hostName}
    options:
      dependsOn:
        - ${exampleAzurermCdnFrontdoorRoute}
        - ${exampleAzurermCdnFrontdoorSecurityPolicy}
```
<!--End PulumiCodeChooser -->

## Import

Front Door Custom Domains can be imported using the `resource id`, e.g.

```sh
$ pulumi import azure:cdn/frontdoorCustomDomain:FrontdoorCustomDomain example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.Cdn/profiles/profile1/customDomains/customDomain1
```


cdnFrontdoorProfileId" eThe ID of the Front Door Profile. Changing this forces a new Front Door Custom Domain to be created.
Þ
	dnsZoneIdB" ÊThe ID of the Azure DNS Zone which should be used for this Front Door Custom Domain. If you are using Azure to host your [DNS domains](https://learn.microsoft.com/azure/dns/dns-overview), you must delegate the domain provider's domain name system (DNS) to an Azure DNS Zone. For more information, see [Delegate a domain to Azure DNS](https://learn.microsoft.com/azure/dns/dns-delegate-domain-azure-dns). Otherwise, if you're using your own domain provider to handle your DNS, you must validate the Front Door Custom Domain by creating the DNS TXT records manually.

<!-- * `pre_validated_cdn_frontdoor_custom_domain_id` - (Optional) The resource ID of the pre-validated Front Door Custom Domain. This domain type is used when you wish to onboard a validated Azure service domain, and then configure the Azure service behind an Azure Front Door.

->**NOTE:** Currently `pre_validated_cdn_frontdoor_custom_domain_id` only supports domains validated by Static Web App. -->
Å
hostName" ´The host name of the domain. The `host_name` field must be the FQDN of your domain(e.g. `contoso.fabrikam.com`). Changing this forces a new Front Door Custom Domain to be created.
Â
nameB" ³The name which should be used for this Front Door Custom Domain. Possible values must be between 2 and 260 characters in length, must begin with a letter or number, end with a letter or number and contain only letters, numbers and hyphens. Changing this forces a new Front Door Custom Domain to be created.

tls`:^
\
cdnFrontdoorCustomDomainTls;azure:cdn/FrontdoorCustomDomainTls:FrontdoorCustomDomainTls A `tls` block as defined below.
"
cdnFrontdoorProfileId" eThe ID of the Front Door Profile. Changing this forces a new Front Door Custom Domain to be created.
"Þ
	dnsZoneIdB" ÊThe ID of the Azure DNS Zone which should be used for this Front Door Custom Domain. If you are using Azure to host your [DNS domains](https://learn.microsoft.com/azure/dns/dns-overview), you must delegate the domain provider's domain name system (DNS) to an Azure DNS Zone. For more information, see [Delegate a domain to Azure DNS](https://learn.microsoft.com/azure/dns/dns-delegate-domain-azure-dns). Otherwise, if you're using your own domain provider to handle your DNS, you must validate the Front Door Custom Domain by creating the DNS TXT records manually.

<!-- * `pre_validated_cdn_frontdoor_custom_domain_id` - (Optional) The resource ID of the pre-validated Front Door Custom Domain. This domain type is used when you wish to onboard a validated Azure service domain, and then configure the Azure service behind an Azure Front Door.

->**NOTE:** Currently `pre_validated_cdn_frontdoor_custom_domain_id` only supports domains validated by Static Web App. -->
"<
expirationDate" &The date time that the token expires.
"Å
hostName" ´The host name of the domain. The `host_name` field must be the FQDN of your domain(e.g. `contoso.fabrikam.com`). Changing this forces a new Front Door Custom Domain to be created.
"À
name" ³The name which should be used for this Front Door Custom Domain. Possible values must be between 2 and 260 characters in length, must begin with a letter or number, end with a letter or number and contain only letters, numbers and hyphens. Changing this forces a new Front Door Custom Domain to be created.
"
tls`:^
\
cdnFrontdoorCustomDomainTls;azure:cdn/FrontdoorCustomDomainTls:FrontdoorCustomDomainTls A `tls` block as defined below.
"S
validationToken" <Challenge used for DNS TXT record or file based validation.
*Ñ
t
cdn FrontdoorCustomDomainAssociationKazure:cdn/frontdoorCustomDomainAssociation:FrontdoorCustomDomainAssociationËÄManages the association between a Front Door (standard/premium) Custom Domain and one or more Front Door (standard/premium) Routes.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";
import * as std from "@pulumi/std";

const example = new azure.core.ResourceGroup("example", {
    name: "example-cdn-frontdoor",
    location: "West Europe",
});
const exampleZone = new azure.dns.Zone("example", {
    name: "domain.com",
    resourceGroupName: example.name,
});
const exampleFrontdoorProfile = new azure.cdn.FrontdoorProfile("example", {
    name: "example-profile",
    resourceGroupName: example.name,
    skuName: "Standard_AzureFrontDoor",
});
const exampleFrontdoorOriginGroup = new azure.cdn.FrontdoorOriginGroup("example", {
    name: "example-origin-group",
    cdnFrontdoorProfileId: exampleFrontdoorProfile.id,
    sessionAffinityEnabled: true,
    restoreTrafficTimeToHealedOrNewEndpointInMinutes: 10,
    healthProbe: {
        intervalInSeconds: 240,
        path: "/healthProbe",
        protocol: "Https",
        requestType: "HEAD",
    },
    loadBalancing: {
        additionalLatencyInMilliseconds: 0,
        sampleSize: 16,
        successfulSamplesRequired: 3,
    },
});
const exampleFrontdoorOrigin = new azure.cdn.FrontdoorOrigin("example", {
    name: "example-origin",
    cdnFrontdoorOriginGroupId: exampleFrontdoorOriginGroup.id,
    enabled: true,
    certificateNameCheckEnabled: false,
    hostName: "contoso.com",
    httpPort: 80,
    httpsPort: 443,
    originHostHeader: "www.contoso.com",
    priority: 1,
    weight: 1,
});
const exampleFrontdoorEndpoint = new azure.cdn.FrontdoorEndpoint("example", {
    name: "example-endpoint",
    cdnFrontdoorProfileId: exampleFrontdoorProfile.id,
});
const exampleFrontdoorRuleSet = new azure.cdn.FrontdoorRuleSet("example", {
    name: "ExampleRuleSet",
    cdnFrontdoorProfileId: exampleFrontdoorProfile.id,
});
const exampleFrontdoorCustomDomain = new azure.cdn.FrontdoorCustomDomain("example", {
    name: "example-customDomain",
    cdnFrontdoorProfileId: exampleFrontdoorProfile.id,
    dnsZoneId: exampleZone.id,
    hostName: std.joinOutput({
        separator: ".",
        input: [
            "contoso",
            exampleZone.name,
        ],
    }).apply(invoke => invoke.result),
    tls: {
        certificateType: "ManagedCertificate",
        minimumTlsVersion: "TLS12",
    },
});
const exampleFrontdoorRoute = new azure.cdn.FrontdoorRoute("example", {
    name: "example-route",
    cdnFrontdoorEndpointId: exampleFrontdoorEndpoint.id,
    cdnFrontdoorOriginGroupId: exampleFrontdoorOriginGroup.id,
    cdnFrontdoorOriginIds: [exampleFrontdoorOrigin.id],
    cdnFrontdoorRuleSetIds: [exampleFrontdoorRuleSet.id],
    enabled: true,
    forwardingProtocol: "HttpsOnly",
    httpsRedirectEnabled: true,
    patternsToMatches: ["/*"],
    supportedProtocols: [
        "Http",
        "Https",
    ],
    cdnFrontdoorCustomDomainIds: [exampleFrontdoorCustomDomain.id],
    linkToDefaultDomain: false,
});
const exampleFrontdoorCustomDomainAssociation = new azure.cdn.FrontdoorCustomDomainAssociation("example", {
    cdnFrontdoorCustomDomainId: exampleFrontdoorCustomDomain.id,
    cdnFrontdoorRouteIds: [exampleFrontdoorRoute.id],
});
```
```python
import pulumi
import pulumi_azure as azure
import pulumi_std as std

example = azure.core.ResourceGroup("example",
    name="example-cdn-frontdoor",
    location="West Europe")
example_zone = azure.dns.Zone("example",
    name="domain.com",
    resource_group_name=example.name)
example_frontdoor_profile = azure.cdn.FrontdoorProfile("example",
    name="example-profile",
    resource_group_name=example.name,
    sku_name="Standard_AzureFrontDoor")
example_frontdoor_origin_group = azure.cdn.FrontdoorOriginGroup("example",
    name="example-origin-group",
    cdn_frontdoor_profile_id=example_frontdoor_profile.id,
    session_affinity_enabled=True,
    restore_traffic_time_to_healed_or_new_endpoint_in_minutes=10,
    health_probe={
        "interval_in_seconds": 240,
        "path": "/healthProbe",
        "protocol": "Https",
        "request_type": "HEAD",
    },
    load_balancing={
        "additional_latency_in_milliseconds": 0,
        "sample_size": 16,
        "successful_samples_required": 3,
    })
example_frontdoor_origin = azure.cdn.FrontdoorOrigin("example",
    name="example-origin",
    cdn_frontdoor_origin_group_id=example_frontdoor_origin_group.id,
    enabled=True,
    certificate_name_check_enabled=False,
    host_name="contoso.com",
    http_port=80,
    https_port=443,
    origin_host_header="www.contoso.com",
    priority=1,
    weight=1)
example_frontdoor_endpoint = azure.cdn.FrontdoorEndpoint("example",
    name="example-endpoint",
    cdn_frontdoor_profile_id=example_frontdoor_profile.id)
example_frontdoor_rule_set = azure.cdn.FrontdoorRuleSet("example",
    name="ExampleRuleSet",
    cdn_frontdoor_profile_id=example_frontdoor_profile.id)
example_frontdoor_custom_domain = azure.cdn.FrontdoorCustomDomain("example",
    name="example-customDomain",
    cdn_frontdoor_profile_id=example_frontdoor_profile.id,
    dns_zone_id=example_zone.id,
    host_name=std.join_output(separator=".",
        input=[
            "contoso",
            example_zone.name,
        ]).apply(lambda invoke: invoke.result),
    tls={
        "certificate_type": "ManagedCertificate",
        "minimum_tls_version": "TLS12",
    })
example_frontdoor_route = azure.cdn.FrontdoorRoute("example",
    name="example-route",
    cdn_frontdoor_endpoint_id=example_frontdoor_endpoint.id,
    cdn_frontdoor_origin_group_id=example_frontdoor_origin_group.id,
    cdn_frontdoor_origin_ids=[example_frontdoor_origin.id],
    cdn_frontdoor_rule_set_ids=[example_frontdoor_rule_set.id],
    enabled=True,
    forwarding_protocol="HttpsOnly",
    https_redirect_enabled=True,
    patterns_to_matches=["/*"],
    supported_protocols=[
        "Http",
        "Https",
    ],
    cdn_frontdoor_custom_domain_ids=[example_frontdoor_custom_domain.id],
    link_to_default_domain=False)
example_frontdoor_custom_domain_association = azure.cdn.FrontdoorCustomDomainAssociation("example",
    cdn_frontdoor_custom_domain_id=example_frontdoor_custom_domain.id,
    cdn_frontdoor_route_ids=[example_frontdoor_route.id])
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;
using Std = Pulumi.Std;

return await Deployment.RunAsync(() => 
{
    var example = new Azure.Core.ResourceGroup("example", new()
    {
        Name = "example-cdn-frontdoor",
        Location = "West Europe",
    });

    var exampleZone = new Azure.Dns.Zone("example", new()
    {
        Name = "domain.com",
        ResourceGroupName = example.Name,
    });

    var exampleFrontdoorProfile = new Azure.Cdn.FrontdoorProfile("example", new()
    {
        Name = "example-profile",
        ResourceGroupName = example.Name,
        SkuName = "Standard_AzureFrontDoor",
    });

    var exampleFrontdoorOriginGroup = new Azure.Cdn.FrontdoorOriginGroup("example", new()
    {
        Name = "example-origin-group",
        CdnFrontdoorProfileId = exampleFrontdoorProfile.Id,
        SessionAffinityEnabled = true,
        RestoreTrafficTimeToHealedOrNewEndpointInMinutes = 10,
        HealthProbe = new Azure.Cdn.Inputs.FrontdoorOriginGroupHealthProbeArgs
        {
            IntervalInSeconds = 240,
            Path = "/healthProbe",
            Protocol = "Https",
            RequestType = "HEAD",
        },
        LoadBalancing = new Azure.Cdn.Inputs.FrontdoorOriginGroupLoadBalancingArgs
        {
            AdditionalLatencyInMilliseconds = 0,
            SampleSize = 16,
            SuccessfulSamplesRequired = 3,
        },
    });

    var exampleFrontdoorOrigin = new Azure.Cdn.FrontdoorOrigin("example", new()
    {
        Name = "example-origin",
        CdnFrontdoorOriginGroupId = exampleFrontdoorOriginGroup.Id,
        Enabled = true,
        CertificateNameCheckEnabled = false,
        HostName = "contoso.com",
        HttpPort = 80,
        HttpsPort = 443,
        OriginHostHeader = "www.contoso.com",
        Priority = 1,
        Weight = 1,
    });

    var exampleFrontdoorEndpoint = new Azure.Cdn.FrontdoorEndpoint("example", new()
    {
        Name = "example-endpoint",
        CdnFrontdoorProfileId = exampleFrontdoorProfile.Id,
    });

    var exampleFrontdoorRuleSet = new Azure.Cdn.FrontdoorRuleSet("example", new()
    {
        Name = "ExampleRuleSet",
        CdnFrontdoorProfileId = exampleFrontdoorProfile.Id,
    });

    var exampleFrontdoorCustomDomain = new Azure.Cdn.FrontdoorCustomDomain("example", new()
    {
        Name = "example-customDomain",
        CdnFrontdoorProfileId = exampleFrontdoorProfile.Id,
        DnsZoneId = exampleZone.Id,
        HostName = Std.Join.Invoke(new()
        {
            Separator = ".",
            Input = new[]
            {
                "contoso",
                exampleZone.Name,
            },
        }).Apply(invoke => invoke.Result),
        Tls = new Azure.Cdn.Inputs.FrontdoorCustomDomainTlsArgs
        {
            CertificateType = "ManagedCertificate",
            MinimumTlsVersion = "TLS12",
        },
    });

    var exampleFrontdoorRoute = new Azure.Cdn.FrontdoorRoute("example", new()
    {
        Name = "example-route",
        CdnFrontdoorEndpointId = exampleFrontdoorEndpoint.Id,
        CdnFrontdoorOriginGroupId = exampleFrontdoorOriginGroup.Id,
        CdnFrontdoorOriginIds = new[]
        {
            exampleFrontdoorOrigin.Id,
        },
        CdnFrontdoorRuleSetIds = new[]
        {
            exampleFrontdoorRuleSet.Id,
        },
        Enabled = true,
        ForwardingProtocol = "HttpsOnly",
        HttpsRedirectEnabled = true,
        PatternsToMatches = new[]
        {
            "/*",
        },
        SupportedProtocols = new[]
        {
            "Http",
            "Https",
        },
        CdnFrontdoorCustomDomainIds = new[]
        {
            exampleFrontdoorCustomDomain.Id,
        },
        LinkToDefaultDomain = false,
    });

    var exampleFrontdoorCustomDomainAssociation = new Azure.Cdn.FrontdoorCustomDomainAssociation("example", new()
    {
        CdnFrontdoorCustomDomainId = exampleFrontdoorCustomDomain.Id,
        CdnFrontdoorRouteIds = new[]
        {
            exampleFrontdoorRoute.Id,
        },
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/cdn"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/dns"
	"github.com/pulumi/pulumi-std/sdk/go/std"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
			Name:     pulumi.String("example-cdn-frontdoor"),
			Location: pulumi.String("West Europe"),
		})
		if err != nil {
			return err
		}
		exampleZone, err := dns.NewZone(ctx, "example", &dns.ZoneArgs{
			Name:              pulumi.String("domain.com"),
			ResourceGroupName: example.Name,
		})
		if err != nil {
			return err
		}
		exampleFrontdoorProfile, err := cdn.NewFrontdoorProfile(ctx, "example", &cdn.FrontdoorProfileArgs{
			Name:              pulumi.String("example-profile"),
			ResourceGroupName: example.Name,
			SkuName:           pulumi.String("Standard_AzureFrontDoor"),
		})
		if err != nil {
			return err
		}
		exampleFrontdoorOriginGroup, err := cdn.NewFrontdoorOriginGroup(ctx, "example", &cdn.FrontdoorOriginGroupArgs{
			Name:                   pulumi.String("example-origin-group"),
			CdnFrontdoorProfileId:  exampleFrontdoorProfile.ID(),
			SessionAffinityEnabled: pulumi.Bool(true),
			RestoreTrafficTimeToHealedOrNewEndpointInMinutes: pulumi.Int(10),
			HealthProbe: &cdn.FrontdoorOriginGroupHealthProbeArgs{
				IntervalInSeconds: pulumi.Int(240),
				Path:              pulumi.String("/healthProbe"),
				Protocol:          pulumi.String("Https"),
				RequestType:       pulumi.String("HEAD"),
			},
			LoadBalancing: &cdn.FrontdoorOriginGroupLoadBalancingArgs{
				AdditionalLatencyInMilliseconds: pulumi.Int(0),
				SampleSize:                      pulumi.Int(16),
				SuccessfulSamplesRequired:       pulumi.Int(3),
			},
		})
		if err != nil {
			return err
		}
		exampleFrontdoorOrigin, err := cdn.NewFrontdoorOrigin(ctx, "example", &cdn.FrontdoorOriginArgs{
			Name:                        pulumi.String("example-origin"),
			CdnFrontdoorOriginGroupId:   exampleFrontdoorOriginGroup.ID(),
			Enabled:                     pulumi.Bool(true),
			CertificateNameCheckEnabled: pulumi.Bool(false),
			HostName:                    pulumi.String("contoso.com"),
			HttpPort:                    pulumi.Int(80),
			HttpsPort:                   pulumi.Int(443),
			OriginHostHeader:            pulumi.String("www.contoso.com"),
			Priority:                    pulumi.Int(1),
			Weight:                      pulumi.Int(1),
		})
		if err != nil {
			return err
		}
		exampleFrontdoorEndpoint, err := cdn.NewFrontdoorEndpoint(ctx, "example", &cdn.FrontdoorEndpointArgs{
			Name:                  pulumi.String("example-endpoint"),
			CdnFrontdoorProfileId: exampleFrontdoorProfile.ID(),
		})
		if err != nil {
			return err
		}
		exampleFrontdoorRuleSet, err := cdn.NewFrontdoorRuleSet(ctx, "example", &cdn.FrontdoorRuleSetArgs{
			Name:                  pulumi.String("ExampleRuleSet"),
			CdnFrontdoorProfileId: exampleFrontdoorProfile.ID(),
		})
		if err != nil {
			return err
		}
		exampleFrontdoorCustomDomain, err := cdn.NewFrontdoorCustomDomain(ctx, "example", &cdn.FrontdoorCustomDomainArgs{
			Name:                  pulumi.String("example-customDomain"),
			CdnFrontdoorProfileId: exampleFrontdoorProfile.ID(),
			DnsZoneId:             exampleZone.ID(),
			HostName: pulumi.String(std.JoinOutput(ctx, std.JoinOutputArgs{
				Separator: pulumi.String("."),
				Input: pulumi.StringArray{
					pulumi.String("contoso"),
					exampleZone.Name,
				},
			}, nil).ApplyT(func(invoke std.JoinResult) (*string, error) {
				return invoke.Result, nil
			}).(pulumi.StringPtrOutput)),
			Tls: &cdn.FrontdoorCustomDomainTlsArgs{
				CertificateType:   pulumi.String("ManagedCertificate"),
				MinimumTlsVersion: pulumi.String("TLS12"),
			},
		})
		if err != nil {
			return err
		}
		exampleFrontdoorRoute, err := cdn.NewFrontdoorRoute(ctx, "example", &cdn.FrontdoorRouteArgs{
			Name:                      pulumi.String("example-route"),
			CdnFrontdoorEndpointId:    exampleFrontdoorEndpoint.ID(),
			CdnFrontdoorOriginGroupId: exampleFrontdoorOriginGroup.ID(),
			CdnFrontdoorOriginIds: pulumi.StringArray{
				exampleFrontdoorOrigin.ID(),
			},
			CdnFrontdoorRuleSetIds: pulumi.StringArray{
				exampleFrontdoorRuleSet.ID(),
			},
			Enabled:              pulumi.Bool(true),
			ForwardingProtocol:   pulumi.String("HttpsOnly"),
			HttpsRedirectEnabled: pulumi.Bool(true),
			PatternsToMatches: pulumi.StringArray{
				pulumi.String("/*"),
			},
			SupportedProtocols: pulumi.StringArray{
				pulumi.String("Http"),
				pulumi.String("Https"),
			},
			CdnFrontdoorCustomDomainIds: pulumi.StringArray{
				exampleFrontdoorCustomDomain.ID(),
			},
			LinkToDefaultDomain: pulumi.Bool(false),
		})
		if err != nil {
			return err
		}
		_, err = cdn.NewFrontdoorCustomDomainAssociation(ctx, "example", &cdn.FrontdoorCustomDomainAssociationArgs{
			CdnFrontdoorCustomDomainId: exampleFrontdoorCustomDomain.ID(),
			CdnFrontdoorRouteIds: pulumi.StringArray{
				exampleFrontdoorRoute.ID(),
			},
		})
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.core.ResourceGroup;
import com.pulumi.azure.core.ResourceGroupArgs;
import com.pulumi.azure.dns.Zone;
import com.pulumi.azure.dns.ZoneArgs;
import com.pulumi.azure.cdn.FrontdoorProfile;
import com.pulumi.azure.cdn.FrontdoorProfileArgs;
import com.pulumi.azure.cdn.FrontdoorOriginGroup;
import com.pulumi.azure.cdn.FrontdoorOriginGroupArgs;
import com.pulumi.azure.cdn.inputs.FrontdoorOriginGroupHealthProbeArgs;
import com.pulumi.azure.cdn.inputs.FrontdoorOriginGroupLoadBalancingArgs;
import com.pulumi.azure.cdn.FrontdoorOrigin;
import com.pulumi.azure.cdn.FrontdoorOriginArgs;
import com.pulumi.azure.cdn.FrontdoorEndpoint;
import com.pulumi.azure.cdn.FrontdoorEndpointArgs;
import com.pulumi.azure.cdn.FrontdoorRuleSet;
import com.pulumi.azure.cdn.FrontdoorRuleSetArgs;
import com.pulumi.azure.cdn.FrontdoorCustomDomain;
import com.pulumi.azure.cdn.FrontdoorCustomDomainArgs;
import com.pulumi.azure.cdn.inputs.FrontdoorCustomDomainTlsArgs;
import com.pulumi.azure.cdn.FrontdoorRoute;
import com.pulumi.azure.cdn.FrontdoorRouteArgs;
import com.pulumi.azure.cdn.FrontdoorCustomDomainAssociation;
import com.pulumi.azure.cdn.FrontdoorCustomDomainAssociationArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        var example = new ResourceGroup("example", ResourceGroupArgs.builder()
            .name("example-cdn-frontdoor")
            .location("West Europe")
            .build());

        var exampleZone = new Zone("exampleZone", ZoneArgs.builder()
            .name("domain.com")
            .resourceGroupName(example.name())
            .build());

        var exampleFrontdoorProfile = new FrontdoorProfile("exampleFrontdoorProfile", FrontdoorProfileArgs.builder()
            .name("example-profile")
            .resourceGroupName(example.name())
            .skuName("Standard_AzureFrontDoor")
            .build());

        var exampleFrontdoorOriginGroup = new FrontdoorOriginGroup("exampleFrontdoorOriginGroup", FrontdoorOriginGroupArgs.builder()
            .name("example-origin-group")
            .cdnFrontdoorProfileId(exampleFrontdoorProfile.id())
            .sessionAffinityEnabled(true)
            .restoreTrafficTimeToHealedOrNewEndpointInMinutes(10)
            .healthProbe(FrontdoorOriginGroupHealthProbeArgs.builder()
                .intervalInSeconds(240)
                .path("/healthProbe")
                .protocol("Https")
                .requestType("HEAD")
                .build())
            .loadBalancing(FrontdoorOriginGroupLoadBalancingArgs.builder()
                .additionalLatencyInMilliseconds(0)
                .sampleSize(16)
                .successfulSamplesRequired(3)
                .build())
            .build());

        var exampleFrontdoorOrigin = new FrontdoorOrigin("exampleFrontdoorOrigin", FrontdoorOriginArgs.builder()
            .name("example-origin")
            .cdnFrontdoorOriginGroupId(exampleFrontdoorOriginGroup.id())
            .enabled(true)
            .certificateNameCheckEnabled(false)
            .hostName("contoso.com")
            .httpPort(80)
            .httpsPort(443)
            .originHostHeader("www.contoso.com")
            .priority(1)
            .weight(1)
            .build());

        var exampleFrontdoorEndpoint = new FrontdoorEndpoint("exampleFrontdoorEndpoint", FrontdoorEndpointArgs.builder()
            .name("example-endpoint")
            .cdnFrontdoorProfileId(exampleFrontdoorProfile.id())
            .build());

        var exampleFrontdoorRuleSet = new FrontdoorRuleSet("exampleFrontdoorRuleSet", FrontdoorRuleSetArgs.builder()
            .name("ExampleRuleSet")
            .cdnFrontdoorProfileId(exampleFrontdoorProfile.id())
            .build());

        var exampleFrontdoorCustomDomain = new FrontdoorCustomDomain("exampleFrontdoorCustomDomain", FrontdoorCustomDomainArgs.builder()
            .name("example-customDomain")
            .cdnFrontdoorProfileId(exampleFrontdoorProfile.id())
            .dnsZoneId(exampleZone.id())
            .hostName(StdFunctions.join().applyValue(invoke -> invoke.result()))
            .tls(FrontdoorCustomDomainTlsArgs.builder()
                .certificateType("ManagedCertificate")
                .minimumTlsVersion("TLS12")
                .build())
            .build());

        var exampleFrontdoorRoute = new FrontdoorRoute("exampleFrontdoorRoute", FrontdoorRouteArgs.builder()
            .name("example-route")
            .cdnFrontdoorEndpointId(exampleFrontdoorEndpoint.id())
            .cdnFrontdoorOriginGroupId(exampleFrontdoorOriginGroup.id())
            .cdnFrontdoorOriginIds(exampleFrontdoorOrigin.id())
            .cdnFrontdoorRuleSetIds(exampleFrontdoorRuleSet.id())
            .enabled(true)
            .forwardingProtocol("HttpsOnly")
            .httpsRedirectEnabled(true)
            .patternsToMatches("/*")
            .supportedProtocols(            
                "Http",
                "Https")
            .cdnFrontdoorCustomDomainIds(exampleFrontdoorCustomDomain.id())
            .linkToDefaultDomain(false)
            .build());

        var exampleFrontdoorCustomDomainAssociation = new FrontdoorCustomDomainAssociation("exampleFrontdoorCustomDomainAssociation", FrontdoorCustomDomainAssociationArgs.builder()
            .cdnFrontdoorCustomDomainId(exampleFrontdoorCustomDomain.id())
            .cdnFrontdoorRouteIds(exampleFrontdoorRoute.id())
            .build());

    }
}
```
```yaml
resources:
  example:
    type: azure:core:ResourceGroup
    properties:
      name: example-cdn-frontdoor
      location: West Europe
  exampleZone:
    type: azure:dns:Zone
    name: example
    properties:
      name: domain.com
      resourceGroupName: ${example.name}
  exampleFrontdoorProfile:
    type: azure:cdn:FrontdoorProfile
    name: example
    properties:
      name: example-profile
      resourceGroupName: ${example.name}
      skuName: Standard_AzureFrontDoor
  exampleFrontdoorOriginGroup:
    type: azure:cdn:FrontdoorOriginGroup
    name: example
    properties:
      name: example-origin-group
      cdnFrontdoorProfileId: ${exampleFrontdoorProfile.id}
      sessionAffinityEnabled: true
      restoreTrafficTimeToHealedOrNewEndpointInMinutes: 10
      healthProbe:
        intervalInSeconds: 240
        path: /healthProbe
        protocol: Https
        requestType: HEAD
      loadBalancing:
        additionalLatencyInMilliseconds: 0
        sampleSize: 16
        successfulSamplesRequired: 3
  exampleFrontdoorOrigin:
    type: azure:cdn:FrontdoorOrigin
    name: example
    properties:
      name: example-origin
      cdnFrontdoorOriginGroupId: ${exampleFrontdoorOriginGroup.id}
      enabled: true
      certificateNameCheckEnabled: false
      hostName: contoso.com
      httpPort: 80
      httpsPort: 443
      originHostHeader: www.contoso.com
      priority: 1
      weight: 1
  exampleFrontdoorEndpoint:
    type: azure:cdn:FrontdoorEndpoint
    name: example
    properties:
      name: example-endpoint
      cdnFrontdoorProfileId: ${exampleFrontdoorProfile.id}
  exampleFrontdoorRuleSet:
    type: azure:cdn:FrontdoorRuleSet
    name: example
    properties:
      name: ExampleRuleSet
      cdnFrontdoorProfileId: ${exampleFrontdoorProfile.id}
  exampleFrontdoorRoute:
    type: azure:cdn:FrontdoorRoute
    name: example
    properties:
      name: example-route
      cdnFrontdoorEndpointId: ${exampleFrontdoorEndpoint.id}
      cdnFrontdoorOriginGroupId: ${exampleFrontdoorOriginGroup.id}
      cdnFrontdoorOriginIds:
        - ${exampleFrontdoorOrigin.id}
      cdnFrontdoorRuleSetIds:
        - ${exampleFrontdoorRuleSet.id}
      enabled: true
      forwardingProtocol: HttpsOnly
      httpsRedirectEnabled: true
      patternsToMatches:
        - /*
      supportedProtocols:
        - Http
        - Https
      cdnFrontdoorCustomDomainIds:
        - ${exampleFrontdoorCustomDomain.id}
      linkToDefaultDomain: false
  exampleFrontdoorCustomDomain:
    type: azure:cdn:FrontdoorCustomDomain
    name: example
    properties:
      name: example-customDomain
      cdnFrontdoorProfileId: ${exampleFrontdoorProfile.id}
      dnsZoneId: ${exampleZone.id}
      hostName:
        fn::invoke:
          function: std:join
          arguments:
            separator: .
            input:
              - contoso
              - ${exampleZone.name}
          return: result
      tls:
        certificateType: ManagedCertificate
        minimumTlsVersion: TLS12
  exampleFrontdoorCustomDomainAssociation:
    type: azure:cdn:FrontdoorCustomDomainAssociation
    name: example
    properties:
      cdnFrontdoorCustomDomainId: ${exampleFrontdoorCustomDomain.id}
      cdnFrontdoorRouteIds:
        - ${exampleFrontdoorRoute.id}
```
<!--End PulumiCodeChooser -->

## Import

Front Door Custom Domain Associations can be imported using the `resource id`, e.g.

```sh
$ pulumi import azure:cdn/frontdoorCustomDomainAssociation:FrontdoorCustomDomainAssociation example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.Cdn/profiles/profile1/associations/assoc1
```

½
cdnFrontdoorCustomDomainId" The ID of the Front Door Custom Domain that should be managed by the association resource. Changing this forces a new association resource to be created.
 
cdnFrontdoorRouteIds*" One or more IDs of the Front Door Route to which the Front Door Custom Domain is associated with.

> **NOTE:** This should include all of the Front Door Route resources that the Front Door Custom Domain is associated with. If the list of Front Door Routes is not complete you will receive the service side error `This resource is still associated with a route. Please delete the association with the route first before deleting this resource` when you attempt to `destroy`/`delete` your Front Door Custom Domain.
"½
cdnFrontdoorCustomDomainId" The ID of the Front Door Custom Domain that should be managed by the association resource. Changing this forces a new association resource to be created.
" 
cdnFrontdoorRouteIds*" One or more IDs of the Front Door Route to which the Front Door Custom Domain is associated with.

> **NOTE:** This should include all of the Front Door Route resources that the Front Door Custom Domain is associated with. If the list of Front Door Routes is not complete you will receive the service side error `This resource is still associated with a route. Please delete the association with the route first before deleting this resource` when you attempt to `destroy`/`delete` your Front Door Custom Domain.
*á4
G
cdnFrontdoorEndpoint-azure:cdn/frontdoorEndpoint:FrontdoorEndpoint+Manages a Front Door (standard/premium) Endpoint.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const example = new azure.core.ResourceGroup("example", {
    name: "example-cdn-frontdoor",
    location: "West Europe",
});
const exampleFrontdoorProfile = new azure.cdn.FrontdoorProfile("example", {
    name: "example-profile",
    resourceGroupName: example.name,
    skuName: "Standard_AzureFrontDoor",
});
const exampleFrontdoorEndpoint = new azure.cdn.FrontdoorEndpoint("example", {
    name: "example-endpoint",
    cdnFrontdoorProfileId: exampleFrontdoorProfile.id,
    tags: {
        ENV: "example",
    },
});
```
```python
import pulumi
import pulumi_azure as azure

example = azure.core.ResourceGroup("example",
    name="example-cdn-frontdoor",
    location="West Europe")
example_frontdoor_profile = azure.cdn.FrontdoorProfile("example",
    name="example-profile",
    resource_group_name=example.name,
    sku_name="Standard_AzureFrontDoor")
example_frontdoor_endpoint = azure.cdn.FrontdoorEndpoint("example",
    name="example-endpoint",
    cdn_frontdoor_profile_id=example_frontdoor_profile.id,
    tags={
        "ENV": "example",
    })
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var example = new Azure.Core.ResourceGroup("example", new()
    {
        Name = "example-cdn-frontdoor",
        Location = "West Europe",
    });

    var exampleFrontdoorProfile = new Azure.Cdn.FrontdoorProfile("example", new()
    {
        Name = "example-profile",
        ResourceGroupName = example.Name,
        SkuName = "Standard_AzureFrontDoor",
    });

    var exampleFrontdoorEndpoint = new Azure.Cdn.FrontdoorEndpoint("example", new()
    {
        Name = "example-endpoint",
        CdnFrontdoorProfileId = exampleFrontdoorProfile.Id,
        Tags = 
        {
            { "ENV", "example" },
        },
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/cdn"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
			Name:     pulumi.String("example-cdn-frontdoor"),
			Location: pulumi.String("West Europe"),
		})
		if err != nil {
			return err
		}
		exampleFrontdoorProfile, err := cdn.NewFrontdoorProfile(ctx, "example", &cdn.FrontdoorProfileArgs{
			Name:              pulumi.String("example-profile"),
			ResourceGroupName: example.Name,
			SkuName:           pulumi.String("Standard_AzureFrontDoor"),
		})
		if err != nil {
			return err
		}
		_, err = cdn.NewFrontdoorEndpoint(ctx, "example", &cdn.FrontdoorEndpointArgs{
			Name:                  pulumi.String("example-endpoint"),
			CdnFrontdoorProfileId: exampleFrontdoorProfile.ID(),
			Tags: pulumi.StringMap{
				"ENV": pulumi.String("example"),
			},
		})
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.core.ResourceGroup;
import com.pulumi.azure.core.ResourceGroupArgs;
import com.pulumi.azure.cdn.FrontdoorProfile;
import com.pulumi.azure.cdn.FrontdoorProfileArgs;
import com.pulumi.azure.cdn.FrontdoorEndpoint;
import com.pulumi.azure.cdn.FrontdoorEndpointArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        var example = new ResourceGroup("example", ResourceGroupArgs.builder()
            .name("example-cdn-frontdoor")
            .location("West Europe")
            .build());

        var exampleFrontdoorProfile = new FrontdoorProfile("exampleFrontdoorProfile", FrontdoorProfileArgs.builder()
            .name("example-profile")
            .resourceGroupName(example.name())
            .skuName("Standard_AzureFrontDoor")
            .build());

        var exampleFrontdoorEndpoint = new FrontdoorEndpoint("exampleFrontdoorEndpoint", FrontdoorEndpointArgs.builder()
            .name("example-endpoint")
            .cdnFrontdoorProfileId(exampleFrontdoorProfile.id())
            .tags(Map.of("ENV", "example"))
            .build());

    }
}
```
```yaml
resources:
  example:
    type: azure:core:ResourceGroup
    properties:
      name: example-cdn-frontdoor
      location: West Europe
  exampleFrontdoorProfile:
    type: azure:cdn:FrontdoorProfile
    name: example
    properties:
      name: example-profile
      resourceGroupName: ${example.name}
      skuName: Standard_AzureFrontDoor
  exampleFrontdoorEndpoint:
    type: azure:cdn:FrontdoorEndpoint
    name: example
    properties:
      name: example-endpoint
      cdnFrontdoorProfileId: ${exampleFrontdoorProfile.id}
      tags:
        ENV: example
```
<!--End PulumiCodeChooser -->

## Import

Front Door Endpoints can be imported using the `resource id`, e.g.

```sh
$ pulumi import azure:cdn/frontdoorEndpoint:FrontdoorEndpoint example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.Cdn/profiles/profile1/afdEndpoints/endpoint1
```

±
cdnFrontdoorProfileId" The ID of the Front Door Profile within which this Front Door Endpoint should exist. Changing this forces a new Front Door Endpoint to be created.
W
enabledB
 FSpecifies if this Front Door Endpoint is enabled? Defaults to `true`.

nameB" zThe name which should be used for this Front Door Endpoint. Changing this forces a new Front Door Endpoint to be created.
a
tagsB2" QSpecifies a mapping of tags which should be assigned to the Front Door Endpoint.
"±
cdnFrontdoorProfileId" The ID of the Front Door Profile within which this Front Door Endpoint should exist. Changing this forces a new Front Door Endpoint to be created.
"W
enabledB
 FSpecifies if this Front Door Endpoint is enabled? Defaults to `true`.
"
hostName" {The host name of the Front Door Endpoint, in the format `{endpointName}.{dnsZone}` (for example, `contoso.azureedge.net`).
"
name" zThe name which should be used for this Front Door Endpoint. Changing this forces a new Front Door Endpoint to be created.
"a
tagsB2" QSpecifies a mapping of tags which should be assigned to the Front Door Endpoint.
*
Y
cdnFrontdoorFirewallPolicy9azure:cdn/frontdoorFirewallPolicy:FrontdoorFirewallPolicyéManages a Front Door (standard/premium) Firewall Policy instance.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const example = new azure.core.ResourceGroup("example", {
    name: "example-cdn-frontdoor",
    location: "West Europe",
});
const exampleFrontdoorProfile = new azure.cdn.FrontdoorProfile("example", {
    name: "example-profile",
    resourceGroupName: example.name,
    skuName: "Premium_AzureFrontDoor",
});
const exampleFrontdoorFirewallPolicy = new azure.cdn.FrontdoorFirewallPolicy("example", {
    name: "examplecdnfdwafpolicy",
    resourceGroupName: example.name,
    skuName: exampleFrontdoorProfile.skuName,
    enabled: true,
    mode: "Prevention",
    redirectUrl: "https://www.contoso.com",
    customBlockResponseStatusCode: 403,
    customBlockResponseBody: "PGh0bWw+CjxoZWFkZXI+PHRpdGxlPkhlbGxvPC90aXRsZT48L2hlYWRlcj4KPGJvZHk+CkhlbGxvIHdvcmxkCjwvYm9keT4KPC9odG1sPg==",
    customRules: [
        {
            name: "Rule1",
            enabled: true,
            priority: 1,
            rateLimitDurationInMinutes: 1,
            rateLimitThreshold: 10,
            type: "MatchRule",
            action: "Block",
            matchConditions: [{
                matchVariable: "RemoteAddr",
                operator: "IPMatch",
                negationCondition: false,
                matchValues: [
                    "10.0.1.0/24",
                    "10.0.0.0/24",
                ],
            }],
        },
        {
            name: "Rule2",
            enabled: true,
            priority: 2,
            rateLimitDurationInMinutes: 1,
            rateLimitThreshold: 10,
            type: "MatchRule",
            action: "Block",
            matchConditions: [
                {
                    matchVariable: "RemoteAddr",
                    operator: "IPMatch",
                    negationCondition: false,
                    matchValues: ["192.168.1.0/24"],
                },
                {
                    matchVariable: "RequestHeader",
                    selector: "UserAgent",
                    operator: "Contains",
                    negationCondition: false,
                    matchValues: ["windows"],
                    transforms: [
                        "Lowercase",
                        "Trim",
                    ],
                },
            ],
        },
    ],
    managedRules: [
        {
            type: "DefaultRuleSet",
            version: "1.0",
            exclusions: [{
                matchVariable: "QueryStringArgNames",
                operator: "Equals",
                selector: "not_suspicious",
            }],
            overrides: [
                {
                    ruleGroupName: "PHP",
                    rules: [{
                        ruleId: "933100",
                        enabled: false,
                        action: "Block",
                    }],
                },
                {
                    ruleGroupName: "SQLI",
                    exclusions: [{
                        matchVariable: "QueryStringArgNames",
                        operator: "Equals",
                        selector: "really_not_suspicious",
                    }],
                    rules: [{
                        ruleId: "942200",
                        action: "Block",
                        exclusions: [{
                            matchVariable: "QueryStringArgNames",
                            operator: "Equals",
                            selector: "innocent",
                        }],
                    }],
                },
            ],
        },
        {
            type: "Microsoft_BotManagerRuleSet",
            version: "1.0",
            action: "Log",
        },
    ],
});
```
```python
import pulumi
import pulumi_azure as azure

example = azure.core.ResourceGroup("example",
    name="example-cdn-frontdoor",
    location="West Europe")
example_frontdoor_profile = azure.cdn.FrontdoorProfile("example",
    name="example-profile",
    resource_group_name=example.name,
    sku_name="Premium_AzureFrontDoor")
example_frontdoor_firewall_policy = azure.cdn.FrontdoorFirewallPolicy("example",
    name="examplecdnfdwafpolicy",
    resource_group_name=example.name,
    sku_name=example_frontdoor_profile.sku_name,
    enabled=True,
    mode="Prevention",
    redirect_url="https://www.contoso.com",
    custom_block_response_status_code=403,
    custom_block_response_body="PGh0bWw+CjxoZWFkZXI+PHRpdGxlPkhlbGxvPC90aXRsZT48L2hlYWRlcj4KPGJvZHk+CkhlbGxvIHdvcmxkCjwvYm9keT4KPC9odG1sPg==",
    custom_rules=[
        {
            "name": "Rule1",
            "enabled": True,
            "priority": 1,
            "rate_limit_duration_in_minutes": 1,
            "rate_limit_threshold": 10,
            "type": "MatchRule",
            "action": "Block",
            "match_conditions": [{
                "match_variable": "RemoteAddr",
                "operator": "IPMatch",
                "negation_condition": False,
                "match_values": [
                    "10.0.1.0/24",
                    "10.0.0.0/24",
                ],
            }],
        },
        {
            "name": "Rule2",
            "enabled": True,
            "priority": 2,
            "rate_limit_duration_in_minutes": 1,
            "rate_limit_threshold": 10,
            "type": "MatchRule",
            "action": "Block",
            "match_conditions": [
                {
                    "match_variable": "RemoteAddr",
                    "operator": "IPMatch",
                    "negation_condition": False,
                    "match_values": ["192.168.1.0/24"],
                },
                {
                    "match_variable": "RequestHeader",
                    "selector": "UserAgent",
                    "operator": "Contains",
                    "negation_condition": False,
                    "match_values": ["windows"],
                    "transforms": [
                        "Lowercase",
                        "Trim",
                    ],
                },
            ],
        },
    ],
    managed_rules=[
        {
            "type": "DefaultRuleSet",
            "version": "1.0",
            "exclusions": [{
                "match_variable": "QueryStringArgNames",
                "operator": "Equals",
                "selector": "not_suspicious",
            }],
            "overrides": [
                {
                    "rule_group_name": "PHP",
                    "rules": [{
                        "rule_id": "933100",
                        "enabled": False,
                        "action": "Block",
                    }],
                },
                {
                    "rule_group_name": "SQLI",
                    "exclusions": [{
                        "match_variable": "QueryStringArgNames",
                        "operator": "Equals",
                        "selector": "really_not_suspicious",
                    }],
                    "rules": [{
                        "rule_id": "942200",
                        "action": "Block",
                        "exclusions": [{
                            "match_variable": "QueryStringArgNames",
                            "operator": "Equals",
                            "selector": "innocent",
                        }],
                    }],
                },
            ],
        },
        {
            "type": "Microsoft_BotManagerRuleSet",
            "version": "1.0",
            "action": "Log",
        },
    ])
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var example = new Azure.Core.ResourceGroup("example", new()
    {
        Name = "example-cdn-frontdoor",
        Location = "West Europe",
    });

    var exampleFrontdoorProfile = new Azure.Cdn.FrontdoorProfile("example", new()
    {
        Name = "example-profile",
        ResourceGroupName = example.Name,
        SkuName = "Premium_AzureFrontDoor",
    });

    var exampleFrontdoorFirewallPolicy = new Azure.Cdn.FrontdoorFirewallPolicy("example", new()
    {
        Name = "examplecdnfdwafpolicy",
        ResourceGroupName = example.Name,
        SkuName = exampleFrontdoorProfile.SkuName,
        Enabled = true,
        Mode = "Prevention",
        RedirectUrl = "https://www.contoso.com",
        CustomBlockResponseStatusCode = 403,
        CustomBlockResponseBody = "PGh0bWw+CjxoZWFkZXI+PHRpdGxlPkhlbGxvPC90aXRsZT48L2hlYWRlcj4KPGJvZHk+CkhlbGxvIHdvcmxkCjwvYm9keT4KPC9odG1sPg==",
        CustomRules = new[]
        {
            new Azure.Cdn.Inputs.FrontdoorFirewallPolicyCustomRuleArgs
            {
                Name = "Rule1",
                Enabled = true,
                Priority = 1,
                RateLimitDurationInMinutes = 1,
                RateLimitThreshold = 10,
                Type = "MatchRule",
                Action = "Block",
                MatchConditions = new[]
                {
                    new Azure.Cdn.Inputs.FrontdoorFirewallPolicyCustomRuleMatchConditionArgs
                    {
                        MatchVariable = "RemoteAddr",
                        Operator = "IPMatch",
                        NegationCondition = false,
                        MatchValues = new[]
                        {
                            "10.0.1.0/24",
                            "10.0.0.0/24",
                        },
                    },
                },
            },
            new Azure.Cdn.Inputs.FrontdoorFirewallPolicyCustomRuleArgs
            {
                Name = "Rule2",
                Enabled = true,
                Priority = 2,
                RateLimitDurationInMinutes = 1,
                RateLimitThreshold = 10,
                Type = "MatchRule",
                Action = "Block",
                MatchConditions = new[]
                {
                    new Azure.Cdn.Inputs.FrontdoorFirewallPolicyCustomRuleMatchConditionArgs
                    {
                        MatchVariable = "RemoteAddr",
                        Operator = "IPMatch",
                        NegationCondition = false,
                        MatchValues = new[]
                        {
                            "192.168.1.0/24",
                        },
                    },
                    new Azure.Cdn.Inputs.FrontdoorFirewallPolicyCustomRuleMatchConditionArgs
                    {
                        MatchVariable = "RequestHeader",
                        Selector = "UserAgent",
                        Operator = "Contains",
                        NegationCondition = false,
                        MatchValues = new[]
                        {
                            "windows",
                        },
                        Transforms = new[]
                        {
                            "Lowercase",
                            "Trim",
                        },
                    },
                },
            },
        },
        ManagedRules = new[]
        {
            new Azure.Cdn.Inputs.FrontdoorFirewallPolicyManagedRuleArgs
            {
                Type = "DefaultRuleSet",
                Version = "1.0",
                Exclusions = new[]
                {
                    new Azure.Cdn.Inputs.FrontdoorFirewallPolicyManagedRuleExclusionArgs
                    {
                        MatchVariable = "QueryStringArgNames",
                        Operator = "Equals",
                        Selector = "not_suspicious",
                    },
                },
                Overrides = new[]
                {
                    new Azure.Cdn.Inputs.FrontdoorFirewallPolicyManagedRuleOverrideArgs
                    {
                        RuleGroupName = "PHP",
                        Rules = new[]
                        {
                            new Azure.Cdn.Inputs.FrontdoorFirewallPolicyManagedRuleOverrideRuleArgs
                            {
                                RuleId = "933100",
                                Enabled = false,
                                Action = "Block",
                            },
                        },
                    },
                    new Azure.Cdn.Inputs.FrontdoorFirewallPolicyManagedRuleOverrideArgs
                    {
                        RuleGroupName = "SQLI",
                        Exclusions = new[]
                        {
                            new Azure.Cdn.Inputs.FrontdoorFirewallPolicyManagedRuleOverrideExclusionArgs
                            {
                                MatchVariable = "QueryStringArgNames",
                                Operator = "Equals",
                                Selector = "really_not_suspicious",
                            },
                        },
                        Rules = new[]
                        {
                            new Azure.Cdn.Inputs.FrontdoorFirewallPolicyManagedRuleOverrideRuleArgs
                            {
                                RuleId = "942200",
                                Action = "Block",
                                Exclusions = new[]
                                {
                                    new Azure.Cdn.Inputs.FrontdoorFirewallPolicyManagedRuleOverrideRuleExclusionArgs
                                    {
                                        MatchVariable = "QueryStringArgNames",
                                        Operator = "Equals",
                                        Selector = "innocent",
                                    },
                                },
                            },
                        },
                    },
                },
            },
            new Azure.Cdn.Inputs.FrontdoorFirewallPolicyManagedRuleArgs
            {
                Type = "Microsoft_BotManagerRuleSet",
                Version = "1.0",
                Action = "Log",
            },
        },
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/cdn"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
			Name:     pulumi.String("example-cdn-frontdoor"),
			Location: pulumi.String("West Europe"),
		})
		if err != nil {
			return err
		}
		exampleFrontdoorProfile, err := cdn.NewFrontdoorProfile(ctx, "example", &cdn.FrontdoorProfileArgs{
			Name:              pulumi.String("example-profile"),
			ResourceGroupName: example.Name,
			SkuName:           pulumi.String("Premium_AzureFrontDoor"),
		})
		if err != nil {
			return err
		}
		_, err = cdn.NewFrontdoorFirewallPolicy(ctx, "example", &cdn.FrontdoorFirewallPolicyArgs{
			Name:                          pulumi.String("examplecdnfdwafpolicy"),
			ResourceGroupName:             example.Name,
			SkuName:                       exampleFrontdoorProfile.SkuName,
			Enabled:                       pulumi.Bool(true),
			Mode:                          pulumi.String("Prevention"),
			RedirectUrl:                   pulumi.String("https://www.contoso.com"),
			CustomBlockResponseStatusCode: pulumi.Int(403),
			CustomBlockResponseBody:       pulumi.String("PGh0bWw+CjxoZWFkZXI+PHRpdGxlPkhlbGxvPC90aXRsZT48L2hlYWRlcj4KPGJvZHk+CkhlbGxvIHdvcmxkCjwvYm9keT4KPC9odG1sPg=="),
			CustomRules: cdn.FrontdoorFirewallPolicyCustomRuleArray{
				&cdn.FrontdoorFirewallPolicyCustomRuleArgs{
					Name:                       pulumi.String("Rule1"),
					Enabled:                    pulumi.Bool(true),
					Priority:                   pulumi.Int(1),
					RateLimitDurationInMinutes: pulumi.Int(1),
					RateLimitThreshold:         pulumi.Int(10),
					Type:                       pulumi.String("MatchRule"),
					Action:                     pulumi.String("Block"),
					MatchConditions: cdn.FrontdoorFirewallPolicyCustomRuleMatchConditionArray{
						&cdn.FrontdoorFirewallPolicyCustomRuleMatchConditionArgs{
							MatchVariable:     pulumi.String("RemoteAddr"),
							Operator:          pulumi.String("IPMatch"),
							NegationCondition: pulumi.Bool(false),
							MatchValues: pulumi.StringArray{
								pulumi.String("10.0.1.0/24"),
								pulumi.String("10.0.0.0/24"),
							},
						},
					},
				},
				&cdn.FrontdoorFirewallPolicyCustomRuleArgs{
					Name:                       pulumi.String("Rule2"),
					Enabled:                    pulumi.Bool(true),
					Priority:                   pulumi.Int(2),
					RateLimitDurationInMinutes: pulumi.Int(1),
					RateLimitThreshold:         pulumi.Int(10),
					Type:                       pulumi.String("MatchRule"),
					Action:                     pulumi.String("Block"),
					MatchConditions: cdn.FrontdoorFirewallPolicyCustomRuleMatchConditionArray{
						&cdn.FrontdoorFirewallPolicyCustomRuleMatchConditionArgs{
							MatchVariable:     pulumi.String("RemoteAddr"),
							Operator:          pulumi.String("IPMatch"),
							NegationCondition: pulumi.Bool(false),
							MatchValues: pulumi.StringArray{
								pulumi.String("192.168.1.0/24"),
							},
						},
						&cdn.FrontdoorFirewallPolicyCustomRuleMatchConditionArgs{
							MatchVariable:     pulumi.String("RequestHeader"),
							Selector:          pulumi.String("UserAgent"),
							Operator:          pulumi.String("Contains"),
							NegationCondition: pulumi.Bool(false),
							MatchValues: pulumi.StringArray{
								pulumi.String("windows"),
							},
							Transforms: pulumi.StringArray{
								pulumi.String("Lowercase"),
								pulumi.String("Trim"),
							},
						},
					},
				},
			},
			ManagedRules: cdn.FrontdoorFirewallPolicyManagedRuleArray{
				&cdn.FrontdoorFirewallPolicyManagedRuleArgs{
					Type:    pulumi.String("DefaultRuleSet"),
					Version: pulumi.String("1.0"),
					Exclusions: cdn.FrontdoorFirewallPolicyManagedRuleExclusionArray{
						&cdn.FrontdoorFirewallPolicyManagedRuleExclusionArgs{
							MatchVariable: pulumi.String("QueryStringArgNames"),
							Operator:      pulumi.String("Equals"),
							Selector:      pulumi.String("not_suspicious"),
						},
					},
					Overrides: cdn.FrontdoorFirewallPolicyManagedRuleOverrideArray{
						&cdn.FrontdoorFirewallPolicyManagedRuleOverrideArgs{
							RuleGroupName: pulumi.String("PHP"),
							Rules: cdn.FrontdoorFirewallPolicyManagedRuleOverrideRuleArray{
								&cdn.FrontdoorFirewallPolicyManagedRuleOverrideRuleArgs{
									RuleId:  pulumi.String("933100"),
									Enabled: pulumi.Bool(false),
									Action:  pulumi.String("Block"),
								},
							},
						},
						&cdn.FrontdoorFirewallPolicyManagedRuleOverrideArgs{
							RuleGroupName: pulumi.String("SQLI"),
							Exclusions: cdn.FrontdoorFirewallPolicyManagedRuleOverrideExclusionArray{
								&cdn.FrontdoorFirewallPolicyManagedRuleOverrideExclusionArgs{
									MatchVariable: pulumi.String("QueryStringArgNames"),
									Operator:      pulumi.String("Equals"),
									Selector:      pulumi.String("really_not_suspicious"),
								},
							},
							Rules: cdn.FrontdoorFirewallPolicyManagedRuleOverrideRuleArray{
								&cdn.FrontdoorFirewallPolicyManagedRuleOverrideRuleArgs{
									RuleId: pulumi.String("942200"),
									Action: pulumi.String("Block"),
									Exclusions: cdn.FrontdoorFirewallPolicyManagedRuleOverrideRuleExclusionArray{
										&cdn.FrontdoorFirewallPolicyManagedRuleOverrideRuleExclusionArgs{
											MatchVariable: pulumi.String("QueryStringArgNames"),
											Operator:      pulumi.String("Equals"),
											Selector:      pulumi.String("innocent"),
										},
									},
								},
							},
						},
					},
				},
				&cdn.FrontdoorFirewallPolicyManagedRuleArgs{
					Type:    pulumi.String("Microsoft_BotManagerRuleSet"),
					Version: pulumi.String("1.0"),
					Action:  pulumi.String("Log"),
				},
			},
		})
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.core.ResourceGroup;
import com.pulumi.azure.core.ResourceGroupArgs;
import com.pulumi.azure.cdn.FrontdoorProfile;
import com.pulumi.azure.cdn.FrontdoorProfileArgs;
import com.pulumi.azure.cdn.FrontdoorFirewallPolicy;
import com.pulumi.azure.cdn.FrontdoorFirewallPolicyArgs;
import com.pulumi.azure.cdn.inputs.FrontdoorFirewallPolicyCustomRuleArgs;
import com.pulumi.azure.cdn.inputs.FrontdoorFirewallPolicyManagedRuleArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        var example = new ResourceGroup("example", ResourceGroupArgs.builder()
            .name("example-cdn-frontdoor")
            .location("West Europe")
            .build());

        var exampleFrontdoorProfile = new FrontdoorProfile("exampleFrontdoorProfile", FrontdoorProfileArgs.builder()
            .name("example-profile")
            .resourceGroupName(example.name())
            .skuName("Premium_AzureFrontDoor")
            .build());

        var exampleFrontdoorFirewallPolicy = new FrontdoorFirewallPolicy("exampleFrontdoorFirewallPolicy", FrontdoorFirewallPolicyArgs.builder()
            .name("examplecdnfdwafpolicy")
            .resourceGroupName(example.name())
            .skuName(exampleFrontdoorProfile.skuName())
            .enabled(true)
            .mode("Prevention")
            .redirectUrl("https://www.contoso.com")
            .customBlockResponseStatusCode(403)
            .customBlockResponseBody("PGh0bWw+CjxoZWFkZXI+PHRpdGxlPkhlbGxvPC90aXRsZT48L2hlYWRlcj4KPGJvZHk+CkhlbGxvIHdvcmxkCjwvYm9keT4KPC9odG1sPg==")
            .customRules(            
                FrontdoorFirewallPolicyCustomRuleArgs.builder()
                    .name("Rule1")
                    .enabled(true)
                    .priority(1)
                    .rateLimitDurationInMinutes(1)
                    .rateLimitThreshold(10)
                    .type("MatchRule")
                    .action("Block")
                    .matchConditions(FrontdoorFirewallPolicyCustomRuleMatchConditionArgs.builder()
                        .matchVariable("RemoteAddr")
                        .operator("IPMatch")
                        .negationCondition(false)
                        .matchValues(                        
                            "10.0.1.0/24",
                            "10.0.0.0/24")
                        .build())
                    .build(),
                FrontdoorFirewallPolicyCustomRuleArgs.builder()
                    .name("Rule2")
                    .enabled(true)
                    .priority(2)
                    .rateLimitDurationInMinutes(1)
                    .rateLimitThreshold(10)
                    .type("MatchRule")
                    .action("Block")
                    .matchConditions(                    
                        FrontdoorFirewallPolicyCustomRuleMatchConditionArgs.builder()
                            .matchVariable("RemoteAddr")
                            .operator("IPMatch")
                            .negationCondition(false)
                            .matchValues("192.168.1.0/24")
                            .build(),
                        FrontdoorFirewallPolicyCustomRuleMatchConditionArgs.builder()
                            .matchVariable("RequestHeader")
                            .selector("UserAgent")
                            .operator("Contains")
                            .negationCondition(false)
                            .matchValues("windows")
                            .transforms(                            
                                "Lowercase",
                                "Trim")
                            .build())
                    .build())
            .managedRules(            
                FrontdoorFirewallPolicyManagedRuleArgs.builder()
                    .type("DefaultRuleSet")
                    .version("1.0")
                    .exclusions(FrontdoorFirewallPolicyManagedRuleExclusionArgs.builder()
                        .matchVariable("QueryStringArgNames")
                        .operator("Equals")
                        .selector("not_suspicious")
                        .build())
                    .overrides(                    
                        FrontdoorFirewallPolicyManagedRuleOverrideArgs.builder()
                            .ruleGroupName("PHP")
                            .rules(FrontdoorFirewallPolicyManagedRuleOverrideRuleArgs.builder()
                                .ruleId("933100")
                                .enabled(false)
                                .action("Block")
                                .build())
                            .build(),
                        FrontdoorFirewallPolicyManagedRuleOverrideArgs.builder()
                            .ruleGroupName("SQLI")
                            .exclusions(FrontdoorFirewallPolicyManagedRuleOverrideExclusionArgs.builder()
                                .matchVariable("QueryStringArgNames")
                                .operator("Equals")
                                .selector("really_not_suspicious")
                                .build())
                            .rules(FrontdoorFirewallPolicyManagedRuleOverrideRuleArgs.builder()
                                .ruleId("942200")
                                .action("Block")
                                .exclusions(FrontdoorFirewallPolicyManagedRuleOverrideRuleExclusionArgs.builder()
                                    .matchVariable("QueryStringArgNames")
                                    .operator("Equals")
                                    .selector("innocent")
                                    .build())
                                .build())
                            .build())
                    .build(),
                FrontdoorFirewallPolicyManagedRuleArgs.builder()
                    .type("Microsoft_BotManagerRuleSet")
                    .version("1.0")
                    .action("Log")
                    .build())
            .build());

    }
}
```
```yaml
resources:
  example:
    type: azure:core:ResourceGroup
    properties:
      name: example-cdn-frontdoor
      location: West Europe
  exampleFrontdoorProfile:
    type: azure:cdn:FrontdoorProfile
    name: example
    properties:
      name: example-profile
      resourceGroupName: ${example.name}
      skuName: Premium_AzureFrontDoor
  exampleFrontdoorFirewallPolicy:
    type: azure:cdn:FrontdoorFirewallPolicy
    name: example
    properties:
      name: examplecdnfdwafpolicy
      resourceGroupName: ${example.name}
      skuName: ${exampleFrontdoorProfile.skuName}
      enabled: true
      mode: Prevention
      redirectUrl: https://www.contoso.com
      customBlockResponseStatusCode: 403
      customBlockResponseBody: PGh0bWw+CjxoZWFkZXI+PHRpdGxlPkhlbGxvPC90aXRsZT48L2hlYWRlcj4KPGJvZHk+CkhlbGxvIHdvcmxkCjwvYm9keT4KPC9odG1sPg==
      customRules:
        - name: Rule1
          enabled: true
          priority: 1
          rateLimitDurationInMinutes: 1
          rateLimitThreshold: 10
          type: MatchRule
          action: Block
          matchConditions:
            - matchVariable: RemoteAddr
              operator: IPMatch
              negationCondition: false
              matchValues:
                - 10.0.1.0/24
                - 10.0.0.0/24
        - name: Rule2
          enabled: true
          priority: 2
          rateLimitDurationInMinutes: 1
          rateLimitThreshold: 10
          type: MatchRule
          action: Block
          matchConditions:
            - matchVariable: RemoteAddr
              operator: IPMatch
              negationCondition: false
              matchValues:
                - 192.168.1.0/24
            - matchVariable: RequestHeader
              selector: UserAgent
              operator: Contains
              negationCondition: false
              matchValues:
                - windows
              transforms:
                - Lowercase
                - Trim
      managedRules:
        - type: DefaultRuleSet
          version: '1.0'
          exclusions:
            - matchVariable: QueryStringArgNames
              operator: Equals
              selector: not_suspicious
          overrides:
            - ruleGroupName: PHP
              rules:
                - ruleId: '933100'
                  enabled: false
                  action: Block
            - ruleGroupName: SQLI
              exclusions:
                - matchVariable: QueryStringArgNames
                  operator: Equals
                  selector: really_not_suspicious
              rules:
                - ruleId: '942200'
                  action: Block
                  exclusions:
                    - matchVariable: QueryStringArgNames
                      operator: Equals
                      selector: innocent
        - type: Microsoft_BotManagerRuleSet
          version: '1.0'
          action: Log
```
<!--End PulumiCodeChooser -->

## Import

Front Door Firewall Policies can be imported using the `resource id`, e.g.

```sh
$ pulumi import azure:cdn/frontdoorFirewallPolicy:FrontdoorFirewallPolicy example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.Network/frontDoorWebApplicationFirewallPolicies/firewallPolicy1
```


customBlockResponseBodyB" }If a `custom_rule` block's action type is `block`, this is the response body. The body must be specified in base64 encoding.
·
customBlockResponseStatusCodeB If a `custom_rule` block's action type is `block`, this is the response status code. Possible values are `200`, `403`, `405`, `406`, or `429`.
Ã
customRulesB}*{:y
w
cdn!FrontdoorFirewallPolicyCustomRuleMazure:cdn/FrontdoorFirewallPolicyCustomRule:FrontdoorFirewallPolicyCustomRule3One or more `custom_rule` blocks as defined below.
P
enabledB
 ?Is the Front Door Firewall Policy enabled? Defaults to `true`.
Ê
managedRulesB*~:|
z
cdn"FrontdoorFirewallPolicyManagedRuleOazure:cdn/FrontdoorFirewallPolicyManagedRule:FrontdoorFirewallPolicyManagedRule4One or more `managed_rule` blocks as defined below.
`
mode" TThe Front Door Firewall Policy mode. Possible values are `Detection`, `Prevention`.
Y
nameB" KThe name of the policy. Changing this forces a new resource to be created.
d
redirectUrlB" OIf action type is redirect, this field represents redirect URL for the client.
Ñ
requestBodyCheckEnabledB
 ¯Should policy managed rules inspect the request body content? Defaults to `true`.

> **NOTE:** When run in `Detection` mode, the Front Door Firewall Policy doesn't take any other actions other than monitoring and logging the request and its matched Front Door Rule to the Web Application Firewall logs.
l
resourceGroupName" SThe name of the resource group. Changing this forces a new resource to be created.
¥
skuName" The sku's pricing tier for this Front Door Firewall Policy. Possible values include `Standard_AzureFrontDoor` or `Premium_AzureFrontDoor`. Changing this forces a new resource to be created.

> **NOTE:** The `Standard_AzureFrontDoor` Front Door Firewall Policy sku may contain `custom` rules only. The `Premium_AzureFrontDoor` Front Door Firewall Policy skus may contain both `custom` and `managed` rules.
O
tagsB2" ?A mapping of tags to assign to the Front Door Firewall Policy.
"
customBlockResponseBodyB" }If a `custom_rule` block's action type is `block`, this is the response body. The body must be specified in base64 encoding.
"·
customBlockResponseStatusCodeB If a `custom_rule` block's action type is `block`, this is the response status code. Possible values are `200`, `403`, `405`, `406`, or `429`.
"Ã
customRulesB}*{:y
w
cdn!FrontdoorFirewallPolicyCustomRuleMazure:cdn/FrontdoorFirewallPolicyCustomRule:FrontdoorFirewallPolicyCustomRule3One or more `custom_rule` blocks as defined below.
"P
enabledB
 ?Is the Front Door Firewall Policy enabled? Defaults to `true`.
"y
frontendEndpointIds*" \The Front Door Profiles frontend endpoints associated with this Front Door Firewall Policy.
"Ê
managedRulesB*~:|
z
cdn"FrontdoorFirewallPolicyManagedRuleOazure:cdn/FrontdoorFirewallPolicyManagedRule:FrontdoorFirewallPolicyManagedRule4One or more `managed_rule` blocks as defined below.
"`
mode" TThe Front Door Firewall Policy mode. Possible values are `Detection`, `Prevention`.
"W
name" KThe name of the policy. Changing this forces a new resource to be created.
"d
redirectUrlB" OIf action type is redirect, this field represents redirect URL for the client.
"Ñ
requestBodyCheckEnabledB
 ¯Should policy managed rules inspect the request body content? Defaults to `true`.

> **NOTE:** When run in `Detection` mode, the Front Door Firewall Policy doesn't take any other actions other than monitoring and logging the request and its matched Front Door Rule to the Web Application Firewall logs.
"l
resourceGroupName" SThe name of the resource group. Changing this forces a new resource to be created.
"¥
skuName" The sku's pricing tier for this Front Door Firewall Policy. Possible values include `Standard_AzureFrontDoor` or `Premium_AzureFrontDoor`. Changing this forces a new resource to be created.

> **NOTE:** The `Standard_AzureFrontDoor` Front Door Firewall Policy sku may contain `custom` rules only. The `Premium_AzureFrontDoor` Front Door Firewall Policy skus may contain both `custom` and `managed` rules.
"O
tagsB2" ?A mapping of tags to assign to the Front Door Firewall Policy.
*¼
A
cdnFrontdoorOrigin)azure:cdn/frontdoorOrigin:FrontdoorOriginíâManages a Front Door (standard/premium) Origin.

!>**IMPORTANT:** If you are attempting to implement an Origin that uses its own Private Link Service with a Load Balancer the Profile resource in your configuration file **must** have a `depends_on` meta-argument which references the `azure.privatedns.LinkService`, see `Example Usage With Private Link Service` below.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const example = new azure.core.ResourceGroup("example", {
    name: "example-resources",
    location: "West Europe",
});
const exampleFrontdoorProfile = new azure.cdn.FrontdoorProfile("example", {
    name: "example-profile",
    resourceGroupName: example.name,
    skuName: "Premium_AzureFrontDoor",
});
const exampleFrontdoorOriginGroup = new azure.cdn.FrontdoorOriginGroup("example", {
    name: "example-origingroup",
    cdnFrontdoorProfileId: exampleFrontdoorProfile.id,
    loadBalancing: {},
});
const exampleFrontdoorOrigin = new azure.cdn.FrontdoorOrigin("example", {
    name: "example-origin",
    cdnFrontdoorOriginGroupId: exampleFrontdoorOriginGroup.id,
    enabled: true,
    certificateNameCheckEnabled: false,
    hostName: "contoso.com",
    httpPort: 80,
    httpsPort: 443,
    originHostHeader: "www.contoso.com",
    priority: 1,
    weight: 1,
});
```
```python
import pulumi
import pulumi_azure as azure

example = azure.core.ResourceGroup("example",
    name="example-resources",
    location="West Europe")
example_frontdoor_profile = azure.cdn.FrontdoorProfile("example",
    name="example-profile",
    resource_group_name=example.name,
    sku_name="Premium_AzureFrontDoor")
example_frontdoor_origin_group = azure.cdn.FrontdoorOriginGroup("example",
    name="example-origingroup",
    cdn_frontdoor_profile_id=example_frontdoor_profile.id,
    load_balancing={})
example_frontdoor_origin = azure.cdn.FrontdoorOrigin("example",
    name="example-origin",
    cdn_frontdoor_origin_group_id=example_frontdoor_origin_group.id,
    enabled=True,
    certificate_name_check_enabled=False,
    host_name="contoso.com",
    http_port=80,
    https_port=443,
    origin_host_header="www.contoso.com",
    priority=1,
    weight=1)
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var example = new Azure.Core.ResourceGroup("example", new()
    {
        Name = "example-resources",
        Location = "West Europe",
    });

    var exampleFrontdoorProfile = new Azure.Cdn.FrontdoorProfile("example", new()
    {
        Name = "example-profile",
        ResourceGroupName = example.Name,
        SkuName = "Premium_AzureFrontDoor",
    });

    var exampleFrontdoorOriginGroup = new Azure.Cdn.FrontdoorOriginGroup("example", new()
    {
        Name = "example-origingroup",
        CdnFrontdoorProfileId = exampleFrontdoorProfile.Id,
        LoadBalancing = null,
    });

    var exampleFrontdoorOrigin = new Azure.Cdn.FrontdoorOrigin("example", new()
    {
        Name = "example-origin",
        CdnFrontdoorOriginGroupId = exampleFrontdoorOriginGroup.Id,
        Enabled = true,
        CertificateNameCheckEnabled = false,
        HostName = "contoso.com",
        HttpPort = 80,
        HttpsPort = 443,
        OriginHostHeader = "www.contoso.com",
        Priority = 1,
        Weight = 1,
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/cdn"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
			Name:     pulumi.String("example-resources"),
			Location: pulumi.String("West Europe"),
		})
		if err != nil {
			return err
		}
		exampleFrontdoorProfile, err := cdn.NewFrontdoorProfile(ctx, "example", &cdn.FrontdoorProfileArgs{
			Name:              pulumi.String("example-profile"),
			ResourceGroupName: example.Name,
			SkuName:           pulumi.String("Premium_AzureFrontDoor"),
		})
		if err != nil {
			return err
		}
		exampleFrontdoorOriginGroup, err := cdn.NewFrontdoorOriginGroup(ctx, "example", &cdn.FrontdoorOriginGroupArgs{
			Name:                  pulumi.String("example-origingroup"),
			CdnFrontdoorProfileId: exampleFrontdoorProfile.ID(),
			LoadBalancing:         &cdn.FrontdoorOriginGroupLoadBalancingArgs{},
		})
		if err != nil {
			return err
		}
		_, err = cdn.NewFrontdoorOrigin(ctx, "example", &cdn.FrontdoorOriginArgs{
			Name:                        pulumi.String("example-origin"),
			CdnFrontdoorOriginGroupId:   exampleFrontdoorOriginGroup.ID(),
			Enabled:                     pulumi.Bool(true),
			CertificateNameCheckEnabled: pulumi.Bool(false),
			HostName:                    pulumi.String("contoso.com"),
			HttpPort:                    pulumi.Int(80),
			HttpsPort:                   pulumi.Int(443),
			OriginHostHeader:            pulumi.String("www.contoso.com"),
			Priority:                    pulumi.Int(1),
			Weight:                      pulumi.Int(1),
		})
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.core.ResourceGroup;
import com.pulumi.azure.core.ResourceGroupArgs;
import com.pulumi.azure.cdn.FrontdoorProfile;
import com.pulumi.azure.cdn.FrontdoorProfileArgs;
import com.pulumi.azure.cdn.FrontdoorOriginGroup;
import com.pulumi.azure.cdn.FrontdoorOriginGroupArgs;
import com.pulumi.azure.cdn.inputs.FrontdoorOriginGroupLoadBalancingArgs;
import com.pulumi.azure.cdn.FrontdoorOrigin;
import com.pulumi.azure.cdn.FrontdoorOriginArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        var example = new ResourceGroup("example", ResourceGroupArgs.builder()
            .name("example-resources")
            .location("West Europe")
            .build());

        var exampleFrontdoorProfile = new FrontdoorProfile("exampleFrontdoorProfile", FrontdoorProfileArgs.builder()
            .name("example-profile")
            .resourceGroupName(example.name())
            .skuName("Premium_AzureFrontDoor")
            .build());

        var exampleFrontdoorOriginGroup = new FrontdoorOriginGroup("exampleFrontdoorOriginGroup", FrontdoorOriginGroupArgs.builder()
            .name("example-origingroup")
            .cdnFrontdoorProfileId(exampleFrontdoorProfile.id())
            .loadBalancing()
            .build());

        var exampleFrontdoorOrigin = new FrontdoorOrigin("exampleFrontdoorOrigin", FrontdoorOriginArgs.builder()
            .name("example-origin")
            .cdnFrontdoorOriginGroupId(exampleFrontdoorOriginGroup.id())
            .enabled(true)
            .certificateNameCheckEnabled(false)
            .hostName("contoso.com")
            .httpPort(80)
            .httpsPort(443)
            .originHostHeader("www.contoso.com")
            .priority(1)
            .weight(1)
            .build());

    }
}
```
```yaml
resources:
  example:
    type: azure:core:ResourceGroup
    properties:
      name: example-resources
      location: West Europe
  exampleFrontdoorProfile:
    type: azure:cdn:FrontdoorProfile
    name: example
    properties:
      name: example-profile
      resourceGroupName: ${example.name}
      skuName: Premium_AzureFrontDoor
  exampleFrontdoorOriginGroup:
    type: azure:cdn:FrontdoorOriginGroup
    name: example
    properties:
      name: example-origingroup
      cdnFrontdoorProfileId: ${exampleFrontdoorProfile.id}
      loadBalancing: {}
  exampleFrontdoorOrigin:
    type: azure:cdn:FrontdoorOrigin
    name: example
    properties:
      name: example-origin
      cdnFrontdoorOriginGroupId: ${exampleFrontdoorOriginGroup.id}
      enabled: true
      certificateNameCheckEnabled: false
      hostName: contoso.com
      httpPort: 80
      httpsPort: 443
      originHostHeader: www.contoso.com
      priority: 1
      weight: 1
```
<!--End PulumiCodeChooser -->


### With Private Link

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const example = new azure.core.ResourceGroup("example", {
    name: "example-resources",
    location: "West Europe",
});
const exampleAccount = new azure.storage.Account("example", {
    name: "examplestoracc",
    resourceGroupName: example.name,
    location: example.location,
    accountTier: "Premium",
    accountReplicationType: "LRS",
    allowNestedItemsToBePublic: false,
    networkRules: {
        defaultAction: "Deny",
    },
    tags: {
        environment: "Example",
    },
});
const exampleFrontdoorProfile = new azure.cdn.FrontdoorProfile("example", {
    name: "example-profile",
    resourceGroupName: example.name,
    skuName: "Premium_AzureFrontDoor",
});
const exampleFrontdoorOriginGroup = new azure.cdn.FrontdoorOriginGroup("example", {
    name: "example-origin-group",
    cdnFrontdoorProfileId: exampleFrontdoorProfile.id,
    loadBalancing: {},
});
const exampleFrontdoorOrigin = new azure.cdn.FrontdoorOrigin("example", {
    name: "example-origin",
    cdnFrontdoorOriginGroupId: exampleFrontdoorOriginGroup.id,
    enabled: true,
    certificateNameCheckEnabled: true,
    hostName: exampleAccount.primaryBlobHost,
    originHostHeader: exampleAccount.primaryBlobHost,
    priority: 1,
    weight: 500,
    privateLink: {
        requestMessage: "Request access for Private Link Origin CDN Frontdoor",
        targetType: "blob",
        location: exampleAccount.location,
        privateLinkTargetId: exampleAccount.id,
    },
});
```
```python
import pulumi
import pulumi_azure as azure

example = azure.core.ResourceGroup("example",
    name="example-resources",
    location="West Europe")
example_account = azure.storage.Account("example",
    name="examplestoracc",
    resource_group_name=example.name,
    location=example.location,
    account_tier="Premium",
    account_replication_type="LRS",
    allow_nested_items_to_be_public=False,
    network_rules={
        "default_action": "Deny",
    },
    tags={
        "environment": "Example",
    })
example_frontdoor_profile = azure.cdn.FrontdoorProfile("example",
    name="example-profile",
    resource_group_name=example.name,
    sku_name="Premium_AzureFrontDoor")
example_frontdoor_origin_group = azure.cdn.FrontdoorOriginGroup("example",
    name="example-origin-group",
    cdn_frontdoor_profile_id=example_frontdoor_profile.id,
    load_balancing={})
example_frontdoor_origin = azure.cdn.FrontdoorOrigin("example",
    name="example-origin",
    cdn_frontdoor_origin_group_id=example_frontdoor_origin_group.id,
    enabled=True,
    certificate_name_check_enabled=True,
    host_name=example_account.primary_blob_host,
    origin_host_header=example_account.primary_blob_host,
    priority=1,
    weight=500,
    private_link={
        "request_message": "Request access for Private Link Origin CDN Frontdoor",
        "target_type": "blob",
        "location": example_account.location,
        "private_link_target_id": example_account.id,
    })
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var example = new Azure.Core.ResourceGroup("example", new()
    {
        Name = "example-resources",
        Location = "West Europe",
    });

    var exampleAccount = new Azure.Storage.Account("example", new()
    {
        Name = "examplestoracc",
        ResourceGroupName = example.Name,
        Location = example.Location,
        AccountTier = "Premium",
        AccountReplicationType = "LRS",
        AllowNestedItemsToBePublic = false,
        NetworkRules = new Azure.Storage.Inputs.AccountNetworkRulesArgs
        {
            DefaultAction = "Deny",
        },
        Tags = 
        {
            { "environment", "Example" },
        },
    });

    var exampleFrontdoorProfile = new Azure.Cdn.FrontdoorProfile("example", new()
    {
        Name = "example-profile",
        ResourceGroupName = example.Name,
        SkuName = "Premium_AzureFrontDoor",
    });

    var exampleFrontdoorOriginGroup = new Azure.Cdn.FrontdoorOriginGroup("example", new()
    {
        Name = "example-origin-group",
        CdnFrontdoorProfileId = exampleFrontdoorProfile.Id,
        LoadBalancing = null,
    });

    var exampleFrontdoorOrigin = new Azure.Cdn.FrontdoorOrigin("example", new()
    {
        Name = "example-origin",
        CdnFrontdoorOriginGroupId = exampleFrontdoorOriginGroup.Id,
        Enabled = true,
        CertificateNameCheckEnabled = true,
        HostName = exampleAccount.PrimaryBlobHost,
        OriginHostHeader = exampleAccount.PrimaryBlobHost,
        Priority = 1,
        Weight = 500,
        PrivateLink = new Azure.Cdn.Inputs.FrontdoorOriginPrivateLinkArgs
        {
            RequestMessage = "Request access for Private Link Origin CDN Frontdoor",
            TargetType = "blob",
            Location = exampleAccount.Location,
            PrivateLinkTargetId = exampleAccount.Id,
        },
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/cdn"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/storage"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
			Name:     pulumi.String("example-resources"),
			Location: pulumi.String("West Europe"),
		})
		if err != nil {
			return err
		}
		exampleAccount, err := storage.NewAccount(ctx, "example", &storage.AccountArgs{
			Name:                       pulumi.String("examplestoracc"),
			ResourceGroupName:          example.Name,
			Location:                   example.Location,
			AccountTier:                pulumi.String("Premium"),
			AccountReplicationType:     pulumi.String("LRS"),
			AllowNestedItemsToBePublic: pulumi.Bool(false),
			NetworkRules: &storage.AccountNetworkRulesTypeArgs{
				DefaultAction: pulumi.String("Deny"),
			},
			Tags: pulumi.StringMap{
				"environment": pulumi.String("Example"),
			},
		})
		if err != nil {
			return err
		}
		exampleFrontdoorProfile, err := cdn.NewFrontdoorProfile(ctx, "example", &cdn.FrontdoorProfileArgs{
			Name:              pulumi.String("example-profile"),
			ResourceGroupName: example.Name,
			SkuName:           pulumi.String("Premium_AzureFrontDoor"),
		})
		if err != nil {
			return err
		}
		exampleFrontdoorOriginGroup, err := cdn.NewFrontdoorOriginGroup(ctx, "example", &cdn.FrontdoorOriginGroupArgs{
			Name:                  pulumi.String("example-origin-group"),
			CdnFrontdoorProfileId: exampleFrontdoorProfile.ID(),
			LoadBalancing:         &cdn.FrontdoorOriginGroupLoadBalancingArgs{},
		})
		if err != nil {
			return err
		}
		_, err = cdn.NewFrontdoorOrigin(ctx, "example", &cdn.FrontdoorOriginArgs{
			Name:                        pulumi.String("example-origin"),
			CdnFrontdoorOriginGroupId:   exampleFrontdoorOriginGroup.ID(),
			Enabled:                     pulumi.Bool(true),
			CertificateNameCheckEnabled: pulumi.Bool(true),
			HostName:                    exampleAccount.PrimaryBlobHost,
			OriginHostHeader:            exampleAccount.PrimaryBlobHost,
			Priority:                    pulumi.Int(1),
			Weight:                      pulumi.Int(500),
			PrivateLink: &cdn.FrontdoorOriginPrivateLinkArgs{
				RequestMessage:      pulumi.String("Request access for Private Link Origin CDN Frontdoor"),
				TargetType:          pulumi.String("blob"),
				Location:            exampleAccount.Location,
				PrivateLinkTargetId: exampleAccount.ID(),
			},
		})
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.core.ResourceGroup;
import com.pulumi.azure.core.ResourceGroupArgs;
import com.pulumi.azure.storage.Account;
import com.pulumi.azure.storage.AccountArgs;
import com.pulumi.azure.storage.inputs.AccountNetworkRulesArgs;
import com.pulumi.azure.cdn.FrontdoorProfile;
import com.pulumi.azure.cdn.FrontdoorProfileArgs;
import com.pulumi.azure.cdn.FrontdoorOriginGroup;
import com.pulumi.azure.cdn.FrontdoorOriginGroupArgs;
import com.pulumi.azure.cdn.inputs.FrontdoorOriginGroupLoadBalancingArgs;
import com.pulumi.azure.cdn.FrontdoorOrigin;
import com.pulumi.azure.cdn.FrontdoorOriginArgs;
import com.pulumi.azure.cdn.inputs.FrontdoorOriginPrivateLinkArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        var example = new ResourceGroup("example", ResourceGroupArgs.builder()
            .name("example-resources")
            .location("West Europe")
            .build());

        var exampleAccount = new Account("exampleAccount", AccountArgs.builder()
            .name("examplestoracc")
            .resourceGroupName(example.name())
            .location(example.location())
            .accountTier("Premium")
            .accountReplicationType("LRS")
            .allowNestedItemsToBePublic(false)
            .networkRules(AccountNetworkRulesArgs.builder()
                .defaultAction("Deny")
                .build())
            .tags(Map.of("environment", "Example"))
            .build());

        var exampleFrontdoorProfile = new FrontdoorProfile("exampleFrontdoorProfile", FrontdoorProfileArgs.builder()
            .name("example-profile")
            .resourceGroupName(example.name())
            .skuName("Premium_AzureFrontDoor")
            .build());

        var exampleFrontdoorOriginGroup = new FrontdoorOriginGroup("exampleFrontdoorOriginGroup", FrontdoorOriginGroupArgs.builder()
            .name("example-origin-group")
            .cdnFrontdoorProfileId(exampleFrontdoorProfile.id())
            .loadBalancing()
            .build());

        var exampleFrontdoorOrigin = new FrontdoorOrigin("exampleFrontdoorOrigin", FrontdoorOriginArgs.builder()
            .name("example-origin")
            .cdnFrontdoorOriginGroupId(exampleFrontdoorOriginGroup.id())
            .enabled(true)
            .certificateNameCheckEnabled(true)
            .hostName(exampleAccount.primaryBlobHost())
            .originHostHeader(exampleAccount.primaryBlobHost())
            .priority(1)
            .weight(500)
            .privateLink(FrontdoorOriginPrivateLinkArgs.builder()
                .requestMessage("Request access for Private Link Origin CDN Frontdoor")
                .targetType("blob")
                .location(exampleAccount.location())
                .privateLinkTargetId(exampleAccount.id())
                .build())
            .build());

    }
}
```
```yaml
resources:
  example:
    type: azure:core:ResourceGroup
    properties:
      name: example-resources
      location: West Europe
  exampleAccount:
    type: azure:storage:Account
    name: example
    properties:
      name: examplestoracc
      resourceGroupName: ${example.name}
      location: ${example.location}
      accountTier: Premium
      accountReplicationType: LRS
      allowNestedItemsToBePublic: false
      networkRules:
        defaultAction: Deny
      tags:
        environment: Example
  exampleFrontdoorProfile:
    type: azure:cdn:FrontdoorProfile
    name: example
    properties:
      name: example-profile
      resourceGroupName: ${example.name}
      skuName: Premium_AzureFrontDoor
  exampleFrontdoorOriginGroup:
    type: azure:cdn:FrontdoorOriginGroup
    name: example
    properties:
      name: example-origin-group
      cdnFrontdoorProfileId: ${exampleFrontdoorProfile.id}
      loadBalancing: {}
  exampleFrontdoorOrigin:
    type: azure:cdn:FrontdoorOrigin
    name: example
    properties:
      name: example-origin
      cdnFrontdoorOriginGroupId: ${exampleFrontdoorOriginGroup.id}
      enabled: true
      certificateNameCheckEnabled: true
      hostName: ${exampleAccount.primaryBlobHost}
      originHostHeader: ${exampleAccount.primaryBlobHost}
      priority: 1
      weight: 500
      privateLink:
        requestMessage: Request access for Private Link Origin CDN Frontdoor
        targetType: blob
        location: ${exampleAccount.location}
        privateLinkTargetId: ${exampleAccount.id}
```
<!--End PulumiCodeChooser -->


### With Private Link Service

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const current = azure.core.getClientConfig({});
const example = new azure.core.ResourceGroup("example", {
    name: "example-resources",
    location: "West Europe",
});
const exampleVirtualNetwork = new azure.network.VirtualNetwork("example", {
    name: "vn-example",
    resourceGroupName: example.name,
    location: example.location,
    addressSpaces: ["10.5.0.0/16"],
});
const exampleSubnet = new azure.network.Subnet("example", {
    name: "sn-example",
    resourceGroupName: example.name,
    virtualNetworkName: exampleVirtualNetwork.name,
    addressPrefixes: ["10.5.1.0/24"],
    privateLinkServiceNetworkPoliciesEnabled: false,
});
const examplePublicIp = new azure.network.PublicIp("example", {
    name: "ip-example",
    sku: "Standard",
    location: example.location,
    resourceGroupName: example.name,
    allocationMethod: "Static",
});
const exampleLoadBalancer = new azure.lb.LoadBalancer("example", {
    name: "lb-example",
    sku: "Standard",
    location: example.location,
    resourceGroupName: example.name,
    frontendIpConfigurations: [{
        name: examplePublicIp.name,
        publicIpAddressId: examplePublicIp.id,
    }],
});
const exampleLinkService = new azure.privatedns.LinkService("example", {
    name: "pls-example",
    resourceGroupName: example.name,
    location: example.location,
    visibilitySubscriptionIds: [current.then(current => current.subscriptionId)],
    loadBalancerFrontendIpConfigurationIds: [exampleLoadBalancer.frontendIpConfigurations.apply(frontendIpConfigurations => frontendIpConfigurations?.[0]?.id)],
    natIpConfigurations: [{
        name: "primary",
        privateIpAddress: "10.5.1.17",
        privateIpAddressVersion: "IPv4",
        subnetId: exampleSubnet.id,
        primary: true,
    }],
});
const exampleFrontdoorProfile = new azure.cdn.FrontdoorProfile("example", {
    name: "profile-example",
    resourceGroupName: example.name,
    skuName: "Premium_AzureFrontDoor",
}, {
    dependsOn: [exampleLinkService],
});
const exampleFrontdoorOriginGroup = new azure.cdn.FrontdoorOriginGroup("example", {
    name: "group-example",
    cdnFrontdoorProfileId: exampleFrontdoorProfile.id,
    loadBalancing: {
        additionalLatencyInMilliseconds: 0,
        sampleSize: 16,
        successfulSamplesRequired: 3,
    },
});
const exampleFrontdoorOrigin = new azure.cdn.FrontdoorOrigin("example", {
    name: "origin-example",
    cdnFrontdoorOriginGroupId: exampleFrontdoorOriginGroup.id,
    enabled: true,
    hostName: "example.com",
    originHostHeader: "example.com",
    priority: 1,
    weight: 1000,
    certificateNameCheckEnabled: false,
    privateLink: {
        requestMessage: "Request access for Private Link Origin CDN Frontdoor",
        location: example.location,
        privateLinkTargetId: exampleLinkService.id,
    },
});
```
```python
import pulumi
import pulumi_azure as azure

current = azure.core.get_client_config()
example = azure.core.ResourceGroup("example",
    name="example-resources",
    location="West Europe")
example_virtual_network = azure.network.VirtualNetwork("example",
    name="vn-example",
    resource_group_name=example.name,
    location=example.location,
    address_spaces=["10.5.0.0/16"])
example_subnet = azure.network.Subnet("example",
    name="sn-example",
    resource_group_name=example.name,
    virtual_network_name=example_virtual_network.name,
    address_prefixes=["10.5.1.0/24"],
    private_link_service_network_policies_enabled=False)
example_public_ip = azure.network.PublicIp("example",
    name="ip-example",
    sku="Standard",
    location=example.location,
    resource_group_name=example.name,
    allocation_method="Static")
example_load_balancer = azure.lb.LoadBalancer("example",
    name="lb-example",
    sku="Standard",
    location=example.location,
    resource_group_name=example.name,
    frontend_ip_configurations=[{
        "name": example_public_ip.name,
        "public_ip_address_id": example_public_ip.id,
    }])
example_link_service = azure.privatedns.LinkService("example",
    name="pls-example",
    resource_group_name=example.name,
    location=example.location,
    visibility_subscription_ids=[current.subscription_id],
    load_balancer_frontend_ip_configuration_ids=[example_load_balancer.frontend_ip_configurations[0].id],
    nat_ip_configurations=[{
        "name": "primary",
        "private_ip_address": "10.5.1.17",
        "private_ip_address_version": "IPv4",
        "subnet_id": example_subnet.id,
        "primary": True,
    }])
example_frontdoor_profile = azure.cdn.FrontdoorProfile("example",
    name="profile-example",
    resource_group_name=example.name,
    sku_name="Premium_AzureFrontDoor",
    opts = pulumi.ResourceOptions(depends_on=[example_link_service]))
example_frontdoor_origin_group = azure.cdn.FrontdoorOriginGroup("example",
    name="group-example",
    cdn_frontdoor_profile_id=example_frontdoor_profile.id,
    load_balancing={
        "additional_latency_in_milliseconds": 0,
        "sample_size": 16,
        "successful_samples_required": 3,
    })
example_frontdoor_origin = azure.cdn.FrontdoorOrigin("example",
    name="origin-example",
    cdn_frontdoor_origin_group_id=example_frontdoor_origin_group.id,
    enabled=True,
    host_name="example.com",
    origin_host_header="example.com",
    priority=1,
    weight=1000,
    certificate_name_check_enabled=False,
    private_link={
        "request_message": "Request access for Private Link Origin CDN Frontdoor",
        "location": example.location,
        "private_link_target_id": example_link_service.id,
    })
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var current = Azure.Core.GetClientConfig.Invoke();

    var example = new Azure.Core.ResourceGroup("example", new()
    {
        Name = "example-resources",
        Location = "West Europe",
    });

    var exampleVirtualNetwork = new Azure.Network.VirtualNetwork("example", new()
    {
        Name = "vn-example",
        ResourceGroupName = example.Name,
        Location = example.Location,
        AddressSpaces = new[]
        {
            "10.5.0.0/16",
        },
    });

    var exampleSubnet = new Azure.Network.Subnet("example", new()
    {
        Name = "sn-example",
        ResourceGroupName = example.Name,
        VirtualNetworkName = exampleVirtualNetwork.Name,
        AddressPrefixes = new[]
        {
            "10.5.1.0/24",
        },
        PrivateLinkServiceNetworkPoliciesEnabled = false,
    });

    var examplePublicIp = new Azure.Network.PublicIp("example", new()
    {
        Name = "ip-example",
        Sku = "Standard",
        Location = example.Location,
        ResourceGroupName = example.Name,
        AllocationMethod = "Static",
    });

    var exampleLoadBalancer = new Azure.Lb.LoadBalancer("example", new()
    {
        Name = "lb-example",
        Sku = "Standard",
        Location = example.Location,
        ResourceGroupName = example.Name,
        FrontendIpConfigurations = new[]
        {
            new Azure.Lb.Inputs.LoadBalancerFrontendIpConfigurationArgs
            {
                Name = examplePublicIp.Name,
                PublicIpAddressId = examplePublicIp.Id,
            },
        },
    });

    var exampleLinkService = new Azure.PrivateDns.LinkService("example", new()
    {
        Name = "pls-example",
        ResourceGroupName = example.Name,
        Location = example.Location,
        VisibilitySubscriptionIds = new[]
        {
            current.Apply(getClientConfigResult => getClientConfigResult.SubscriptionId),
        },
        LoadBalancerFrontendIpConfigurationIds = new[]
        {
            exampleLoadBalancer.FrontendIpConfigurations.Apply(frontendIpConfigurations => frontendIpConfigurations[0]?.Id),
        },
        NatIpConfigurations = new[]
        {
            new Azure.PrivateDns.Inputs.LinkServiceNatIpConfigurationArgs
            {
                Name = "primary",
                PrivateIpAddress = "10.5.1.17",
                PrivateIpAddressVersion = "IPv4",
                SubnetId = exampleSubnet.Id,
                Primary = true,
            },
        },
    });

    var exampleFrontdoorProfile = new Azure.Cdn.FrontdoorProfile("example", new()
    {
        Name = "profile-example",
        ResourceGroupName = example.Name,
        SkuName = "Premium_AzureFrontDoor",
    }, new CustomResourceOptions
    {
        DependsOn =
        {
            exampleLinkService,
        },
    });

    var exampleFrontdoorOriginGroup = new Azure.Cdn.FrontdoorOriginGroup("example", new()
    {
        Name = "group-example",
        CdnFrontdoorProfileId = exampleFrontdoorProfile.Id,
        LoadBalancing = new Azure.Cdn.Inputs.FrontdoorOriginGroupLoadBalancingArgs
        {
            AdditionalLatencyInMilliseconds = 0,
            SampleSize = 16,
            SuccessfulSamplesRequired = 3,
        },
    });

    var exampleFrontdoorOrigin = new Azure.Cdn.FrontdoorOrigin("example", new()
    {
        Name = "origin-example",
        CdnFrontdoorOriginGroupId = exampleFrontdoorOriginGroup.Id,
        Enabled = true,
        HostName = "example.com",
        OriginHostHeader = "example.com",
        Priority = 1,
        Weight = 1000,
        CertificateNameCheckEnabled = false,
        PrivateLink = new Azure.Cdn.Inputs.FrontdoorOriginPrivateLinkArgs
        {
            RequestMessage = "Request access for Private Link Origin CDN Frontdoor",
            Location = example.Location,
            PrivateLinkTargetId = exampleLinkService.Id,
        },
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/cdn"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/lb"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/network"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/privatedns"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		current, err := core.GetClientConfig(ctx, map[string]interface{}{}, nil)
		if err != nil {
			return err
		}
		example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
			Name:     pulumi.String("example-resources"),
			Location: pulumi.String("West Europe"),
		})
		if err != nil {
			return err
		}
		exampleVirtualNetwork, err := network.NewVirtualNetwork(ctx, "example", &network.VirtualNetworkArgs{
			Name:              pulumi.String("vn-example"),
			ResourceGroupName: example.Name,
			Location:          example.Location,
			AddressSpaces: pulumi.StringArray{
				pulumi.String("10.5.0.0/16"),
			},
		})
		if err != nil {
			return err
		}
		exampleSubnet, err := network.NewSubnet(ctx, "example", &network.SubnetArgs{
			Name:               pulumi.String("sn-example"),
			ResourceGroupName:  example.Name,
			VirtualNetworkName: exampleVirtualNetwork.Name,
			AddressPrefixes: pulumi.StringArray{
				pulumi.String("10.5.1.0/24"),
			},
			PrivateLinkServiceNetworkPoliciesEnabled: pulumi.Bool(false),
		})
		if err != nil {
			return err
		}
		examplePublicIp, err := network.NewPublicIp(ctx, "example", &network.PublicIpArgs{
			Name:              pulumi.String("ip-example"),
			Sku:               pulumi.String("Standard"),
			Location:          example.Location,
			ResourceGroupName: example.Name,
			AllocationMethod:  pulumi.String("Static"),
		})
		if err != nil {
			return err
		}
		exampleLoadBalancer, err := lb.NewLoadBalancer(ctx, "example", &lb.LoadBalancerArgs{
			Name:              pulumi.String("lb-example"),
			Sku:               pulumi.String("Standard"),
			Location:          example.Location,
			ResourceGroupName: example.Name,
			FrontendIpConfigurations: lb.LoadBalancerFrontendIpConfigurationArray{
				&lb.LoadBalancerFrontendIpConfigurationArgs{
					Name:              examplePublicIp.Name,
					PublicIpAddressId: examplePublicIp.ID(),
				},
			},
		})
		if err != nil {
			return err
		}
		exampleLinkService, err := privatedns.NewLinkService(ctx, "example", &privatedns.LinkServiceArgs{
			Name:              pulumi.String("pls-example"),
			ResourceGroupName: example.Name,
			Location:          example.Location,
			VisibilitySubscriptionIds: pulumi.StringArray{
				pulumi.String(current.SubscriptionId),
			},
			LoadBalancerFrontendIpConfigurationIds: pulumi.StringArray{
				pulumi.String(exampleLoadBalancer.FrontendIpConfigurations.ApplyT(func(frontendIpConfigurations []lb.LoadBalancerFrontendIpConfiguration) (*string, error) {
					return &frontendIpConfigurations[0].Id, nil
				}).(pulumi.StringPtrOutput)),
			},
			NatIpConfigurations: privatedns.LinkServiceNatIpConfigurationArray{
				&privatedns.LinkServiceNatIpConfigurationArgs{
					Name:                    pulumi.String("primary"),
					PrivateIpAddress:        pulumi.String("10.5.1.17"),
					PrivateIpAddressVersion: pulumi.String("IPv4"),
					SubnetId:                exampleSubnet.ID(),
					Primary:                 pulumi.Bool(true),
				},
			},
		})
		if err != nil {
			return err
		}
		exampleFrontdoorProfile, err := cdn.NewFrontdoorProfile(ctx, "example", &cdn.FrontdoorProfileArgs{
			Name:              pulumi.String("profile-example"),
			ResourceGroupName: example.Name,
			SkuName:           pulumi.String("Premium_AzureFrontDoor"),
		}, pulumi.DependsOn([]pulumi.Resource{
			exampleLinkService,
		}))
		if err != nil {
			return err
		}
		exampleFrontdoorOriginGroup, err := cdn.NewFrontdoorOriginGroup(ctx, "example", &cdn.FrontdoorOriginGroupArgs{
			Name:                  pulumi.String("group-example"),
			CdnFrontdoorProfileId: exampleFrontdoorProfile.ID(),
			LoadBalancing: &cdn.FrontdoorOriginGroupLoadBalancingArgs{
				AdditionalLatencyInMilliseconds: pulumi.Int(0),
				SampleSize:                      pulumi.Int(16),
				SuccessfulSamplesRequired:       pulumi.Int(3),
			},
		})
		if err != nil {
			return err
		}
		_, err = cdn.NewFrontdoorOrigin(ctx, "example", &cdn.FrontdoorOriginArgs{
			Name:                        pulumi.String("origin-example"),
			CdnFrontdoorOriginGroupId:   exampleFrontdoorOriginGroup.ID(),
			Enabled:                     pulumi.Bool(true),
			HostName:                    pulumi.String("example.com"),
			OriginHostHeader:            pulumi.String("example.com"),
			Priority:                    pulumi.Int(1),
			Weight:                      pulumi.Int(1000),
			CertificateNameCheckEnabled: pulumi.Bool(false),
			PrivateLink: &cdn.FrontdoorOriginPrivateLinkArgs{
				RequestMessage:      pulumi.String("Request access for Private Link Origin CDN Frontdoor"),
				Location:            example.Location,
				PrivateLinkTargetId: exampleLinkService.ID(),
			},
		})
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.core.CoreFunctions;
import com.pulumi.azure.core.ResourceGroup;
import com.pulumi.azure.core.ResourceGroupArgs;
import com.pulumi.azure.network.VirtualNetwork;
import com.pulumi.azure.network.VirtualNetworkArgs;
import com.pulumi.azure.network.Subnet;
import com.pulumi.azure.network.SubnetArgs;
import com.pulumi.azure.network.PublicIp;
import com.pulumi.azure.network.PublicIpArgs;
import com.pulumi.azure.lb.LoadBalancer;
import com.pulumi.azure.lb.LoadBalancerArgs;
import com.pulumi.azure.lb.inputs.LoadBalancerFrontendIpConfigurationArgs;
import com.pulumi.azure.privatedns.LinkService;
import com.pulumi.azure.privatedns.LinkServiceArgs;
import com.pulumi.azure.privatedns.inputs.LinkServiceNatIpConfigurationArgs;
import com.pulumi.azure.cdn.FrontdoorProfile;
import com.pulumi.azure.cdn.FrontdoorProfileArgs;
import com.pulumi.azure.cdn.FrontdoorOriginGroup;
import com.pulumi.azure.cdn.FrontdoorOriginGroupArgs;
import com.pulumi.azure.cdn.inputs.FrontdoorOriginGroupLoadBalancingArgs;
import com.pulumi.azure.cdn.FrontdoorOrigin;
import com.pulumi.azure.cdn.FrontdoorOriginArgs;
import com.pulumi.azure.cdn.inputs.FrontdoorOriginPrivateLinkArgs;
import com.pulumi.resources.CustomResourceOptions;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        final var current = CoreFunctions.getClientConfig();

        var example = new ResourceGroup("example", ResourceGroupArgs.builder()
            .name("example-resources")
            .location("West Europe")
            .build());

        var exampleVirtualNetwork = new VirtualNetwork("exampleVirtualNetwork", VirtualNetworkArgs.builder()
            .name("vn-example")
            .resourceGroupName(example.name())
            .location(example.location())
            .addressSpaces("10.5.0.0/16")
            .build());

        var exampleSubnet = new Subnet("exampleSubnet", SubnetArgs.builder()
            .name("sn-example")
            .resourceGroupName(example.name())
            .virtualNetworkName(exampleVirtualNetwork.name())
            .addressPrefixes("10.5.1.0/24")
            .privateLinkServiceNetworkPoliciesEnabled(false)
            .build());

        var examplePublicIp = new PublicIp("examplePublicIp", PublicIpArgs.builder()
            .name("ip-example")
            .sku("Standard")
            .location(example.location())
            .resourceGroupName(example.name())
            .allocationMethod("Static")
            .build());

        var exampleLoadBalancer = new LoadBalancer("exampleLoadBalancer", LoadBalancerArgs.builder()
            .name("lb-example")
            .sku("Standard")
            .location(example.location())
            .resourceGroupName(example.name())
            .frontendIpConfigurations(LoadBalancerFrontendIpConfigurationArgs.builder()
                .name(examplePublicIp.name())
                .publicIpAddressId(examplePublicIp.id())
                .build())
            .build());

        var exampleLinkService = new LinkService("exampleLinkService", LinkServiceArgs.builder()
            .name("pls-example")
            .resourceGroupName(example.name())
            .location(example.location())
            .visibilitySubscriptionIds(current.applyValue(getClientConfigResult -> getClientConfigResult.subscriptionId()))
            .loadBalancerFrontendIpConfigurationIds(exampleLoadBalancer.frontendIpConfigurations().applyValue(frontendIpConfigurations -> frontendIpConfigurations[0].id()))
            .natIpConfigurations(LinkServiceNatIpConfigurationArgs.builder()
                .name("primary")
                .privateIpAddress("10.5.1.17")
                .privateIpAddressVersion("IPv4")
                .subnetId(exampleSubnet.id())
                .primary(true)
                .build())
            .build());

        var exampleFrontdoorProfile = new FrontdoorProfile("exampleFrontdoorProfile", FrontdoorProfileArgs.builder()
            .name("profile-example")
            .resourceGroupName(example.name())
            .skuName("Premium_AzureFrontDoor")
            .build(), CustomResourceOptions.builder()
                .dependsOn(exampleLinkService)
                .build());

        var exampleFrontdoorOriginGroup = new FrontdoorOriginGroup("exampleFrontdoorOriginGroup", FrontdoorOriginGroupArgs.builder()
            .name("group-example")
            .cdnFrontdoorProfileId(exampleFrontdoorProfile.id())
            .loadBalancing(FrontdoorOriginGroupLoadBalancingArgs.builder()
                .additionalLatencyInMilliseconds(0)
                .sampleSize(16)
                .successfulSamplesRequired(3)
                .build())
            .build());

        var exampleFrontdoorOrigin = new FrontdoorOrigin("exampleFrontdoorOrigin", FrontdoorOriginArgs.builder()
            .name("origin-example")
            .cdnFrontdoorOriginGroupId(exampleFrontdoorOriginGroup.id())
            .enabled(true)
            .hostName("example.com")
            .originHostHeader("example.com")
            .priority(1)
            .weight(1000)
            .certificateNameCheckEnabled(false)
            .privateLink(FrontdoorOriginPrivateLinkArgs.builder()
                .requestMessage("Request access for Private Link Origin CDN Frontdoor")
                .location(example.location())
                .privateLinkTargetId(exampleLinkService.id())
                .build())
            .build());

    }
}
```
```yaml
resources:
  example:
    type: azure:core:ResourceGroup
    properties:
      name: example-resources
      location: West Europe
  exampleFrontdoorProfile:
    type: azure:cdn:FrontdoorProfile
    name: example
    properties:
      name: profile-example
      resourceGroupName: ${example.name}
      skuName: Premium_AzureFrontDoor
    options:
      dependsOn:
        - ${exampleLinkService}
  exampleFrontdoorOrigin:
    type: azure:cdn:FrontdoorOrigin
    name: example
    properties:
      name: origin-example
      cdnFrontdoorOriginGroupId: ${exampleFrontdoorOriginGroup.id}
      enabled: true
      hostName: example.com
      originHostHeader: example.com
      priority: 1
      weight: 1000
      certificateNameCheckEnabled: false
      privateLink:
        requestMessage: Request access for Private Link Origin CDN Frontdoor
        location: ${example.location}
        privateLinkTargetId: ${exampleLinkService.id}
  exampleFrontdoorOriginGroup:
    type: azure:cdn:FrontdoorOriginGroup
    name: example
    properties:
      name: group-example
      cdnFrontdoorProfileId: ${exampleFrontdoorProfile.id}
      loadBalancing:
        additionalLatencyInMilliseconds: 0
        sampleSize: 16
        successfulSamplesRequired: 3
  exampleVirtualNetwork:
    type: azure:network:VirtualNetwork
    name: example
    properties:
      name: vn-example
      resourceGroupName: ${example.name}
      location: ${example.location}
      addressSpaces:
        - 10.5.0.0/16
  exampleSubnet:
    type: azure:network:Subnet
    name: example
    properties:
      name: sn-example
      resourceGroupName: ${example.name}
      virtualNetworkName: ${exampleVirtualNetwork.name}
      addressPrefixes:
        - 10.5.1.0/24
      privateLinkServiceNetworkPoliciesEnabled: false
  examplePublicIp:
    type: azure:network:PublicIp
    name: example
    properties:
      name: ip-example
      sku: Standard
      location: ${example.location}
      resourceGroupName: ${example.name}
      allocationMethod: Static
  exampleLoadBalancer:
    type: azure:lb:LoadBalancer
    name: example
    properties:
      name: lb-example
      sku: Standard
      location: ${example.location}
      resourceGroupName: ${example.name}
      frontendIpConfigurations:
        - name: ${examplePublicIp.name}
          publicIpAddressId: ${examplePublicIp.id}
  exampleLinkService:
    type: azure:privatedns:LinkService
    name: example
    properties:
      name: pls-example
      resourceGroupName: ${example.name}
      location: ${example.location}
      visibilitySubscriptionIds:
        - ${current.subscriptionId}
      loadBalancerFrontendIpConfigurationIds:
        - ${exampleLoadBalancer.frontendIpConfigurations[0].id}
      natIpConfigurations:
        - name: primary
          privateIpAddress: 10.5.1.17
          privateIpAddressVersion: IPv4
          subnetId: ${exampleSubnet.id}
          primary: true
variables:
  current:
    fn::invoke:
      function: azure:core:getClientConfig
      arguments: {}
```
<!--End PulumiCodeChooser -->

## Example HCL Configurations

* Private Link Origin with Storage Account Blob
* Private Link Origin with Storage Account Static Web Site
* Private Link Origin with Linux Web Application
* Private Link Origin with Internal Load Balancer

## Import

Front Door Origins can be imported using the `resource id`, e.g.

```sh
$ pulumi import azure:cdn/frontdoorOrigin:FrontdoorOrigin example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.Cdn/profiles/profile1/originGroups/originGroup1/origins/origin1
```

¶
cdnFrontdoorOriginGroupId" The ID of the Front Door Origin Group within which this Front Door Origin should exist. Changing this forces a new Front Door Origin to be created.
j
certificateNameCheckEnabled
 GSpecifies whether certificate name checks are enabled for this origin.
j
enabledB
 YShould the origin be enabled? Possible values are `true` or `false`. Defaults to `true`.
±
hostName"  The IPv4 address, IPv6 address or Domain name of the Origin.

!> **IMPORTANT:** This must be unique across all Front Door Origins within a Front Door Endpoint.
a
httpPortB OThe value of the HTTP port. Must be between `1` and `65535`. Defaults to `80`.
d
	httpsPortB QThe value of the HTTPS port. Must be between `1` and `65535`. Defaults to `443`.

nameB" vThe name which should be used for this Front Door Origin. Changing this forces a new Front Door Origin to be created.

originHostHeaderB" éThe host header value (an IPv4 address, IPv6 address or Domain name) which is sent to the origin with each request. If unspecified the hostname from the request will be used.

> Azure Front Door Origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin's hostname. This field's value overrides the host header defined in the Front Door Endpoint. For more information on how to properly set the origin host header value please see the [product documentation](https://docs.microsoft.com/azure/frontdoor/origin?pivots=front-door-standard-premium#origin-host-header).
é
priorityB ÖPriority of origin in given origin group for load balancing. Higher priorities will not be used for load balancing if any lower priority origin is healthy. Must be between `1` and `5` (inclusive). Defaults to `1`.
ï
privateLinkhBf:d
b
cdnFrontdoorOriginPrivateLink?azure:cdn/FrontdoorOriginPrivateLink:FrontdoorOriginPrivateLinkõA `private_link` block as defined below.

> **NOTE:** Private Link requires that the Front Door Profile this Origin is hosted within is using the SKU `Premium_AzureFrontDoor` and that the `certificate_name_check_enabled` field is set to `true`.

weightB xThe weight of the origin in a given origin group for load balancing. Must be between `1` and `1000`. Defaults to `500`.
"¶
cdnFrontdoorOriginGroupId" The ID of the Front Door Origin Group within which this Front Door Origin should exist. Changing this forces a new Front Door Origin to be created.
"j
certificateNameCheckEnabled
 GSpecifies whether certificate name checks are enabled for this origin.
"j
enabledB
 YShould the origin be enabled? Possible values are `true` or `false`. Defaults to `true`.
"±
hostName"  The IPv4 address, IPv6 address or Domain name of the Origin.

!> **IMPORTANT:** This must be unique across all Front Door Origins within a Front Door Endpoint.
"a
httpPortB OThe value of the HTTP port. Must be between `1` and `65535`. Defaults to `80`.
"d
	httpsPortB QThe value of the HTTPS port. Must be between `1` and `65535`. Defaults to `443`.
"
name" vThe name which should be used for this Front Door Origin. Changing this forces a new Front Door Origin to be created.
"
originHostHeaderB" éThe host header value (an IPv4 address, IPv6 address or Domain name) which is sent to the origin with each request. If unspecified the hostname from the request will be used.

> Azure Front Door Origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin's hostname. This field's value overrides the host header defined in the Front Door Endpoint. For more information on how to properly set the origin host header value please see the [product documentation](https://docs.microsoft.com/azure/frontdoor/origin?pivots=front-door-standard-premium#origin-host-header).
"é
priorityB ÖPriority of origin in given origin group for load balancing. Higher priorities will not be used for load balancing if any lower priority origin is healthy. Must be between `1` and `5` (inclusive). Defaults to `1`.
"ï
privateLinkhBf:d
b
cdnFrontdoorOriginPrivateLink?azure:cdn/FrontdoorOriginPrivateLink:FrontdoorOriginPrivateLinkõA `private_link` block as defined below.

> **NOTE:** Private Link requires that the Front Door Profile this Origin is hosted within is using the SKU `Premium_AzureFrontDoor` and that the `certificate_name_check_enabled` field is set to `true`.
"
weightB xThe weight of the origin in a given origin group for load balancing. Must be between `1` and `1000`. Defaults to `500`.
*ÔT
P
cdnFrontdoorOriginGroup3azure:cdn/frontdoorOriginGroup:FrontdoorOriginGroupû@Manages a Front Door (standard/premium) Origin Group.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const example = new azure.core.ResourceGroup("example", {
    name: "example-cdn-frontdoor",
    location: "West Europe",
});
const exampleFrontdoorProfile = new azure.cdn.FrontdoorProfile("example", {
    name: "example-profile",
    resourceGroupName: example.name,
    skuName: "Standard_AzureFrontDoor",
});
const exampleFrontdoorOriginGroup = new azure.cdn.FrontdoorOriginGroup("example", {
    name: "example-origin-group",
    cdnFrontdoorProfileId: exampleFrontdoorProfile.id,
    sessionAffinityEnabled: true,
    restoreTrafficTimeToHealedOrNewEndpointInMinutes: 10,
    healthProbe: {
        intervalInSeconds: 240,
        path: "/healthProbe",
        protocol: "Https",
        requestType: "HEAD",
    },
    loadBalancing: {
        additionalLatencyInMilliseconds: 0,
        sampleSize: 16,
        successfulSamplesRequired: 3,
    },
});
```
```python
import pulumi
import pulumi_azure as azure

example = azure.core.ResourceGroup("example",
    name="example-cdn-frontdoor",
    location="West Europe")
example_frontdoor_profile = azure.cdn.FrontdoorProfile("example",
    name="example-profile",
    resource_group_name=example.name,
    sku_name="Standard_AzureFrontDoor")
example_frontdoor_origin_group = azure.cdn.FrontdoorOriginGroup("example",
    name="example-origin-group",
    cdn_frontdoor_profile_id=example_frontdoor_profile.id,
    session_affinity_enabled=True,
    restore_traffic_time_to_healed_or_new_endpoint_in_minutes=10,
    health_probe={
        "interval_in_seconds": 240,
        "path": "/healthProbe",
        "protocol": "Https",
        "request_type": "HEAD",
    },
    load_balancing={
        "additional_latency_in_milliseconds": 0,
        "sample_size": 16,
        "successful_samples_required": 3,
    })
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var example = new Azure.Core.ResourceGroup("example", new()
    {
        Name = "example-cdn-frontdoor",
        Location = "West Europe",
    });

    var exampleFrontdoorProfile = new Azure.Cdn.FrontdoorProfile("example", new()
    {
        Name = "example-profile",
        ResourceGroupName = example.Name,
        SkuName = "Standard_AzureFrontDoor",
    });

    var exampleFrontdoorOriginGroup = new Azure.Cdn.FrontdoorOriginGroup("example", new()
    {
        Name = "example-origin-group",
        CdnFrontdoorProfileId = exampleFrontdoorProfile.Id,
        SessionAffinityEnabled = true,
        RestoreTrafficTimeToHealedOrNewEndpointInMinutes = 10,
        HealthProbe = new Azure.Cdn.Inputs.FrontdoorOriginGroupHealthProbeArgs
        {
            IntervalInSeconds = 240,
            Path = "/healthProbe",
            Protocol = "Https",
            RequestType = "HEAD",
        },
        LoadBalancing = new Azure.Cdn.Inputs.FrontdoorOriginGroupLoadBalancingArgs
        {
            AdditionalLatencyInMilliseconds = 0,
            SampleSize = 16,
            SuccessfulSamplesRequired = 3,
        },
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/cdn"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
			Name:     pulumi.String("example-cdn-frontdoor"),
			Location: pulumi.String("West Europe"),
		})
		if err != nil {
			return err
		}
		exampleFrontdoorProfile, err := cdn.NewFrontdoorProfile(ctx, "example", &cdn.FrontdoorProfileArgs{
			Name:              pulumi.String("example-profile"),
			ResourceGroupName: example.Name,
			SkuName:           pulumi.String("Standard_AzureFrontDoor"),
		})
		if err != nil {
			return err
		}
		_, err = cdn.NewFrontdoorOriginGroup(ctx, "example", &cdn.FrontdoorOriginGroupArgs{
			Name:                   pulumi.String("example-origin-group"),
			CdnFrontdoorProfileId:  exampleFrontdoorProfile.ID(),
			SessionAffinityEnabled: pulumi.Bool(true),
			RestoreTrafficTimeToHealedOrNewEndpointInMinutes: pulumi.Int(10),
			HealthProbe: &cdn.FrontdoorOriginGroupHealthProbeArgs{
				IntervalInSeconds: pulumi.Int(240),
				Path:              pulumi.String("/healthProbe"),
				Protocol:          pulumi.String("Https"),
				RequestType:       pulumi.String("HEAD"),
			},
			LoadBalancing: &cdn.FrontdoorOriginGroupLoadBalancingArgs{
				AdditionalLatencyInMilliseconds: pulumi.Int(0),
				SampleSize:                      pulumi.Int(16),
				SuccessfulSamplesRequired:       pulumi.Int(3),
			},
		})
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.core.ResourceGroup;
import com.pulumi.azure.core.ResourceGroupArgs;
import com.pulumi.azure.cdn.FrontdoorProfile;
import com.pulumi.azure.cdn.FrontdoorProfileArgs;
import com.pulumi.azure.cdn.FrontdoorOriginGroup;
import com.pulumi.azure.cdn.FrontdoorOriginGroupArgs;
import com.pulumi.azure.cdn.inputs.FrontdoorOriginGroupHealthProbeArgs;
import com.pulumi.azure.cdn.inputs.FrontdoorOriginGroupLoadBalancingArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        var example = new ResourceGroup("example", ResourceGroupArgs.builder()
            .name("example-cdn-frontdoor")
            .location("West Europe")
            .build());

        var exampleFrontdoorProfile = new FrontdoorProfile("exampleFrontdoorProfile", FrontdoorProfileArgs.builder()
            .name("example-profile")
            .resourceGroupName(example.name())
            .skuName("Standard_AzureFrontDoor")
            .build());

        var exampleFrontdoorOriginGroup = new FrontdoorOriginGroup("exampleFrontdoorOriginGroup", FrontdoorOriginGroupArgs.builder()
            .name("example-origin-group")
            .cdnFrontdoorProfileId(exampleFrontdoorProfile.id())
            .sessionAffinityEnabled(true)
            .restoreTrafficTimeToHealedOrNewEndpointInMinutes(10)
            .healthProbe(FrontdoorOriginGroupHealthProbeArgs.builder()
                .intervalInSeconds(240)
                .path("/healthProbe")
                .protocol("Https")
                .requestType("HEAD")
                .build())
            .loadBalancing(FrontdoorOriginGroupLoadBalancingArgs.builder()
                .additionalLatencyInMilliseconds(0)
                .sampleSize(16)
                .successfulSamplesRequired(3)
                .build())
            .build());

    }
}
```
```yaml
resources:
  example:
    type: azure:core:ResourceGroup
    properties:
      name: example-cdn-frontdoor
      location: West Europe
  exampleFrontdoorProfile:
    type: azure:cdn:FrontdoorProfile
    name: example
    properties:
      name: example-profile
      resourceGroupName: ${example.name}
      skuName: Standard_AzureFrontDoor
  exampleFrontdoorOriginGroup:
    type: azure:cdn:FrontdoorOriginGroup
    name: example
    properties:
      name: example-origin-group
      cdnFrontdoorProfileId: ${exampleFrontdoorProfile.id}
      sessionAffinityEnabled: true
      restoreTrafficTimeToHealedOrNewEndpointInMinutes: 10
      healthProbe:
        intervalInSeconds: 240
        path: /healthProbe
        protocol: Https
        requestType: HEAD
      loadBalancing:
        additionalLatencyInMilliseconds: 0
        sampleSize: 16
        successfulSamplesRequired: 3
```
<!--End PulumiCodeChooser -->

## Import

Front Door Origin Groups can be imported using the `resource id`, e.g.

```sh
$ pulumi import azure:cdn/frontdoorOriginGroup:FrontdoorOriginGroup example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.Cdn/profiles/profile1/originGroups/originGroup1
```

¹
cdnFrontdoorProfileId" The ID of the Front Door Profile within which this Front Door Origin Group should exist. Changing this forces a new Front Door Origin Group to be created.
±
healthProbewBu:s
q
cdnFrontdoorOriginGroupHealthProbeIazure:cdn/FrontdoorOriginGroupHealthProbe:FrontdoorOriginGroupHealthProbe)A `health_probe` block as defined below.
¹
loadBalancing{:y
w
cdn!FrontdoorOriginGroupLoadBalancingMazure:cdn/FrontdoorOriginGroupLoadBalancing:FrontdoorOriginGroupLoadBalancing+A `load_balancing` block as defined below.

nameB" The name which should be used for this Front Door Origin Group. Changing this forces a new Front Door Origin Group to be created.

0restoreTrafficTimeToHealedOrNewEndpointInMinutesB ÌSpecifies the amount of time which should elapse before shifting traffic to another endpoint when a healthy endpoint becomes unhealthy or a new endpoint is added. Possible values are between `0` and `50` minutes (inclusive). Default is `10` minutes.

> **NOTE:** This property is currently not used, but will be in the near future.
w
sessionAffinityEnabledB
 WSpecifies whether session affinity should be enabled on this host. Defaults to `true`.
"¹
cdnFrontdoorProfileId" The ID of the Front Door Profile within which this Front Door Origin Group should exist. Changing this forces a new Front Door Origin Group to be created.
"±
healthProbewBu:s
q
cdnFrontdoorOriginGroupHealthProbeIazure:cdn/FrontdoorOriginGroupHealthProbe:FrontdoorOriginGroupHealthProbe)A `health_probe` block as defined below.
"¹
loadBalancing{:y
w
cdn!FrontdoorOriginGroupLoadBalancingMazure:cdn/FrontdoorOriginGroupLoadBalancing:FrontdoorOriginGroupLoadBalancing+A `load_balancing` block as defined below.
"
name" The name which should be used for this Front Door Origin Group. Changing this forces a new Front Door Origin Group to be created.
"
0restoreTrafficTimeToHealedOrNewEndpointInMinutesB ÌSpecifies the amount of time which should elapse before shifting traffic to another endpoint when a healthy endpoint becomes unhealthy or a new endpoint is added. Possible values are between `0` and `50` minutes (inclusive). Default is `10` minutes.

> **NOTE:** This property is currently not used, but will be in the near future.
"w
sessionAffinityEnabledB
 WSpecifies whether session affinity should be enabled on this host. Defaults to `true`.
*¯.
D
cdnFrontdoorProfile+azure:cdn/frontdoorProfile:FrontdoorProfileÑ!Manages a Front Door (standard/premium) Profile which contains a collection of endpoints and origin groups.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const example = new azure.core.ResourceGroup("example", {
    name: "example-resources",
    location: "West Europe",
});
const exampleFrontdoorProfile = new azure.cdn.FrontdoorProfile("example", {
    name: "example-cdn-profile",
    resourceGroupName: example.name,
    skuName: "Standard_AzureFrontDoor",
    tags: {
        environment: "Production",
    },
});
```
```python
import pulumi
import pulumi_azure as azure

example = azure.core.ResourceGroup("example",
    name="example-resources",
    location="West Europe")
example_frontdoor_profile = azure.cdn.FrontdoorProfile("example",
    name="example-cdn-profile",
    resource_group_name=example.name,
    sku_name="Standard_AzureFrontDoor",
    tags={
        "environment": "Production",
    })
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var example = new Azure.Core.ResourceGroup("example", new()
    {
        Name = "example-resources",
        Location = "West Europe",
    });

    var exampleFrontdoorProfile = new Azure.Cdn.FrontdoorProfile("example", new()
    {
        Name = "example-cdn-profile",
        ResourceGroupName = example.Name,
        SkuName = "Standard_AzureFrontDoor",
        Tags = 
        {
            { "environment", "Production" },
        },
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/cdn"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
			Name:     pulumi.String("example-resources"),
			Location: pulumi.String("West Europe"),
		})
		if err != nil {
			return err
		}
		_, err = cdn.NewFrontdoorProfile(ctx, "example", &cdn.FrontdoorProfileArgs{
			Name:              pulumi.String("example-cdn-profile"),
			ResourceGroupName: example.Name,
			SkuName:           pulumi.String("Standard_AzureFrontDoor"),
			Tags: pulumi.StringMap{
				"environment": pulumi.String("Production"),
			},
		})
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.core.ResourceGroup;
import com.pulumi.azure.core.ResourceGroupArgs;
import com.pulumi.azure.cdn.FrontdoorProfile;
import com.pulumi.azure.cdn.FrontdoorProfileArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        var example = new ResourceGroup("example", ResourceGroupArgs.builder()
            .name("example-resources")
            .location("West Europe")
            .build());

        var exampleFrontdoorProfile = new FrontdoorProfile("exampleFrontdoorProfile", FrontdoorProfileArgs.builder()
            .name("example-cdn-profile")
            .resourceGroupName(example.name())
            .skuName("Standard_AzureFrontDoor")
            .tags(Map.of("environment", "Production"))
            .build());

    }
}
```
```yaml
resources:
  example:
    type: azure:core:ResourceGroup
    properties:
      name: example-resources
      location: West Europe
  exampleFrontdoorProfile:
    type: azure:cdn:FrontdoorProfile
    name: example
    properties:
      name: example-cdn-profile
      resourceGroupName: ${example.name}
      skuName: Standard_AzureFrontDoor
      tags:
        environment: Production
```
<!--End PulumiCodeChooser -->

## Import

Front Door Profiles can be imported using the `resource id`, e.g.

```sh
$ pulumi import azure:cdn/frontdoorProfile:FrontdoorProfile example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Cdn/profiles/myprofile1
```

o
nameB" aSpecifies the name of the Front Door Profile. Changing this forces a new resource to be created.

resourceGroupName" ~The name of the Resource Group where this Front Door Profile should exist. Changing this forces a new resource to be created.
¯
responseTimeoutSecondsB Specifies the maximum response timeout in seconds. Possible values are between `16` and `240` seconds (inclusive). Defaults to `120` seconds.
Â
skuName" ²Specifies the SKU for this Front Door Profile. Possible values include `Standard_AzureFrontDoor` and `Premium_AzureFrontDoor`. Changing this forces a new resource to be created.
G
tagsB2" 7Specifies a mapping of tags to assign to the resource.
"m
name" aSpecifies the name of the Front Door Profile. Changing this forces a new resource to be created.
"
resourceGroupName" ~The name of the Resource Group where this Front Door Profile should exist. Changing this forces a new resource to be created.
"
resourceGuid" kThe UUID of this Front Door Profile which will be sent in the HTTP Header as the `X-Azure-FDID` attribute.
"¯
responseTimeoutSecondsB Specifies the maximum response timeout in seconds. Possible values are between `16` and `240` seconds (inclusive). Defaults to `120` seconds.
"Â
skuName" ²Specifies the SKU for this Front Door Profile. Possible values include `Standard_AzureFrontDoor` and `Premium_AzureFrontDoor`. Changing this forces a new resource to be created.
"G
tagsB2" 7Specifies a mapping of tags to assign to the resource.
*¾
>
cdnFrontdoorRoute'azure:cdn/frontdoorRoute:FrontdoorRouteÞìManages a Front Door (standard/premium) Route.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";
import * as std from "@pulumi/std";

const example = new azure.core.ResourceGroup("example", {
    name: "example-cdn-frontdoor",
    location: "West Europe",
});
const exampleZone = new azure.dns.Zone("example", {
    name: "example.com",
    resourceGroupName: example.name,
});
const exampleFrontdoorProfile = new azure.cdn.FrontdoorProfile("example", {
    name: "example-profile",
    resourceGroupName: example.name,
    skuName: "Standard_AzureFrontDoor",
});
const exampleFrontdoorOriginGroup = new azure.cdn.FrontdoorOriginGroup("example", {
    name: "example-originGroup",
    cdnFrontdoorProfileId: exampleFrontdoorProfile.id,
    loadBalancing: {
        additionalLatencyInMilliseconds: 0,
        sampleSize: 16,
        successfulSamplesRequired: 3,
    },
});
const exampleFrontdoorOrigin = new azure.cdn.FrontdoorOrigin("example", {
    name: "example-origin",
    cdnFrontdoorOriginGroupId: exampleFrontdoorOriginGroup.id,
    enabled: true,
    certificateNameCheckEnabled: false,
    hostName: "contoso.com",
    httpPort: 80,
    httpsPort: 443,
    originHostHeader: "www.contoso.com",
    priority: 1,
    weight: 1,
});
const exampleFrontdoorEndpoint = new azure.cdn.FrontdoorEndpoint("example", {
    name: "example-endpoint",
    cdnFrontdoorProfileId: exampleFrontdoorProfile.id,
});
const exampleFrontdoorRuleSet = new azure.cdn.FrontdoorRuleSet("example", {
    name: "ExampleRuleSet",
    cdnFrontdoorProfileId: exampleFrontdoorProfile.id,
});
const contoso = new azure.cdn.FrontdoorCustomDomain("contoso", {
    name: "contoso-custom-domain",
    cdnFrontdoorProfileId: exampleFrontdoorProfile.id,
    dnsZoneId: exampleZone.id,
    hostName: std.joinOutput({
        separator: ".",
        input: [
            "contoso",
            exampleZone.name,
        ],
    }).apply(invoke => invoke.result),
    tls: {
        certificateType: "ManagedCertificate",
        minimumTlsVersion: "TLS12",
    },
});
const fabrikam = new azure.cdn.FrontdoorCustomDomain("fabrikam", {
    name: "fabrikam-custom-domain",
    cdnFrontdoorProfileId: exampleFrontdoorProfile.id,
    dnsZoneId: exampleZone.id,
    hostName: std.joinOutput({
        separator: ".",
        input: [
            "fabrikam",
            exampleZone.name,
        ],
    }).apply(invoke => invoke.result),
    tls: {
        certificateType: "ManagedCertificate",
        minimumTlsVersion: "TLS12",
    },
});
const exampleFrontdoorRoute = new azure.cdn.FrontdoorRoute("example", {
    name: "example-route",
    cdnFrontdoorEndpointId: exampleFrontdoorEndpoint.id,
    cdnFrontdoorOriginGroupId: exampleFrontdoorOriginGroup.id,
    cdnFrontdoorOriginIds: [exampleFrontdoorOrigin.id],
    cdnFrontdoorRuleSetIds: [exampleFrontdoorRuleSet.id],
    enabled: true,
    forwardingProtocol: "HttpsOnly",
    httpsRedirectEnabled: true,
    patternsToMatches: ["/*"],
    supportedProtocols: [
        "Http",
        "Https",
    ],
    cdnFrontdoorCustomDomainIds: [
        contoso.id,
        fabrikam.id,
    ],
    linkToDefaultDomain: false,
    cache: {
        queryStringCachingBehavior: "IgnoreSpecifiedQueryStrings",
        queryStrings: [
            "account",
            "settings",
        ],
        compressionEnabled: true,
        contentTypesToCompresses: [
            "text/html",
            "text/javascript",
            "text/xml",
        ],
    },
});
const contosoFrontdoorCustomDomainAssociation = new azure.cdn.FrontdoorCustomDomainAssociation("contoso", {
    cdnFrontdoorCustomDomainId: contoso.id,
    cdnFrontdoorRouteIds: [exampleFrontdoorRoute.id],
});
const fabrikamFrontdoorCustomDomainAssociation = new azure.cdn.FrontdoorCustomDomainAssociation("fabrikam", {
    cdnFrontdoorCustomDomainId: fabrikam.id,
    cdnFrontdoorRouteIds: [exampleFrontdoorRoute.id],
});
```
```python
import pulumi
import pulumi_azure as azure
import pulumi_std as std

example = azure.core.ResourceGroup("example",
    name="example-cdn-frontdoor",
    location="West Europe")
example_zone = azure.dns.Zone("example",
    name="example.com",
    resource_group_name=example.name)
example_frontdoor_profile = azure.cdn.FrontdoorProfile("example",
    name="example-profile",
    resource_group_name=example.name,
    sku_name="Standard_AzureFrontDoor")
example_frontdoor_origin_group = azure.cdn.FrontdoorOriginGroup("example",
    name="example-originGroup",
    cdn_frontdoor_profile_id=example_frontdoor_profile.id,
    load_balancing={
        "additional_latency_in_milliseconds": 0,
        "sample_size": 16,
        "successful_samples_required": 3,
    })
example_frontdoor_origin = azure.cdn.FrontdoorOrigin("example",
    name="example-origin",
    cdn_frontdoor_origin_group_id=example_frontdoor_origin_group.id,
    enabled=True,
    certificate_name_check_enabled=False,
    host_name="contoso.com",
    http_port=80,
    https_port=443,
    origin_host_header="www.contoso.com",
    priority=1,
    weight=1)
example_frontdoor_endpoint = azure.cdn.FrontdoorEndpoint("example",
    name="example-endpoint",
    cdn_frontdoor_profile_id=example_frontdoor_profile.id)
example_frontdoor_rule_set = azure.cdn.FrontdoorRuleSet("example",
    name="ExampleRuleSet",
    cdn_frontdoor_profile_id=example_frontdoor_profile.id)
contoso = azure.cdn.FrontdoorCustomDomain("contoso",
    name="contoso-custom-domain",
    cdn_frontdoor_profile_id=example_frontdoor_profile.id,
    dns_zone_id=example_zone.id,
    host_name=std.join_output(separator=".",
        input=[
            "contoso",
            example_zone.name,
        ]).apply(lambda invoke: invoke.result),
    tls={
        "certificate_type": "ManagedCertificate",
        "minimum_tls_version": "TLS12",
    })
fabrikam = azure.cdn.FrontdoorCustomDomain("fabrikam",
    name="fabrikam-custom-domain",
    cdn_frontdoor_profile_id=example_frontdoor_profile.id,
    dns_zone_id=example_zone.id,
    host_name=std.join_output(separator=".",
        input=[
            "fabrikam",
            example_zone.name,
        ]).apply(lambda invoke: invoke.result),
    tls={
        "certificate_type": "ManagedCertificate",
        "minimum_tls_version": "TLS12",
    })
example_frontdoor_route = azure.cdn.FrontdoorRoute("example",
    name="example-route",
    cdn_frontdoor_endpoint_id=example_frontdoor_endpoint.id,
    cdn_frontdoor_origin_group_id=example_frontdoor_origin_group.id,
    cdn_frontdoor_origin_ids=[example_frontdoor_origin.id],
    cdn_frontdoor_rule_set_ids=[example_frontdoor_rule_set.id],
    enabled=True,
    forwarding_protocol="HttpsOnly",
    https_redirect_enabled=True,
    patterns_to_matches=["/*"],
    supported_protocols=[
        "Http",
        "Https",
    ],
    cdn_frontdoor_custom_domain_ids=[
        contoso.id,
        fabrikam.id,
    ],
    link_to_default_domain=False,
    cache={
        "query_string_caching_behavior": "IgnoreSpecifiedQueryStrings",
        "query_strings": [
            "account",
            "settings",
        ],
        "compression_enabled": True,
        "content_types_to_compresses": [
            "text/html",
            "text/javascript",
            "text/xml",
        ],
    })
contoso_frontdoor_custom_domain_association = azure.cdn.FrontdoorCustomDomainAssociation("contoso",
    cdn_frontdoor_custom_domain_id=contoso.id,
    cdn_frontdoor_route_ids=[example_frontdoor_route.id])
fabrikam_frontdoor_custom_domain_association = azure.cdn.FrontdoorCustomDomainAssociation("fabrikam",
    cdn_frontdoor_custom_domain_id=fabrikam.id,
    cdn_frontdoor_route_ids=[example_frontdoor_route.id])
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;
using Std = Pulumi.Std;

return await Deployment.RunAsync(() => 
{
    var example = new Azure.Core.ResourceGroup("example", new()
    {
        Name = "example-cdn-frontdoor",
        Location = "West Europe",
    });

    var exampleZone = new Azure.Dns.Zone("example", new()
    {
        Name = "example.com",
        ResourceGroupName = example.Name,
    });

    var exampleFrontdoorProfile = new Azure.Cdn.FrontdoorProfile("example", new()
    {
        Name = "example-profile",
        ResourceGroupName = example.Name,
        SkuName = "Standard_AzureFrontDoor",
    });

    var exampleFrontdoorOriginGroup = new Azure.Cdn.FrontdoorOriginGroup("example", new()
    {
        Name = "example-originGroup",
        CdnFrontdoorProfileId = exampleFrontdoorProfile.Id,
        LoadBalancing = new Azure.Cdn.Inputs.FrontdoorOriginGroupLoadBalancingArgs
        {
            AdditionalLatencyInMilliseconds = 0,
            SampleSize = 16,
            SuccessfulSamplesRequired = 3,
        },
    });

    var exampleFrontdoorOrigin = new Azure.Cdn.FrontdoorOrigin("example", new()
    {
        Name = "example-origin",
        CdnFrontdoorOriginGroupId = exampleFrontdoorOriginGroup.Id,
        Enabled = true,
        CertificateNameCheckEnabled = false,
        HostName = "contoso.com",
        HttpPort = 80,
        HttpsPort = 443,
        OriginHostHeader = "www.contoso.com",
        Priority = 1,
        Weight = 1,
    });

    var exampleFrontdoorEndpoint = new Azure.Cdn.FrontdoorEndpoint("example", new()
    {
        Name = "example-endpoint",
        CdnFrontdoorProfileId = exampleFrontdoorProfile.Id,
    });

    var exampleFrontdoorRuleSet = new Azure.Cdn.FrontdoorRuleSet("example", new()
    {
        Name = "ExampleRuleSet",
        CdnFrontdoorProfileId = exampleFrontdoorProfile.Id,
    });

    var contoso = new Azure.Cdn.FrontdoorCustomDomain("contoso", new()
    {
        Name = "contoso-custom-domain",
        CdnFrontdoorProfileId = exampleFrontdoorProfile.Id,
        DnsZoneId = exampleZone.Id,
        HostName = Std.Join.Invoke(new()
        {
            Separator = ".",
            Input = new[]
            {
                "contoso",
                exampleZone.Name,
            },
        }).Apply(invoke => invoke.Result),
        Tls = new Azure.Cdn.Inputs.FrontdoorCustomDomainTlsArgs
        {
            CertificateType = "ManagedCertificate",
            MinimumTlsVersion = "TLS12",
        },
    });

    var fabrikam = new Azure.Cdn.FrontdoorCustomDomain("fabrikam", new()
    {
        Name = "fabrikam-custom-domain",
        CdnFrontdoorProfileId = exampleFrontdoorProfile.Id,
        DnsZoneId = exampleZone.Id,
        HostName = Std.Join.Invoke(new()
        {
            Separator = ".",
            Input = new[]
            {
                "fabrikam",
                exampleZone.Name,
            },
        }).Apply(invoke => invoke.Result),
        Tls = new Azure.Cdn.Inputs.FrontdoorCustomDomainTlsArgs
        {
            CertificateType = "ManagedCertificate",
            MinimumTlsVersion = "TLS12",
        },
    });

    var exampleFrontdoorRoute = new Azure.Cdn.FrontdoorRoute("example", new()
    {
        Name = "example-route",
        CdnFrontdoorEndpointId = exampleFrontdoorEndpoint.Id,
        CdnFrontdoorOriginGroupId = exampleFrontdoorOriginGroup.Id,
        CdnFrontdoorOriginIds = new[]
        {
            exampleFrontdoorOrigin.Id,
        },
        CdnFrontdoorRuleSetIds = new[]
        {
            exampleFrontdoorRuleSet.Id,
        },
        Enabled = true,
        ForwardingProtocol = "HttpsOnly",
        HttpsRedirectEnabled = true,
        PatternsToMatches = new[]
        {
            "/*",
        },
        SupportedProtocols = new[]
        {
            "Http",
            "Https",
        },
        CdnFrontdoorCustomDomainIds = new[]
        {
            contoso.Id,
            fabrikam.Id,
        },
        LinkToDefaultDomain = false,
        Cache = new Azure.Cdn.Inputs.FrontdoorRouteCacheArgs
        {
            QueryStringCachingBehavior = "IgnoreSpecifiedQueryStrings",
            QueryStrings = new[]
            {
                "account",
                "settings",
            },
            CompressionEnabled = true,
            ContentTypesToCompresses = new[]
            {
                "text/html",
                "text/javascript",
                "text/xml",
            },
        },
    });

    var contosoFrontdoorCustomDomainAssociation = new Azure.Cdn.FrontdoorCustomDomainAssociation("contoso", new()
    {
        CdnFrontdoorCustomDomainId = contoso.Id,
        CdnFrontdoorRouteIds = new[]
        {
            exampleFrontdoorRoute.Id,
        },
    });

    var fabrikamFrontdoorCustomDomainAssociation = new Azure.Cdn.FrontdoorCustomDomainAssociation("fabrikam", new()
    {
        CdnFrontdoorCustomDomainId = fabrikam.Id,
        CdnFrontdoorRouteIds = new[]
        {
            exampleFrontdoorRoute.Id,
        },
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/cdn"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/dns"
	"github.com/pulumi/pulumi-std/sdk/go/std"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
			Name:     pulumi.String("example-cdn-frontdoor"),
			Location: pulumi.String("West Europe"),
		})
		if err != nil {
			return err
		}
		exampleZone, err := dns.NewZone(ctx, "example", &dns.ZoneArgs{
			Name:              pulumi.String("example.com"),
			ResourceGroupName: example.Name,
		})
		if err != nil {
			return err
		}
		exampleFrontdoorProfile, err := cdn.NewFrontdoorProfile(ctx, "example", &cdn.FrontdoorProfileArgs{
			Name:              pulumi.String("example-profile"),
			ResourceGroupName: example.Name,
			SkuName:           pulumi.String("Standard_AzureFrontDoor"),
		})
		if err != nil {
			return err
		}
		exampleFrontdoorOriginGroup, err := cdn.NewFrontdoorOriginGroup(ctx, "example", &cdn.FrontdoorOriginGroupArgs{
			Name:                  pulumi.String("example-originGroup"),
			CdnFrontdoorProfileId: exampleFrontdoorProfile.ID(),
			LoadBalancing: &cdn.FrontdoorOriginGroupLoadBalancingArgs{
				AdditionalLatencyInMilliseconds: pulumi.Int(0),
				SampleSize:                      pulumi.Int(16),
				SuccessfulSamplesRequired:       pulumi.Int(3),
			},
		})
		if err != nil {
			return err
		}
		exampleFrontdoorOrigin, err := cdn.NewFrontdoorOrigin(ctx, "example", &cdn.FrontdoorOriginArgs{
			Name:                        pulumi.String("example-origin"),
			CdnFrontdoorOriginGroupId:   exampleFrontdoorOriginGroup.ID(),
			Enabled:                     pulumi.Bool(true),
			CertificateNameCheckEnabled: pulumi.Bool(false),
			HostName:                    pulumi.String("contoso.com"),
			HttpPort:                    pulumi.Int(80),
			HttpsPort:                   pulumi.Int(443),
			OriginHostHeader:            pulumi.String("www.contoso.com"),
			Priority:                    pulumi.Int(1),
			Weight:                      pulumi.Int(1),
		})
		if err != nil {
			return err
		}
		exampleFrontdoorEndpoint, err := cdn.NewFrontdoorEndpoint(ctx, "example", &cdn.FrontdoorEndpointArgs{
			Name:                  pulumi.String("example-endpoint"),
			CdnFrontdoorProfileId: exampleFrontdoorProfile.ID(),
		})
		if err != nil {
			return err
		}
		exampleFrontdoorRuleSet, err := cdn.NewFrontdoorRuleSet(ctx, "example", &cdn.FrontdoorRuleSetArgs{
			Name:                  pulumi.String("ExampleRuleSet"),
			CdnFrontdoorProfileId: exampleFrontdoorProfile.ID(),
		})
		if err != nil {
			return err
		}
		contoso, err := cdn.NewFrontdoorCustomDomain(ctx, "contoso", &cdn.FrontdoorCustomDomainArgs{
			Name:                  pulumi.String("contoso-custom-domain"),
			CdnFrontdoorProfileId: exampleFrontdoorProfile.ID(),
			DnsZoneId:             exampleZone.ID(),
			HostName: pulumi.String(std.JoinOutput(ctx, std.JoinOutputArgs{
				Separator: pulumi.String("."),
				Input: pulumi.StringArray{
					pulumi.String("contoso"),
					exampleZone.Name,
				},
			}, nil).ApplyT(func(invoke std.JoinResult) (*string, error) {
				return invoke.Result, nil
			}).(pulumi.StringPtrOutput)),
			Tls: &cdn.FrontdoorCustomDomainTlsArgs{
				CertificateType:   pulumi.String("ManagedCertificate"),
				MinimumTlsVersion: pulumi.String("TLS12"),
			},
		})
		if err != nil {
			return err
		}
		fabrikam, err := cdn.NewFrontdoorCustomDomain(ctx, "fabrikam", &cdn.FrontdoorCustomDomainArgs{
			Name:                  pulumi.String("fabrikam-custom-domain"),
			CdnFrontdoorProfileId: exampleFrontdoorProfile.ID(),
			DnsZoneId:             exampleZone.ID(),
			HostName: pulumi.String(std.JoinOutput(ctx, std.JoinOutputArgs{
				Separator: pulumi.String("."),
				Input: pulumi.StringArray{
					pulumi.String("fabrikam"),
					exampleZone.Name,
				},
			}, nil).ApplyT(func(invoke std.JoinResult) (*string, error) {
				return invoke.Result, nil
			}).(pulumi.StringPtrOutput)),
			Tls: &cdn.FrontdoorCustomDomainTlsArgs{
				CertificateType:   pulumi.String("ManagedCertificate"),
				MinimumTlsVersion: pulumi.String("TLS12"),
			},
		})
		if err != nil {
			return err
		}
		exampleFrontdoorRoute, err := cdn.NewFrontdoorRoute(ctx, "example", &cdn.FrontdoorRouteArgs{
			Name:                      pulumi.String("example-route"),
			CdnFrontdoorEndpointId:    exampleFrontdoorEndpoint.ID(),
			CdnFrontdoorOriginGroupId: exampleFrontdoorOriginGroup.ID(),
			CdnFrontdoorOriginIds: pulumi.StringArray{
				exampleFrontdoorOrigin.ID(),
			},
			CdnFrontdoorRuleSetIds: pulumi.StringArray{
				exampleFrontdoorRuleSet.ID(),
			},
			Enabled:              pulumi.Bool(true),
			ForwardingProtocol:   pulumi.String("HttpsOnly"),
			HttpsRedirectEnabled: pulumi.Bool(true),
			PatternsToMatches: pulumi.StringArray{
				pulumi.String("/*"),
			},
			SupportedProtocols: pulumi.StringArray{
				pulumi.String("Http"),
				pulumi.String("Https"),
			},
			CdnFrontdoorCustomDomainIds: pulumi.StringArray{
				contoso.ID(),
				fabrikam.ID(),
			},
			LinkToDefaultDomain: pulumi.Bool(false),
			Cache: &cdn.FrontdoorRouteCacheArgs{
				QueryStringCachingBehavior: pulumi.String("IgnoreSpecifiedQueryStrings"),
				QueryStrings: pulumi.StringArray{
					pulumi.String("account"),
					pulumi.String("settings"),
				},
				CompressionEnabled: pulumi.Bool(true),
				ContentTypesToCompresses: pulumi.StringArray{
					pulumi.String("text/html"),
					pulumi.String("text/javascript"),
					pulumi.String("text/xml"),
				},
			},
		})
		if err != nil {
			return err
		}
		_, err = cdn.NewFrontdoorCustomDomainAssociation(ctx, "contoso", &cdn.FrontdoorCustomDomainAssociationArgs{
			CdnFrontdoorCustomDomainId: contoso.ID(),
			CdnFrontdoorRouteIds: pulumi.StringArray{
				exampleFrontdoorRoute.ID(),
			},
		})
		if err != nil {
			return err
		}
		_, err = cdn.NewFrontdoorCustomDomainAssociation(ctx, "fabrikam", &cdn.FrontdoorCustomDomainAssociationArgs{
			CdnFrontdoorCustomDomainId: fabrikam.ID(),
			CdnFrontdoorRouteIds: pulumi.StringArray{
				exampleFrontdoorRoute.ID(),
			},
		})
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.core.ResourceGroup;
import com.pulumi.azure.core.ResourceGroupArgs;
import com.pulumi.azure.dns.Zone;
import com.pulumi.azure.dns.ZoneArgs;
import com.pulumi.azure.cdn.FrontdoorProfile;
import com.pulumi.azure.cdn.FrontdoorProfileArgs;
import com.pulumi.azure.cdn.FrontdoorOriginGroup;
import com.pulumi.azure.cdn.FrontdoorOriginGroupArgs;
import com.pulumi.azure.cdn.inputs.FrontdoorOriginGroupLoadBalancingArgs;
import com.pulumi.azure.cdn.FrontdoorOrigin;
import com.pulumi.azure.cdn.FrontdoorOriginArgs;
import com.pulumi.azure.cdn.FrontdoorEndpoint;
import com.pulumi.azure.cdn.FrontdoorEndpointArgs;
import com.pulumi.azure.cdn.FrontdoorRuleSet;
import com.pulumi.azure.cdn.FrontdoorRuleSetArgs;
import com.pulumi.azure.cdn.FrontdoorCustomDomain;
import com.pulumi.azure.cdn.FrontdoorCustomDomainArgs;
import com.pulumi.azure.cdn.inputs.FrontdoorCustomDomainTlsArgs;
import com.pulumi.azure.cdn.FrontdoorRoute;
import com.pulumi.azure.cdn.FrontdoorRouteArgs;
import com.pulumi.azure.cdn.inputs.FrontdoorRouteCacheArgs;
import com.pulumi.azure.cdn.FrontdoorCustomDomainAssociation;
import com.pulumi.azure.cdn.FrontdoorCustomDomainAssociationArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        var example = new ResourceGroup("example", ResourceGroupArgs.builder()
            .name("example-cdn-frontdoor")
            .location("West Europe")
            .build());

        var exampleZone = new Zone("exampleZone", ZoneArgs.builder()
            .name("example.com")
            .resourceGroupName(example.name())
            .build());

        var exampleFrontdoorProfile = new FrontdoorProfile("exampleFrontdoorProfile", FrontdoorProfileArgs.builder()
            .name("example-profile")
            .resourceGroupName(example.name())
            .skuName("Standard_AzureFrontDoor")
            .build());

        var exampleFrontdoorOriginGroup = new FrontdoorOriginGroup("exampleFrontdoorOriginGroup", FrontdoorOriginGroupArgs.builder()
            .name("example-originGroup")
            .cdnFrontdoorProfileId(exampleFrontdoorProfile.id())
            .loadBalancing(FrontdoorOriginGroupLoadBalancingArgs.builder()
                .additionalLatencyInMilliseconds(0)
                .sampleSize(16)
                .successfulSamplesRequired(3)
                .build())
            .build());

        var exampleFrontdoorOrigin = new FrontdoorOrigin("exampleFrontdoorOrigin", FrontdoorOriginArgs.builder()
            .name("example-origin")
            .cdnFrontdoorOriginGroupId(exampleFrontdoorOriginGroup.id())
            .enabled(true)
            .certificateNameCheckEnabled(false)
            .hostName("contoso.com")
            .httpPort(80)
            .httpsPort(443)
            .originHostHeader("www.contoso.com")
            .priority(1)
            .weight(1)
            .build());

        var exampleFrontdoorEndpoint = new FrontdoorEndpoint("exampleFrontdoorEndpoint", FrontdoorEndpointArgs.builder()
            .name("example-endpoint")
            .cdnFrontdoorProfileId(exampleFrontdoorProfile.id())
            .build());

        var exampleFrontdoorRuleSet = new FrontdoorRuleSet("exampleFrontdoorRuleSet", FrontdoorRuleSetArgs.builder()
            .name("ExampleRuleSet")
            .cdnFrontdoorProfileId(exampleFrontdoorProfile.id())
            .build());

        var contoso = new FrontdoorCustomDomain("contoso", FrontdoorCustomDomainArgs.builder()
            .name("contoso-custom-domain")
            .cdnFrontdoorProfileId(exampleFrontdoorProfile.id())
            .dnsZoneId(exampleZone.id())
            .hostName(StdFunctions.join().applyValue(invoke -> invoke.result()))
            .tls(FrontdoorCustomDomainTlsArgs.builder()
                .certificateType("ManagedCertificate")
                .minimumTlsVersion("TLS12")
                .build())
            .build());

        var fabrikam = new FrontdoorCustomDomain("fabrikam", FrontdoorCustomDomainArgs.builder()
            .name("fabrikam-custom-domain")
            .cdnFrontdoorProfileId(exampleFrontdoorProfile.id())
            .dnsZoneId(exampleZone.id())
            .hostName(StdFunctions.join().applyValue(invoke -> invoke.result()))
            .tls(FrontdoorCustomDomainTlsArgs.builder()
                .certificateType("ManagedCertificate")
                .minimumTlsVersion("TLS12")
                .build())
            .build());

        var exampleFrontdoorRoute = new FrontdoorRoute("exampleFrontdoorRoute", FrontdoorRouteArgs.builder()
            .name("example-route")
            .cdnFrontdoorEndpointId(exampleFrontdoorEndpoint.id())
            .cdnFrontdoorOriginGroupId(exampleFrontdoorOriginGroup.id())
            .cdnFrontdoorOriginIds(exampleFrontdoorOrigin.id())
            .cdnFrontdoorRuleSetIds(exampleFrontdoorRuleSet.id())
            .enabled(true)
            .forwardingProtocol("HttpsOnly")
            .httpsRedirectEnabled(true)
            .patternsToMatches("/*")
            .supportedProtocols(            
                "Http",
                "Https")
            .cdnFrontdoorCustomDomainIds(            
                contoso.id(),
                fabrikam.id())
            .linkToDefaultDomain(false)
            .cache(FrontdoorRouteCacheArgs.builder()
                .queryStringCachingBehavior("IgnoreSpecifiedQueryStrings")
                .queryStrings(                
                    "account",
                    "settings")
                .compressionEnabled(true)
                .contentTypesToCompresses(                
                    "text/html",
                    "text/javascript",
                    "text/xml")
                .build())
            .build());

        var contosoFrontdoorCustomDomainAssociation = new FrontdoorCustomDomainAssociation("contosoFrontdoorCustomDomainAssociation", FrontdoorCustomDomainAssociationArgs.builder()
            .cdnFrontdoorCustomDomainId(contoso.id())
            .cdnFrontdoorRouteIds(exampleFrontdoorRoute.id())
            .build());

        var fabrikamFrontdoorCustomDomainAssociation = new FrontdoorCustomDomainAssociation("fabrikamFrontdoorCustomDomainAssociation", FrontdoorCustomDomainAssociationArgs.builder()
            .cdnFrontdoorCustomDomainId(fabrikam.id())
            .cdnFrontdoorRouteIds(exampleFrontdoorRoute.id())
            .build());

    }
}
```
```yaml
resources:
  example:
    type: azure:core:ResourceGroup
    properties:
      name: example-cdn-frontdoor
      location: West Europe
  exampleZone:
    type: azure:dns:Zone
    name: example
    properties:
      name: example.com
      resourceGroupName: ${example.name}
  exampleFrontdoorProfile:
    type: azure:cdn:FrontdoorProfile
    name: example
    properties:
      name: example-profile
      resourceGroupName: ${example.name}
      skuName: Standard_AzureFrontDoor
  exampleFrontdoorOriginGroup:
    type: azure:cdn:FrontdoorOriginGroup
    name: example
    properties:
      name: example-originGroup
      cdnFrontdoorProfileId: ${exampleFrontdoorProfile.id}
      loadBalancing:
        additionalLatencyInMilliseconds: 0
        sampleSize: 16
        successfulSamplesRequired: 3
  exampleFrontdoorOrigin:
    type: azure:cdn:FrontdoorOrigin
    name: example
    properties:
      name: example-origin
      cdnFrontdoorOriginGroupId: ${exampleFrontdoorOriginGroup.id}
      enabled: true
      certificateNameCheckEnabled: false
      hostName: contoso.com
      httpPort: 80
      httpsPort: 443
      originHostHeader: www.contoso.com
      priority: 1
      weight: 1
  exampleFrontdoorEndpoint:
    type: azure:cdn:FrontdoorEndpoint
    name: example
    properties:
      name: example-endpoint
      cdnFrontdoorProfileId: ${exampleFrontdoorProfile.id}
  exampleFrontdoorRuleSet:
    type: azure:cdn:FrontdoorRuleSet
    name: example
    properties:
      name: ExampleRuleSet
      cdnFrontdoorProfileId: ${exampleFrontdoorProfile.id}
  contoso:
    type: azure:cdn:FrontdoorCustomDomain
    properties:
      name: contoso-custom-domain
      cdnFrontdoorProfileId: ${exampleFrontdoorProfile.id}
      dnsZoneId: ${exampleZone.id}
      hostName:
        fn::invoke:
          function: std:join
          arguments:
            separator: .
            input:
              - contoso
              - ${exampleZone.name}
          return: result
      tls:
        certificateType: ManagedCertificate
        minimumTlsVersion: TLS12
  fabrikam:
    type: azure:cdn:FrontdoorCustomDomain
    properties:
      name: fabrikam-custom-domain
      cdnFrontdoorProfileId: ${exampleFrontdoorProfile.id}
      dnsZoneId: ${exampleZone.id}
      hostName:
        fn::invoke:
          function: std:join
          arguments:
            separator: .
            input:
              - fabrikam
              - ${exampleZone.name}
          return: result
      tls:
        certificateType: ManagedCertificate
        minimumTlsVersion: TLS12
  exampleFrontdoorRoute:
    type: azure:cdn:FrontdoorRoute
    name: example
    properties:
      name: example-route
      cdnFrontdoorEndpointId: ${exampleFrontdoorEndpoint.id}
      cdnFrontdoorOriginGroupId: ${exampleFrontdoorOriginGroup.id}
      cdnFrontdoorOriginIds:
        - ${exampleFrontdoorOrigin.id}
      cdnFrontdoorRuleSetIds:
        - ${exampleFrontdoorRuleSet.id}
      enabled: true
      forwardingProtocol: HttpsOnly
      httpsRedirectEnabled: true
      patternsToMatches:
        - /*
      supportedProtocols:
        - Http
        - Https
      cdnFrontdoorCustomDomainIds:
        - ${contoso.id}
        - ${fabrikam.id}
      linkToDefaultDomain: false
      cache:
        queryStringCachingBehavior: IgnoreSpecifiedQueryStrings
        queryStrings:
          - account
          - settings
        compressionEnabled: true
        contentTypesToCompresses:
          - text/html
          - text/javascript
          - text/xml
  contosoFrontdoorCustomDomainAssociation:
    type: azure:cdn:FrontdoorCustomDomainAssociation
    name: contoso
    properties:
      cdnFrontdoorCustomDomainId: ${contoso.id}
      cdnFrontdoorRouteIds:
        - ${exampleFrontdoorRoute.id}
  fabrikamFrontdoorCustomDomainAssociation:
    type: azure:cdn:FrontdoorCustomDomainAssociation
    name: fabrikam
    properties:
      cdnFrontdoorCustomDomainId: ${fabrikam.id}
      cdnFrontdoorRouteIds:
        - ${exampleFrontdoorRoute.id}
```
<!--End PulumiCodeChooser -->

## Import

Front Door Routes can be imported using the `resource id`, e.g.

```sh
$ pulumi import azure:cdn/frontdoorRoute:FrontdoorRoute example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.Cdn/profiles/profile1/afdEndpoints/endpoint1/routes/route1
```

Ý
cacheSBQ:O
M
cdnFrontdoorRouteCache1azure:cdn/FrontdoorRouteCache:FrontdoorRouteCacheA `cache` block as defined below.

> **NOTE:** To disable caching, do not provide the `cache` block in the configuration file.

cdnFrontdoorCustomDomainIdsB*" ZThe IDs of the Front Door Custom Domains which are associated with this Front Door Route.
¯
cdnFrontdoorEndpointId" The resource ID of the Front Door Endpoint where this Front Door Route should exist. Changing this forces a new Front Door Route to be created.

cdnFrontdoorOriginGroupId" ^The resource ID of the Front Door Origin Group where this Front Door Route should be created.
s
cdnFrontdoorOriginIds*" TOne or more Front Door Origin resource IDs that this Front Door Route will link to.

cdnFrontdoorOriginPathB" yA directory path on the Front Door Origin that can be used to retrieve content (e.g. `contoso.cloudapp.net/originpath`).
{
cdnFrontdoorRuleSetIdsB*" YA list of the Front Door Rule Set IDs which should be assigned to this Front Door Route.
n
enabledB
 ]Is this Front Door Route enabled? Possible values are `true` or `false`. Defaults to `true`.
»
forwardingProtocolB" The Protocol that will be use when forwarding traffic to backends. Possible values are `HttpOnly`, `HttpsOnly` or `MatchRequest`. Defaults to `MatchRequest`.
è
httpsRedirectEnabledB
 ÉAutomatically redirect HTTP traffic to HTTPS traffic? Possible values are `true` or `false`. Defaults to `true`.

> **NOTE:** The `https_redirect_enabled` rule is the first rule that will be executed.

linkToDefaultDomainB
 Should this Front Door Route be linked to the default endpoint? Possible values include `true` or `false`. Defaults to `true`.
ª
nameB" The name which should be used for this Front Door Route. Valid values must begin with a letter or number, end with a letter or number and may only contain letters, numbers and hyphens with a maximum length of 90 characters. Changing this forces a new Front Door Route to be created.
;
patternsToMatches*"  The route patterns of the rule.

supportedProtocols*" èOne or more Protocols supported by this Front Door Route. Possible values are `Http` or `Https`.

> **NOTE:** If `https_redirect_enabled` is set to `true` the `supported_protocols` field must contain both `Http` and `Https` values.
"Ý
cacheSBQ:O
M
cdnFrontdoorRouteCache1azure:cdn/FrontdoorRouteCache:FrontdoorRouteCacheA `cache` block as defined below.

> **NOTE:** To disable caching, do not provide the `cache` block in the configuration file.
"
cdnFrontdoorCustomDomainIdsB*" ZThe IDs of the Front Door Custom Domains which are associated with this Front Door Route.
"¯
cdnFrontdoorEndpointId" The resource ID of the Front Door Endpoint where this Front Door Route should exist. Changing this forces a new Front Door Route to be created.
"
cdnFrontdoorOriginGroupId" ^The resource ID of the Front Door Origin Group where this Front Door Route should be created.
"s
cdnFrontdoorOriginIds*" TOne or more Front Door Origin resource IDs that this Front Door Route will link to.
"
cdnFrontdoorOriginPathB" yA directory path on the Front Door Origin that can be used to retrieve content (e.g. `contoso.cloudapp.net/originpath`).
"{
cdnFrontdoorRuleSetIdsB*" YA list of the Front Door Rule Set IDs which should be assigned to this Front Door Route.
"n
enabledB
 ]Is this Front Door Route enabled? Possible values are `true` or `false`. Defaults to `true`.
"»
forwardingProtocolB" The Protocol that will be use when forwarding traffic to backends. Possible values are `HttpOnly`, `HttpsOnly` or `MatchRequest`. Defaults to `MatchRequest`.
"è
httpsRedirectEnabledB
 ÉAutomatically redirect HTTP traffic to HTTPS traffic? Possible values are `true` or `false`. Defaults to `true`.

> **NOTE:** The `https_redirect_enabled` rule is the first rule that will be executed.
"
linkToDefaultDomainB
 Should this Front Door Route be linked to the default endpoint? Possible values include `true` or `false`. Defaults to `true`.
"¨
name" The name which should be used for this Front Door Route. Valid values must begin with a letter or number, end with a letter or number and may only contain letters, numbers and hyphens with a maximum length of 90 characters. Changing this forces a new Front Door Route to be created.
";
patternsToMatches*"  The route patterns of the rule.
"
supportedProtocols*" èOne or more Protocols supported by this Front Door Route. Possible values are `Http` or `Https`.

> **NOTE:** If `https_redirect_enabled` is set to `true` the `supported_protocols` field must contain both `Http` and `Https` values.
*Ù
;
cdnFrontdoorRule%azure:cdn/frontdoorRule:FrontdoorRuleµÃManages a Front Door (standard/premium) Rule.

!>**IMPORTANT:** The Rules resource **must** include a `depends_on` meta-argument which references the `azure.cdn.FrontdoorOrigin` and the `azure.cdn.FrontdoorOriginGroup`.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const example = new azure.core.ResourceGroup("example", {
    name: "example-cdn-frontdoor",
    location: "West Europe",
});
const exampleFrontdoorProfile = new azure.cdn.FrontdoorProfile("example", {
    name: "example-profile",
    resourceGroupName: example.name,
    skuName: "Premium_AzureFrontDoor",
});
const exampleFrontdoorEndpoint = new azure.cdn.FrontdoorEndpoint("example", {
    name: "example-endpoint",
    cdnFrontdoorProfileId: exampleFrontdoorProfile.id,
    tags: {
        endpoint: "contoso.com",
    },
});
const exampleFrontdoorOriginGroup = new azure.cdn.FrontdoorOriginGroup("example", {
    name: "example-originGroup",
    cdnFrontdoorProfileId: exampleFrontdoorProfile.id,
    sessionAffinityEnabled: true,
    restoreTrafficTimeToHealedOrNewEndpointInMinutes: 10,
    healthProbe: {
        intervalInSeconds: 240,
        path: "/healthProbe",
        protocol: "Https",
        requestType: "GET",
    },
    loadBalancing: {
        additionalLatencyInMilliseconds: 0,
        sampleSize: 16,
        successfulSamplesRequired: 3,
    },
});
const exampleFrontdoorOrigin = new azure.cdn.FrontdoorOrigin("example", {
    name: "example-origin",
    cdnFrontdoorOriginGroupId: exampleFrontdoorOriginGroup.id,
    enabled: true,
    certificateNameCheckEnabled: false,
    hostName: exampleFrontdoorEndpoint.hostName,
    httpPort: 80,
    httpsPort: 443,
    originHostHeader: "contoso.com",
    priority: 1,
    weight: 500,
});
const exampleFrontdoorRuleSet = new azure.cdn.FrontdoorRuleSet("example", {
    name: "exampleruleset",
    cdnFrontdoorProfileId: exampleFrontdoorProfile.id,
});
const exampleFrontdoorRule = new azure.cdn.FrontdoorRule("example", {
    name: "examplerule",
    cdnFrontdoorRuleSetId: exampleFrontdoorRuleSet.id,
    order: 1,
    behaviorOnMatch: "Continue",
    actions: {
        routeConfigurationOverrideAction: {
            cdnFrontdoorOriginGroupId: exampleFrontdoorOriginGroup.id,
            forwardingProtocol: "HttpsOnly",
            queryStringCachingBehavior: "IncludeSpecifiedQueryStrings",
            queryStringParameters: [
                "foo",
                "clientIp={client_ip}",
            ],
            compressionEnabled: true,
            cacheBehavior: "OverrideIfOriginMissing",
            cacheDuration: "365.23:59:59",
        },
        urlRedirectAction: {
            redirectType: "PermanentRedirect",
            redirectProtocol: "MatchRequest",
            queryString: "clientIp={client_ip}",
            destinationPath: "/exampleredirection",
            destinationHostname: "contoso.com",
            destinationFragment: "UrlRedirect",
        },
    },
    conditions: {
        hostNameConditions: [{
            operator: "Equal",
            negateCondition: false,
            matchValues: [
                "www.contoso.com",
                "images.contoso.com",
                "video.contoso.com",
            ],
            transforms: [
                "Lowercase",
                "Trim",
            ],
        }],
        isDeviceConditions: [{
            operator: "Equal",
            negateCondition: false,
            matchValues: "Mobile",
        }],
        postArgsConditions: [{
            postArgsName: "customerName",
            operator: "BeginsWith",
            matchValues: [
                "J",
                "K",
            ],
            transforms: ["Uppercase"],
        }],
        requestMethodConditions: [{
            operator: "Equal",
            negateCondition: false,
            matchValues: ["DELETE"],
        }],
        urlFilenameConditions: [{
            operator: "Equal",
            negateCondition: false,
            matchValues: ["media.mp4"],
            transforms: [
                "Lowercase",
                "RemoveNulls",
                "Trim",
            ],
        }],
    },
}, {
    dependsOn: [
        exampleFrontdoorOriginGroup,
        exampleFrontdoorOrigin,
    ],
});
```
```python
import pulumi
import pulumi_azure as azure

example = azure.core.ResourceGroup("example",
    name="example-cdn-frontdoor",
    location="West Europe")
example_frontdoor_profile = azure.cdn.FrontdoorProfile("example",
    name="example-profile",
    resource_group_name=example.name,
    sku_name="Premium_AzureFrontDoor")
example_frontdoor_endpoint = azure.cdn.FrontdoorEndpoint("example",
    name="example-endpoint",
    cdn_frontdoor_profile_id=example_frontdoor_profile.id,
    tags={
        "endpoint": "contoso.com",
    })
example_frontdoor_origin_group = azure.cdn.FrontdoorOriginGroup("example",
    name="example-originGroup",
    cdn_frontdoor_profile_id=example_frontdoor_profile.id,
    session_affinity_enabled=True,
    restore_traffic_time_to_healed_or_new_endpoint_in_minutes=10,
    health_probe={
        "interval_in_seconds": 240,
        "path": "/healthProbe",
        "protocol": "Https",
        "request_type": "GET",
    },
    load_balancing={
        "additional_latency_in_milliseconds": 0,
        "sample_size": 16,
        "successful_samples_required": 3,
    })
example_frontdoor_origin = azure.cdn.FrontdoorOrigin("example",
    name="example-origin",
    cdn_frontdoor_origin_group_id=example_frontdoor_origin_group.id,
    enabled=True,
    certificate_name_check_enabled=False,
    host_name=example_frontdoor_endpoint.host_name,
    http_port=80,
    https_port=443,
    origin_host_header="contoso.com",
    priority=1,
    weight=500)
example_frontdoor_rule_set = azure.cdn.FrontdoorRuleSet("example",
    name="exampleruleset",
    cdn_frontdoor_profile_id=example_frontdoor_profile.id)
example_frontdoor_rule = azure.cdn.FrontdoorRule("example",
    name="examplerule",
    cdn_frontdoor_rule_set_id=example_frontdoor_rule_set.id,
    order=1,
    behavior_on_match="Continue",
    actions={
        "route_configuration_override_action": {
            "cdn_frontdoor_origin_group_id": example_frontdoor_origin_group.id,
            "forwarding_protocol": "HttpsOnly",
            "query_string_caching_behavior": "IncludeSpecifiedQueryStrings",
            "query_string_parameters": [
                "foo",
                "clientIp={client_ip}",
            ],
            "compression_enabled": True,
            "cache_behavior": "OverrideIfOriginMissing",
            "cache_duration": "365.23:59:59",
        },
        "url_redirect_action": {
            "redirect_type": "PermanentRedirect",
            "redirect_protocol": "MatchRequest",
            "query_string": "clientIp={client_ip}",
            "destination_path": "/exampleredirection",
            "destination_hostname": "contoso.com",
            "destination_fragment": "UrlRedirect",
        },
    },
    conditions={
        "host_name_conditions": [{
            "operator": "Equal",
            "negate_condition": False,
            "match_values": [
                "www.contoso.com",
                "images.contoso.com",
                "video.contoso.com",
            ],
            "transforms": [
                "Lowercase",
                "Trim",
            ],
        }],
        "is_device_conditions": [{
            "operator": "Equal",
            "negate_condition": False,
            "match_values": "Mobile",
        }],
        "post_args_conditions": [{
            "post_args_name": "customerName",
            "operator": "BeginsWith",
            "match_values": [
                "J",
                "K",
            ],
            "transforms": ["Uppercase"],
        }],
        "request_method_conditions": [{
            "operator": "Equal",
            "negate_condition": False,
            "match_values": ["DELETE"],
        }],
        "url_filename_conditions": [{
            "operator": "Equal",
            "negate_condition": False,
            "match_values": ["media.mp4"],
            "transforms": [
                "Lowercase",
                "RemoveNulls",
                "Trim",
            ],
        }],
    },
    opts = pulumi.ResourceOptions(depends_on=[
            example_frontdoor_origin_group,
            example_frontdoor_origin,
        ]))
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var example = new Azure.Core.ResourceGroup("example", new()
    {
        Name = "example-cdn-frontdoor",
        Location = "West Europe",
    });

    var exampleFrontdoorProfile = new Azure.Cdn.FrontdoorProfile("example", new()
    {
        Name = "example-profile",
        ResourceGroupName = example.Name,
        SkuName = "Premium_AzureFrontDoor",
    });

    var exampleFrontdoorEndpoint = new Azure.Cdn.FrontdoorEndpoint("example", new()
    {
        Name = "example-endpoint",
        CdnFrontdoorProfileId = exampleFrontdoorProfile.Id,
        Tags = 
        {
            { "endpoint", "contoso.com" },
        },
    });

    var exampleFrontdoorOriginGroup = new Azure.Cdn.FrontdoorOriginGroup("example", new()
    {
        Name = "example-originGroup",
        CdnFrontdoorProfileId = exampleFrontdoorProfile.Id,
        SessionAffinityEnabled = true,
        RestoreTrafficTimeToHealedOrNewEndpointInMinutes = 10,
        HealthProbe = new Azure.Cdn.Inputs.FrontdoorOriginGroupHealthProbeArgs
        {
            IntervalInSeconds = 240,
            Path = "/healthProbe",
            Protocol = "Https",
            RequestType = "GET",
        },
        LoadBalancing = new Azure.Cdn.Inputs.FrontdoorOriginGroupLoadBalancingArgs
        {
            AdditionalLatencyInMilliseconds = 0,
            SampleSize = 16,
            SuccessfulSamplesRequired = 3,
        },
    });

    var exampleFrontdoorOrigin = new Azure.Cdn.FrontdoorOrigin("example", new()
    {
        Name = "example-origin",
        CdnFrontdoorOriginGroupId = exampleFrontdoorOriginGroup.Id,
        Enabled = true,
        CertificateNameCheckEnabled = false,
        HostName = exampleFrontdoorEndpoint.HostName,
        HttpPort = 80,
        HttpsPort = 443,
        OriginHostHeader = "contoso.com",
        Priority = 1,
        Weight = 500,
    });

    var exampleFrontdoorRuleSet = new Azure.Cdn.FrontdoorRuleSet("example", new()
    {
        Name = "exampleruleset",
        CdnFrontdoorProfileId = exampleFrontdoorProfile.Id,
    });

    var exampleFrontdoorRule = new Azure.Cdn.FrontdoorRule("example", new()
    {
        Name = "examplerule",
        CdnFrontdoorRuleSetId = exampleFrontdoorRuleSet.Id,
        Order = 1,
        BehaviorOnMatch = "Continue",
        Actions = new Azure.Cdn.Inputs.FrontdoorRuleActionsArgs
        {
            RouteConfigurationOverrideAction = new Azure.Cdn.Inputs.FrontdoorRuleActionsRouteConfigurationOverrideActionArgs
            {
                CdnFrontdoorOriginGroupId = exampleFrontdoorOriginGroup.Id,
                ForwardingProtocol = "HttpsOnly",
                QueryStringCachingBehavior = "IncludeSpecifiedQueryStrings",
                QueryStringParameters = new[]
                {
                    "foo",
                    "clientIp={client_ip}",
                },
                CompressionEnabled = true,
                CacheBehavior = "OverrideIfOriginMissing",
                CacheDuration = "365.23:59:59",
            },
            UrlRedirectAction = new Azure.Cdn.Inputs.FrontdoorRuleActionsUrlRedirectActionArgs
            {
                RedirectType = "PermanentRedirect",
                RedirectProtocol = "MatchRequest",
                QueryString = "clientIp={client_ip}",
                DestinationPath = "/exampleredirection",
                DestinationHostname = "contoso.com",
                DestinationFragment = "UrlRedirect",
            },
        },
        Conditions = new Azure.Cdn.Inputs.FrontdoorRuleConditionsArgs
        {
            HostNameConditions = new[]
            {
                new Azure.Cdn.Inputs.FrontdoorRuleConditionsHostNameConditionArgs
                {
                    Operator = "Equal",
                    NegateCondition = false,
                    MatchValues = new[]
                    {
                        "www.contoso.com",
                        "images.contoso.com",
                        "video.contoso.com",
                    },
                    Transforms = new[]
                    {
                        "Lowercase",
                        "Trim",
                    },
                },
            },
            IsDeviceConditions = new[]
            {
                new Azure.Cdn.Inputs.FrontdoorRuleConditionsIsDeviceConditionArgs
                {
                    Operator = "Equal",
                    NegateCondition = false,
                    MatchValues = "Mobile",
                },
            },
            PostArgsConditions = new[]
            {
                new Azure.Cdn.Inputs.FrontdoorRuleConditionsPostArgsConditionArgs
                {
                    PostArgsName = "customerName",
                    Operator = "BeginsWith",
                    MatchValues = new[]
                    {
                        "J",
                        "K",
                    },
                    Transforms = new[]
                    {
                        "Uppercase",
                    },
                },
            },
            RequestMethodConditions = new[]
            {
                new Azure.Cdn.Inputs.FrontdoorRuleConditionsRequestMethodConditionArgs
                {
                    Operator = "Equal",
                    NegateCondition = false,
                    MatchValues = new[]
                    {
                        "DELETE",
                    },
                },
            },
            UrlFilenameConditions = new[]
            {
                new Azure.Cdn.Inputs.FrontdoorRuleConditionsUrlFilenameConditionArgs
                {
                    Operator = "Equal",
                    NegateCondition = false,
                    MatchValues = new[]
                    {
                        "media.mp4",
                    },
                    Transforms = new[]
                    {
                        "Lowercase",
                        "RemoveNulls",
                        "Trim",
                    },
                },
            },
        },
    }, new CustomResourceOptions
    {
        DependsOn =
        {
            exampleFrontdoorOriginGroup,
            exampleFrontdoorOrigin,
        },
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/cdn"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
			Name:     pulumi.String("example-cdn-frontdoor"),
			Location: pulumi.String("West Europe"),
		})
		if err != nil {
			return err
		}
		exampleFrontdoorProfile, err := cdn.NewFrontdoorProfile(ctx, "example", &cdn.FrontdoorProfileArgs{
			Name:              pulumi.String("example-profile"),
			ResourceGroupName: example.Name,
			SkuName:           pulumi.String("Premium_AzureFrontDoor"),
		})
		if err != nil {
			return err
		}
		exampleFrontdoorEndpoint, err := cdn.NewFrontdoorEndpoint(ctx, "example", &cdn.FrontdoorEndpointArgs{
			Name:                  pulumi.String("example-endpoint"),
			CdnFrontdoorProfileId: exampleFrontdoorProfile.ID(),
			Tags: pulumi.StringMap{
				"endpoint": pulumi.String("contoso.com"),
			},
		})
		if err != nil {
			return err
		}
		exampleFrontdoorOriginGroup, err := cdn.NewFrontdoorOriginGroup(ctx, "example", &cdn.FrontdoorOriginGroupArgs{
			Name:                   pulumi.String("example-originGroup"),
			CdnFrontdoorProfileId:  exampleFrontdoorProfile.ID(),
			SessionAffinityEnabled: pulumi.Bool(true),
			RestoreTrafficTimeToHealedOrNewEndpointInMinutes: pulumi.Int(10),
			HealthProbe: &cdn.FrontdoorOriginGroupHealthProbeArgs{
				IntervalInSeconds: pulumi.Int(240),
				Path:              pulumi.String("/healthProbe"),
				Protocol:          pulumi.String("Https"),
				RequestType:       pulumi.String("GET"),
			},
			LoadBalancing: &cdn.FrontdoorOriginGroupLoadBalancingArgs{
				AdditionalLatencyInMilliseconds: pulumi.Int(0),
				SampleSize:                      pulumi.Int(16),
				SuccessfulSamplesRequired:       pulumi.Int(3),
			},
		})
		if err != nil {
			return err
		}
		exampleFrontdoorOrigin, err := cdn.NewFrontdoorOrigin(ctx, "example", &cdn.FrontdoorOriginArgs{
			Name:                        pulumi.String("example-origin"),
			CdnFrontdoorOriginGroupId:   exampleFrontdoorOriginGroup.ID(),
			Enabled:                     pulumi.Bool(true),
			CertificateNameCheckEnabled: pulumi.Bool(false),
			HostName:                    exampleFrontdoorEndpoint.HostName,
			HttpPort:                    pulumi.Int(80),
			HttpsPort:                   pulumi.Int(443),
			OriginHostHeader:            pulumi.String("contoso.com"),
			Priority:                    pulumi.Int(1),
			Weight:                      pulumi.Int(500),
		})
		if err != nil {
			return err
		}
		exampleFrontdoorRuleSet, err := cdn.NewFrontdoorRuleSet(ctx, "example", &cdn.FrontdoorRuleSetArgs{
			Name:                  pulumi.String("exampleruleset"),
			CdnFrontdoorProfileId: exampleFrontdoorProfile.ID(),
		})
		if err != nil {
			return err
		}
		_, err = cdn.NewFrontdoorRule(ctx, "example", &cdn.FrontdoorRuleArgs{
			Name:                  pulumi.String("examplerule"),
			CdnFrontdoorRuleSetId: exampleFrontdoorRuleSet.ID(),
			Order:                 pulumi.Int(1),
			BehaviorOnMatch:       pulumi.String("Continue"),
			Actions: &cdn.FrontdoorRuleActionsArgs{
				RouteConfigurationOverrideAction: &cdn.FrontdoorRuleActionsRouteConfigurationOverrideActionArgs{
					CdnFrontdoorOriginGroupId:  exampleFrontdoorOriginGroup.ID(),
					ForwardingProtocol:         pulumi.String("HttpsOnly"),
					QueryStringCachingBehavior: pulumi.String("IncludeSpecifiedQueryStrings"),
					QueryStringParameters: pulumi.StringArray{
						pulumi.String("foo"),
						pulumi.String("clientIp={client_ip}"),
					},
					CompressionEnabled: pulumi.Bool(true),
					CacheBehavior:      pulumi.String("OverrideIfOriginMissing"),
					CacheDuration:      pulumi.String("365.23:59:59"),
				},
				UrlRedirectAction: &cdn.FrontdoorRuleActionsUrlRedirectActionArgs{
					RedirectType:        pulumi.String("PermanentRedirect"),
					RedirectProtocol:    pulumi.String("MatchRequest"),
					QueryString:         pulumi.String("clientIp={client_ip}"),
					DestinationPath:     pulumi.String("/exampleredirection"),
					DestinationHostname: pulumi.String("contoso.com"),
					DestinationFragment: pulumi.String("UrlRedirect"),
				},
			},
			Conditions: &cdn.FrontdoorRuleConditionsArgs{
				HostNameConditions: cdn.FrontdoorRuleConditionsHostNameConditionArray{
					&cdn.FrontdoorRuleConditionsHostNameConditionArgs{
						Operator:        pulumi.String("Equal"),
						NegateCondition: pulumi.Bool(false),
						MatchValues: pulumi.StringArray{
							pulumi.String("www.contoso.com"),
							pulumi.String("images.contoso.com"),
							pulumi.String("video.contoso.com"),
						},
						Transforms: pulumi.StringArray{
							pulumi.String("Lowercase"),
							pulumi.String("Trim"),
						},
					},
				},
				IsDeviceConditions: cdn.FrontdoorRuleConditionsIsDeviceConditionArray{
					&cdn.FrontdoorRuleConditionsIsDeviceConditionArgs{
						Operator:        pulumi.String("Equal"),
						NegateCondition: pulumi.Bool(false),
						MatchValues:     pulumi.String("Mobile"),
					},
				},
				PostArgsConditions: cdn.FrontdoorRuleConditionsPostArgsConditionArray{
					&cdn.FrontdoorRuleConditionsPostArgsConditionArgs{
						PostArgsName: pulumi.String("customerName"),
						Operator:     pulumi.String("BeginsWith"),
						MatchValues: pulumi.StringArray{
							pulumi.String("J"),
							pulumi.String("K"),
						},
						Transforms: pulumi.StringArray{
							pulumi.String("Uppercase"),
						},
					},
				},
				RequestMethodConditions: cdn.FrontdoorRuleConditionsRequestMethodConditionArray{
					&cdn.FrontdoorRuleConditionsRequestMethodConditionArgs{
						Operator:        pulumi.String("Equal"),
						NegateCondition: pulumi.Bool(false),
						MatchValues: pulumi.StringArray{
							pulumi.String("DELETE"),
						},
					},
				},
				UrlFilenameConditions: cdn.FrontdoorRuleConditionsUrlFilenameConditionArray{
					&cdn.FrontdoorRuleConditionsUrlFilenameConditionArgs{
						Operator:        pulumi.String("Equal"),
						NegateCondition: pulumi.Bool(false),
						MatchValues: pulumi.StringArray{
							pulumi.String("media.mp4"),
						},
						Transforms: pulumi.StringArray{
							pulumi.String("Lowercase"),
							pulumi.String("RemoveNulls"),
							pulumi.String("Trim"),
						},
					},
				},
			},
		}, pulumi.DependsOn([]pulumi.Resource{
			exampleFrontdoorOriginGroup,
			exampleFrontdoorOrigin,
		}))
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.core.ResourceGroup;
import com.pulumi.azure.core.ResourceGroupArgs;
import com.pulumi.azure.cdn.FrontdoorProfile;
import com.pulumi.azure.cdn.FrontdoorProfileArgs;
import com.pulumi.azure.cdn.FrontdoorEndpoint;
import com.pulumi.azure.cdn.FrontdoorEndpointArgs;
import com.pulumi.azure.cdn.FrontdoorOriginGroup;
import com.pulumi.azure.cdn.FrontdoorOriginGroupArgs;
import com.pulumi.azure.cdn.inputs.FrontdoorOriginGroupHealthProbeArgs;
import com.pulumi.azure.cdn.inputs.FrontdoorOriginGroupLoadBalancingArgs;
import com.pulumi.azure.cdn.FrontdoorOrigin;
import com.pulumi.azure.cdn.FrontdoorOriginArgs;
import com.pulumi.azure.cdn.FrontdoorRuleSet;
import com.pulumi.azure.cdn.FrontdoorRuleSetArgs;
import com.pulumi.azure.cdn.FrontdoorRule;
import com.pulumi.azure.cdn.FrontdoorRuleArgs;
import com.pulumi.azure.cdn.inputs.FrontdoorRuleActionsArgs;
import com.pulumi.azure.cdn.inputs.FrontdoorRuleActionsRouteConfigurationOverrideActionArgs;
import com.pulumi.azure.cdn.inputs.FrontdoorRuleActionsUrlRedirectActionArgs;
import com.pulumi.azure.cdn.inputs.FrontdoorRuleConditionsArgs;
import com.pulumi.resources.CustomResourceOptions;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        var example = new ResourceGroup("example", ResourceGroupArgs.builder()
            .name("example-cdn-frontdoor")
            .location("West Europe")
            .build());

        var exampleFrontdoorProfile = new FrontdoorProfile("exampleFrontdoorProfile", FrontdoorProfileArgs.builder()
            .name("example-profile")
            .resourceGroupName(example.name())
            .skuName("Premium_AzureFrontDoor")
            .build());

        var exampleFrontdoorEndpoint = new FrontdoorEndpoint("exampleFrontdoorEndpoint", FrontdoorEndpointArgs.builder()
            .name("example-endpoint")
            .cdnFrontdoorProfileId(exampleFrontdoorProfile.id())
            .tags(Map.of("endpoint", "contoso.com"))
            .build());

        var exampleFrontdoorOriginGroup = new FrontdoorOriginGroup("exampleFrontdoorOriginGroup", FrontdoorOriginGroupArgs.builder()
            .name("example-originGroup")
            .cdnFrontdoorProfileId(exampleFrontdoorProfile.id())
            .sessionAffinityEnabled(true)
            .restoreTrafficTimeToHealedOrNewEndpointInMinutes(10)
            .healthProbe(FrontdoorOriginGroupHealthProbeArgs.builder()
                .intervalInSeconds(240)
                .path("/healthProbe")
                .protocol("Https")
                .requestType("GET")
                .build())
            .loadBalancing(FrontdoorOriginGroupLoadBalancingArgs.builder()
                .additionalLatencyInMilliseconds(0)
                .sampleSize(16)
                .successfulSamplesRequired(3)
                .build())
            .build());

        var exampleFrontdoorOrigin = new FrontdoorOrigin("exampleFrontdoorOrigin", FrontdoorOriginArgs.builder()
            .name("example-origin")
            .cdnFrontdoorOriginGroupId(exampleFrontdoorOriginGroup.id())
            .enabled(true)
            .certificateNameCheckEnabled(false)
            .hostName(exampleFrontdoorEndpoint.hostName())
            .httpPort(80)
            .httpsPort(443)
            .originHostHeader("contoso.com")
            .priority(1)
            .weight(500)
            .build());

        var exampleFrontdoorRuleSet = new FrontdoorRuleSet("exampleFrontdoorRuleSet", FrontdoorRuleSetArgs.builder()
            .name("exampleruleset")
            .cdnFrontdoorProfileId(exampleFrontdoorProfile.id())
            .build());

        var exampleFrontdoorRule = new FrontdoorRule("exampleFrontdoorRule", FrontdoorRuleArgs.builder()
            .name("examplerule")
            .cdnFrontdoorRuleSetId(exampleFrontdoorRuleSet.id())
            .order(1)
            .behaviorOnMatch("Continue")
            .actions(FrontdoorRuleActionsArgs.builder()
                .routeConfigurationOverrideAction(FrontdoorRuleActionsRouteConfigurationOverrideActionArgs.builder()
                    .cdnFrontdoorOriginGroupId(exampleFrontdoorOriginGroup.id())
                    .forwardingProtocol("HttpsOnly")
                    .queryStringCachingBehavior("IncludeSpecifiedQueryStrings")
                    .queryStringParameters(                    
                        "foo",
                        "clientIp={client_ip}")
                    .compressionEnabled(true)
                    .cacheBehavior("OverrideIfOriginMissing")
                    .cacheDuration("365.23:59:59")
                    .build())
                .urlRedirectAction(FrontdoorRuleActionsUrlRedirectActionArgs.builder()
                    .redirectType("PermanentRedirect")
                    .redirectProtocol("MatchRequest")
                    .queryString("clientIp={client_ip}")
                    .destinationPath("/exampleredirection")
                    .destinationHostname("contoso.com")
                    .destinationFragment("UrlRedirect")
                    .build())
                .build())
            .conditions(FrontdoorRuleConditionsArgs.builder()
                .hostNameConditions(FrontdoorRuleConditionsHostNameConditionArgs.builder()
                    .operator("Equal")
                    .negateCondition(false)
                    .matchValues(                    
                        "www.contoso.com",
                        "images.contoso.com",
                        "video.contoso.com")
                    .transforms(                    
                        "Lowercase",
                        "Trim")
                    .build())
                .isDeviceConditions(FrontdoorRuleConditionsIsDeviceConditionArgs.builder()
                    .operator("Equal")
                    .negateCondition(false)
                    .matchValues("Mobile")
                    .build())
                .postArgsConditions(FrontdoorRuleConditionsPostArgsConditionArgs.builder()
                    .postArgsName("customerName")
                    .operator("BeginsWith")
                    .matchValues(                    
                        "J",
                        "K")
                    .transforms("Uppercase")
                    .build())
                .requestMethodConditions(FrontdoorRuleConditionsRequestMethodConditionArgs.builder()
                    .operator("Equal")
                    .negateCondition(false)
                    .matchValues("DELETE")
                    .build())
                .urlFilenameConditions(FrontdoorRuleConditionsUrlFilenameConditionArgs.builder()
                    .operator("Equal")
                    .negateCondition(false)
                    .matchValues("media.mp4")
                    .transforms(                    
                        "Lowercase",
                        "RemoveNulls",
                        "Trim")
                    .build())
                .build())
            .build(), CustomResourceOptions.builder()
                .dependsOn(                
                    exampleFrontdoorOriginGroup,
                    exampleFrontdoorOrigin)
                .build());

    }
}
```
```yaml
resources:
  example:
    type: azure:core:ResourceGroup
    properties:
      name: example-cdn-frontdoor
      location: West Europe
  exampleFrontdoorProfile:
    type: azure:cdn:FrontdoorProfile
    name: example
    properties:
      name: example-profile
      resourceGroupName: ${example.name}
      skuName: Premium_AzureFrontDoor
  exampleFrontdoorEndpoint:
    type: azure:cdn:FrontdoorEndpoint
    name: example
    properties:
      name: example-endpoint
      cdnFrontdoorProfileId: ${exampleFrontdoorProfile.id}
      tags:
        endpoint: contoso.com
  exampleFrontdoorOriginGroup:
    type: azure:cdn:FrontdoorOriginGroup
    name: example
    properties:
      name: example-originGroup
      cdnFrontdoorProfileId: ${exampleFrontdoorProfile.id}
      sessionAffinityEnabled: true
      restoreTrafficTimeToHealedOrNewEndpointInMinutes: 10
      healthProbe:
        intervalInSeconds: 240
        path: /healthProbe
        protocol: Https
        requestType: GET
      loadBalancing:
        additionalLatencyInMilliseconds: 0
        sampleSize: 16
        successfulSamplesRequired: 3
  exampleFrontdoorOrigin:
    type: azure:cdn:FrontdoorOrigin
    name: example
    properties:
      name: example-origin
      cdnFrontdoorOriginGroupId: ${exampleFrontdoorOriginGroup.id}
      enabled: true
      certificateNameCheckEnabled: false
      hostName: ${exampleFrontdoorEndpoint.hostName}
      httpPort: 80
      httpsPort: 443
      originHostHeader: contoso.com
      priority: 1
      weight: 500
  exampleFrontdoorRuleSet:
    type: azure:cdn:FrontdoorRuleSet
    name: example
    properties:
      name: exampleruleset
      cdnFrontdoorProfileId: ${exampleFrontdoorProfile.id}
  exampleFrontdoorRule:
    type: azure:cdn:FrontdoorRule
    name: example
    properties:
      name: examplerule
      cdnFrontdoorRuleSetId: ${exampleFrontdoorRuleSet.id}
      order: 1
      behaviorOnMatch: Continue
      actions:
        routeConfigurationOverrideAction:
          cdnFrontdoorOriginGroupId: ${exampleFrontdoorOriginGroup.id}
          forwardingProtocol: HttpsOnly
          queryStringCachingBehavior: IncludeSpecifiedQueryStrings
          queryStringParameters:
            - foo
            - clientIp={client_ip}
          compressionEnabled: true
          cacheBehavior: OverrideIfOriginMissing
          cacheDuration: 365.23:59:59
        urlRedirectAction:
          redirectType: PermanentRedirect
          redirectProtocol: MatchRequest
          queryString: clientIp={client_ip}
          destinationPath: /exampleredirection
          destinationHostname: contoso.com
          destinationFragment: UrlRedirect
      conditions:
        hostNameConditions:
          - operator: Equal
            negateCondition: false
            matchValues:
              - www.contoso.com
              - images.contoso.com
              - video.contoso.com
            transforms:
              - Lowercase
              - Trim
        isDeviceConditions:
          - operator: Equal
            negateCondition: false
            matchValues: Mobile
        postArgsConditions:
          - postArgsName: customerName
            operator: BeginsWith
            matchValues:
              - J
              - K
            transforms:
              - Uppercase
        requestMethodConditions:
          - operator: Equal
            negateCondition: false
            matchValues:
              - DELETE
        urlFilenameConditions:
          - operator: Equal
            negateCondition: false
            matchValues:
              - media.mp4
            transforms:
              - Lowercase
              - RemoveNulls
              - Trim
    options:
      dependsOn:
        - ${exampleFrontdoorOriginGroup}
        - ${exampleFrontdoorOrigin}
```
<!--End PulumiCodeChooser -->

## Specifying IP Address Ranges

When specifying IP address ranges in the `socket_address_condition` and the `remote_address_condition` `match_values` use the following format:

Use `CIDR` notation when specifying IP address blocks. This means that the syntax for an IP address block is the base IP address followed by a forward slash and the prefix size For example:

* `IPv4` example: `5.5.5.64/26` matches any requests that arrive from addresses `5.5.5.64` through `5.5.5.127`.
* `IPv6` example: `1:2:3:/48` matches any requests that arrive from addresses `1:2:3:0:0:0:0:0` through `1:2:3:ffff:ffff:ffff:ffff:ffff`.

When you specify multiple IP addresses and IP address blocks, `OR` logic is applied.

* `IPv4` example: if you add two IP addresses `1.2.3.4` and `10.20.30.40`, the condition is matched for any requests that arrive from either address `1.2.3.4` or `10.20.30.40`.
* `IPv6` example: if you add two IP addresses `1:2:3:4:5:6:7:8` and `10:20:30:40:50:60:70:80`, the condition is matched for any requests that arrive from either address `1:2:3:4:5:6:7:8` or `10:20:30:40:50:60:70:80`.

---

## Action Server Variables

Rule Set server variables provide access to structured information about the request. You can use server variables to dynamically change the request/response headers or URL rewrite paths/query strings, for example, when a new page load or when a form is posted.

### Supported Action Server Variables

| Variable name | Description |
|---------------|-------------|
| `socket_ip`      | The IP address of the direct connection to Front Door Profiles edge. If the client used an HTTP proxy or a load balancer to send the request, the value of `socket_ip` is the IP address of the proxy or load balancer. |
| `client_ip`      | The IP address of the client that made the original request. If there was an `X-Forwarded-For` header in the request, then the client IP address is picked from the header. |
| `client_port`    | The IP port of the client that made the request. |
| `hostname`       | The host name in the request from the client. |
| `geo_country`    | Indicates the requester's country/region of origin through its country/region code. |
| `http_method`    | The method used to make the URL request, such as `GET` or `POST`. |
| `http_version`   | The request protocol. Usually `HTTP/1.0`, `HTTP/1.1`, or `HTTP/2.0`. |
| `query_string`   | The list of variable/value pairs that follows the "?" in the requested URL. For example, in the request `http://contoso.com:8080/article.aspx?id=123&title=fabrikam`, the `query_string` value will be `id=123&title=fabrikam`. |
| `request_scheme` | The request scheme: `http` or `https`. |
| `request_uri`    | The full original request URI (with arguments). For example, in the request `http://contoso.com:8080/article.aspx?id=123&title=fabrikam`, the `request_uri` value will be `/article.aspx?id=123&title=fabrikam`. |
| `ssl_protocol`   | The protocol of an established TLS connection. |
| `server_port`    | The port of the server that accepted a request. |
| `url_path`       | Identifies the specific resource in the host that the web client wants to access. This is the part of the request URI without the arguments. For example, in the request `http://contoso.com:8080/article.aspx?id=123&title=fabrikam`, the `uri_path` value will be `/article.aspx`. |

### Action Server Variable Format

Server variables can be specified using the following formats:

* `{variable}` - Include the entire server variable. For example, if the client IP address is `111.222.333.444` then the `{client_ip}` token would evaluate to `111.222.333.444`.

* `{variable:offset}` - Include the server variable after a specific offset, until the end of the variable. The offset is zero-based. For example, if the client IP address is `111.222.333.444` then the `{client_ip:3}` token would evaluate to `.222.333.444`.

* `{variable:offset:length}` - Include the server variable after a specific offset, up to the specified length. The offset is zero-based. For example, if the client IP address is `111.222.333.444` then the `{client_ip:4:3}` token would evaluate to `222`.

### Action Server Variables Support

Action Server variables are supported on the following actions:

* `route_configuration_override_action`
* `request_header_action`
* `response_header_action`
* `url_redirect_action`
* `url_rewrite_action`

---

## Condition Operator list

For rules that accept values from the standard operator list, the following operators are valid:

| Operator                   | Description | Condition Value |
|----------------------------|-------------|-----------------|
| Any                        |Matches when there is any value, regardless of what it is. | Any |
| Equal                      | Matches when the value exactly matches the specified string. | Equal |
| Contains                   | Matches when the value contains the specified string. | Contains |
| Less Than                  | Matches when the length of the value is less than the specified integer. | LessThan |
| Greater Than               | Matches when the length of the value is greater than the specified integer. | GreaterThan |
| Less Than or Equal         | Matches when the length of the value is less than or equal to the specified integer. | LessThanOrEqual |
| Greater Than or Equal      | Matches when the length of the value is greater than or equal to the specified integer. | GreaterThanOrEqual |
| Begins With                | Matches when the value begins with the specified string. | BeginsWith |
| Ends With                  | Matches when the value ends with the specified string. | EndsWith |
| RegEx                      | Matches when the value matches the specified regular expression. See below for further details. | RegEx |
| Not Any                    | Matches when there is no value. | Any and negateCondition = true |
| Not Equal                  | Matches when the value does not match the specified string. | Equal and negateCondition : true |
| Not Contains               | Matches when the value does not contain the specified string. | Contains and negateCondition = true |
| Not Less Than              | Matches when the length of the value is not less than the specified integer. | LessThan and negateCondition = true |
| Not Greater Than           | Matches when the length of the value is not greater than the specified integer. | GreaterThan and negateCondition = true |
| Not Less Than or Equal     | Matches when the length of the value is not less than or equal to the specified integer. | LessThanOrEqual and negateCondition = true |
| Not Greater Than or Equals | Matches when the length of the value is not greater than or equal to the specified integer. | GreaterThanOrEqual and negateCondition = true |
| Not Begins With            | Matches when the value does not begin with the specified string. | BeginsWith and negateCondition = true |
| Not Ends With              | Matches when the value does not end with the specified string. | EndsWith and negateCondition = true |
| Not RegEx                  | Matches when the value does not match the specified regular expression. See `Condition Regular Expressions` for further details. | RegEx and negateCondition = true |

---

## Condition Regular Expressions

Regular expressions **don't** support the following operations:

* Backreferences and capturing subexpressions.
* Arbitrary zero-width assertions.
* Subroutine references and recursive patterns.
* Conditional patterns.
* Backtracking control verbs.
* The `\C` single-byte directive.
* The `\R` newline match directive.
* The `\K` start of match reset directive.
* Callouts and embedded code.
* Atomic grouping and possessive quantifiers.

---

## Condition Transform List

For rules that can transform strings, the following transforms are valid:

| Transform   | Description |
|-------------|-------------|
| Lowercase   | Converts the string to the lowercase representation. |
| Uppercase   | Converts the string to the uppercase representation. |
| Trim        | Trims leading and trailing whitespace from the string. |
| RemoveNulls | Removes null values from the string. |
| URLEncode   | URL-encodes the string. |
| URLDecode   | URL-decodes the string. |

---

## Import

Front Door Rules can be imported using the `resource id`, e.g.

```sh
$ pulumi import azure:cdn/frontdoorRule:FrontdoorRule example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.Cdn/profiles/profile1/ruleSets/ruleSet1/rules/rule1
```


actionsT:R
P
cdnFrontdoorRuleActions3azure:cdn/FrontdoorRuleActions:FrontdoorRuleActions%An `actions` block as defined below.
¾
behaviorOnMatchB" ¤If this rule is a match should the rules engine continue processing the remaining rules or stop? Possible values are `Continue` and `Stop`. Defaults to `Continue`.

cdnFrontdoorRuleSetId" The resource ID of the Front Door Rule Set for this Front Door Rule. Changing this forces a new Front Door Rule to be created.


conditions_B]:[
Y
cdnFrontdoorRuleConditions9azure:cdn/FrontdoorRuleConditions:FrontdoorRuleConditions'A `conditions` block as defined below.
ÿ
nameB" ðThe name which should be used for this Front Door Rule. Possible values must be between 1 and 260 characters in length, begin with a letter and may contain only letters and numbers. Changing this forces a new Front Door Rule to be created.

order The order in which the rules will be applied for the Front Door Endpoint. The order value should be sequential and begin at `1`(e.g. `1`, `2`, `3`...). A Front Door Rule with a lesser order value will be applied before a rule with a greater order value.

->**NOTE:** If the Front Door Rule has an order value of `0` they do not require any conditions and the actions will always be applied.
"
actionsT:R
P
cdnFrontdoorRuleActions3azure:cdn/FrontdoorRuleActions:FrontdoorRuleActions%An `actions` block as defined below.
"¾
behaviorOnMatchB" ¤If this rule is a match should the rules engine continue processing the remaining rules or stop? Possible values are `Continue` and `Stop`. Defaults to `Continue`.
"
cdnFrontdoorRuleSetId" The resource ID of the Front Door Rule Set for this Front Door Rule. Changing this forces a new Front Door Rule to be created.
"d
cdnFrontdoorRuleSetName" EThe name of the Front Door Rule Set containing this Front Door Rule.
"

conditions_B]:[
Y
cdnFrontdoorRuleConditions9azure:cdn/FrontdoorRuleConditions:FrontdoorRuleConditions'A `conditions` block as defined below.
"ý
name" ðThe name which should be used for this Front Door Rule. Possible values must be between 1 and 260 characters in length, begin with a letter and may contain only letters and numbers. Changing this forces a new Front Door Rule to be created.
"
order The order in which the rules will be applied for the Front Door Endpoint. The order value should be sequential and begin at `1`(e.g. `1`, `2`, `3`...). A Front Door Rule with a lesser order value will be applied before a rule with a greater order value.

->**NOTE:** If the Front Door Rule has an order value of `0` they do not require any conditions and the actions will always be applied.
*-
D
cdnFrontdoorRuleSet+azure:cdn/frontdoorRuleSet:FrontdoorRuleSetÀ(Manages a Front Door (standard/premium) Rule Set.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const example = new azure.core.ResourceGroup("example", {
    name: "example-cdn-frontdoor",
    location: "West Europe",
});
const exampleFrontdoorProfile = new azure.cdn.FrontdoorProfile("example", {
    name: "example-profile",
    resourceGroupName: example.name,
    skuName: "Standard_AzureFrontDoor",
});
const exampleFrontdoorRuleSet = new azure.cdn.FrontdoorRuleSet("example", {
    name: "ExampleRuleSet",
    cdnFrontdoorProfileId: exampleFrontdoorProfile.id,
});
```
```python
import pulumi
import pulumi_azure as azure

example = azure.core.ResourceGroup("example",
    name="example-cdn-frontdoor",
    location="West Europe")
example_frontdoor_profile = azure.cdn.FrontdoorProfile("example",
    name="example-profile",
    resource_group_name=example.name,
    sku_name="Standard_AzureFrontDoor")
example_frontdoor_rule_set = azure.cdn.FrontdoorRuleSet("example",
    name="ExampleRuleSet",
    cdn_frontdoor_profile_id=example_frontdoor_profile.id)
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var example = new Azure.Core.ResourceGroup("example", new()
    {
        Name = "example-cdn-frontdoor",
        Location = "West Europe",
    });

    var exampleFrontdoorProfile = new Azure.Cdn.FrontdoorProfile("example", new()
    {
        Name = "example-profile",
        ResourceGroupName = example.Name,
        SkuName = "Standard_AzureFrontDoor",
    });

    var exampleFrontdoorRuleSet = new Azure.Cdn.FrontdoorRuleSet("example", new()
    {
        Name = "ExampleRuleSet",
        CdnFrontdoorProfileId = exampleFrontdoorProfile.Id,
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/cdn"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
			Name:     pulumi.String("example-cdn-frontdoor"),
			Location: pulumi.String("West Europe"),
		})
		if err != nil {
			return err
		}
		exampleFrontdoorProfile, err := cdn.NewFrontdoorProfile(ctx, "example", &cdn.FrontdoorProfileArgs{
			Name:              pulumi.String("example-profile"),
			ResourceGroupName: example.Name,
			SkuName:           pulumi.String("Standard_AzureFrontDoor"),
		})
		if err != nil {
			return err
		}
		_, err = cdn.NewFrontdoorRuleSet(ctx, "example", &cdn.FrontdoorRuleSetArgs{
			Name:                  pulumi.String("ExampleRuleSet"),
			CdnFrontdoorProfileId: exampleFrontdoorProfile.ID(),
		})
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.core.ResourceGroup;
import com.pulumi.azure.core.ResourceGroupArgs;
import com.pulumi.azure.cdn.FrontdoorProfile;
import com.pulumi.azure.cdn.FrontdoorProfileArgs;
import com.pulumi.azure.cdn.FrontdoorRuleSet;
import com.pulumi.azure.cdn.FrontdoorRuleSetArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        var example = new ResourceGroup("example", ResourceGroupArgs.builder()
            .name("example-cdn-frontdoor")
            .location("West Europe")
            .build());

        var exampleFrontdoorProfile = new FrontdoorProfile("exampleFrontdoorProfile", FrontdoorProfileArgs.builder()
            .name("example-profile")
            .resourceGroupName(example.name())
            .skuName("Standard_AzureFrontDoor")
            .build());

        var exampleFrontdoorRuleSet = new FrontdoorRuleSet("exampleFrontdoorRuleSet", FrontdoorRuleSetArgs.builder()
            .name("ExampleRuleSet")
            .cdnFrontdoorProfileId(exampleFrontdoorProfile.id())
            .build());

    }
}
```
```yaml
resources:
  example:
    type: azure:core:ResourceGroup
    properties:
      name: example-cdn-frontdoor
      location: West Europe
  exampleFrontdoorProfile:
    type: azure:cdn:FrontdoorProfile
    name: example
    properties:
      name: example-profile
      resourceGroupName: ${example.name}
      skuName: Standard_AzureFrontDoor
  exampleFrontdoorRuleSet:
    type: azure:cdn:FrontdoorRuleSet
    name: example
    properties:
      name: ExampleRuleSet
      cdnFrontdoorProfileId: ${exampleFrontdoorProfile.id}
```
<!--End PulumiCodeChooser -->

## Import

Front Door Rule Sets can be imported using the `resource id`, e.g.

```sh
$ pulumi import azure:cdn/frontdoorRuleSet:FrontdoorRuleSet example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.Cdn/profiles/profile1/ruleSets/ruleSet1
```

}
cdnFrontdoorProfileId" `The ID of the Front Door Profile. Changing this forces a new Front Door Rule Set to be created.

nameB" zThe name which should be used for this Front Door Rule Set. Changing this forces a new Front Door Rule Set to be created.
"}
cdnFrontdoorProfileId" `The ID of the Front Door Profile. Changing this forces a new Front Door Rule Set to be created.
"
name" zThe name which should be used for this Front Door Rule Set. Changing this forces a new Front Door Rule Set to be created.
*
A
cdnFrontdoorSecret)azure:cdn/frontdoorSecret:FrontdoorSecret¢Manages a Front Door (standard/premium) Secret.

```New-AzADServicePrincipal -ApplicationId "00000000-0000-0000-0000-000000000000"```

| Object ID                                | Key Permissions | Secret Permissions   | Certificate Permissions                       |
|:-----------------------------------------|:---------------:|:--------------------:|:---------------------------------------------:|
| `Microsoft.Azure.Cdn` Object ID          | -               | **Get**              | -                                             |
| Your Personal AAD Object ID              | -               | **Get** and **List** | **Get**, **List**, **Purge** and **Recover**  |
| Terraform Service Principal              | -               | **Get**              | **Get**, **Import**, **Delete** and **Purge** |

->**NOTE:** You only need to add the `Access Policy` for your personal AAD Object ID if you are planning to view the `secrets` via the Azure Portal.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";
import * as azuread from "@pulumi/azuread";
import * as std from "@pulumi/std";

const current = azure.core.getClientConfig({});
const frontdoor = azuread.getServicePrincipal({
    displayName: "Microsoft.Azure.Cdn",
});
const example = new azure.core.ResourceGroup("example", {
    name: "example-cdn-frontdoor",
    location: "West Europe",
});
const exampleKeyVault = new azure.keyvault.KeyVault("example", {
    name: "example-keyvault",
    location: example.location,
    resourceGroupName: example.name,
    tenantId: current.then(current => current.tenantId),
    skuName: "premium",
    softDeleteRetentionDays: 7,
    networkAcls: {
        defaultAction: "Deny",
        bypass: "AzureServices",
        ipRules: ["10.0.0.0/24"],
    },
    accessPolicies: [
        {
            tenantId: current.then(current => current.tenantId),
            objectId: frontdoor.then(frontdoor => frontdoor.objectId),
            secretPermissions: ["Get"],
        },
        {
            tenantId: current.then(current => current.tenantId),
            objectId: current.then(current => current.objectId),
            certificatePermissions: [
                "Get",
                "Import",
                "Delete",
                "Purge",
            ],
            secretPermissions: ["Get"],
        },
    ],
});
const exampleCertificate = new azure.keyvault.Certificate("example", {
    name: "example-cert",
    keyVaultId: exampleKeyVault.id,
    certificate: {
        contents: std.filebase64({
            input: "my-certificate.pfx",
        }).then(invoke => invoke.result),
    },
});
const exampleFrontdoorProfile = new azure.cdn.FrontdoorProfile("example", {
    name: "example-cdn-profile",
    resourceGroupName: example.name,
    skuName: "Standard_AzureFrontDoor",
});
const exampleFrontdoorSecret = new azure.cdn.FrontdoorSecret("example", {
    name: "example-customer-managed-secret",
    cdnFrontdoorProfileId: exampleFrontdoorProfile.id,
    secret: {
        customerCertificates: [{
            keyVaultCertificateId: exampleCertificate.id,
        }],
    },
});
```
```python
import pulumi
import pulumi_azure as azure
import pulumi_azuread as azuread
import pulumi_std as std

current = azure.core.get_client_config()
frontdoor = azuread.get_service_principal(display_name="Microsoft.Azure.Cdn")
example = azure.core.ResourceGroup("example",
    name="example-cdn-frontdoor",
    location="West Europe")
example_key_vault = azure.keyvault.KeyVault("example",
    name="example-keyvault",
    location=example.location,
    resource_group_name=example.name,
    tenant_id=current.tenant_id,
    sku_name="premium",
    soft_delete_retention_days=7,
    network_acls={
        "default_action": "Deny",
        "bypass": "AzureServices",
        "ip_rules": ["10.0.0.0/24"],
    },
    access_policies=[
        {
            "tenant_id": current.tenant_id,
            "object_id": frontdoor.object_id,
            "secret_permissions": ["Get"],
        },
        {
            "tenant_id": current.tenant_id,
            "object_id": current.object_id,
            "certificate_permissions": [
                "Get",
                "Import",
                "Delete",
                "Purge",
            ],
            "secret_permissions": ["Get"],
        },
    ])
example_certificate = azure.keyvault.Certificate("example",
    name="example-cert",
    key_vault_id=example_key_vault.id,
    certificate={
        "contents": std.filebase64(input="my-certificate.pfx").result,
    })
example_frontdoor_profile = azure.cdn.FrontdoorProfile("example",
    name="example-cdn-profile",
    resource_group_name=example.name,
    sku_name="Standard_AzureFrontDoor")
example_frontdoor_secret = azure.cdn.FrontdoorSecret("example",
    name="example-customer-managed-secret",
    cdn_frontdoor_profile_id=example_frontdoor_profile.id,
    secret={
        "customer_certificates": [{
            "key_vault_certificate_id": example_certificate.id,
        }],
    })
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;
using AzureAD = Pulumi.AzureAD;
using Std = Pulumi.Std;

return await Deployment.RunAsync(() => 
{
    var current = Azure.Core.GetClientConfig.Invoke();

    var frontdoor = AzureAD.GetServicePrincipal.Invoke(new()
    {
        DisplayName = "Microsoft.Azure.Cdn",
    });

    var example = new Azure.Core.ResourceGroup("example", new()
    {
        Name = "example-cdn-frontdoor",
        Location = "West Europe",
    });

    var exampleKeyVault = new Azure.KeyVault.KeyVault("example", new()
    {
        Name = "example-keyvault",
        Location = example.Location,
        ResourceGroupName = example.Name,
        TenantId = current.Apply(getClientConfigResult => getClientConfigResult.TenantId),
        SkuName = "premium",
        SoftDeleteRetentionDays = 7,
        NetworkAcls = new Azure.KeyVault.Inputs.KeyVaultNetworkAclsArgs
        {
            DefaultAction = "Deny",
            Bypass = "AzureServices",
            IpRules = new[]
            {
                "10.0.0.0/24",
            },
        },
        AccessPolicies = new[]
        {
            new Azure.KeyVault.Inputs.KeyVaultAccessPolicyArgs
            {
                TenantId = current.Apply(getClientConfigResult => getClientConfigResult.TenantId),
                ObjectId = frontdoor.Apply(getServicePrincipalResult => getServicePrincipalResult.ObjectId),
                SecretPermissions = new[]
                {
                    "Get",
                },
            },
            new Azure.KeyVault.Inputs.KeyVaultAccessPolicyArgs
            {
                TenantId = current.Apply(getClientConfigResult => getClientConfigResult.TenantId),
                ObjectId = current.Apply(getClientConfigResult => getClientConfigResult.ObjectId),
                CertificatePermissions = new[]
                {
                    "Get",
                    "Import",
                    "Delete",
                    "Purge",
                },
                SecretPermissions = new[]
                {
                    "Get",
                },
            },
        },
    });

    var exampleCertificate = new Azure.KeyVault.Certificate("example", new()
    {
        Name = "example-cert",
        KeyVaultId = exampleKeyVault.Id,
        KeyVaultCertificate = new Azure.KeyVault.Inputs.CertificateCertificateArgs
        {
            Contents = Std.Filebase64.Invoke(new()
            {
                Input = "my-certificate.pfx",
            }).Apply(invoke => invoke.Result),
        },
    });

    var exampleFrontdoorProfile = new Azure.Cdn.FrontdoorProfile("example", new()
    {
        Name = "example-cdn-profile",
        ResourceGroupName = example.Name,
        SkuName = "Standard_AzureFrontDoor",
    });

    var exampleFrontdoorSecret = new Azure.Cdn.FrontdoorSecret("example", new()
    {
        Name = "example-customer-managed-secret",
        CdnFrontdoorProfileId = exampleFrontdoorProfile.Id,
        Secret = new Azure.Cdn.Inputs.FrontdoorSecretSecretArgs
        {
            CustomerCertificates = new[]
            {
                new Azure.Cdn.Inputs.FrontdoorSecretSecretCustomerCertificateArgs
                {
                    KeyVaultCertificateId = exampleCertificate.Id,
                },
            },
        },
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/cdn"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/keyvault"
	"github.com/pulumi/pulumi-azuread/sdk/v5/go/azuread"
	"github.com/pulumi/pulumi-std/sdk/go/std"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		current, err := core.GetClientConfig(ctx, map[string]interface{}{}, nil)
		if err != nil {
			return err
		}
		frontdoor, err := azuread.LookupServicePrincipal(ctx, &azuread.LookupServicePrincipalArgs{
			DisplayName: pulumi.StringRef("Microsoft.Azure.Cdn"),
		}, nil)
		if err != nil {
			return err
		}
		example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
			Name:     pulumi.String("example-cdn-frontdoor"),
			Location: pulumi.String("West Europe"),
		})
		if err != nil {
			return err
		}
		exampleKeyVault, err := keyvault.NewKeyVault(ctx, "example", &keyvault.KeyVaultArgs{
			Name:                    pulumi.String("example-keyvault"),
			Location:                example.Location,
			ResourceGroupName:       example.Name,
			TenantId:                pulumi.String(current.TenantId),
			SkuName:                 pulumi.String("premium"),
			SoftDeleteRetentionDays: pulumi.Int(7),
			NetworkAcls: &keyvault.KeyVaultNetworkAclsArgs{
				DefaultAction: pulumi.String("Deny"),
				Bypass:        pulumi.String("AzureServices"),
				IpRules: pulumi.StringArray{
					pulumi.String("10.0.0.0/24"),
				},
			},
			AccessPolicies: keyvault.KeyVaultAccessPolicyArray{
				&keyvault.KeyVaultAccessPolicyArgs{
					TenantId: pulumi.String(current.TenantId),
					ObjectId: pulumi.String(frontdoor.ObjectId),
					SecretPermissions: pulumi.StringArray{
						pulumi.String("Get"),
					},
				},
				&keyvault.KeyVaultAccessPolicyArgs{
					TenantId: pulumi.String(current.TenantId),
					ObjectId: pulumi.String(current.ObjectId),
					CertificatePermissions: pulumi.StringArray{
						pulumi.String("Get"),
						pulumi.String("Import"),
						pulumi.String("Delete"),
						pulumi.String("Purge"),
					},
					SecretPermissions: pulumi.StringArray{
						pulumi.String("Get"),
					},
				},
			},
		})
		if err != nil {
			return err
		}
		invokeFilebase64, err := std.Filebase64(ctx, &std.Filebase64Args{
			Input: "my-certificate.pfx",
		}, nil)
		if err != nil {
			return err
		}
		exampleCertificate, err := keyvault.NewCertificate(ctx, "example", &keyvault.CertificateArgs{
			Name:       pulumi.String("example-cert"),
			KeyVaultId: exampleKeyVault.ID(),
			Certificate: &keyvault.CertificateCertificateArgs{
				Contents: pulumi.String(invokeFilebase64.Result),
			},
		})
		if err != nil {
			return err
		}
		exampleFrontdoorProfile, err := cdn.NewFrontdoorProfile(ctx, "example", &cdn.FrontdoorProfileArgs{
			Name:              pulumi.String("example-cdn-profile"),
			ResourceGroupName: example.Name,
			SkuName:           pulumi.String("Standard_AzureFrontDoor"),
		})
		if err != nil {
			return err
		}
		_, err = cdn.NewFrontdoorSecret(ctx, "example", &cdn.FrontdoorSecretArgs{
			Name:                  pulumi.String("example-customer-managed-secret"),
			CdnFrontdoorProfileId: exampleFrontdoorProfile.ID(),
			Secret: &cdn.FrontdoorSecretSecretArgs{
				CustomerCertificates: cdn.FrontdoorSecretSecretCustomerCertificateArray{
					&cdn.FrontdoorSecretSecretCustomerCertificateArgs{
						KeyVaultCertificateId: exampleCertificate.ID(),
					},
				},
			},
		})
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.core.CoreFunctions;
import com.pulumi.azuread.AzureadFunctions;
import com.pulumi.azuread.inputs.GetServicePrincipalArgs;
import com.pulumi.azure.core.ResourceGroup;
import com.pulumi.azure.core.ResourceGroupArgs;
import com.pulumi.azure.keyvault.KeyVault;
import com.pulumi.azure.keyvault.KeyVaultArgs;
import com.pulumi.azure.keyvault.inputs.KeyVaultNetworkAclsArgs;
import com.pulumi.azure.keyvault.inputs.KeyVaultAccessPolicyArgs;
import com.pulumi.azure.keyvault.Certificate;
import com.pulumi.azure.keyvault.CertificateArgs;
import com.pulumi.azure.keyvault.inputs.CertificateCertificateArgs;
import com.pulumi.azure.cdn.FrontdoorProfile;
import com.pulumi.azure.cdn.FrontdoorProfileArgs;
import com.pulumi.azure.cdn.FrontdoorSecret;
import com.pulumi.azure.cdn.FrontdoorSecretArgs;
import com.pulumi.azure.cdn.inputs.FrontdoorSecretSecretArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        final var current = CoreFunctions.getClientConfig();

        final var frontdoor = AzureadFunctions.getServicePrincipal(GetServicePrincipalArgs.builder()
            .displayName("Microsoft.Azure.Cdn")
            .build());

        var example = new ResourceGroup("example", ResourceGroupArgs.builder()
            .name("example-cdn-frontdoor")
            .location("West Europe")
            .build());

        var exampleKeyVault = new KeyVault("exampleKeyVault", KeyVaultArgs.builder()
            .name("example-keyvault")
            .location(example.location())
            .resourceGroupName(example.name())
            .tenantId(current.applyValue(getClientConfigResult -> getClientConfigResult.tenantId()))
            .skuName("premium")
            .softDeleteRetentionDays(7)
            .networkAcls(KeyVaultNetworkAclsArgs.builder()
                .defaultAction("Deny")
                .bypass("AzureServices")
                .ipRules("10.0.0.0/24")
                .build())
            .accessPolicies(            
                KeyVaultAccessPolicyArgs.builder()
                    .tenantId(current.applyValue(getClientConfigResult -> getClientConfigResult.tenantId()))
                    .objectId(frontdoor.applyValue(getServicePrincipalResult -> getServicePrincipalResult.objectId()))
                    .secretPermissions("Get")
                    .build(),
                KeyVaultAccessPolicyArgs.builder()
                    .tenantId(current.applyValue(getClientConfigResult -> getClientConfigResult.tenantId()))
                    .objectId(current.applyValue(getClientConfigResult -> getClientConfigResult.objectId()))
                    .certificatePermissions(                    
                        "Get",
                        "Import",
                        "Delete",
                        "Purge")
                    .secretPermissions("Get")
                    .build())
            .build());

        var exampleCertificate = new Certificate("exampleCertificate", CertificateArgs.builder()
            .name("example-cert")
            .keyVaultId(exampleKeyVault.id())
            .certificate(CertificateCertificateArgs.builder()
                .contents(StdFunctions.filebase64(Filebase64Args.builder()
                    .input("my-certificate.pfx")
                    .build()).result())
                .build())
            .build());

        var exampleFrontdoorProfile = new FrontdoorProfile("exampleFrontdoorProfile", FrontdoorProfileArgs.builder()
            .name("example-cdn-profile")
            .resourceGroupName(example.name())
            .skuName("Standard_AzureFrontDoor")
            .build());

        var exampleFrontdoorSecret = new FrontdoorSecret("exampleFrontdoorSecret", FrontdoorSecretArgs.builder()
            .name("example-customer-managed-secret")
            .cdnFrontdoorProfileId(exampleFrontdoorProfile.id())
            .secret(FrontdoorSecretSecretArgs.builder()
                .customerCertificates(FrontdoorSecretSecretCustomerCertificateArgs.builder()
                    .keyVaultCertificateId(exampleCertificate.id())
                    .build())
                .build())
            .build());

    }
}
```
```yaml
resources:
  example:
    type: azure:core:ResourceGroup
    properties:
      name: example-cdn-frontdoor
      location: West Europe
  exampleKeyVault:
    type: azure:keyvault:KeyVault
    name: example
    properties:
      name: example-keyvault
      location: ${example.location}
      resourceGroupName: ${example.name}
      tenantId: ${current.tenantId}
      skuName: premium
      softDeleteRetentionDays: 7
      networkAcls:
        defaultAction: Deny
        bypass: AzureServices
        ipRules:
          - 10.0.0.0/24
      accessPolicies:
        - tenantId: ${current.tenantId}
          objectId: ${frontdoor.objectId}
          secretPermissions:
            - Get
        - tenantId: ${current.tenantId}
          objectId: ${current.objectId}
          certificatePermissions:
            - Get
            - Import
            - Delete
            - Purge
          secretPermissions:
            - Get
  exampleCertificate:
    type: azure:keyvault:Certificate
    name: example
    properties:
      name: example-cert
      keyVaultId: ${exampleKeyVault.id}
      certificate:
        contents:
          fn::invoke:
            function: std:filebase64
            arguments:
              input: my-certificate.pfx
            return: result
  exampleFrontdoorProfile:
    type: azure:cdn:FrontdoorProfile
    name: example
    properties:
      name: example-cdn-profile
      resourceGroupName: ${example.name}
      skuName: Standard_AzureFrontDoor
  exampleFrontdoorSecret:
    type: azure:cdn:FrontdoorSecret
    name: example
    properties:
      name: example-customer-managed-secret
      cdnFrontdoorProfileId: ${exampleFrontdoorProfile.id}
      secret:
        customerCertificates:
          - keyVaultCertificateId: ${exampleCertificate.id}
variables:
  current:
    fn::invoke:
      function: azure:core:getClientConfig
      arguments: {}
  frontdoor:
    fn::invoke:
      function: azuread:getServicePrincipal
      arguments:
        displayName: Microsoft.Azure.Cdn
```
<!--End PulumiCodeChooser -->

## Import

Front Door Secrets can be imported using the `resource id`, e.g.

```sh
$ pulumi import azure:cdn/frontdoorSecret:FrontdoorSecret example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.Cdn/profiles/profile1/secrets/secrets1
```


cdnFrontdoorProfileId" gThe Resource ID of the Front Door Profile. Changing this forces a new Front Door Secret to be created.

nameB" The name which should be used for this Front Door Secret. Possible values must start with a letter or a number, only contain letters, numbers and hyphens and have a length of between 2 and 260 characters. Changing this forces a new Front Door Secret to be created.
Â
secretW:U
S
cdnFrontdoorSecretSecret5azure:cdn/FrontdoorSecretSecret:FrontdoorSecretSecret_A `secret` block as defined below. Changing this forces a new Front Door Secret to be created.
"
cdnFrontdoorProfileId" gThe Resource ID of the Front Door Profile. Changing this forces a new Front Door Secret to be created.
"e
cdnFrontdoorProfileName" FThe name of the Front Door Profile containing this Front Door Secret.
"
name" The name which should be used for this Front Door Secret. Possible values must start with a letter or a number, only contain letters, numbers and hyphens and have a length of between 2 and 260 characters. Changing this forces a new Front Door Secret to be created.
"Â
secretW:U
S
cdnFrontdoorSecretSecret5azure:cdn/FrontdoorSecretSecret:FrontdoorSecretSecret_A `secret` block as defined below. Changing this forces a new Front Door Secret to be created.
*©
Y
cdnFrontdoorSecurityPolicy9azure:cdn/frontdoorSecurityPolicy:FrontdoorSecurityPolicyøManages a Front Door (standard/premium) Security Policy.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const example = new azure.core.ResourceGroup("example", {
    name: "example-cdn-frontdoor",
    location: "West Europe",
});
const exampleFrontdoorProfile = new azure.cdn.FrontdoorProfile("example", {
    name: "example-profile",
    resourceGroupName: example.name,
    skuName: "Standard_AzureFrontDoor",
});
const exampleFrontdoorFirewallPolicy = new azure.cdn.FrontdoorFirewallPolicy("example", {
    name: "exampleWAF",
    resourceGroupName: example.name,
    skuName: exampleFrontdoorProfile.skuName,
    enabled: true,
    mode: "Prevention",
    redirectUrl: "https://www.contoso.com",
    customBlockResponseStatusCode: 403,
    customBlockResponseBody: "PGh0bWw+CjxoZWFkZXI+PHRpdGxlPkhlbGxvPC90aXRsZT48L2hlYWRlcj4KPGJvZHk+CkhlbGxvIHdvcmxkCjwvYm9keT4KPC9odG1sPg==",
    customRules: [{
        name: "Rule1",
        enabled: true,
        priority: 1,
        rateLimitDurationInMinutes: 1,
        rateLimitThreshold: 10,
        type: "MatchRule",
        action: "Block",
        matchConditions: [{
            matchVariable: "RemoteAddr",
            operator: "IPMatch",
            negationCondition: false,
            matchValues: [
                "192.168.1.0/24",
                "10.0.1.0/24",
            ],
        }],
    }],
});
const exampleZone = new azure.dns.Zone("example", {
    name: "sub-domain.domain.com",
    resourceGroupName: example.name,
});
const exampleFrontdoorCustomDomain = new azure.cdn.FrontdoorCustomDomain("example", {
    name: "example-customDomain",
    cdnFrontdoorProfileId: exampleFrontdoorProfile.id,
    dnsZoneId: exampleZone.id,
    hostName: "contoso.fabrikam.com",
    tls: {
        certificateType: "ManagedCertificate",
        minimumTlsVersion: "TLS12",
    },
});
const exampleFrontdoorSecurityPolicy = new azure.cdn.FrontdoorSecurityPolicy("example", {
    name: "Example-Security-Policy",
    cdnFrontdoorProfileId: exampleFrontdoorProfile.id,
    securityPolicies: {
        firewall: {
            cdnFrontdoorFirewallPolicyId: exampleFrontdoorFirewallPolicy.id,
            association: {
                domains: [{
                    cdnFrontdoorDomainId: exampleFrontdoorCustomDomain.id,
                }],
                patternsToMatch: "/*",
            },
        },
    },
});
```
```python
import pulumi
import pulumi_azure as azure

example = azure.core.ResourceGroup("example",
    name="example-cdn-frontdoor",
    location="West Europe")
example_frontdoor_profile = azure.cdn.FrontdoorProfile("example",
    name="example-profile",
    resource_group_name=example.name,
    sku_name="Standard_AzureFrontDoor")
example_frontdoor_firewall_policy = azure.cdn.FrontdoorFirewallPolicy("example",
    name="exampleWAF",
    resource_group_name=example.name,
    sku_name=example_frontdoor_profile.sku_name,
    enabled=True,
    mode="Prevention",
    redirect_url="https://www.contoso.com",
    custom_block_response_status_code=403,
    custom_block_response_body="PGh0bWw+CjxoZWFkZXI+PHRpdGxlPkhlbGxvPC90aXRsZT48L2hlYWRlcj4KPGJvZHk+CkhlbGxvIHdvcmxkCjwvYm9keT4KPC9odG1sPg==",
    custom_rules=[{
        "name": "Rule1",
        "enabled": True,
        "priority": 1,
        "rate_limit_duration_in_minutes": 1,
        "rate_limit_threshold": 10,
        "type": "MatchRule",
        "action": "Block",
        "match_conditions": [{
            "match_variable": "RemoteAddr",
            "operator": "IPMatch",
            "negation_condition": False,
            "match_values": [
                "192.168.1.0/24",
                "10.0.1.0/24",
            ],
        }],
    }])
example_zone = azure.dns.Zone("example",
    name="sub-domain.domain.com",
    resource_group_name=example.name)
example_frontdoor_custom_domain = azure.cdn.FrontdoorCustomDomain("example",
    name="example-customDomain",
    cdn_frontdoor_profile_id=example_frontdoor_profile.id,
    dns_zone_id=example_zone.id,
    host_name="contoso.fabrikam.com",
    tls={
        "certificate_type": "ManagedCertificate",
        "minimum_tls_version": "TLS12",
    })
example_frontdoor_security_policy = azure.cdn.FrontdoorSecurityPolicy("example",
    name="Example-Security-Policy",
    cdn_frontdoor_profile_id=example_frontdoor_profile.id,
    security_policies={
        "firewall": {
            "cdn_frontdoor_firewall_policy_id": example_frontdoor_firewall_policy.id,
            "association": {
                "domains": [{
                    "cdn_frontdoor_domain_id": example_frontdoor_custom_domain.id,
                }],
                "patterns_to_match": "/*",
            },
        },
    })
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var example = new Azure.Core.ResourceGroup("example", new()
    {
        Name = "example-cdn-frontdoor",
        Location = "West Europe",
    });

    var exampleFrontdoorProfile = new Azure.Cdn.FrontdoorProfile("example", new()
    {
        Name = "example-profile",
        ResourceGroupName = example.Name,
        SkuName = "Standard_AzureFrontDoor",
    });

    var exampleFrontdoorFirewallPolicy = new Azure.Cdn.FrontdoorFirewallPolicy("example", new()
    {
        Name = "exampleWAF",
        ResourceGroupName = example.Name,
        SkuName = exampleFrontdoorProfile.SkuName,
        Enabled = true,
        Mode = "Prevention",
        RedirectUrl = "https://www.contoso.com",
        CustomBlockResponseStatusCode = 403,
        CustomBlockResponseBody = "PGh0bWw+CjxoZWFkZXI+PHRpdGxlPkhlbGxvPC90aXRsZT48L2hlYWRlcj4KPGJvZHk+CkhlbGxvIHdvcmxkCjwvYm9keT4KPC9odG1sPg==",
        CustomRules = new[]
        {
            new Azure.Cdn.Inputs.FrontdoorFirewallPolicyCustomRuleArgs
            {
                Name = "Rule1",
                Enabled = true,
                Priority = 1,
                RateLimitDurationInMinutes = 1,
                RateLimitThreshold = 10,
                Type = "MatchRule",
                Action = "Block",
                MatchConditions = new[]
                {
                    new Azure.Cdn.Inputs.FrontdoorFirewallPolicyCustomRuleMatchConditionArgs
                    {
                        MatchVariable = "RemoteAddr",
                        Operator = "IPMatch",
                        NegationCondition = false,
                        MatchValues = new[]
                        {
                            "192.168.1.0/24",
                            "10.0.1.0/24",
                        },
                    },
                },
            },
        },
    });

    var exampleZone = new Azure.Dns.Zone("example", new()
    {
        Name = "sub-domain.domain.com",
        ResourceGroupName = example.Name,
    });

    var exampleFrontdoorCustomDomain = new Azure.Cdn.FrontdoorCustomDomain("example", new()
    {
        Name = "example-customDomain",
        CdnFrontdoorProfileId = exampleFrontdoorProfile.Id,
        DnsZoneId = exampleZone.Id,
        HostName = "contoso.fabrikam.com",
        Tls = new Azure.Cdn.Inputs.FrontdoorCustomDomainTlsArgs
        {
            CertificateType = "ManagedCertificate",
            MinimumTlsVersion = "TLS12",
        },
    });

    var exampleFrontdoorSecurityPolicy = new Azure.Cdn.FrontdoorSecurityPolicy("example", new()
    {
        Name = "Example-Security-Policy",
        CdnFrontdoorProfileId = exampleFrontdoorProfile.Id,
        SecurityPolicies = new Azure.Cdn.Inputs.FrontdoorSecurityPolicySecurityPoliciesArgs
        {
            Firewall = new Azure.Cdn.Inputs.FrontdoorSecurityPolicySecurityPoliciesFirewallArgs
            {
                CdnFrontdoorFirewallPolicyId = exampleFrontdoorFirewallPolicy.Id,
                Association = new Azure.Cdn.Inputs.FrontdoorSecurityPolicySecurityPoliciesFirewallAssociationArgs
                {
                    Domains = new[]
                    {
                        new Azure.Cdn.Inputs.FrontdoorSecurityPolicySecurityPoliciesFirewallAssociationDomainArgs
                        {
                            CdnFrontdoorDomainId = exampleFrontdoorCustomDomain.Id,
                        },
                    },
                    PatternsToMatch = "/*",
                },
            },
        },
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/cdn"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/dns"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
			Name:     pulumi.String("example-cdn-frontdoor"),
			Location: pulumi.String("West Europe"),
		})
		if err != nil {
			return err
		}
		exampleFrontdoorProfile, err := cdn.NewFrontdoorProfile(ctx, "example", &cdn.FrontdoorProfileArgs{
			Name:              pulumi.String("example-profile"),
			ResourceGroupName: example.Name,
			SkuName:           pulumi.String("Standard_AzureFrontDoor"),
		})
		if err != nil {
			return err
		}
		exampleFrontdoorFirewallPolicy, err := cdn.NewFrontdoorFirewallPolicy(ctx, "example", &cdn.FrontdoorFirewallPolicyArgs{
			Name:                          pulumi.String("exampleWAF"),
			ResourceGroupName:             example.Name,
			SkuName:                       exampleFrontdoorProfile.SkuName,
			Enabled:                       pulumi.Bool(true),
			Mode:                          pulumi.String("Prevention"),
			RedirectUrl:                   pulumi.String("https://www.contoso.com"),
			CustomBlockResponseStatusCode: pulumi.Int(403),
			CustomBlockResponseBody:       pulumi.String("PGh0bWw+CjxoZWFkZXI+PHRpdGxlPkhlbGxvPC90aXRsZT48L2hlYWRlcj4KPGJvZHk+CkhlbGxvIHdvcmxkCjwvYm9keT4KPC9odG1sPg=="),
			CustomRules: cdn.FrontdoorFirewallPolicyCustomRuleArray{
				&cdn.FrontdoorFirewallPolicyCustomRuleArgs{
					Name:                       pulumi.String("Rule1"),
					Enabled:                    pulumi.Bool(true),
					Priority:                   pulumi.Int(1),
					RateLimitDurationInMinutes: pulumi.Int(1),
					RateLimitThreshold:         pulumi.Int(10),
					Type:                       pulumi.String("MatchRule"),
					Action:                     pulumi.String("Block"),
					MatchConditions: cdn.FrontdoorFirewallPolicyCustomRuleMatchConditionArray{
						&cdn.FrontdoorFirewallPolicyCustomRuleMatchConditionArgs{
							MatchVariable:     pulumi.String("RemoteAddr"),
							Operator:          pulumi.String("IPMatch"),
							NegationCondition: pulumi.Bool(false),
							MatchValues: pulumi.StringArray{
								pulumi.String("192.168.1.0/24"),
								pulumi.String("10.0.1.0/24"),
							},
						},
					},
				},
			},
		})
		if err != nil {
			return err
		}
		exampleZone, err := dns.NewZone(ctx, "example", &dns.ZoneArgs{
			Name:              pulumi.String("sub-domain.domain.com"),
			ResourceGroupName: example.Name,
		})
		if err != nil {
			return err
		}
		exampleFrontdoorCustomDomain, err := cdn.NewFrontdoorCustomDomain(ctx, "example", &cdn.FrontdoorCustomDomainArgs{
			Name:                  pulumi.String("example-customDomain"),
			CdnFrontdoorProfileId: exampleFrontdoorProfile.ID(),
			DnsZoneId:             exampleZone.ID(),
			HostName:              pulumi.String("contoso.fabrikam.com"),
			Tls: &cdn.FrontdoorCustomDomainTlsArgs{
				CertificateType:   pulumi.String("ManagedCertificate"),
				MinimumTlsVersion: pulumi.String("TLS12"),
			},
		})
		if err != nil {
			return err
		}
		_, err = cdn.NewFrontdoorSecurityPolicy(ctx, "example", &cdn.FrontdoorSecurityPolicyArgs{
			Name:                  pulumi.String("Example-Security-Policy"),
			CdnFrontdoorProfileId: exampleFrontdoorProfile.ID(),
			SecurityPolicies: &cdn.FrontdoorSecurityPolicySecurityPoliciesArgs{
				Firewall: &cdn.FrontdoorSecurityPolicySecurityPoliciesFirewallArgs{
					CdnFrontdoorFirewallPolicyId: exampleFrontdoorFirewallPolicy.ID(),
					Association: &cdn.FrontdoorSecurityPolicySecurityPoliciesFirewallAssociationArgs{
						Domains: cdn.FrontdoorSecurityPolicySecurityPoliciesFirewallAssociationDomainArray{
							&cdn.FrontdoorSecurityPolicySecurityPoliciesFirewallAssociationDomainArgs{
								CdnFrontdoorDomainId: exampleFrontdoorCustomDomain.ID(),
							},
						},
						PatternsToMatch: pulumi.String("/*"),
					},
				},
			},
		})
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.core.ResourceGroup;
import com.pulumi.azure.core.ResourceGroupArgs;
import com.pulumi.azure.cdn.FrontdoorProfile;
import com.pulumi.azure.cdn.FrontdoorProfileArgs;
import com.pulumi.azure.cdn.FrontdoorFirewallPolicy;
import com.pulumi.azure.cdn.FrontdoorFirewallPolicyArgs;
import com.pulumi.azure.cdn.inputs.FrontdoorFirewallPolicyCustomRuleArgs;
import com.pulumi.azure.dns.Zone;
import com.pulumi.azure.dns.ZoneArgs;
import com.pulumi.azure.cdn.FrontdoorCustomDomain;
import com.pulumi.azure.cdn.FrontdoorCustomDomainArgs;
import com.pulumi.azure.cdn.inputs.FrontdoorCustomDomainTlsArgs;
import com.pulumi.azure.cdn.FrontdoorSecurityPolicy;
import com.pulumi.azure.cdn.FrontdoorSecurityPolicyArgs;
import com.pulumi.azure.cdn.inputs.FrontdoorSecurityPolicySecurityPoliciesArgs;
import com.pulumi.azure.cdn.inputs.FrontdoorSecurityPolicySecurityPoliciesFirewallArgs;
import com.pulumi.azure.cdn.inputs.FrontdoorSecurityPolicySecurityPoliciesFirewallAssociationArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        var example = new ResourceGroup("example", ResourceGroupArgs.builder()
            .name("example-cdn-frontdoor")
            .location("West Europe")
            .build());

        var exampleFrontdoorProfile = new FrontdoorProfile("exampleFrontdoorProfile", FrontdoorProfileArgs.builder()
            .name("example-profile")
            .resourceGroupName(example.name())
            .skuName("Standard_AzureFrontDoor")
            .build());

        var exampleFrontdoorFirewallPolicy = new FrontdoorFirewallPolicy("exampleFrontdoorFirewallPolicy", FrontdoorFirewallPolicyArgs.builder()
            .name("exampleWAF")
            .resourceGroupName(example.name())
            .skuName(exampleFrontdoorProfile.skuName())
            .enabled(true)
            .mode("Prevention")
            .redirectUrl("https://www.contoso.com")
            .customBlockResponseStatusCode(403)
            .customBlockResponseBody("PGh0bWw+CjxoZWFkZXI+PHRpdGxlPkhlbGxvPC90aXRsZT48L2hlYWRlcj4KPGJvZHk+CkhlbGxvIHdvcmxkCjwvYm9keT4KPC9odG1sPg==")
            .customRules(FrontdoorFirewallPolicyCustomRuleArgs.builder()
                .name("Rule1")
                .enabled(true)
                .priority(1)
                .rateLimitDurationInMinutes(1)
                .rateLimitThreshold(10)
                .type("MatchRule")
                .action("Block")
                .matchConditions(FrontdoorFirewallPolicyCustomRuleMatchConditionArgs.builder()
                    .matchVariable("RemoteAddr")
                    .operator("IPMatch")
                    .negationCondition(false)
                    .matchValues(                    
                        "192.168.1.0/24",
                        "10.0.1.0/24")
                    .build())
                .build())
            .build());

        var exampleZone = new Zone("exampleZone", ZoneArgs.builder()
            .name("sub-domain.domain.com")
            .resourceGroupName(example.name())
            .build());

        var exampleFrontdoorCustomDomain = new FrontdoorCustomDomain("exampleFrontdoorCustomDomain", FrontdoorCustomDomainArgs.builder()
            .name("example-customDomain")
            .cdnFrontdoorProfileId(exampleFrontdoorProfile.id())
            .dnsZoneId(exampleZone.id())
            .hostName("contoso.fabrikam.com")
            .tls(FrontdoorCustomDomainTlsArgs.builder()
                .certificateType("ManagedCertificate")
                .minimumTlsVersion("TLS12")
                .build())
            .build());

        var exampleFrontdoorSecurityPolicy = new FrontdoorSecurityPolicy("exampleFrontdoorSecurityPolicy", FrontdoorSecurityPolicyArgs.builder()
            .name("Example-Security-Policy")
            .cdnFrontdoorProfileId(exampleFrontdoorProfile.id())
            .securityPolicies(FrontdoorSecurityPolicySecurityPoliciesArgs.builder()
                .firewall(FrontdoorSecurityPolicySecurityPoliciesFirewallArgs.builder()
                    .cdnFrontdoorFirewallPolicyId(exampleFrontdoorFirewallPolicy.id())
                    .association(FrontdoorSecurityPolicySecurityPoliciesFirewallAssociationArgs.builder()
                        .domains(FrontdoorSecurityPolicySecurityPoliciesFirewallAssociationDomainArgs.builder()
                            .cdnFrontdoorDomainId(exampleFrontdoorCustomDomain.id())
                            .build())
                        .patternsToMatch("/*")
                        .build())
                    .build())
                .build())
            .build());

    }
}
```
```yaml
resources:
  example:
    type: azure:core:ResourceGroup
    properties:
      name: example-cdn-frontdoor
      location: West Europe
  exampleFrontdoorProfile:
    type: azure:cdn:FrontdoorProfile
    name: example
    properties:
      name: example-profile
      resourceGroupName: ${example.name}
      skuName: Standard_AzureFrontDoor
  exampleFrontdoorFirewallPolicy:
    type: azure:cdn:FrontdoorFirewallPolicy
    name: example
    properties:
      name: exampleWAF
      resourceGroupName: ${example.name}
      skuName: ${exampleFrontdoorProfile.skuName}
      enabled: true
      mode: Prevention
      redirectUrl: https://www.contoso.com
      customBlockResponseStatusCode: 403
      customBlockResponseBody: PGh0bWw+CjxoZWFkZXI+PHRpdGxlPkhlbGxvPC90aXRsZT48L2hlYWRlcj4KPGJvZHk+CkhlbGxvIHdvcmxkCjwvYm9keT4KPC9odG1sPg==
      customRules:
        - name: Rule1
          enabled: true
          priority: 1
          rateLimitDurationInMinutes: 1
          rateLimitThreshold: 10
          type: MatchRule
          action: Block
          matchConditions:
            - matchVariable: RemoteAddr
              operator: IPMatch
              negationCondition: false
              matchValues:
                - 192.168.1.0/24
                - 10.0.1.0/24
  exampleZone:
    type: azure:dns:Zone
    name: example
    properties:
      name: sub-domain.domain.com
      resourceGroupName: ${example.name}
  exampleFrontdoorCustomDomain:
    type: azure:cdn:FrontdoorCustomDomain
    name: example
    properties:
      name: example-customDomain
      cdnFrontdoorProfileId: ${exampleFrontdoorProfile.id}
      dnsZoneId: ${exampleZone.id}
      hostName: contoso.fabrikam.com
      tls:
        certificateType: ManagedCertificate
        minimumTlsVersion: TLS12
  exampleFrontdoorSecurityPolicy:
    type: azure:cdn:FrontdoorSecurityPolicy
    name: example
    properties:
      name: Example-Security-Policy
      cdnFrontdoorProfileId: ${exampleFrontdoorProfile.id}
      securityPolicies:
        firewall:
          cdnFrontdoorFirewallPolicyId: ${exampleFrontdoorFirewallPolicy.id}
          association:
            domains:
              - cdnFrontdoorDomainId: ${exampleFrontdoorCustomDomain.id}
            patternsToMatch: /*
```
<!--End PulumiCodeChooser -->

## Import

Front Door Security Policies can be imported using the `resource id`, e.g.

```sh
$ pulumi import azure:cdn/frontdoorSecurityPolicy:FrontdoorSecurityPolicy example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.Cdn/profiles/profile1/securityPolicies/policy1
```

¹
cdnFrontdoorProfileId" The Front Door Profile Resource Id that is linked to this Front Door Security Policy. Changing this forces a new Front Door Security Policy to be created.
Ä
nameB" µThe name which should be used for this Front Door Security Policy. Possible values must not be an empty string. Changing this forces a new Front Door Security Policy to be created.

securityPolicies:

cdn'FrontdoorSecurityPolicySecurityPoliciesYazure:cdn/FrontdoorSecurityPolicySecurityPolicies:FrontdoorSecurityPolicySecurityPoliciestAn `security_policies` block as defined below. Changing this forces a new Front Door Security Policy to be created.
"¹
cdnFrontdoorProfileId" The Front Door Profile Resource Id that is linked to this Front Door Security Policy. Changing this forces a new Front Door Security Policy to be created.
"Â
name" µThe name which should be used for this Front Door Security Policy. Possible values must not be an empty string. Changing this forces a new Front Door Security Policy to be created.
"
securityPolicies:

cdn'FrontdoorSecurityPolicySecurityPoliciesYazure:cdn/FrontdoorSecurityPolicySecurityPolicies:FrontdoorSecurityPolicySecurityPoliciestAn `security_policies` block as defined below. Changing this forces a new Front Door Security Policy to be created.
*®1
)
cdnProfileazure:cdn/profile:Profile&Manages a CDN Profile to create a collection of CDN Endpoints.

!> **Be Aware:** Azure is rolling out a breaking change on Friday 9th April 2021 which may cause issues with the CDN/FrontDoor resources. More information is available in this GitHub issue - however unfortunately this may necessitate a breaking change to the CDN and FrontDoor resources, more information will be posted in the GitHub issue as the necessary changes are identified.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const example = new azure.core.ResourceGroup("example", {
    name: "example-resources",
    location: "West Europe",
});
const exampleProfile = new azure.cdn.Profile("example", {
    name: "exampleCdnProfile",
    location: example.location,
    resourceGroupName: example.name,
    sku: "Standard_Verizon",
    tags: {
        environment: "Production",
        cost_center: "MSFT",
    },
});
```
```python
import pulumi
import pulumi_azure as azure

example = azure.core.ResourceGroup("example",
    name="example-resources",
    location="West Europe")
example_profile = azure.cdn.Profile("example",
    name="exampleCdnProfile",
    location=example.location,
    resource_group_name=example.name,
    sku="Standard_Verizon",
    tags={
        "environment": "Production",
        "cost_center": "MSFT",
    })
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var example = new Azure.Core.ResourceGroup("example", new()
    {
        Name = "example-resources",
        Location = "West Europe",
    });

    var exampleProfile = new Azure.Cdn.Profile("example", new()
    {
        Name = "exampleCdnProfile",
        Location = example.Location,
        ResourceGroupName = example.Name,
        Sku = "Standard_Verizon",
        Tags = 
        {
            { "environment", "Production" },
            { "cost_center", "MSFT" },
        },
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/cdn"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
			Name:     pulumi.String("example-resources"),
			Location: pulumi.String("West Europe"),
		})
		if err != nil {
			return err
		}
		_, err = cdn.NewProfile(ctx, "example", &cdn.ProfileArgs{
			Name:              pulumi.String("exampleCdnProfile"),
			Location:          example.Location,
			ResourceGroupName: example.Name,
			Sku:               pulumi.String("Standard_Verizon"),
			Tags: pulumi.StringMap{
				"environment": pulumi.String("Production"),
				"cost_center": pulumi.String("MSFT"),
			},
		})
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.core.ResourceGroup;
import com.pulumi.azure.core.ResourceGroupArgs;
import com.pulumi.azure.cdn.Profile;
import com.pulumi.azure.cdn.ProfileArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        var example = new ResourceGroup("example", ResourceGroupArgs.builder()
            .name("example-resources")
            .location("West Europe")
            .build());

        var exampleProfile = new Profile("exampleProfile", ProfileArgs.builder()
            .name("exampleCdnProfile")
            .location(example.location())
            .resourceGroupName(example.name())
            .sku("Standard_Verizon")
            .tags(Map.ofEntries(
                Map.entry("environment", "Production"),
                Map.entry("cost_center", "MSFT")
            ))
            .build());

    }
}
```
```yaml
resources:
  example:
    type: azure:core:ResourceGroup
    properties:
      name: example-resources
      location: West Europe
  exampleProfile:
    type: azure:cdn:Profile
    name: example
    properties:
      name: exampleCdnProfile
      location: ${example.location}
      resourceGroupName: ${example.name}
      sku: Standard_Verizon
      tags:
        environment: Production
        cost_center: MSFT
```
<!--End PulumiCodeChooser -->

## Import

CDN Profiles can be imported using the `resource id`, e.g.

```sh
$ pulumi import azure:cdn/profile:Profile example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Cdn/profiles/myprofile1
```


locationB" uSpecifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
h
nameB" ZSpecifies the name of the CDN Profile. Changing this forces a new resource to be created.

resourceGroupName" vThe name of the resource group in which to create the CDN Profile. Changing this forces a new resource to be created.
ò
sku" æThe pricing related information of current CDN profile. Accepted values are `Standard_Akamai`, `Standard_ChinaCdn`, `Standard_Microsoft`, `Standard_Verizon` or `Premium_Verizon`. Changing this forces a new resource to be created.
=
tagsB2" -A mapping of tags to assign to the resource.
"
location" uSpecifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
"f
name" ZSpecifies the name of the CDN Profile. Changing this forces a new resource to be created.
"
resourceGroupName" vThe name of the resource group in which to create the CDN Profile. Changing this forces a new resource to be created.
"ò
sku" æThe pricing related information of current CDN profile. Accepted values are `Standard_Akamai`, `Standard_ChinaCdn`, `Standard_Microsoft`, `Standard_Verizon` or `Premium_Verizon`. Changing this forces a new resource to be created.
"=
tagsB2" -A mapping of tags to assign to the resource.
*ÒN
B
chaosstudio
Capability'azure:chaosstudio/capability:CapabilityªFManages a Chaos Studio Capability.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const exampleResourceGroup = new azure.core.ResourceGroup("example", {
    name: "example-resources",
    location: "West Europe",
});
const example = new azure.containerservice.KubernetesCluster("example", {
    name: "example",
    location: exampleResourceGroup.location,
    resourceGroupName: exampleResourceGroup.name,
    dnsPrefix: "acctestaksexample",
    defaultNodePool: {
        name: "example-value",
        nodeCount: "example-value",
        vmSize: "example-value",
    },
    identity: {
        type: "example-value",
    },
});
const exampleTarget = new azure.chaosstudio.Target("example", {
    location: exampleResourceGroup.location,
    targetResourceId: example.id,
    targetType: "example-value",
});
const exampleCapability = new azure.chaosstudio.Capability("example", {
    capabilityType: "example-value",
    chaosStudioTargetId: exampleTarget.id,
});
```
```python
import pulumi
import pulumi_azure as azure

example_resource_group = azure.core.ResourceGroup("example",
    name="example-resources",
    location="West Europe")
example = azure.containerservice.KubernetesCluster("example",
    name="example",
    location=example_resource_group.location,
    resource_group_name=example_resource_group.name,
    dns_prefix="acctestaksexample",
    default_node_pool={
        "name": "example-value",
        "node_count": "example-value",
        "vm_size": "example-value",
    },
    identity={
        "type": "example-value",
    })
example_target = azure.chaosstudio.Target("example",
    location=example_resource_group.location,
    target_resource_id=example.id,
    target_type="example-value")
example_capability = azure.chaosstudio.Capability("example",
    capability_type="example-value",
    chaos_studio_target_id=example_target.id)
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var exampleResourceGroup = new Azure.Core.ResourceGroup("example", new()
    {
        Name = "example-resources",
        Location = "West Europe",
    });

    var example = new Azure.ContainerService.KubernetesCluster("example", new()
    {
        Name = "example",
        Location = exampleResourceGroup.Location,
        ResourceGroupName = exampleResourceGroup.Name,
        DnsPrefix = "acctestaksexample",
        DefaultNodePool = new Azure.ContainerService.Inputs.KubernetesClusterDefaultNodePoolArgs
        {
            Name = "example-value",
            NodeCount = "example-value",
            VmSize = "example-value",
        },
        Identity = new Azure.ContainerService.Inputs.KubernetesClusterIdentityArgs
        {
            Type = "example-value",
        },
    });

    var exampleTarget = new Azure.ChaosStudio.Target("example", new()
    {
        Location = exampleResourceGroup.Location,
        TargetResourceId = example.Id,
        TargetType = "example-value",
    });

    var exampleCapability = new Azure.ChaosStudio.Capability("example", new()
    {
        CapabilityType = "example-value",
        ChaosStudioTargetId = exampleTarget.Id,
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/chaosstudio"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/containerservice"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		exampleResourceGroup, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
			Name:     pulumi.String("example-resources"),
			Location: pulumi.String("West Europe"),
		})
		if err != nil {
			return err
		}
		example, err := containerservice.NewKubernetesCluster(ctx, "example", &containerservice.KubernetesClusterArgs{
			Name:              pulumi.String("example"),
			Location:          exampleResourceGroup.Location,
			ResourceGroupName: exampleResourceGroup.Name,
			DnsPrefix:         pulumi.String("acctestaksexample"),
			DefaultNodePool: &containerservice.KubernetesClusterDefaultNodePoolArgs{
				Name:      pulumi.String("example-value"),
				NodeCount: pulumi.Int("example-value"),
				VmSize:    pulumi.String("example-value"),
			},
			Identity: &containerservice.KubernetesClusterIdentityArgs{
				Type: pulumi.String("example-value"),
			},
		})
		if err != nil {
			return err
		}
		exampleTarget, err := chaosstudio.NewTarget(ctx, "example", &chaosstudio.TargetArgs{
			Location:         exampleResourceGroup.Location,
			TargetResourceId: example.ID(),
			TargetType:       pulumi.String("example-value"),
		})
		if err != nil {
			return err
		}
		_, err = chaosstudio.NewCapability(ctx, "example", &chaosstudio.CapabilityArgs{
			CapabilityType:      pulumi.String("example-value"),
			ChaosStudioTargetId: exampleTarget.ID(),
		})
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.core.ResourceGroup;
import com.pulumi.azure.core.ResourceGroupArgs;
import com.pulumi.azure.containerservice.KubernetesCluster;
import com.pulumi.azure.containerservice.KubernetesClusterArgs;
import com.pulumi.azure.containerservice.inputs.KubernetesClusterDefaultNodePoolArgs;
import com.pulumi.azure.containerservice.inputs.KubernetesClusterIdentityArgs;
import com.pulumi.azure.chaosstudio.Target;
import com.pulumi.azure.chaosstudio.TargetArgs;
import com.pulumi.azure.chaosstudio.Capability;
import com.pulumi.azure.chaosstudio.CapabilityArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        var exampleResourceGroup = new ResourceGroup("exampleResourceGroup", ResourceGroupArgs.builder()
            .name("example-resources")
            .location("West Europe")
            .build());

        var example = new KubernetesCluster("example", KubernetesClusterArgs.builder()
            .name("example")
            .location(exampleResourceGroup.location())
            .resourceGroupName(exampleResourceGroup.name())
            .dnsPrefix("acctestaksexample")
            .defaultNodePool(KubernetesClusterDefaultNodePoolArgs.builder()
                .name("example-value")
                .nodeCount("example-value")
                .vmSize("example-value")
                .build())
            .identity(KubernetesClusterIdentityArgs.builder()
                .type("example-value")
                .build())
            .build());

        var exampleTarget = new Target("exampleTarget", TargetArgs.builder()
            .location(exampleResourceGroup.location())
            .targetResourceId(example.id())
            .targetType("example-value")
            .build());

        var exampleCapability = new Capability("exampleCapability", CapabilityArgs.builder()
            .capabilityType("example-value")
            .chaosStudioTargetId(exampleTarget.id())
            .build());

    }
}
```
```yaml
resources:
  example:
    type: azure:containerservice:KubernetesCluster
    properties:
      name: example
      location: ${exampleResourceGroup.location}
      resourceGroupName: ${exampleResourceGroup.name}
      dnsPrefix: acctestaksexample
      defaultNodePool:
        name: example-value
        nodeCount: example-value
        vmSize: example-value
      identity:
        type: example-value
  exampleResourceGroup:
    type: azure:core:ResourceGroup
    name: example
    properties:
      name: example-resources
      location: West Europe
  exampleTarget:
    type: azure:chaosstudio:Target
    name: example
    properties:
      location: ${exampleResourceGroup.location}
      targetResourceId: ${example.id}
      targetType: example-value
  exampleCapability:
    type: azure:chaosstudio:Capability
    name: example
    properties:
      capabilityType: example-value
      chaosStudioTargetId: ${exampleTarget.id}
```
<!--End PulumiCodeChooser -->

## Import

An existing Chaos Studio Target can be imported into Pulumi using the `resource id`, e.g.

```sh
$ pulumi import azure:chaosstudio/capability:Capability example /{scope}/providers/Microsoft.Chaos/targets/{targetName}/capabilities/{capabilityName}
```

* Where `{scope}` is the ID of the Azure Resource under which the Chaos Studio Target exists. For example `/subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/some-resource-group`.

* Where `{targetName}` is the name of the Target. For example `targetValue`.

* Where `{capabilityName}` is the name of the Capability. For example `capabilityName`.

©
capabilityType" The capability that should be applied to the Chaos Studio Target. For supported values please see this Chaos Studio [Fault Library](https://learn.microsoft.com/azure/chaos-studio/chaos-studio-fault-library). Changing this forces a new Chaos Studio Capability to be created.
 
chaosStudioTargetId" The Chaos Studio Target that the capability should be applied to. Changing this forces a new Chaos Studio Capability to be created.
"©
capabilityType" The capability that should be applied to the Chaos Studio Target. For supported values please see this Chaos Studio [Fault Library](https://learn.microsoft.com/azure/chaos-studio/chaos-studio-fault-library). Changing this forces a new Chaos Studio Capability to be created.
"A
capabilityUrn" ,The Unique Resource Name of the Capability.
" 
chaosStudioTargetId" The Chaos Studio Target that the capability should be applied to. Changing this forces a new Chaos Studio Capability to be created.
*ÒÍ
B
chaosstudio
Experiment'azure:chaosstudio/experiment:ExperimentÈ¾Manages a Chaos Studio Experiment.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const example = new azure.core.ResourceGroup("example", {
    name: "example",
    location: "westeurope",
});
const exampleUserAssignedIdentity = new azure.authorization.UserAssignedIdentity("example", {
    resourceGroupName: example.name,
    location: example.location,
    name: "example",
});
const exampleVirtualNetwork = new azure.network.VirtualNetwork("example", {
    name: "example",
    addressSpaces: ["10.0.0.0/16"],
    location: example.location,
    resourceGroupName: example.name,
});
const exampleSubnet = new azure.network.Subnet("example", {
    name: "internal",
    resourceGroupName: example.name,
    virtualNetworkName: exampleVirtualNetwork.name,
    addressPrefixes: ["10.0.2.0/24"],
});
const exampleNetworkInterface = new azure.network.NetworkInterface("example", {
    name: "example",
    location: example.location,
    resourceGroupName: example.name,
    ipConfigurations: [{
        name: "example",
        subnetId: exampleSubnet.id,
        privateIpAddressAllocation: "Dynamic",
    }],
});
const exampleLinuxVirtualMachine = new azure.compute.LinuxVirtualMachine("example", {
    name: "example",
    resourceGroupName: example.name,
    location: example.location,
    size: "Standard_F2",
    adminUsername: "adminuser",
    adminPassword: "example",
    disablePasswordAuthentication: false,
    networkInterfaceIds: [exampleNetworkInterface.id],
    osDisk: {
        caching: "ReadWrite",
        storageAccountType: "Standard_LRS",
    },
    sourceImageReference: {
        publisher: "Canonical",
        offer: "0001-com-ubuntu-server-jammy",
        sku: "22_04-lts",
        version: "latest",
    },
});
const exampleTarget = new azure.chaosstudio.Target("example", {
    location: example.location,
    targetResourceId: exampleLinuxVirtualMachine.id,
    targetType: "Microsoft-VirtualMachine",
});
const exampleCapability = new azure.chaosstudio.Capability("example", {
    chaosStudioTargetId: exampleTarget.id,
    capabilityType: "Shutdown-1.0",
});
const exampleExperiment = new azure.chaosstudio.Experiment("example", {
    location: example.location,
    name: "example",
    resourceGroupName: example.name,
    identity: {
        type: "SystemAssigned",
    },
    selectors: [{
        name: "Selector1",
        chaosStudioTargetIds: [exampleTarget.id],
    }],
    steps: [{
        name: "example",
        branches: [{
            name: "example",
            actions: [{
                urn: exampleCapability.capabilityUrn,
                selectorName: "Selector1",
                parameters: {
                    abruptShutdown: "false",
                },
                actionType: "continuous",
                duration: "PT10M",
            }],
        }],
    }],
});
```
```python
import pulumi
import pulumi_azure as azure

example = azure.core.ResourceGroup("example",
    name="example",
    location="westeurope")
example_user_assigned_identity = azure.authorization.UserAssignedIdentity("example",
    resource_group_name=example.name,
    location=example.location,
    name="example")
example_virtual_network = azure.network.VirtualNetwork("example",
    name="example",
    address_spaces=["10.0.0.0/16"],
    location=example.location,
    resource_group_name=example.name)
example_subnet = azure.network.Subnet("example",
    name="internal",
    resource_group_name=example.name,
    virtual_network_name=example_virtual_network.name,
    address_prefixes=["10.0.2.0/24"])
example_network_interface = azure.network.NetworkInterface("example",
    name="example",
    location=example.location,
    resource_group_name=example.name,
    ip_configurations=[{
        "name": "example",
        "subnet_id": example_subnet.id,
        "private_ip_address_allocation": "Dynamic",
    }])
example_linux_virtual_machine = azure.compute.LinuxVirtualMachine("example",
    name="example",
    resource_group_name=example.name,
    location=example.location,
    size="Standard_F2",
    admin_username="adminuser",
    admin_password="example",
    disable_password_authentication=False,
    network_interface_ids=[example_network_interface.id],
    os_disk={
        "caching": "ReadWrite",
        "storage_account_type": "Standard_LRS",
    },
    source_image_reference={
        "publisher": "Canonical",
        "offer": "0001-com-ubuntu-server-jammy",
        "sku": "22_04-lts",
        "version": "latest",
    })
example_target = azure.chaosstudio.Target("example",
    location=example.location,
    target_resource_id=example_linux_virtual_machine.id,
    target_type="Microsoft-VirtualMachine")
example_capability = azure.chaosstudio.Capability("example",
    chaos_studio_target_id=example_target.id,
    capability_type="Shutdown-1.0")
example_experiment = azure.chaosstudio.Experiment("example",
    location=example.location,
    name="example",
    resource_group_name=example.name,
    identity={
        "type": "SystemAssigned",
    },
    selectors=[{
        "name": "Selector1",
        "chaos_studio_target_ids": [example_target.id],
    }],
    steps=[{
        "name": "example",
        "branches": [{
            "name": "example",
            "actions": [{
                "urn": example_capability.capability_urn,
                "selector_name": "Selector1",
                "parameters": {
                    "abruptShutdown": "false",
                },
                "action_type": "continuous",
                "duration": "PT10M",
            }],
        }],
    }])
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var example = new Azure.Core.ResourceGroup("example", new()
    {
        Name = "example",
        Location = "westeurope",
    });

    var exampleUserAssignedIdentity = new Azure.Authorization.UserAssignedIdentity("example", new()
    {
        ResourceGroupName = example.Name,
        Location = example.Location,
        Name = "example",
    });

    var exampleVirtualNetwork = new Azure.Network.VirtualNetwork("example", new()
    {
        Name = "example",
        AddressSpaces = new[]
        {
            "10.0.0.0/16",
        },
        Location = example.Location,
        ResourceGroupName = example.Name,
    });

    var exampleSubnet = new Azure.Network.Subnet("example", new()
    {
        Name = "internal",
        ResourceGroupName = example.Name,
        VirtualNetworkName = exampleVirtualNetwork.Name,
        AddressPrefixes = new[]
        {
            "10.0.2.0/24",
        },
    });

    var exampleNetworkInterface = new Azure.Network.NetworkInterface("example", new()
    {
        Name = "example",
        Location = example.Location,
        ResourceGroupName = example.Name,
        IpConfigurations = new[]
        {
            new Azure.Network.Inputs.NetworkInterfaceIpConfigurationArgs
            {
                Name = "example",
                SubnetId = exampleSubnet.Id,
                PrivateIpAddressAllocation = "Dynamic",
            },
        },
    });

    var exampleLinuxVirtualMachine = new Azure.Compute.LinuxVirtualMachine("example", new()
    {
        Name = "example",
        ResourceGroupName = example.Name,
        Location = example.Location,
        Size = "Standard_F2",
        AdminUsername = "adminuser",
        AdminPassword = "example",
        DisablePasswordAuthentication = false,
        NetworkInterfaceIds = new[]
        {
            exampleNetworkInterface.Id,
        },
        OsDisk = new Azure.Compute.Inputs.LinuxVirtualMachineOsDiskArgs
        {
            Caching = "ReadWrite",
            StorageAccountType = "Standard_LRS",
        },
        SourceImageReference = new Azure.Compute.Inputs.LinuxVirtualMachineSourceImageReferenceArgs
        {
            Publisher = "Canonical",
            Offer = "0001-com-ubuntu-server-jammy",
            Sku = "22_04-lts",
            Version = "latest",
        },
    });

    var exampleTarget = new Azure.ChaosStudio.Target("example", new()
    {
        Location = example.Location,
        TargetResourceId = exampleLinuxVirtualMachine.Id,
        TargetType = "Microsoft-VirtualMachine",
    });

    var exampleCapability = new Azure.ChaosStudio.Capability("example", new()
    {
        ChaosStudioTargetId = exampleTarget.Id,
        CapabilityType = "Shutdown-1.0",
    });

    var exampleExperiment = new Azure.ChaosStudio.Experiment("example", new()
    {
        Location = example.Location,
        Name = "example",
        ResourceGroupName = example.Name,
        Identity = new Azure.ChaosStudio.Inputs.ExperimentIdentityArgs
        {
            Type = "SystemAssigned",
        },
        Selectors = new[]
        {
            new Azure.ChaosStudio.Inputs.ExperimentSelectorArgs
            {
                Name = "Selector1",
                ChaosStudioTargetIds = new[]
                {
                    exampleTarget.Id,
                },
            },
        },
        Steps = new[]
        {
            new Azure.ChaosStudio.Inputs.ExperimentStepArgs
            {
                Name = "example",
                Branches = new[]
                {
                    new Azure.ChaosStudio.Inputs.ExperimentStepBranchArgs
                    {
                        Name = "example",
                        Actions = new[]
                        {
                            new Azure.ChaosStudio.Inputs.ExperimentStepBranchActionArgs
                            {
                                Urn = exampleCapability.CapabilityUrn,
                                SelectorName = "Selector1",
                                Parameters = 
                                {
                                    { "abruptShutdown", "false" },
                                },
                                ActionType = "continuous",
                                Duration = "PT10M",
                            },
                        },
                    },
                },
            },
        },
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/authorization"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/chaosstudio"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/compute"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/network"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
			Name:     pulumi.String("example"),
			Location: pulumi.String("westeurope"),
		})
		if err != nil {
			return err
		}
		_, err = authorization.NewUserAssignedIdentity(ctx, "example", &authorization.UserAssignedIdentityArgs{
			ResourceGroupName: example.Name,
			Location:          example.Location,
			Name:              pulumi.String("example"),
		})
		if err != nil {
			return err
		}
		exampleVirtualNetwork, err := network.NewVirtualNetwork(ctx, "example", &network.VirtualNetworkArgs{
			Name: pulumi.String("example"),
			AddressSpaces: pulumi.StringArray{
				pulumi.String("10.0.0.0/16"),
			},
			Location:          example.Location,
			ResourceGroupName: example.Name,
		})
		if err != nil {
			return err
		}
		exampleSubnet, err := network.NewSubnet(ctx, "example", &network.SubnetArgs{
			Name:               pulumi.String("internal"),
			ResourceGroupName:  example.Name,
			VirtualNetworkName: exampleVirtualNetwork.Name,
			AddressPrefixes: pulumi.StringArray{
				pulumi.String("10.0.2.0/24"),
			},
		})
		if err != nil {
			return err
		}
		exampleNetworkInterface, err := network.NewNetworkInterface(ctx, "example", &network.NetworkInterfaceArgs{
			Name:              pulumi.String("example"),
			Location:          example.Location,
			ResourceGroupName: example.Name,
			IpConfigurations: network.NetworkInterfaceIpConfigurationArray{
				&network.NetworkInterfaceIpConfigurationArgs{
					Name:                       pulumi.String("example"),
					SubnetId:                   exampleSubnet.ID(),
					PrivateIpAddressAllocation: pulumi.String("Dynamic"),
				},
			},
		})
		if err != nil {
			return err
		}
		exampleLinuxVirtualMachine, err := compute.NewLinuxVirtualMachine(ctx, "example", &compute.LinuxVirtualMachineArgs{
			Name:                          pulumi.String("example"),
			ResourceGroupName:             example.Name,
			Location:                      example.Location,
			Size:                          pulumi.String("Standard_F2"),
			AdminUsername:                 pulumi.String("adminuser"),
			AdminPassword:                 pulumi.String("example"),
			DisablePasswordAuthentication: pulumi.Bool(false),
			NetworkInterfaceIds: pulumi.StringArray{
				exampleNetworkInterface.ID(),
			},
			OsDisk: &compute.LinuxVirtualMachineOsDiskArgs{
				Caching:            pulumi.String("ReadWrite"),
				StorageAccountType: pulumi.String("Standard_LRS"),
			},
			SourceImageReference: &compute.LinuxVirtualMachineSourceImageReferenceArgs{
				Publisher: pulumi.String("Canonical"),
				Offer:     pulumi.String("0001-com-ubuntu-server-jammy"),
				Sku:       pulumi.String("22_04-lts"),
				Version:   pulumi.String("latest"),
			},
		})
		if err != nil {
			return err
		}
		exampleTarget, err := chaosstudio.NewTarget(ctx, "example", &chaosstudio.TargetArgs{
			Location:         example.Location,
			TargetResourceId: exampleLinuxVirtualMachine.ID(),
			TargetType:       pulumi.String("Microsoft-VirtualMachine"),
		})
		if err != nil {
			return err
		}
		exampleCapability, err := chaosstudio.NewCapability(ctx, "example", &chaosstudio.CapabilityArgs{
			ChaosStudioTargetId: exampleTarget.ID(),
			CapabilityType:      pulumi.String("Shutdown-1.0"),
		})
		if err != nil {
			return err
		}
		_, err = chaosstudio.NewExperiment(ctx, "example", &chaosstudio.ExperimentArgs{
			Location:          example.Location,
			Name:              pulumi.String("example"),
			ResourceGroupName: example.Name,
			Identity: &chaosstudio.ExperimentIdentityArgs{
				Type: pulumi.String("SystemAssigned"),
			},
			Selectors: chaosstudio.ExperimentSelectorArray{
				&chaosstudio.ExperimentSelectorArgs{
					Name: pulumi.String("Selector1"),
					ChaosStudioTargetIds: pulumi.StringArray{
						exampleTarget.ID(),
					},
				},
			},
			Steps: chaosstudio.ExperimentStepArray{
				&chaosstudio.ExperimentStepArgs{
					Name: pulumi.String("example"),
					Branches: chaosstudio.ExperimentStepBranchArray{
						&chaosstudio.ExperimentStepBranchArgs{
							Name: pulumi.String("example"),
							Actions: chaosstudio.ExperimentStepBranchActionArray{
								&chaosstudio.ExperimentStepBranchActionArgs{
									Urn:          exampleCapability.CapabilityUrn,
									SelectorName: pulumi.String("Selector1"),
									Parameters: pulumi.StringMap{
										"abruptShutdown": pulumi.String("false"),
									},
									ActionType: pulumi.String("continuous"),
									Duration:   pulumi.String("PT10M"),
								},
							},
						},
					},
				},
			},
		})
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.core.ResourceGroup;
import com.pulumi.azure.core.ResourceGroupArgs;
import com.pulumi.azure.authorization.UserAssignedIdentity;
import com.pulumi.azure.authorization.UserAssignedIdentityArgs;
import com.pulumi.azure.network.VirtualNetwork;
import com.pulumi.azure.network.VirtualNetworkArgs;
import com.pulumi.azure.network.Subnet;
import com.pulumi.azure.network.SubnetArgs;
import com.pulumi.azure.network.NetworkInterface;
import com.pulumi.azure.network.NetworkInterfaceArgs;
import com.pulumi.azure.network.inputs.NetworkInterfaceIpConfigurationArgs;
import com.pulumi.azure.compute.LinuxVirtualMachine;
import com.pulumi.azure.compute.LinuxVirtualMachineArgs;
import com.pulumi.azure.compute.inputs.LinuxVirtualMachineOsDiskArgs;
import com.pulumi.azure.compute.inputs.LinuxVirtualMachineSourceImageReferenceArgs;
import com.pulumi.azure.chaosstudio.Target;
import com.pulumi.azure.chaosstudio.TargetArgs;
import com.pulumi.azure.chaosstudio.Capability;
import com.pulumi.azure.chaosstudio.CapabilityArgs;
import com.pulumi.azure.chaosstudio.Experiment;
import com.pulumi.azure.chaosstudio.ExperimentArgs;
import com.pulumi.azure.chaosstudio.inputs.ExperimentIdentityArgs;
import com.pulumi.azure.chaosstudio.inputs.ExperimentSelectorArgs;
import com.pulumi.azure.chaosstudio.inputs.ExperimentStepArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        var example = new ResourceGroup("example", ResourceGroupArgs.builder()
            .name("example")
            .location("westeurope")
            .build());

        var exampleUserAssignedIdentity = new UserAssignedIdentity("exampleUserAssignedIdentity", UserAssignedIdentityArgs.builder()
            .resourceGroupName(example.name())
            .location(example.location())
            .name("example")
            .build());

        var exampleVirtualNetwork = new VirtualNetwork("exampleVirtualNetwork", VirtualNetworkArgs.builder()
            .name("example")
            .addressSpaces("10.0.0.0/16")
            .location(example.location())
            .resourceGroupName(example.name())
            .build());

        var exampleSubnet = new Subnet("exampleSubnet", SubnetArgs.builder()
            .name("internal")
            .resourceGroupName(example.name())
            .virtualNetworkName(exampleVirtualNetwork.name())
            .addressPrefixes("10.0.2.0/24")
            .build());

        var exampleNetworkInterface = new NetworkInterface("exampleNetworkInterface", NetworkInterfaceArgs.builder()
            .name("example")
            .location(example.location())
            .resourceGroupName(example.name())
            .ipConfigurations(NetworkInterfaceIpConfigurationArgs.builder()
                .name("example")
                .subnetId(exampleSubnet.id())
                .privateIpAddressAllocation("Dynamic")
                .build())
            .build());

        var exampleLinuxVirtualMachine = new LinuxVirtualMachine("exampleLinuxVirtualMachine", LinuxVirtualMachineArgs.builder()
            .name("example")
            .resourceGroupName(example.name())
            .location(example.location())
            .size("Standard_F2")
            .adminUsername("adminuser")
            .adminPassword("example")
            .disablePasswordAuthentication(false)
            .networkInterfaceIds(exampleNetworkInterface.id())
            .osDisk(LinuxVirtualMachineOsDiskArgs.builder()
                .caching("ReadWrite")
                .storageAccountType("Standard_LRS")
                .build())
            .sourceImageReference(LinuxVirtualMachineSourceImageReferenceArgs.builder()
                .publisher("Canonical")
                .offer("0001-com-ubuntu-server-jammy")
                .sku("22_04-lts")
                .version("latest")
                .build())
            .build());

        var exampleTarget = new Target("exampleTarget", TargetArgs.builder()
            .location(example.location())
            .targetResourceId(exampleLinuxVirtualMachine.id())
            .targetType("Microsoft-VirtualMachine")
            .build());

        var exampleCapability = new Capability("exampleCapability", CapabilityArgs.builder()
            .chaosStudioTargetId(exampleTarget.id())
            .capabilityType("Shutdown-1.0")
            .build());

        var exampleExperiment = new Experiment("exampleExperiment", ExperimentArgs.builder()
            .location(example.location())
            .name("example")
            .resourceGroupName(example.name())
            .identity(ExperimentIdentityArgs.builder()
                .type("SystemAssigned")
                .build())
            .selectors(ExperimentSelectorArgs.builder()
                .name("Selector1")
                .chaosStudioTargetIds(exampleTarget.id())
                .build())
            .steps(ExperimentStepArgs.builder()
                .name("example")
                .branches(ExperimentStepBranchArgs.builder()
                    .name("example")
                    .actions(ExperimentStepBranchActionArgs.builder()
                        .urn(exampleCapability.capabilityUrn())
                        .selectorName("Selector1")
                        .parameters(Map.of("abruptShutdown", "false"))
                        .actionType("continuous")
                        .duration("PT10M")
                        .build())
                    .build())
                .build())
            .build());

    }
}
```
```yaml
resources:
  example:
    type: azure:core:ResourceGroup
    properties:
      name: example
      location: westeurope
  exampleUserAssignedIdentity:
    type: azure:authorization:UserAssignedIdentity
    name: example
    properties:
      resourceGroupName: ${example.name}
      location: ${example.location}
      name: example
  exampleVirtualNetwork:
    type: azure:network:VirtualNetwork
    name: example
    properties:
      name: example
      addressSpaces:
        - 10.0.0.0/16
      location: ${example.location}
      resourceGroupName: ${example.name}
  exampleSubnet:
    type: azure:network:Subnet
    name: example
    properties:
      name: internal
      resourceGroupName: ${example.name}
      virtualNetworkName: ${exampleVirtualNetwork.name}
      addressPrefixes:
        - 10.0.2.0/24
  exampleNetworkInterface:
    type: azure:network:NetworkInterface
    name: example
    properties:
      name: example
      location: ${example.location}
      resourceGroupName: ${example.name}
      ipConfigurations:
        - name: example
          subnetId: ${exampleSubnet.id}
          privateIpAddressAllocation: Dynamic
  exampleLinuxVirtualMachine:
    type: azure:compute:LinuxVirtualMachine
    name: example
    properties:
      name: example
      resourceGroupName: ${example.name}
      location: ${example.location}
      size: Standard_F2
      adminUsername: adminuser
      adminPassword: example
      disablePasswordAuthentication: false
      networkInterfaceIds:
        - ${exampleNetworkInterface.id}
      osDisk:
        caching: ReadWrite
        storageAccountType: Standard_LRS
      sourceImageReference:
        publisher: Canonical
        offer: 0001-com-ubuntu-server-jammy
        sku: 22_04-lts
        version: latest
  exampleTarget:
    type: azure:chaosstudio:Target
    name: example
    properties:
      location: ${example.location}
      targetResourceId: ${exampleLinuxVirtualMachine.id}
      targetType: Microsoft-VirtualMachine
  exampleCapability:
    type: azure:chaosstudio:Capability
    name: example
    properties:
      chaosStudioTargetId: ${exampleTarget.id}
      capabilityType: Shutdown-1.0
  exampleExperiment:
    type: azure:chaosstudio:Experiment
    name: example
    properties:
      location: ${example.location}
      name: example
      resourceGroupName: ${example.name}
      identity:
        type: SystemAssigned
      selectors:
        - name: Selector1
          chaosStudioTargetIds:
            - ${exampleTarget.id}
      steps:
        - name: example
          branches:
            - name: example
              actions:
                - urn: ${exampleCapability.capabilityUrn}
                  selectorName: Selector1
                  parameters:
                    abruptShutdown: 'false'
                  actionType: continuous
                  duration: PT10M
```
<!--End PulumiCodeChooser -->

## Import

Chaos Studio Experiments can be imported using the `resource id`, e.g.

```sh
$ pulumi import azure:chaosstudio/experiment:Experiment example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Chaos/experiments/experiment1
```


identity`B^:\
Z
chaosstudioExperimentIdentity7azure:chaosstudio/ExperimentIdentity:ExperimentIdentity%A `identity` block as defined below.

locationB" The Azure Region where the Chaos Studio Experiment should exist. Changing this forces a new Chaos Studio Experiment to be created.

nameB" The name which should be used for this Chaos Studio Experiment. Changing this forces a new Chaos Studio Experiment to be created.
«
resourceGroupName" The name of the Resource Group where the Chaos Studio Experiment should exist. Changing this forces a new Chaos Studio Experiment to be created.
 
	selectors`*^:\
Z
chaosstudioExperimentSelector7azure:chaosstudio/ExperimentSelector:ExperimentSelector1One or more `selectors` blocks as defined below.

stepsT*R:P
N
chaosstudioExperimentStep/azure:chaosstudio/ExperimentStep:ExperimentStep-One or more `steps` blocks as defined below.
"
identity`B^:\
Z
chaosstudioExperimentIdentity7azure:chaosstudio/ExperimentIdentity:ExperimentIdentity%A `identity` block as defined below.
"
location" The Azure Region where the Chaos Studio Experiment should exist. Changing this forces a new Chaos Studio Experiment to be created.
"
name" The name which should be used for this Chaos Studio Experiment. Changing this forces a new Chaos Studio Experiment to be created.
"«
resourceGroupName" The name of the Resource Group where the Chaos Studio Experiment should exist. Changing this forces a new Chaos Studio Experiment to be created.
" 
	selectors`*^:\
Z
chaosstudioExperimentSelector7azure:chaosstudio/ExperimentSelector:ExperimentSelector1One or more `selectors` blocks as defined below.
"
stepsT*R:P
N
chaosstudioExperimentStep/azure:chaosstudio/ExperimentStep:ExperimentStep-One or more `steps` blocks as defined below.
*öM
6
chaosstudioTargetazure:chaosstudio/target:TargetÿB<!-- Note: This documentation is generated. Any manual changes will be overwritten -->

Manages a Chaos Studio Target.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const exampleResourceGroup = new azure.core.ResourceGroup("example", {
    name: "example-resources",
    location: "West Europe",
});
const example = new azure.containerservice.KubernetesCluster("example", {
    name: "example",
    location: exampleResourceGroup.location,
    resourceGroupName: exampleResourceGroup.name,
    dnsPrefix: "acctestaksexample",
    defaultNodePool: {
        name: "example-value",
        nodeCount: "example-value",
        vmSize: "example-value",
        upgradeSettings: {
            maxSurge: "example-value",
        },
    },
    identity: {
        type: "example-value",
    },
});
const exampleTarget = new azure.chaosstudio.Target("example", {
    location: exampleResourceGroup.location,
    targetResourceId: example.id,
    targetType: "example-value",
});
```
```python
import pulumi
import pulumi_azure as azure

example_resource_group = azure.core.ResourceGroup("example",
    name="example-resources",
    location="West Europe")
example = azure.containerservice.KubernetesCluster("example",
    name="example",
    location=example_resource_group.location,
    resource_group_name=example_resource_group.name,
    dns_prefix="acctestaksexample",
    default_node_pool={
        "name": "example-value",
        "node_count": "example-value",
        "vm_size": "example-value",
        "upgrade_settings": {
            "max_surge": "example-value",
        },
    },
    identity={
        "type": "example-value",
    })
example_target = azure.chaosstudio.Target("example",
    location=example_resource_group.location,
    target_resource_id=example.id,
    target_type="example-value")
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var exampleResourceGroup = new Azure.Core.ResourceGroup("example", new()
    {
        Name = "example-resources",
        Location = "West Europe",
    });

    var example = new Azure.ContainerService.KubernetesCluster("example", new()
    {
        Name = "example",
        Location = exampleResourceGroup.Location,
        ResourceGroupName = exampleResourceGroup.Name,
        DnsPrefix = "acctestaksexample",
        DefaultNodePool = new Azure.ContainerService.Inputs.KubernetesClusterDefaultNodePoolArgs
        {
            Name = "example-value",
            NodeCount = "example-value",
            VmSize = "example-value",
            UpgradeSettings = new Azure.ContainerService.Inputs.KubernetesClusterDefaultNodePoolUpgradeSettingsArgs
            {
                MaxSurge = "example-value",
            },
        },
        Identity = new Azure.ContainerService.Inputs.KubernetesClusterIdentityArgs
        {
            Type = "example-value",
        },
    });

    var exampleTarget = new Azure.ChaosStudio.Target("example", new()
    {
        Location = exampleResourceGroup.Location,
        TargetResourceId = example.Id,
        TargetType = "example-value",
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/chaosstudio"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/containerservice"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		exampleResourceGroup, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
			Name:     pulumi.String("example-resources"),
			Location: pulumi.String("West Europe"),
		})
		if err != nil {
			return err
		}
		example, err := containerservice.NewKubernetesCluster(ctx, "example", &containerservice.KubernetesClusterArgs{
			Name:              pulumi.String("example"),
			Location:          exampleResourceGroup.Location,
			ResourceGroupName: exampleResourceGroup.Name,
			DnsPrefix:         pulumi.String("acctestaksexample"),
			DefaultNodePool: &containerservice.KubernetesClusterDefaultNodePoolArgs{
				Name:      pulumi.String("example-value"),
				NodeCount: pulumi.Int("example-value"),
				VmSize:    pulumi.String("example-value"),
				UpgradeSettings: &containerservice.KubernetesClusterDefaultNodePoolUpgradeSettingsArgs{
					MaxSurge: pulumi.String("example-value"),
				},
			},
			Identity: &containerservice.KubernetesClusterIdentityArgs{
				Type: pulumi.String("example-value"),
			},
		})
		if err != nil {
			return err
		}
		_, err = chaosstudio.NewTarget(ctx, "example", &chaosstudio.TargetArgs{
			Location:         exampleResourceGroup.Location,
			TargetResourceId: example.ID(),
			TargetType:       pulumi.String("example-value"),
		})
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.core.ResourceGroup;
import com.pulumi.azure.core.ResourceGroupArgs;
import com.pulumi.azure.containerservice.KubernetesCluster;
import com.pulumi.azure.containerservice.KubernetesClusterArgs;
import com.pulumi.azure.containerservice.inputs.KubernetesClusterDefaultNodePoolArgs;
import com.pulumi.azure.containerservice.inputs.KubernetesClusterDefaultNodePoolUpgradeSettingsArgs;
import com.pulumi.azure.containerservice.inputs.KubernetesClusterIdentityArgs;
import com.pulumi.azure.chaosstudio.Target;
import com.pulumi.azure.chaosstudio.TargetArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        var exampleResourceGroup = new ResourceGroup("exampleResourceGroup", ResourceGroupArgs.builder()
            .name("example-resources")
            .location("West Europe")
            .build());

        var example = new KubernetesCluster("example", KubernetesClusterArgs.builder()
            .name("example")
            .location(exampleResourceGroup.location())
            .resourceGroupName(exampleResourceGroup.name())
            .dnsPrefix("acctestaksexample")
            .defaultNodePool(KubernetesClusterDefaultNodePoolArgs.builder()
                .name("example-value")
                .nodeCount("example-value")
                .vmSize("example-value")
                .upgradeSettings(KubernetesClusterDefaultNodePoolUpgradeSettingsArgs.builder()
                    .maxSurge("example-value")
                    .build())
                .build())
            .identity(KubernetesClusterIdentityArgs.builder()
                .type("example-value")
                .build())
            .build());

        var exampleTarget = new Target("exampleTarget", TargetArgs.builder()
            .location(exampleResourceGroup.location())
            .targetResourceId(example.id())
            .targetType("example-value")
            .build());

    }
}
```
```yaml
resources:
  example:
    type: azure:containerservice:KubernetesCluster
    properties:
      name: example
      location: ${exampleResourceGroup.location}
      resourceGroupName: ${exampleResourceGroup.name}
      dnsPrefix: acctestaksexample
      defaultNodePool:
        name: example-value
        nodeCount: example-value
        vmSize: example-value
        upgradeSettings:
          maxSurge: example-value
      identity:
        type: example-value
  exampleResourceGroup:
    type: azure:core:ResourceGroup
    name: example
    properties:
      name: example-resources
      location: West Europe
  exampleTarget:
    type: azure:chaosstudio:Target
    name: example
    properties:
      location: ${exampleResourceGroup.location}
      targetResourceId: ${example.id}
      targetType: example-value
```
<!--End PulumiCodeChooser -->

## Import

An existing Chaos Studio Target can be imported into Pulumi using the `resource id`, e.g.

```sh
$ pulumi import azure:chaosstudio/target:Target example /{scope}/providers/Microsoft.Chaos/targets/{targetName}
```

* Where `{scope}` is the ID of the Azure Resource under which the Chaos Studio Target exists. For example `/subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/some-resource-group`.

* Where `{targetName}` is the name of the Target. For example `targetValue`.


locationB" {The Azure Region where the Chaos Studio Target should exist. Changing this forces a new Chaos Studio Target to be created.
¬
targetResourceId" Specifies the Target Resource Id within which this Chaos Studio Target should exist. Changing this forces a new Chaos Studio Target to be created.
Ý

targetType" ÊThe name of the Chaos Studio Target. This has the format of [publisher]-[targetType] e.g. `Microsoft-StorageAccount`. For supported values please see this Target Type column in [this table](https://learn.microsoft.com/azure/chaos-studio/chaos-studio-fault-providers). Changing this forces a new Chaos Studio Target to be created.
"
location" {The Azure Region where the Chaos Studio Target should exist. Changing this forces a new Chaos Studio Target to be created.
"¬
targetResourceId" Specifies the Target Resource Id within which this Chaos Studio Target should exist. Changing this forces a new Chaos Studio Target to be created.
"Ý

targetType" ÊThe name of the Chaos Studio Target. This has the format of [publisher]-[targetType] e.g. `Microsoft-StorageAccount`. For supported values please see this Target Type column in [this table](https://learn.microsoft.com/azure/chaos-studio/chaos-studio-fault-providers). Changing this forces a new Chaos Studio Target to be created.
*M
>
	cognitive
AIServices%azure:cognitive/aIServices:AIServicesú Manages an AI Services account.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const example = new azure.core.ResourceGroup("example", {
    name: "example-resources",
    location: "West Europe",
});
const exampleAIServices = new azure.cognitive.AIServices("example", {
    name: "example-account",
    location: example.location,
    resourceGroupName: example.name,
    skuName: "S0",
    tags: {
        Acceptance: "Test",
    },
});
```
```python
import pulumi
import pulumi_azure as azure

example = azure.core.ResourceGroup("example",
    name="example-resources",
    location="West Europe")
example_ai_services = azure.cognitive.AIServices("example",
    name="example-account",
    location=example.location,
    resource_group_name=example.name,
    sku_name="S0",
    tags={
        "Acceptance": "Test",
    })
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var example = new Azure.Core.ResourceGroup("example", new()
    {
        Name = "example-resources",
        Location = "West Europe",
    });

    var exampleAIServices = new Azure.Cognitive.AIServices("example", new()
    {
        Name = "example-account",
        Location = example.Location,
        ResourceGroupName = example.Name,
        SkuName = "S0",
        Tags = 
        {
            { "Acceptance", "Test" },
        },
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/cognitive"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
			Name:     pulumi.String("example-resources"),
			Location: pulumi.String("West Europe"),
		})
		if err != nil {
			return err
		}
		_, err = cognitive.NewAIServices(ctx, "example", &cognitive.AIServicesArgs{
			Name:              pulumi.String("example-account"),
			Location:          example.Location,
			ResourceGroupName: example.Name,
			SkuName:           pulumi.String("S0"),
			Tags: pulumi.StringMap{
				"Acceptance": pulumi.String("Test"),
			},
		})
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.core.ResourceGroup;
import com.pulumi.azure.core.ResourceGroupArgs;
import com.pulumi.azure.cognitive.AIServices;
import com.pulumi.azure.cognitive.AIServicesArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        var example = new ResourceGroup("example", ResourceGroupArgs.builder()
            .name("example-resources")
            .location("West Europe")
            .build());

        var exampleAIServices = new AIServices("exampleAIServices", AIServicesArgs.builder()
            .name("example-account")
            .location(example.location())
            .resourceGroupName(example.name())
            .skuName("S0")
            .tags(Map.of("Acceptance", "Test"))
            .build());

    }
}
```
```yaml
resources:
  example:
    type: azure:core:ResourceGroup
    properties:
      name: example-resources
      location: West Europe
  exampleAIServices:
    type: azure:cognitive:AIServices
    name: example
    properties:
      name: example-account
      location: ${example.location}
      resourceGroupName: ${example.name}
      skuName: S0
      tags:
        Acceptance: Test
```
<!--End PulumiCodeChooser -->

## Import

AI Services Account can be imported using the `resource id`, e.g.

```sh
$ pulumi import azure:cognitive/aIServices:AIServices account1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.CognitiveServices/accounts/account1
```

Å
customSubdomainNameB" §The subdomain name used for token-based authentication. This property is required when `network_acls` is specified. Changing this forces a new resource to be created.
Æ
customerManagedKeyzBx:v
t
	cognitiveAIServicesCustomerManagedKeyIazure:cognitive/AIServicesCustomerManagedKey:AIServicesCustomerManagedKey4A `customer_managed_key` block as documented below.
D
fqdnsB*" 3List of FQDNs allowed for the AI Services Account.

identity\BZ:X
V
	cognitiveAIServicesIdentity5azure:cognitive/AIServicesIdentity:AIServicesIdentity&An `identity` block as defined below.
}
localAuthenticationEnabledB
 YWhether local authentication is enabled for the AI Services Account. Defaults to `true`.

locationB" uSpecifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
p
nameB" bSpecifies the name of the AI Services Account. Changing this forces a new resource to be created.
ô
networkAclseBc:a
_
	cognitiveAIServicesNetworkAcls;azure:cognitive/AIServicesNetworkAcls:AIServicesNetworkAcls~A `network_acls` block as defined below. When this property is specified, `custom_subdomain_name` is also required to be set.

outboundNetworkAccessRestrictedB
 `Whether outbound network access is restricted for the AI Services Account. Defaults to `false`.
©
publicNetworkAccessB" Whether public network access is allowed for the AI Services Account. Possible values are `Enabled` and `Disabled`. Defaults to `Enabled`.

resourceGroupName" The name of the resource group in which the AI Services Account is created. Changing this forces a new resource to be created.
Ö
skuName" ÆSpecifies the SKU Name for this AI Services Account. Possible values are `F0`, `F1`, `S0`, `S`, `S1`, `S2`, `S3`, `S4`, `S5`, `S6`, `P0`, `P1`, `P2`, `E0` and `DC0`.

> **NOTE:** SKU `DC0` is the commitment tier for AI Services Account containers running in disconnected environments. You must obtain approval from Microsoft by submitting the [request form](https://aka.ms/csdisconnectedcontainers) first, before you can use this SKU. More information on [Purchase a commitment plan to use containers in disconnected environments](https://learn.microsoft.com/en-us/azure/cognitive-services/containers/disconnected-containers?tabs=stt#purchase-a-commitment-plan-to-use-containers-in-disconnected-environments).

storages[BY*W:U
S
	cognitiveAIServicesStorage3azure:cognitive/AIServicesStorage:AIServicesStorage$A `storage` block as defined below.
=
tagsB2" -A mapping of tags to assign to the resource.
"Å
customSubdomainNameB" §The subdomain name used for token-based authentication. This property is required when `network_acls` is specified. Changing this forces a new resource to be created.
"Æ
customerManagedKeyzBx:v
t
	cognitiveAIServicesCustomerManagedKeyIazure:cognitive/AIServicesCustomerManagedKey:AIServicesCustomerManagedKey4A `customer_managed_key` block as documented below.
"I
endpoint" 9The endpoint used to connect to the AI Services Account.
"D
fqdnsB*" 3List of FQDNs allowed for the AI Services Account.
"
identity\BZ:X
V
	cognitiveAIServicesIdentity5azure:cognitive/AIServicesIdentity:AIServicesIdentity&An `identity` block as defined below.
"}
localAuthenticationEnabledB
 YWhether local authentication is enabled for the AI Services Account. Defaults to `true`.
"
location" uSpecifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
"n
name" bSpecifies the name of the AI Services Account. Changing this forces a new resource to be created.
"ô
networkAclseBc:a
_
	cognitiveAIServicesNetworkAcls;azure:cognitive/AIServicesNetworkAcls:AIServicesNetworkAcls~A `network_acls` block as defined below. When this property is specified, `custom_subdomain_name` is also required to be set.
"
outboundNetworkAccessRestrictedB
 `Whether outbound network access is restricted for the AI Services Account. Defaults to `false`.
"f
primaryAccessKey" NA primary access key which can be used to connect to the AI Services Account.
"©
publicNetworkAccessB" Whether public network access is allowed for the AI Services Account. Possible values are `Enabled` and `Disabled`. Defaults to `Enabled`.
"
resourceGroupName" The name of the resource group in which the AI Services Account is created. Changing this forces a new resource to be created.
"l
secondaryAccessKey" RThe secondary access key which can be used to connect to the AI Services Account.
"Ö
skuName" ÆSpecifies the SKU Name for this AI Services Account. Possible values are `F0`, `F1`, `S0`, `S`, `S1`, `S2`, `S3`, `S4`, `S5`, `S6`, `P0`, `P1`, `P2`, `E0` and `DC0`.

> **NOTE:** SKU `DC0` is the commitment tier for AI Services Account containers running in disconnected environments. You must obtain approval from Microsoft by submitting the [request form](https://aka.ms/csdisconnectedcontainers) first, before you can use this SKU. More information on [Purchase a commitment plan to use containers in disconnected environments](https://learn.microsoft.com/en-us/azure/cognitive-services/containers/disconnected-containers?tabs=stt#purchase-a-commitment-plan-to-use-containers-in-disconnected-environments).
"
storages[BY*W:U
S
	cognitiveAIServicesStorage3azure:cognitive/AIServicesStorage:AIServicesStorage$A `storage` block as defined below.
"=
tagsB2" -A mapping of tags to assign to the resource.
*Ã
5
	cognitiveAccountazure:cognitive/account:Accountü#Manages a Cognitive Services Account.

> **Note:** Version v2.65.0 of the Azure Provider and later will attempt to Purge the Cognitive Account during deletion. This feature can be disabled using the `features` block within the `provider` block, see the provider documentation on the features block for more information.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const example = new azure.core.ResourceGroup("example", {
    name: "example-resources",
    location: "West Europe",
});
const exampleAccount = new azure.cognitive.Account("example", {
    name: "example-account",
    location: example.location,
    resourceGroupName: example.name,
    kind: "Face",
    skuName: "S0",
    tags: {
        Acceptance: "Test",
    },
});
```
```python
import pulumi
import pulumi_azure as azure

example = azure.core.ResourceGroup("example",
    name="example-resources",
    location="West Europe")
example_account = azure.cognitive.Account("example",
    name="example-account",
    location=example.location,
    resource_group_name=example.name,
    kind="Face",
    sku_name="S0",
    tags={
        "Acceptance": "Test",
    })
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var example = new Azure.Core.ResourceGroup("example", new()
    {
        Name = "example-resources",
        Location = "West Europe",
    });

    var exampleAccount = new Azure.Cognitive.Account("example", new()
    {
        Name = "example-account",
        Location = example.Location,
        ResourceGroupName = example.Name,
        Kind = "Face",
        SkuName = "S0",
        Tags = 
        {
            { "Acceptance", "Test" },
        },
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/cognitive"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
			Name:     pulumi.String("example-resources"),
			Location: pulumi.String("West Europe"),
		})
		if err != nil {
			return err
		}
		_, err = cognitive.NewAccount(ctx, "example", &cognitive.AccountArgs{
			Name:              pulumi.String("example-account"),
			Location:          example.Location,
			ResourceGroupName: example.Name,
			Kind:              pulumi.String("Face"),
			SkuName:           pulumi.String("S0"),
			Tags: pulumi.StringMap{
				"Acceptance": pulumi.String("Test"),
			},
		})
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.core.ResourceGroup;
import com.pulumi.azure.core.ResourceGroupArgs;
import com.pulumi.azure.cognitive.Account;
import com.pulumi.azure.cognitive.AccountArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        var example = new ResourceGroup("example", ResourceGroupArgs.builder()
            .name("example-resources")
            .location("West Europe")
            .build());

        var exampleAccount = new Account("exampleAccount", AccountArgs.builder()
            .name("example-account")
            .location(example.location())
            .resourceGroupName(example.name())
            .kind("Face")
            .skuName("S0")
            .tags(Map.of("Acceptance", "Test"))
            .build());

    }
}
```
```yaml
resources:
  example:
    type: azure:core:ResourceGroup
    properties:
      name: example-resources
      location: West Europe
  exampleAccount:
    type: azure:cognitive:Account
    name: example
    properties:
      name: example-account
      location: ${example.location}
      resourceGroupName: ${example.name}
      kind: Face
      skuName: S0
      tags:
        Acceptance: Test
```
<!--End PulumiCodeChooser -->

## Import

Cognitive Service Accounts can be imported using the `resource id`, e.g.

```sh
$ pulumi import azure:cognitive/account:Account account1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.CognitiveServices/accounts/account1
```

z
&customQuestionAnsweringSearchServiceIdB" JIf `kind` is `TextAnalytics` this specifies the ID of the Search service.
§
'customQuestionAnsweringSearchServiceKeyB" õIf `kind` is `TextAnalytics` this specifies the key of the Search service.

> **NOTE:** `custom_question_answering_search_service_id` and `custom_question_answering_search_service_key` are used for [Custom Question Answering, the renamed version of QnA Maker](https://docs.microsoft.com/azure/cognitive-services/qnamaker/custom-question-answering), while `qna_runtime_endpoint` is used for [the old version of QnA Maker](https://docs.microsoft.com/azure/cognitive-services/qnamaker/overview/overview)
¡
customSubdomainNameB" The subdomain name used for token-based authentication. This property is required when `network_acls` is specified. This property is also required when using the OpenAI service with libraries which assume the Azure OpenAI endpoint is a subdomain on `https://openai.azure.com/`, eg. `https://<custom_subdomain_name>.openai.azure.com/`.  Changing this forces a new resource to be created.
½
customerManagedKeyqBo:m
k
	cognitiveAccountCustomerManagedKeyCazure:cognitive/AccountCustomerManagedKey:AccountCustomerManagedKey4A `customer_managed_key` block as documented below.
o
dynamicThrottlingEnabledB
 MWhether to enable the dynamic throttling for this Cognitive Service Account.
B
fqdnsB*" 1List of FQDNs allowed for the Cognitive Account.

identitySBQ:O
M
	cognitiveAccountIdentity/azure:cognitive/AccountIdentity:AccountIdentity&An `identity` block as defined below.
­
kind"  Specifies the type of Cognitive Service Account that should be created. Possible values are `Academic`, `AnomalyDetector`, `Bing.Autosuggest`, `Bing.Autosuggest.v7`, `Bing.CustomSearch`, `Bing.Search`, `Bing.Search.v7`, `Bing.Speech`, `Bing.SpellCheck`, `Bing.SpellCheck.v7`, `CognitiveServices`, `ComputerVision`, `ContentModerator`, `ContentSafety`, `CustomSpeech`, `CustomVision.Prediction`, `CustomVision.Training`, `Emotion`, `Face`, `FormRecognizer`, `ImmersiveReader`, `LUIS`, `LUIS.Authoring`, `MetricsAdvisor`, `OpenAI`, `Personalizer`, `QnAMaker`, `Recommendations`, `SpeakerRecognition`, `Speech`, `SpeechServices`, `SpeechTranslation`, `TextAnalytics`, `TextTranslation` and `WebLM`. Changing this forces a new resource to be created.

> **NOTE:** New Bing Search resources cannot be created as their APIs are moving from Cognitive Services Platform to new surface area under Microsoft.com. Starting from October 30, 2020, existing instances of Bing Search APIs provisioned via Cognitive Services will be continuously supported for next 3 years or till the end of respective Enterprise Agreement, whichever happens first.

> **NOTE:** You must create your first Face, Text Analytics, or Computer Vision resources from the Azure portal to review and acknowledge the terms and conditions. In Azure Portal, the checkbox to accept terms and conditions is only displayed when a US region is selected. More information on [Prerequisites](https://docs.microsoft.com/azure/cognitive-services/cognitive-services-apis-create-account-cli?tabs=windows#prerequisites).
y
localAuthEnabledB
 _Whether local authentication methods is enabled for the Cognitive Account. Defaults to `true`.

locationB" uSpecifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
º
metricsAdvisorAadClientIdB" The Azure AD Client ID (Application ID). This attribute is only set when kind is `MetricsAdvisor`. Changing this forces a new resource to be created.
©
metricsAdvisorAadTenantIdB" The Azure AD Tenant ID. This attribute is only set when kind is `MetricsAdvisor`. Changing this forces a new resource to be created.
¶
metricsAdvisorSuperUserNameB" The super user of Metrics Advisor. This attribute is only set when kind is `MetricsAdvisor`. Changing this forces a new resource to be created.
ý
metricsAdvisorWebsiteNameB" ÙThe website name of Metrics Advisor. This attribute is only set when kind is `MetricsAdvisor`. Changing this forces a new resource to be created.

> **NOTE:** This URL is mandatory if the `kind` is set to `QnAMaker`.
v
nameB" hSpecifies the name of the Cognitive Service Account. Changing this forces a new resource to be created.
ë
networkAcls\BZ:X
V
	cognitiveAccountNetworkAcls5azure:cognitive/AccountNetworkAcls:AccountNetworkAcls~A `network_acls` block as defined below. When this property is specified, `custom_subdomain_name` is also required to be set.

outboundNetworkAccessRestrictedB
 ^Whether outbound network access is restricted for the Cognitive Account. Defaults to `false`.
|
publicNetworkAccessEnabledB
 XWhether public network access is allowed for the Cognitive Account. Defaults to `true`.
Y
qnaRuntimeEndpointB" =A URL to link a QnAMaker cognitive account to a QnA runtime.

resourceGroupName" The name of the resource group in which the Cognitive Service Account is created. Changing this forces a new resource to be created.
Û
skuName" ËSpecifies the SKU Name for this Cognitive Service Account. Possible values are `F0`, `F1`, `S0`, `S`, `S1`, `S2`, `S3`, `S4`, `S5`, `S6`, `P0`, `P1`, `P2`, `E0` and `DC0`.

> **NOTE:** SKU `DC0` is the commitment tier for Cognitive Services containers running in disconnected environments. You must obtain approval from Microsoft by submitting the [request form](https://aka.ms/csdisconnectedcontainers) first, before you can use this SKU. More information on [Purchase a commitment plan to use containers in disconnected environments](https://learn.microsoft.com/en-us/azure/cognitive-services/containers/disconnected-containers?tabs=stt#purchase-a-commitment-plan-to-use-containers-in-disconnected-environments).

storagesRBP*N:L
J
	cognitiveAccountStorage-azure:cognitive/AccountStorage:AccountStorage$A `storage` block as defined below.
=
tagsB2" -A mapping of tags to assign to the resource.
"z
&customQuestionAnsweringSearchServiceIdB" JIf `kind` is `TextAnalytics` this specifies the ID of the Search service.
"§
'customQuestionAnsweringSearchServiceKeyB" õIf `kind` is `TextAnalytics` this specifies the key of the Search service.

> **NOTE:** `custom_question_answering_search_service_id` and `custom_question_answering_search_service_key` are used for [Custom Question Answering, the renamed version of QnA Maker](https://docs.microsoft.com/azure/cognitive-services/qnamaker/custom-question-answering), while `qna_runtime_endpoint` is used for [the old version of QnA Maker](https://docs.microsoft.com/azure/cognitive-services/qnamaker/overview/overview)
"¡
customSubdomainNameB" The subdomain name used for token-based authentication. This property is required when `network_acls` is specified. This property is also required when using the OpenAI service with libraries which assume the Azure OpenAI endpoint is a subdomain on `https://openai.azure.com/`, eg. `https://<custom_subdomain_name>.openai.azure.com/`.  Changing this forces a new resource to be created.
"½
customerManagedKeyqBo:m
k
	cognitiveAccountCustomerManagedKeyCazure:cognitive/AccountCustomerManagedKey:AccountCustomerManagedKey4A `customer_managed_key` block as documented below.
"o
dynamicThrottlingEnabledB
 MWhether to enable the dynamic throttling for this Cognitive Service Account.
"O
endpoint" ?The endpoint used to connect to the Cognitive Service Account.
"B
fqdnsB*" 1List of FQDNs allowed for the Cognitive Account.
"
identitySBQ:O
M
	cognitiveAccountIdentity/azure:cognitive/AccountIdentity:AccountIdentity&An `identity` block as defined below.
"­
kind"  Specifies the type of Cognitive Service Account that should be created. Possible values are `Academic`, `AnomalyDetector`, `Bing.Autosuggest`, `Bing.Autosuggest.v7`, `Bing.CustomSearch`, `Bing.Search`, `Bing.Search.v7`, `Bing.Speech`, `Bing.SpellCheck`, `Bing.SpellCheck.v7`, `CognitiveServices`, `ComputerVision`, `ContentModerator`, `ContentSafety`, `CustomSpeech`, `CustomVision.Prediction`, `CustomVision.Training`, `Emotion`, `Face`, `FormRecognizer`, `ImmersiveReader`, `LUIS`, `LUIS.Authoring`, `MetricsAdvisor`, `OpenAI`, `Personalizer`, `QnAMaker`, `Recommendations`, `SpeakerRecognition`, `Speech`, `SpeechServices`, `SpeechTranslation`, `TextAnalytics`, `TextTranslation` and `WebLM`. Changing this forces a new resource to be created.

> **NOTE:** New Bing Search resources cannot be created as their APIs are moving from Cognitive Services Platform to new surface area under Microsoft.com. Starting from October 30, 2020, existing instances of Bing Search APIs provisioned via Cognitive Services will be continuously supported for next 3 years or till the end of respective Enterprise Agreement, whichever happens first.

> **NOTE:** You must create your first Face, Text Analytics, or Computer Vision resources from the Azure portal to review and acknowledge the terms and conditions. In Azure Portal, the checkbox to accept terms and conditions is only displayed when a US region is selected. More information on [Prerequisites](https://docs.microsoft.com/azure/cognitive-services/cognitive-services-apis-create-account-cli?tabs=windows#prerequisites).
"y
localAuthEnabledB
 _Whether local authentication methods is enabled for the Cognitive Account. Defaults to `true`.
"
location" uSpecifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
"º
metricsAdvisorAadClientIdB" The Azure AD Client ID (Application ID). This attribute is only set when kind is `MetricsAdvisor`. Changing this forces a new resource to be created.
"©
metricsAdvisorAadTenantIdB" The Azure AD Tenant ID. This attribute is only set when kind is `MetricsAdvisor`. Changing this forces a new resource to be created.
"¶
metricsAdvisorSuperUserNameB" The super user of Metrics Advisor. This attribute is only set when kind is `MetricsAdvisor`. Changing this forces a new resource to be created.
"ý
metricsAdvisorWebsiteNameB" ÙThe website name of Metrics Advisor. This attribute is only set when kind is `MetricsAdvisor`. Changing this forces a new resource to be created.

> **NOTE:** This URL is mandatory if the `kind` is set to `QnAMaker`.
"t
name" hSpecifies the name of the Cognitive Service Account. Changing this forces a new resource to be created.
"ë
networkAcls\BZ:X
V
	cognitiveAccountNetworkAcls5azure:cognitive/AccountNetworkAcls:AccountNetworkAcls~A `network_acls` block as defined below. When this property is specified, `custom_subdomain_name` is also required to be set.
"
outboundNetworkAccessRestrictedB
 ^Whether outbound network access is restricted for the Cognitive Account. Defaults to `false`.
"l
primaryAccessKey" TA primary access key which can be used to connect to the Cognitive Service Account.
"|
publicNetworkAccessEnabledB
 XWhether public network access is allowed for the Cognitive Account. Defaults to `true`.
"Y
qnaRuntimeEndpointB" =A URL to link a QnAMaker cognitive account to a QnA runtime.
"
resourceGroupName" The name of the resource group in which the Cognitive Service Account is created. Changing this forces a new resource to be created.
"r
secondaryAccessKey" XThe secondary access key which can be used to connect to the Cognitive Service Account.
"Û
skuName" ËSpecifies the SKU Name for this Cognitive Service Account. Possible values are `F0`, `F1`, `S0`, `S`, `S1`, `S2`, `S3`, `S4`, `S5`, `S6`, `P0`, `P1`, `P2`, `E0` and `DC0`.

> **NOTE:** SKU `DC0` is the commitment tier for Cognitive Services containers running in disconnected environments. You must obtain approval from Microsoft by submitting the [request form](https://aka.ms/csdisconnectedcontainers) first, before you can use this SKU. More information on [Purchase a commitment plan to use containers in disconnected environments](https://learn.microsoft.com/en-us/azure/cognitive-services/containers/disconnected-containers?tabs=stt#purchase-a-commitment-plan-to-use-containers-in-disconnected-environments).
"
storagesRBP*N:L
J
	cognitiveAccountStorage-azure:cognitive/AccountStorage:AccountStorage$A `storage` block as defined below.
"=
tagsB2" -A mapping of tags to assign to the resource.
*ÌÖ
k
	cognitiveAccountCustomerManagedKeyCazure:cognitive/accountCustomerManagedKey:AccountCustomerManagedKeyåÎManages a Customer Managed Key for a Cognitive Services Account.

> **NOTE:** It's possible to define a Customer Managed Key both within the `azure.cognitive.Account` resource via the `customer_managed_key` block and by using the `azure.cognitive.AccountCustomerManagedKey` resource. However it's not possible to use both methods to manage a Customer Managed Key for a Cognitive Account, since there'll be conflicts.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const current = azure.core.getClientConfig({});
const example = new azure.core.ResourceGroup("example", {
    name: "example-resources",
    location: "West US",
});
const exampleUserAssignedIdentity = new azure.authorization.UserAssignedIdentity("example", {
    resourceGroupName: example.name,
    location: example.location,
    name: "example-identity",
});
const exampleAccount = new azure.cognitive.Account("example", {
    name: "example-account",
    location: example.location,
    resourceGroupName: example.name,
    kind: "Face",
    skuName: "E0",
    customSubdomainName: "example-account",
    identity: {
        type: "SystemAssigned, UserAssigned",
        identityIds: [exampleUserAssignedIdentity.id],
    },
});
const exampleKeyVault = new azure.keyvault.KeyVault("example", {
    name: "example-vault",
    location: example.location,
    resourceGroupName: example.name,
    tenantId: current.then(current => current.tenantId),
    skuName: "standard",
    purgeProtectionEnabled: true,
    accessPolicies: [
        {
            tenantId: exampleAccount.identity.apply(identity => identity?.tenantId),
            objectId: exampleAccount.identity.apply(identity => identity?.principalId),
            keyPermissions: [
                "Get",
                "Create",
                "List",
                "Restore",
                "Recover",
                "UnwrapKey",
                "WrapKey",
                "Purge",
                "Encrypt",
                "Decrypt",
                "Sign",
                "Verify",
            ],
            secretPermissions: ["Get"],
        },
        {
            tenantId: current.then(current => current.tenantId),
            objectId: current.then(current => current.objectId),
            keyPermissions: [
                "Get",
                "Create",
                "Delete",
                "List",
                "Restore",
                "Recover",
                "UnwrapKey",
                "WrapKey",
                "Purge",
                "Encrypt",
                "Decrypt",
                "Sign",
                "Verify",
                "GetRotationPolicy",
            ],
            secretPermissions: ["Get"],
        },
        {
            tenantId: exampleUserAssignedIdentity.tenantId,
            objectId: exampleUserAssignedIdentity.principalId,
            keyPermissions: [
                "Get",
                "Create",
                "Delete",
                "List",
                "Restore",
                "Recover",
                "UnwrapKey",
                "WrapKey",
                "Purge",
                "Encrypt",
                "Decrypt",
                "Sign",
                "Verify",
            ],
            secretPermissions: ["Get"],
        },
    ],
});
const exampleKey = new azure.keyvault.Key("example", {
    name: "example-key",
    keyVaultId: exampleKeyVault.id,
    keyType: "RSA",
    keySize: 2048,
    keyOpts: [
        "decrypt",
        "encrypt",
        "sign",
        "unwrapKey",
        "verify",
        "wrapKey",
    ],
});
const exampleAccountCustomerManagedKey = new azure.cognitive.AccountCustomerManagedKey("example", {
    cognitiveAccountId: exampleAccount.id,
    keyVaultKeyId: exampleKey.id,
    identityClientId: exampleUserAssignedIdentity.clientId,
});
```
```python
import pulumi
import pulumi_azure as azure

current = azure.core.get_client_config()
example = azure.core.ResourceGroup("example",
    name="example-resources",
    location="West US")
example_user_assigned_identity = azure.authorization.UserAssignedIdentity("example",
    resource_group_name=example.name,
    location=example.location,
    name="example-identity")
example_account = azure.cognitive.Account("example",
    name="example-account",
    location=example.location,
    resource_group_name=example.name,
    kind="Face",
    sku_name="E0",
    custom_subdomain_name="example-account",
    identity={
        "type": "SystemAssigned, UserAssigned",
        "identity_ids": [example_user_assigned_identity.id],
    })
example_key_vault = azure.keyvault.KeyVault("example",
    name="example-vault",
    location=example.location,
    resource_group_name=example.name,
    tenant_id=current.tenant_id,
    sku_name="standard",
    purge_protection_enabled=True,
    access_policies=[
        {
            "tenant_id": example_account.identity.tenant_id,
            "object_id": example_account.identity.principal_id,
            "key_permissions": [
                "Get",
                "Create",
                "List",
                "Restore",
                "Recover",
                "UnwrapKey",
                "WrapKey",
                "Purge",
                "Encrypt",
                "Decrypt",
                "Sign",
                "Verify",
            ],
            "secret_permissions": ["Get"],
        },
        {
            "tenant_id": current.tenant_id,
            "object_id": current.object_id,
            "key_permissions": [
                "Get",
                "Create",
                "Delete",
                "List",
                "Restore",
                "Recover",
                "UnwrapKey",
                "WrapKey",
                "Purge",
                "Encrypt",
                "Decrypt",
                "Sign",
                "Verify",
                "GetRotationPolicy",
            ],
            "secret_permissions": ["Get"],
        },
        {
            "tenant_id": example_user_assigned_identity.tenant_id,
            "object_id": example_user_assigned_identity.principal_id,
            "key_permissions": [
                "Get",
                "Create",
                "Delete",
                "List",
                "Restore",
                "Recover",
                "UnwrapKey",
                "WrapKey",
                "Purge",
                "Encrypt",
                "Decrypt",
                "Sign",
                "Verify",
            ],
            "secret_permissions": ["Get"],
        },
    ])
example_key = azure.keyvault.Key("example",
    name="example-key",
    key_vault_id=example_key_vault.id,
    key_type="RSA",
    key_size=2048,
    key_opts=[
        "decrypt",
        "encrypt",
        "sign",
        "unwrapKey",
        "verify",
        "wrapKey",
    ])
example_account_customer_managed_key = azure.cognitive.AccountCustomerManagedKey("example",
    cognitive_account_id=example_account.id,
    key_vault_key_id=example_key.id,
    identity_client_id=example_user_assigned_identity.client_id)
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var current = Azure.Core.GetClientConfig.Invoke();

    var example = new Azure.Core.ResourceGroup("example", new()
    {
        Name = "example-resources",
        Location = "West US",
    });

    var exampleUserAssignedIdentity = new Azure.Authorization.UserAssignedIdentity("example", new()
    {
        ResourceGroupName = example.Name,
        Location = example.Location,
        Name = "example-identity",
    });

    var exampleAccount = new Azure.Cognitive.Account("example", new()
    {
        Name = "example-account",
        Location = example.Location,
        ResourceGroupName = example.Name,
        Kind = "Face",
        SkuName = "E0",
        CustomSubdomainName = "example-account",
        Identity = new Azure.Cognitive.Inputs.AccountIdentityArgs
        {
            Type = "SystemAssigned, UserAssigned",
            IdentityIds = new[]
            {
                exampleUserAssignedIdentity.Id,
            },
        },
    });

    var exampleKeyVault = new Azure.KeyVault.KeyVault("example", new()
    {
        Name = "example-vault",
        Location = example.Location,
        ResourceGroupName = example.Name,
        TenantId = current.Apply(getClientConfigResult => getClientConfigResult.TenantId),
        SkuName = "standard",
        PurgeProtectionEnabled = true,
        AccessPolicies = new[]
        {
            new Azure.KeyVault.Inputs.KeyVaultAccessPolicyArgs
            {
                TenantId = exampleAccount.Identity.Apply(identity => identity?.TenantId),
                ObjectId = exampleAccount.Identity.Apply(identity => identity?.PrincipalId),
                KeyPermissions = new[]
                {
                    "Get",
                    "Create",
                    "List",
                    "Restore",
                    "Recover",
                    "UnwrapKey",
                    "WrapKey",
                    "Purge",
                    "Encrypt",
                    "Decrypt",
                    "Sign",
                    "Verify",
                },
                SecretPermissions = new[]
                {
                    "Get",
                },
            },
            new Azure.KeyVault.Inputs.KeyVaultAccessPolicyArgs
            {
                TenantId = current.Apply(getClientConfigResult => getClientConfigResult.TenantId),
                ObjectId = current.Apply(getClientConfigResult => getClientConfigResult.ObjectId),
                KeyPermissions = new[]
                {
                    "Get",
                    "Create",
                    "Delete",
                    "List",
                    "Restore",
                    "Recover",
                    "UnwrapKey",
                    "WrapKey",
                    "Purge",
                    "Encrypt",
                    "Decrypt",
                    "Sign",
                    "Verify",
                    "GetRotationPolicy",
                },
                SecretPermissions = new[]
                {
                    "Get",
                },
            },
            new Azure.KeyVault.Inputs.KeyVaultAccessPolicyArgs
            {
                TenantId = exampleUserAssignedIdentity.TenantId,
                ObjectId = exampleUserAssignedIdentity.PrincipalId,
                KeyPermissions = new[]
                {
                    "Get",
                    "Create",
                    "Delete",
                    "List",
                    "Restore",
                    "Recover",
                    "UnwrapKey",
                    "WrapKey",
                    "Purge",
                    "Encrypt",
                    "Decrypt",
                    "Sign",
                    "Verify",
                },
                SecretPermissions = new[]
                {
                    "Get",
                },
            },
        },
    });

    var exampleKey = new Azure.KeyVault.Key("example", new()
    {
        Name = "example-key",
        KeyVaultId = exampleKeyVault.Id,
        KeyType = "RSA",
        KeySize = 2048,
        KeyOpts = new[]
        {
            "decrypt",
            "encrypt",
            "sign",
            "unwrapKey",
            "verify",
            "wrapKey",
        },
    });

    var exampleAccountCustomerManagedKey = new Azure.Cognitive.AccountCustomerManagedKey("example", new()
    {
        CognitiveAccountId = exampleAccount.Id,
        KeyVaultKeyId = exampleKey.Id,
        IdentityClientId = exampleUserAssignedIdentity.ClientId,
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/authorization"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/cognitive"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/keyvault"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		current, err := core.GetClientConfig(ctx, map[string]interface{}{}, nil)
		if err != nil {
			return err
		}
		example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
			Name:     pulumi.String("example-resources"),
			Location: pulumi.String("West US"),
		})
		if err != nil {
			return err
		}
		exampleUserAssignedIdentity, err := authorization.NewUserAssignedIdentity(ctx, "example", &authorization.UserAssignedIdentityArgs{
			ResourceGroupName: example.Name,
			Location:          example.Location,
			Name:              pulumi.String("example-identity"),
		})
		if err != nil {
			return err
		}
		exampleAccount, err := cognitive.NewAccount(ctx, "example", &cognitive.AccountArgs{
			Name:                pulumi.String("example-account"),
			Location:            example.Location,
			ResourceGroupName:   example.Name,
			Kind:                pulumi.String("Face"),
			SkuName:             pulumi.String("E0"),
			CustomSubdomainName: pulumi.String("example-account"),
			Identity: &cognitive.AccountIdentityArgs{
				Type: pulumi.String("SystemAssigned, UserAssigned"),
				IdentityIds: pulumi.StringArray{
					exampleUserAssignedIdentity.ID(),
				},
			},
		})
		if err != nil {
			return err
		}
		exampleKeyVault, err := keyvault.NewKeyVault(ctx, "example", &keyvault.KeyVaultArgs{
			Name:                   pulumi.String("example-vault"),
			Location:               example.Location,
			ResourceGroupName:      example.Name,
			TenantId:               pulumi.String(current.TenantId),
			SkuName:                pulumi.String("standard"),
			PurgeProtectionEnabled: pulumi.Bool(true),
			AccessPolicies: keyvault.KeyVaultAccessPolicyArray{
				&keyvault.KeyVaultAccessPolicyArgs{
					TenantId: exampleAccount.Identity.ApplyT(func(identity cognitive.AccountIdentity) (*string, error) {
						return &identity.TenantId, nil
					}).(pulumi.StringPtrOutput),
					ObjectId: exampleAccount.Identity.ApplyT(func(identity cognitive.AccountIdentity) (*string, error) {
						return &identity.PrincipalId, nil
					}).(pulumi.StringPtrOutput),
					KeyPermissions: pulumi.StringArray{
						pulumi.String("Get"),
						pulumi.String("Create"),
						pulumi.String("List"),
						pulumi.String("Restore"),
						pulumi.String("Recover"),
						pulumi.String("UnwrapKey"),
						pulumi.String("WrapKey"),
						pulumi.String("Purge"),
						pulumi.String("Encrypt"),
						pulumi.String("Decrypt"),
						pulumi.String("Sign"),
						pulumi.String("Verify"),
					},
					SecretPermissions: pulumi.StringArray{
						pulumi.String("Get"),
					},
				},
				&keyvault.KeyVaultAccessPolicyArgs{
					TenantId: pulumi.String(current.TenantId),
					ObjectId: pulumi.String(current.ObjectId),
					KeyPermissions: pulumi.StringArray{
						pulumi.String("Get"),
						pulumi.String("Create"),
						pulumi.String("Delete"),
						pulumi.String("List"),
						pulumi.String("Restore"),
						pulumi.String("Recover"),
						pulumi.String("UnwrapKey"),
						pulumi.String("WrapKey"),
						pulumi.String("Purge"),
						pulumi.String("Encrypt"),
						pulumi.String("Decrypt"),
						pulumi.String("Sign"),
						pulumi.String("Verify"),
						pulumi.String("GetRotationPolicy"),
					},
					SecretPermissions: pulumi.StringArray{
						pulumi.String("Get"),
					},
				},
				&keyvault.KeyVaultAccessPolicyArgs{
					TenantId: exampleUserAssignedIdentity.TenantId,
					ObjectId: exampleUserAssignedIdentity.PrincipalId,
					KeyPermissions: pulumi.StringArray{
						pulumi.String("Get"),
						pulumi.String("Create"),
						pulumi.String("Delete"),
						pulumi.String("List"),
						pulumi.String("Restore"),
						pulumi.String("Recover"),
						pulumi.String("UnwrapKey"),
						pulumi.String("WrapKey"),
						pulumi.String("Purge"),
						pulumi.String("Encrypt"),
						pulumi.String("Decrypt"),
						pulumi.String("Sign"),
						pulumi.String("Verify"),
					},
					SecretPermissions: pulumi.StringArray{
						pulumi.String("Get"),
					},
				},
			},
		})
		if err != nil {
			return err
		}
		exampleKey, err := keyvault.NewKey(ctx, "example", &keyvault.KeyArgs{
			Name:       pulumi.String("example-key"),
			KeyVaultId: exampleKeyVault.ID(),
			KeyType:    pulumi.String("RSA"),
			KeySize:    pulumi.Int(2048),
			KeyOpts: pulumi.StringArray{
				pulumi.String("decrypt"),
				pulumi.String("encrypt"),
				pulumi.String("sign"),
				pulumi.String("unwrapKey"),
				pulumi.String("verify"),
				pulumi.String("wrapKey"),
			},
		})
		if err != nil {
			return err
		}
		_, err = cognitive.NewAccountCustomerManagedKey(ctx, "example", &cognitive.AccountCustomerManagedKeyArgs{
			CognitiveAccountId: exampleAccount.ID(),
			KeyVaultKeyId:      exampleKey.ID(),
			IdentityClientId:   exampleUserAssignedIdentity.ClientId,
		})
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.core.CoreFunctions;
import com.pulumi.azure.core.ResourceGroup;
import com.pulumi.azure.core.ResourceGroupArgs;
import com.pulumi.azure.authorization.UserAssignedIdentity;
import com.pulumi.azure.authorization.UserAssignedIdentityArgs;
import com.pulumi.azure.cognitive.Account;
import com.pulumi.azure.cognitive.AccountArgs;
import com.pulumi.azure.cognitive.inputs.AccountIdentityArgs;
import com.pulumi.azure.keyvault.KeyVault;
import com.pulumi.azure.keyvault.KeyVaultArgs;
import com.pulumi.azure.keyvault.inputs.KeyVaultAccessPolicyArgs;
import com.pulumi.azure.keyvault.Key;
import com.pulumi.azure.keyvault.KeyArgs;
import com.pulumi.azure.cognitive.AccountCustomerManagedKey;
import com.pulumi.azure.cognitive.AccountCustomerManagedKeyArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        final var current = CoreFunctions.getClientConfig();

        var example = new ResourceGroup("example", ResourceGroupArgs.builder()
            .name("example-resources")
            .location("West US")
            .build());

        var exampleUserAssignedIdentity = new UserAssignedIdentity("exampleUserAssignedIdentity", UserAssignedIdentityArgs.builder()
            .resourceGroupName(example.name())
            .location(example.location())
            .name("example-identity")
            .build());

        var exampleAccount = new Account("exampleAccount", AccountArgs.builder()
            .name("example-account")
            .location(example.location())
            .resourceGroupName(example.name())
            .kind("Face")
            .skuName("E0")
            .customSubdomainName("example-account")
            .identity(AccountIdentityArgs.builder()
                .type("SystemAssigned, UserAssigned")
                .identityIds(exampleUserAssignedIdentity.id())
                .build())
            .build());

        var exampleKeyVault = new KeyVault("exampleKeyVault", KeyVaultArgs.builder()
            .name("example-vault")
            .location(example.location())
            .resourceGroupName(example.name())
            .tenantId(current.applyValue(getClientConfigResult -> getClientConfigResult.tenantId()))
            .skuName("standard")
            .purgeProtectionEnabled(true)
            .accessPolicies(            
                KeyVaultAccessPolicyArgs.builder()
                    .tenantId(exampleAccount.identity().applyValue(identity -> identity.tenantId()))
                    .objectId(exampleAccount.identity().applyValue(identity -> identity.principalId()))
                    .keyPermissions(                    
                        "Get",
                        "Create",
                        "List",
                        "Restore",
                        "Recover",
                        "UnwrapKey",
                        "WrapKey",
                        "Purge",
                        "Encrypt",
                        "Decrypt",
                        "Sign",
                        "Verify")
                    .secretPermissions("Get")
                    .build(),
                KeyVaultAccessPolicyArgs.builder()
                    .tenantId(current.applyValue(getClientConfigResult -> getClientConfigResult.tenantId()))
                    .objectId(current.applyValue(getClientConfigResult -> getClientConfigResult.objectId()))
                    .keyPermissions(                    
                        "Get",
                        "Create",
                        "Delete",
                        "List",
                        "Restore",
                        "Recover",
                        "UnwrapKey",
                        "WrapKey",
                        "Purge",
                        "Encrypt",
                        "Decrypt",
                        "Sign",
                        "Verify",
                        "GetRotationPolicy")
                    .secretPermissions("Get")
                    .build(),
                KeyVaultAccessPolicyArgs.builder()
                    .tenantId(exampleUserAssignedIdentity.tenantId())
                    .objectId(exampleUserAssignedIdentity.principalId())
                    .keyPermissions(                    
                        "Get",
                        "Create",
                        "Delete",
                        "List",
                        "Restore",
                        "Recover",
                        "UnwrapKey",
                        "WrapKey",
                        "Purge",
                        "Encrypt",
                        "Decrypt",
                        "Sign",
                        "Verify")
                    .secretPermissions("Get")
                    .build())
            .build());

        var exampleKey = new Key("exampleKey", KeyArgs.builder()
            .name("example-key")
            .keyVaultId(exampleKeyVault.id())
            .keyType("RSA")
            .keySize(2048)
            .keyOpts(            
                "decrypt",
                "encrypt",
                "sign",
                "unwrapKey",
                "verify",
                "wrapKey")
            .build());

        var exampleAccountCustomerManagedKey = new AccountCustomerManagedKey("exampleAccountCustomerManagedKey", AccountCustomerManagedKeyArgs.builder()
            .cognitiveAccountId(exampleAccount.id())
            .keyVaultKeyId(exampleKey.id())
            .identityClientId(exampleUserAssignedIdentity.clientId())
            .build());

    }
}
```
```yaml
resources:
  example:
    type: azure:core:ResourceGroup
    properties:
      name: example-resources
      location: West US
  exampleUserAssignedIdentity:
    type: azure:authorization:UserAssignedIdentity
    name: example
    properties:
      resourceGroupName: ${example.name}
      location: ${example.location}
      name: example-identity
  exampleAccount:
    type: azure:cognitive:Account
    name: example
    properties:
      name: example-account
      location: ${example.location}
      resourceGroupName: ${example.name}
      kind: Face
      skuName: E0
      customSubdomainName: example-account
      identity:
        type: SystemAssigned, UserAssigned
        identityIds:
          - ${exampleUserAssignedIdentity.id}
  exampleKeyVault:
    type: azure:keyvault:KeyVault
    name: example
    properties:
      name: example-vault
      location: ${example.location}
      resourceGroupName: ${example.name}
      tenantId: ${current.tenantId}
      skuName: standard
      purgeProtectionEnabled: true
      accessPolicies:
        - tenantId: ${exampleAccount.identity.tenantId}
          objectId: ${exampleAccount.identity.principalId}
          keyPermissions:
            - Get
            - Create
            - List
            - Restore
            - Recover
            - UnwrapKey
            - WrapKey
            - Purge
            - Encrypt
            - Decrypt
            - Sign
            - Verify
          secretPermissions:
            - Get
        - tenantId: ${current.tenantId}
          objectId: ${current.objectId}
          keyPermissions:
            - Get
            - Create
            - Delete
            - List
            - Restore
            - Recover
            - UnwrapKey
            - WrapKey
            - Purge
            - Encrypt
            - Decrypt
            - Sign
            - Verify
            - GetRotationPolicy
          secretPermissions:
            - Get
        - tenantId: ${exampleUserAssignedIdentity.tenantId}
          objectId: ${exampleUserAssignedIdentity.principalId}
          keyPermissions:
            - Get
            - Create
            - Delete
            - List
            - Restore
            - Recover
            - UnwrapKey
            - WrapKey
            - Purge
            - Encrypt
            - Decrypt
            - Sign
            - Verify
          secretPermissions:
            - Get
  exampleKey:
    type: azure:keyvault:Key
    name: example
    properties:
      name: example-key
      keyVaultId: ${exampleKeyVault.id}
      keyType: RSA
      keySize: 2048
      keyOpts:
        - decrypt
        - encrypt
        - sign
        - unwrapKey
        - verify
        - wrapKey
  exampleAccountCustomerManagedKey:
    type: azure:cognitive:AccountCustomerManagedKey
    name: example
    properties:
      cognitiveAccountId: ${exampleAccount.id}
      keyVaultKeyId: ${exampleKey.id}
      identityClientId: ${exampleUserAssignedIdentity.clientId}
variables:
  current:
    fn::invoke:
      function: azure:core:getClientConfig
      arguments: {}
```
<!--End PulumiCodeChooser -->

## Import

Customer Managed Keys for a Cognitive Account can be imported using the `resource id`, e.g.

```sh
$ pulumi import azure:cognitive/accountCustomerManagedKey:AccountCustomerManagedKey example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.CognitiveServices/accounts/account1
```

n
cognitiveAccountId" TThe ID of the Cognitive Account. Changing this forces a new resource to be created.
Ñ
identityClientIdB" ¶The Client ID of the User Assigned Identity that has access to the key. This property only needs to be specified when there're multiple identities attached to the Cognitive Account.
u
keyVaultKeyId" `The ID of the Key Vault Key which should be used to Encrypt the data in this Cognitive Account.
"n
cognitiveAccountId" TThe ID of the Cognitive Account. Changing this forces a new resource to be created.
"Ñ
identityClientIdB" ¶The Client ID of the User Assigned Identity that has access to the key. This property only needs to be specified when there're multiple identities attached to the Cognitive Account.
"u
keyVaultKeyId" `The ID of the Key Vault Key which should be used to Encrypt the data in this Cognitive Account.
*Ç2
Y
	cognitiveAccountRaiBlocklist7azure:cognitive/accountRaiBlocklist:AccountRaiBlocklist,Manages a Cognitive Account Rai Blocklist.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const example = new azure.core.ResourceGroup("example", {
    name: "example-resources",
    location: "Brazil South",
});
const exampleAccount = new azure.cognitive.Account("example", {
    name: "example-ca",
    location: example.location,
    resourceGroupName: example.name,
    kind: "OpenAI",
    skuName: "S0",
});
const exampleAccountRaiBlocklist = new azure.cognitive.AccountRaiBlocklist("example", {
    name: "example-crb",
    cognitiveAccountId: exampleAccount.id,
    description: "Azure OpenAI Rai Blocklist",
});
```
```python
import pulumi
import pulumi_azure as azure

example = azure.core.ResourceGroup("example",
    name="example-resources",
    location="Brazil South")
example_account = azure.cognitive.Account("example",
    name="example-ca",
    location=example.location,
    resource_group_name=example.name,
    kind="OpenAI",
    sku_name="S0")
example_account_rai_blocklist = azure.cognitive.AccountRaiBlocklist("example",
    name="example-crb",
    cognitive_account_id=example_account.id,
    description="Azure OpenAI Rai Blocklist")
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var example = new Azure.Core.ResourceGroup("example", new()
    {
        Name = "example-resources",
        Location = "Brazil South",
    });

    var exampleAccount = new Azure.Cognitive.Account("example", new()
    {
        Name = "example-ca",
        Location = example.Location,
        ResourceGroupName = example.Name,
        Kind = "OpenAI",
        SkuName = "S0",
    });

    var exampleAccountRaiBlocklist = new Azure.Cognitive.AccountRaiBlocklist("example", new()
    {
        Name = "example-crb",
        CognitiveAccountId = exampleAccount.Id,
        Description = "Azure OpenAI Rai Blocklist",
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/cognitive"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
			Name:     pulumi.String("example-resources"),
			Location: pulumi.String("Brazil South"),
		})
		if err != nil {
			return err
		}
		exampleAccount, err := cognitive.NewAccount(ctx, "example", &cognitive.AccountArgs{
			Name:              pulumi.String("example-ca"),
			Location:          example.Location,
			ResourceGroupName: example.Name,
			Kind:              pulumi.String("OpenAI"),
			SkuName:           pulumi.String("S0"),
		})
		if err != nil {
			return err
		}
		_, err = cognitive.NewAccountRaiBlocklist(ctx, "example", &cognitive.AccountRaiBlocklistArgs{
			Name:               pulumi.String("example-crb"),
			CognitiveAccountId: exampleAccount.ID(),
			Description:        pulumi.String("Azure OpenAI Rai Blocklist"),
		})
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.core.ResourceGroup;
import com.pulumi.azure.core.ResourceGroupArgs;
import com.pulumi.azure.cognitive.Account;
import com.pulumi.azure.cognitive.AccountArgs;
import com.pulumi.azure.cognitive.AccountRaiBlocklist;
import com.pulumi.azure.cognitive.AccountRaiBlocklistArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        var example = new ResourceGroup("example", ResourceGroupArgs.builder()
            .name("example-resources")
            .location("Brazil South")
            .build());

        var exampleAccount = new Account("exampleAccount", AccountArgs.builder()
            .name("example-ca")
            .location(example.location())
            .resourceGroupName(example.name())
            .kind("OpenAI")
            .skuName("S0")
            .build());

        var exampleAccountRaiBlocklist = new AccountRaiBlocklist("exampleAccountRaiBlocklist", AccountRaiBlocklistArgs.builder()
            .name("example-crb")
            .cognitiveAccountId(exampleAccount.id())
            .description("Azure OpenAI Rai Blocklist")
            .build());

    }
}
```
```yaml
resources:
  example:
    type: azure:core:ResourceGroup
    properties:
      name: example-resources
      location: Brazil South
  exampleAccount:
    type: azure:cognitive:Account
    name: example
    properties:
      name: example-ca
      location: ${example.location}
      resourceGroupName: ${example.name}
      kind: OpenAI
      skuName: S0
  exampleAccountRaiBlocklist:
    type: azure:cognitive:AccountRaiBlocklist
    name: example
    properties:
      name: example-crb
      cognitiveAccountId: ${exampleAccount.id}
      description: Azure OpenAI Rai Blocklist
```
<!--End PulumiCodeChooser -->

## Import

Cognitive Account Rai Blocklist can be imported using the `resource id`, e.g.

```sh
$ pulumi import azure:cognitive/accountRaiBlocklist:AccountRaiBlocklist example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.CognitiveServices/accounts/account1/raiBlocklists/raiblocklist1
```


cognitiveAccountId" tThe ID of the Cognitive Services Account. Changing this forces a new Cognitive Account Rai Blocklist to be created.
R
descriptionB" =A short description for the Cognitive Account Rai Blocklist.

nameB" {The name of the Cognitive Account Rai Blocklist. Changing this forces a new Cognitive Account Rai Blocklist to be created.
"
cognitiveAccountId" tThe ID of the Cognitive Services Account. Changing this forces a new Cognitive Account Rai Blocklist to be created.
"R
descriptionB" =A short description for the Cognitive Account Rai Blocklist.
"
name" {The name of the Cognitive Account Rai Blocklist. Changing this forces a new Cognitive Account Rai Blocklist to be created.
*¨A
>
	cognitive
Deployment%azure:cognitive/deployment:Deploymentó2Manages a Cognitive Services Account Deployment.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const example = new azure.core.ResourceGroup("example", {
    name: "example-resources",
    location: "West Europe",
});
const exampleAccount = new azure.cognitive.Account("example", {
    name: "example-ca",
    location: example.location,
    resourceGroupName: example.name,
    kind: "OpenAI",
    skuName: "S0",
});
const exampleDeployment = new azure.cognitive.Deployment("example", {
    name: "example-cd",
    cognitiveAccountId: exampleAccount.id,
    model: {
        format: "OpenAI",
        name: "text-curie-001",
        version: "1",
    },
    sku: {
        name: "Standard",
    },
});
```
```python
import pulumi
import pulumi_azure as azure

example = azure.core.ResourceGroup("example",
    name="example-resources",
    location="West Europe")
example_account = azure.cognitive.Account("example",
    name="example-ca",
    location=example.location,
    resource_group_name=example.name,
    kind="OpenAI",
    sku_name="S0")
example_deployment = azure.cognitive.Deployment("example",
    name="example-cd",
    cognitive_account_id=example_account.id,
    model={
        "format": "OpenAI",
        "name": "text-curie-001",
        "version": "1",
    },
    sku={
        "name": "Standard",
    })
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var example = new Azure.Core.ResourceGroup("example", new()
    {
        Name = "example-resources",
        Location = "West Europe",
    });

    var exampleAccount = new Azure.Cognitive.Account("example", new()
    {
        Name = "example-ca",
        Location = example.Location,
        ResourceGroupName = example.Name,
        Kind = "OpenAI",
        SkuName = "S0",
    });

    var exampleDeployment = new Azure.Cognitive.Deployment("example", new()
    {
        Name = "example-cd",
        CognitiveAccountId = exampleAccount.Id,
        Model = new Azure.Cognitive.Inputs.DeploymentModelArgs
        {
            Format = "OpenAI",
            Name = "text-curie-001",
            Version = "1",
        },
        Sku = new Azure.Cognitive.Inputs.DeploymentSkuArgs
        {
            Name = "Standard",
        },
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/cognitive"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
			Name:     pulumi.String("example-resources"),
			Location: pulumi.String("West Europe"),
		})
		if err != nil {
			return err
		}
		exampleAccount, err := cognitive.NewAccount(ctx, "example", &cognitive.AccountArgs{
			Name:              pulumi.String("example-ca"),
			Location:          example.Location,
			ResourceGroupName: example.Name,
			Kind:              pulumi.String("OpenAI"),
			SkuName:           pulumi.String("S0"),
		})
		if err != nil {
			return err
		}
		_, err = cognitive.NewDeployment(ctx, "example", &cognitive.DeploymentArgs{
			Name:               pulumi.String("example-cd"),
			CognitiveAccountId: exampleAccount.ID(),
			Model: &cognitive.DeploymentModelArgs{
				Format:  pulumi.String("OpenAI"),
				Name:    pulumi.String("text-curie-001"),
				Version: pulumi.String("1"),
			},
			Sku: &cognitive.DeploymentSkuArgs{
				Name: pulumi.String("Standard"),
			},
		})
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.core.ResourceGroup;
import com.pulumi.azure.core.ResourceGroupArgs;
import com.pulumi.azure.cognitive.Account;
import com.pulumi.azure.cognitive.AccountArgs;
import com.pulumi.azure.cognitive.Deployment;
import com.pulumi.azure.cognitive.DeploymentArgs;
import com.pulumi.azure.cognitive.inputs.DeploymentModelArgs;
import com.pulumi.azure.cognitive.inputs.DeploymentSkuArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        var example = new ResourceGroup("example", ResourceGroupArgs.builder()
            .name("example-resources")
            .location("West Europe")
            .build());

        var exampleAccount = new Account("exampleAccount", AccountArgs.builder()
            .name("example-ca")
            .location(example.location())
            .resourceGroupName(example.name())
            .kind("OpenAI")
            .skuName("S0")
            .build());

        var exampleDeployment = new Deployment("exampleDeployment", DeploymentArgs.builder()
            .name("example-cd")
            .cognitiveAccountId(exampleAccount.id())
            .model(DeploymentModelArgs.builder()
                .format("OpenAI")
                .name("text-curie-001")
                .version("1")
                .build())
            .sku(DeploymentSkuArgs.builder()
                .name("Standard")
                .build())
            .build());

    }
}
```
```yaml
resources:
  example:
    type: azure:core:ResourceGroup
    properties:
      name: example-resources
      location: West Europe
  exampleAccount:
    type: azure:cognitive:Account
    name: example
    properties:
      name: example-ca
      location: ${example.location}
      resourceGroupName: ${example.name}
      kind: OpenAI
      skuName: S0
  exampleDeployment:
    type: azure:cognitive:Deployment
    name: example
    properties:
      name: example-cd
      cognitiveAccountId: ${exampleAccount.id}
      model:
        format: OpenAI
        name: text-curie-001
        version: '1'
      sku:
        name: Standard
```
<!--End PulumiCodeChooser -->

## Import

Cognitive Services Account Deployment can be imported using the `resource id`, e.g.

```sh
$ pulumi import azure:cognitive/deployment:Deployment example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.CognitiveServices/accounts/account1/deployments/deployment1
```

w
cognitiveAccountId" ]The ID of the Cognitive Services Account. Changing this forces a new resource to be created.
I
dynamicThrottlingEnabledB
 'Whether dynamic throttling is enabled.
±
modelQ:O
M
	cognitiveDeploymentModel/azure:cognitive/DeploymentModel:DeploymentModelUA `model` block as defined below. Changing this forces a new resource to be created.
x
nameB" jThe name of the Cognitive Services Account Deployment. Changing this forces a new resource to be created.
/
raiPolicyNameB" The name of RAI policy.
t
skuK:I
G
	cognitiveDeploymentSku+azure:cognitive/DeploymentSku:DeploymentSku A `sku` block as defined below.
Þ
versionUpgradeOptionB" ¿Deployment model version upgrade option. Possible values are `OnceNewDefaultVersionAvailable`, `OnceCurrentVersionExpired`, and `NoAutoUpgrade`. Defaults to `OnceNewDefaultVersionAvailable`.
"w
cognitiveAccountId" ]The ID of the Cognitive Services Account. Changing this forces a new resource to be created.
"I
dynamicThrottlingEnabledB
 'Whether dynamic throttling is enabled.
"±
modelQ:O
M
	cognitiveDeploymentModel/azure:cognitive/DeploymentModel:DeploymentModelUA `model` block as defined below. Changing this forces a new resource to be created.
"v
name" jThe name of the Cognitive Services Account Deployment. Changing this forces a new resource to be created.
"/
raiPolicyNameB" The name of RAI policy.
"t
skuK:I
G
	cognitiveDeploymentSku+azure:cognitive/DeploymentSku:DeploymentSku A `sku` block as defined below.
"Þ
versionUpgradeOptionB" ¿Deployment model version upgrade option. Possible values are `OnceNewDefaultVersionAvailable`, `OnceCurrentVersionExpired`, and `NoAutoUpgrade`. Defaults to `OnceNewDefaultVersionAvailable`.
*,
L
communicationEmailService-azure:communication/emailService:EmailServiceManages an Email Communication Service.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const example = new azure.core.ResourceGroup("example", {
    name: "example-resources",
    location: "West Europe",
});
const exampleEmailService = new azure.communication.EmailService("example", {
    name: "example-emailcommunicationservice",
    resourceGroupName: example.name,
    dataLocation: "United States",
});
```
```python
import pulumi
import pulumi_azure as azure

example = azure.core.ResourceGroup("example",
    name="example-resources",
    location="West Europe")
example_email_service = azure.communication.EmailService("example",
    name="example-emailcommunicationservice",
    resource_group_name=example.name,
    data_location="United States")
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var example = new Azure.Core.ResourceGroup("example", new()
    {
        Name = "example-resources",
        Location = "West Europe",
    });

    var exampleEmailService = new Azure.Communication.EmailService("example", new()
    {
        Name = "example-emailcommunicationservice",
        ResourceGroupName = example.Name,
        DataLocation = "United States",
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/communication"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
			Name:     pulumi.String("example-resources"),
			Location: pulumi.String("West Europe"),
		})
		if err != nil {
			return err
		}
		_, err = communication.NewEmailService(ctx, "example", &communication.EmailServiceArgs{
			Name:              pulumi.String("example-emailcommunicationservice"),
			ResourceGroupName: example.Name,
			DataLocation:      pulumi.String("United States"),
		})
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.core.ResourceGroup;
import com.pulumi.azure.core.ResourceGroupArgs;
import com.pulumi.azure.communication.EmailService;
import com.pulumi.azure.communication.EmailServiceArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        var example = new ResourceGroup("example", ResourceGroupArgs.builder()
            .name("example-resources")
            .location("West Europe")
            .build());

        var exampleEmailService = new EmailService("exampleEmailService", EmailServiceArgs.builder()
            .name("example-emailcommunicationservice")
            .resourceGroupName(example.name())
            .dataLocation("United States")
            .build());

    }
}
```
```yaml
resources:
  example:
    type: azure:core:ResourceGroup
    properties:
      name: example-resources
      location: West Europe
  exampleEmailService:
    type: azure:communication:EmailService
    name: example
    properties:
      name: example-emailcommunicationservice
      resourceGroupName: ${example.name}
      dataLocation: United States
```
<!--End PulumiCodeChooser -->

## Import

Communication Services can be imported using the `resource id`, e.g.

```sh
$ pulumi import azure:communication/emailService:EmailService example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Communication/emailServices/emailCommunicationService1
```

ò
dataLocation" ÝThe location where the Email Communication service stores its data at rest. Possible values are `Africa`, `Asia Pacific`, `Australia`, `Brazil`, `Canada`, `Europe`, `France`, `Germany`, `India`, `Japan`, `Korea`, `Norway`, `Switzerland`, `UAE`, `UK` `usgov` and `United States`. Changing this forces a new Email Communication Service to be created.

nameB" |The name of the Email Communication Service resource. Changing this forces a new Email Communication Service to be created.
³
resourceGroupName" The name of the Resource Group where the Email Communication Service should exist. Changing this forces a new Email Communication Service to be created.
_
tagsB2" OA mapping of tags which should be assigned to the Email Communication Service.
"ò
dataLocation" ÝThe location where the Email Communication service stores its data at rest. Possible values are `Africa`, `Asia Pacific`, `Australia`, `Brazil`, `Canada`, `Europe`, `France`, `Germany`, `India`, `Japan`, `Korea`, `Norway`, `Switzerland`, `UAE`, `UK` `usgov` and `United States`. Changing this forces a new Email Communication Service to be created.
"
name" |The name of the Email Communication Service resource. Changing this forces a new Email Communication Service to be created.
"³
resourceGroupName" The name of the Resource Group where the Email Communication Service should exist. Changing this forces a new Email Communication Service to be created.
"_
tagsB2" OA mapping of tags which should be assigned to the Email Communication Service.
*µ=
^
communicationEmailServiceDomain9azure:communication/emailServiceDomain:EmailServiceDomainë+Manages an Email Communication Service Domain.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const example = new azure.core.ResourceGroup("example", {
    name: "example-resources",
    location: "West Europe",
});
const exampleEmailService = new azure.communication.EmailService("example", {
    name: "example-emailcommunicationservice",
    resourceGroupName: example.name,
    dataLocation: "United States",
});
const exampleEmailServiceDomain = new azure.communication.EmailServiceDomain("example", {
    name: "AzureManagedDomain",
    emailServiceId: exampleEmailService.id,
    domainManagement: "AzureManaged",
});
```
```python
import pulumi
import pulumi_azure as azure

example = azure.core.ResourceGroup("example",
    name="example-resources",
    location="West Europe")
example_email_service = azure.communication.EmailService("example",
    name="example-emailcommunicationservice",
    resource_group_name=example.name,
    data_location="United States")
example_email_service_domain = azure.communication.EmailServiceDomain("example",
    name="AzureManagedDomain",
    email_service_id=example_email_service.id,
    domain_management="AzureManaged")
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var example = new Azure.Core.ResourceGroup("example", new()
    {
        Name = "example-resources",
        Location = "West Europe",
    });

    var exampleEmailService = new Azure.Communication.EmailService("example", new()
    {
        Name = "example-emailcommunicationservice",
        ResourceGroupName = example.Name,
        DataLocation = "United States",
    });

    var exampleEmailServiceDomain = new Azure.Communication.EmailServiceDomain("example", new()
    {
        Name = "AzureManagedDomain",
        EmailServiceId = exampleEmailService.Id,
        DomainManagement = "AzureManaged",
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/communication"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
			Name:     pulumi.String("example-resources"),
			Location: pulumi.String("West Europe"),
		})
		if err != nil {
			return err
		}
		exampleEmailService, err := communication.NewEmailService(ctx, "example", &communication.EmailServiceArgs{
			Name:              pulumi.String("example-emailcommunicationservice"),
			ResourceGroupName: example.Name,
			DataLocation:      pulumi.String("United States"),
		})
		if err != nil {
			return err
		}
		_, err = communication.NewEmailServiceDomain(ctx, "example", &communication.EmailServiceDomainArgs{
			Name:             pulumi.String("AzureManagedDomain"),
			EmailServiceId:   exampleEmailService.ID(),
			DomainManagement: pulumi.String("AzureManaged"),
		})
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.core.ResourceGroup;
import com.pulumi.azure.core.ResourceGroupArgs;
import com.pulumi.azure.communication.EmailService;
import com.pulumi.azure.communication.EmailServiceArgs;
import com.pulumi.azure.communication.EmailServiceDomain;
import com.pulumi.azure.communication.EmailServiceDomainArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        var example = new ResourceGroup("example", ResourceGroupArgs.builder()
            .name("example-resources")
            .location("West Europe")
            .build());

        var exampleEmailService = new EmailService("exampleEmailService", EmailServiceArgs.builder()
            .name("example-emailcommunicationservice")
            .resourceGroupName(example.name())
            .dataLocation("United States")
            .build());

        var exampleEmailServiceDomain = new EmailServiceDomain("exampleEmailServiceDomain", EmailServiceDomainArgs.builder()
            .name("AzureManagedDomain")
            .emailServiceId(exampleEmailService.id())
            .domainManagement("AzureManaged")
            .build());

    }
}
```
```yaml
resources:
  example:
    type: azure:core:ResourceGroup
    properties:
      name: example-resources
      location: West Europe
  exampleEmailService:
    type: azure:communication:EmailService
    name: example
    properties:
      name: example-emailcommunicationservice
      resourceGroupName: ${example.name}
      dataLocation: United States
  exampleEmailServiceDomain:
    type: azure:communication:EmailServiceDomain
    name: example
    properties:
      name: AzureManagedDomain
      emailServiceId: ${exampleEmailService.id}
      domainManagement: AzureManaged
```
<!--End PulumiCodeChooser -->

## Import

Communication Services can be imported using the `resource id`, e.g.

```sh
$ pulumi import azure:communication/emailServiceDomain:EmailServiceDomain example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Communication/emailServices/emailCommunicationService1/domains/domain1
```

ì
domainManagement" ÓDescribes how a Domains resource is being managed. Possible values are `AzureManaged`, `CustomerManaged`, `CustomerManagedInExchangeOnline`. Changing this forces a new Email Communication Service to be created.
­
emailServiceId" The resource ID of the Email Communication Service where the Domain belongs to. Changing this forces a new Email Communication Service to be created.
Ü
nameB" ÍThe name of the Email Communication Service resource. If `domain_management` is `AzureManaged`, the name must be `AzureManagedDomain`. Changing this forces a new Email Communication Service to be created.
_
tagsB2" OA mapping of tags which should be assigned to the Email Communication Service.
w
userEngagementTrackingEnabledB
 PDescribes user engagement tracking is enabled or disabled. Defaults to `false`.
"ì
domainManagement" ÓDescribes how a Domains resource is being managed. Possible values are `AzureManaged`, `CustomerManaged`, `CustomerManagedInExchangeOnline`. Changing this forces a new Email Communication Service to be created.
"­
emailServiceId" The resource ID of the Email Communication Service where the Domain belongs to. Changing this forces a new Email Communication Service to be created.
"_
fromSenderDomain" GP2 sender domain that is displayed to the email recipients [RFC 5322].
"_
mailFromSenderDomain" CP1 sender domain that is present on the email envelope [RFC 5321].
"Ú
name" ÍThe name of the Email Communication Service resource. If `domain_management` is `AzureManaged`, the name must be `AzureManagedDomain`. Changing this forces a new Email Communication Service to be created.
"_
tagsB2" OA mapping of tags which should be assigned to the Email Communication Service.
"w
userEngagementTrackingEnabledB
 PDescribes user engagement tracking is enabled or disabled. Defaults to `false`.
"ô
verificationRecords*:

communication$EmailServiceDomainVerificationRecord]azure:communication/EmailServiceDomainVerificationRecord:EmailServiceDomainVerificationRecord=(Optional) An `verification_records` block as defined below.
*¬-
=
communicationService#azure:communication/service:ServiceManages a Communication Service.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const example = new azure.core.ResourceGroup("example", {
    name: "example-resources",
    location: "West Europe",
});
const exampleService = new azure.communication.Service("example", {
    name: "example-communicationservice",
    resourceGroupName: example.name,
    dataLocation: "United States",
});
```
```python
import pulumi
import pulumi_azure as azure

example = azure.core.ResourceGroup("example",
    name="example-resources",
    location="West Europe")
example_service = azure.communication.Service("example",
    name="example-communicationservice",
    resource_group_name=example.name,
    data_location="United States")
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var example = new Azure.Core.ResourceGroup("example", new()
    {
        Name = "example-resources",
        Location = "West Europe",
    });

    var exampleService = new Azure.Communication.Service("example", new()
    {
        Name = "example-communicationservice",
        ResourceGroupName = example.Name,
        DataLocation = "United States",
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/communication"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
			Name:     pulumi.String("example-resources"),
			Location: pulumi.String("West Europe"),
		})
		if err != nil {
			return err
		}
		_, err = communication.NewService(ctx, "example", &communication.ServiceArgs{
			Name:              pulumi.String("example-communicationservice"),
			ResourceGroupName: example.Name,
			DataLocation:      pulumi.String("United States"),
		})
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.core.ResourceGroup;
import com.pulumi.azure.core.ResourceGroupArgs;
import com.pulumi.azure.communication.Service;
import com.pulumi.azure.communication.ServiceArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        var example = new ResourceGroup("example", ResourceGroupArgs.builder()
            .name("example-resources")
            .location("West Europe")
            .build());

        var exampleService = new Service("exampleService", ServiceArgs.builder()
            .name("example-communicationservice")
            .resourceGroupName(example.name())
            .dataLocation("United States")
            .build());

    }
}
```
```yaml
resources:
  example:
    type: azure:core:ResourceGroup
    properties:
      name: example-resources
      location: West Europe
  exampleService:
    type: azure:communication:Service
    name: example
    properties:
      name: example-communicationservice
      resourceGroupName: ${example.name}
      dataLocation: United States
```
<!--End PulumiCodeChooser -->

## Import

Communication Services can be imported using the `resource id`, e.g.

```sh
$ pulumi import azure:communication/service:Service example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Communication/communicationServices/communicationService1
```


dataLocationB" ïThe location where the Communication service stores its data at rest. Possible values are `Africa`, `Asia Pacific`, `Australia`, `Brazil`, `Canada`, `Europe`, `France`, `Germany`, `India`, `Japan`, `Korea`, `Norway`, `Switzerland`, `UAE`, `UK`, `usgov` and `United States`. Defaults to `United States`. Changing this forces a new Communication Service to be created.
~
nameB" pThe name of the Communication Service resource. Changing this forces a new Communication Service to be created.
§
resourceGroupName" The name of the Resource Group where the Communication Service should exist. Changing this forces a new Communication Service to be created.
Y
tagsB2" IA mapping of tags which should be assigned to the Communication Service.
"
dataLocationB" ïThe location where the Communication service stores its data at rest. Possible values are `Africa`, `Asia Pacific`, `Australia`, `Brazil`, `Canada`, `Europe`, `France`, `Germany`, `India`, `Japan`, `Korea`, `Norway`, `Switzerland`, `UAE`, `UK`, `usgov` and `United States`. Defaults to `United States`. Changing this forces a new Communication Service to be created.
"|
name" pThe name of the Communication Service resource. Changing this forces a new Communication Service to be created.
"[
primaryConnectionString" <The primary connection string of the Communication Service.
"@

primaryKey" .The primary key of the Communication Service.
"§
resourceGroupName" The name of the Resource Group where the Communication Service should exist. Changing this forces a new Communication Service to be created.
"_
secondaryConnectionString" >The secondary connection string of the Communication Service.
"D
secondaryKey" 0The secondary key of the Communication Service.
"Y
tagsB2" IA mapping of tags which should be assigned to the Communication Service.
*»J

communicationServiceEmailDomainAssociationOazure:communication/serviceEmailDomainAssociation:ServiceEmailDomainAssociationÁDManages a communication service email domain association.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const example = new azure.core.ResourceGroup("example", {
    name: "group1",
    location: "West Europe",
});
const exampleService = new azure.communication.Service("example", {
    name: "CommunicationService1",
    resourceGroupName: example.name,
    dataLocation: "United States",
});
const exampleEmailService = new azure.communication.EmailService("example", {
    name: "emailCommunicationService1",
    resourceGroupName: example.name,
    dataLocation: "United States",
});
const exampleEmailServiceDomain = new azure.communication.EmailServiceDomain("example", {
    name: "AzureManagedDomain",
    emailServiceId: exampleEmailService.id,
    domainManagement: "AzureManaged",
});
const exampleServiceEmailDomainAssociation = new azure.communication.ServiceEmailDomainAssociation("example", {
    communicationServiceId: exampleService.id,
    emailServiceDomainId: exampleEmailServiceDomain.id,
});
```
```python
import pulumi
import pulumi_azure as azure

example = azure.core.ResourceGroup("example",
    name="group1",
    location="West Europe")
example_service = azure.communication.Service("example",
    name="CommunicationService1",
    resource_group_name=example.name,
    data_location="United States")
example_email_service = azure.communication.EmailService("example",
    name="emailCommunicationService1",
    resource_group_name=example.name,
    data_location="United States")
example_email_service_domain = azure.communication.EmailServiceDomain("example",
    name="AzureManagedDomain",
    email_service_id=example_email_service.id,
    domain_management="AzureManaged")
example_service_email_domain_association = azure.communication.ServiceEmailDomainAssociation("example",
    communication_service_id=example_service.id,
    email_service_domain_id=example_email_service_domain.id)
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var example = new Azure.Core.ResourceGroup("example", new()
    {
        Name = "group1",
        Location = "West Europe",
    });

    var exampleService = new Azure.Communication.Service("example", new()
    {
        Name = "CommunicationService1",
        ResourceGroupName = example.Name,
        DataLocation = "United States",
    });

    var exampleEmailService = new Azure.Communication.EmailService("example", new()
    {
        Name = "emailCommunicationService1",
        ResourceGroupName = example.Name,
        DataLocation = "United States",
    });

    var exampleEmailServiceDomain = new Azure.Communication.EmailServiceDomain("example", new()
    {
        Name = "AzureManagedDomain",
        EmailServiceId = exampleEmailService.Id,
        DomainManagement = "AzureManaged",
    });

    var exampleServiceEmailDomainAssociation = new Azure.Communication.ServiceEmailDomainAssociation("example", new()
    {
        CommunicationServiceId = exampleService.Id,
        EmailServiceDomainId = exampleEmailServiceDomain.Id,
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/communication"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
			Name:     pulumi.String("group1"),
			Location: pulumi.String("West Europe"),
		})
		if err != nil {
			return err
		}
		exampleService, err := communication.NewService(ctx, "example", &communication.ServiceArgs{
			Name:              pulumi.String("CommunicationService1"),
			ResourceGroupName: example.Name,
			DataLocation:      pulumi.String("United States"),
		})
		if err != nil {
			return err
		}
		exampleEmailService, err := communication.NewEmailService(ctx, "example", &communication.EmailServiceArgs{
			Name:              pulumi.String("emailCommunicationService1"),
			ResourceGroupName: example.Name,
			DataLocation:      pulumi.String("United States"),
		})
		if err != nil {
			return err
		}
		exampleEmailServiceDomain, err := communication.NewEmailServiceDomain(ctx, "example", &communication.EmailServiceDomainArgs{
			Name:             pulumi.String("AzureManagedDomain"),
			EmailServiceId:   exampleEmailService.ID(),
			DomainManagement: pulumi.String("AzureManaged"),
		})
		if err != nil {
			return err
		}
		_, err = communication.NewServiceEmailDomainAssociation(ctx, "example", &communication.ServiceEmailDomainAssociationArgs{
			CommunicationServiceId: exampleService.ID(),
			EmailServiceDomainId:   exampleEmailServiceDomain.ID(),
		})
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.core.ResourceGroup;
import com.pulumi.azure.core.ResourceGroupArgs;
import com.pulumi.azure.communication.Service;
import com.pulumi.azure.communication.ServiceArgs;
import com.pulumi.azure.communication.EmailService;
import com.pulumi.azure.communication.EmailServiceArgs;
import com.pulumi.azure.communication.EmailServiceDomain;
import com.pulumi.azure.communication.EmailServiceDomainArgs;
import com.pulumi.azure.communication.ServiceEmailDomainAssociation;
import com.pulumi.azure.communication.ServiceEmailDomainAssociationArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        var example = new ResourceGroup("example", ResourceGroupArgs.builder()
            .name("group1")
            .location("West Europe")
            .build());

        var exampleService = new Service("exampleService", ServiceArgs.builder()
            .name("CommunicationService1")
            .resourceGroupName(example.name())
            .dataLocation("United States")
            .build());

        var exampleEmailService = new EmailService("exampleEmailService", EmailServiceArgs.builder()
            .name("emailCommunicationService1")
            .resourceGroupName(example.name())
            .dataLocation("United States")
            .build());

        var exampleEmailServiceDomain = new EmailServiceDomain("exampleEmailServiceDomain", EmailServiceDomainArgs.builder()
            .name("AzureManagedDomain")
            .emailServiceId(exampleEmailService.id())
            .domainManagement("AzureManaged")
            .build());

        var exampleServiceEmailDomainAssociation = new ServiceEmailDomainAssociation("exampleServiceEmailDomainAssociation", ServiceEmailDomainAssociationArgs.builder()
            .communicationServiceId(exampleService.id())
            .emailServiceDomainId(exampleEmailServiceDomain.id())
            .build());

    }
}
```
```yaml
resources:
  example:
    type: azure:core:ResourceGroup
    properties:
      name: group1
      location: West Europe
  exampleService:
    type: azure:communication:Service
    name: example
    properties:
      name: CommunicationService1
      resourceGroupName: ${example.name}
      dataLocation: United States
  exampleEmailService:
    type: azure:communication:EmailService
    name: example
    properties:
      name: emailCommunicationService1
      resourceGroupName: ${example.name}
      dataLocation: United States
  exampleEmailServiceDomain:
    type: azure:communication:EmailServiceDomain
    name: example
    properties:
      name: AzureManagedDomain
      emailServiceId: ${exampleEmailService.id}
      domainManagement: AzureManaged
  exampleServiceEmailDomainAssociation:
    type: azure:communication:ServiceEmailDomainAssociation
    name: example
    properties:
      communicationServiceId: ${exampleService.id}
      emailServiceDomainId: ${exampleEmailServiceDomain.id}
```
<!--End PulumiCodeChooser -->

## Import

Communication service email domain association can be imported using the `resource id`, e.g.

```sh
$ pulumi import azure:communication/serviceEmailDomainAssociation:ServiceEmailDomainAssociation example "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Communication/communicationServices/communicationService1|/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Communication/emailServices/emailCommunicationService1/domains/domain1"
```


communicationServiceId" ~The ID of the Communication Service. Changing this forces a new communication service email domain association to be created.

emailServiceDomainId" }The ID of the EMail Service Domain. Changing this forces a new communication service email domain association to be created.
"
communicationServiceId" ~The ID of the Communication Service. Changing this forces a new communication service email domain association to be created.
"
emailServiceDomainId" }The ID of the EMail Service Domain. Changing this forces a new communication service email domain association to be created.
*è

compute!AutomanageConfigurationAssignmentQazure:compute/automanageConfigurationAssignment:AutomanageConfigurationAssignmentÑManages a Virtual Machine Automanage Configuration Profile Assignment.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const example = new azure.core.ResourceGroup("example", {
    name: "example-rg",
    location: "westus",
});
const exampleVirtualNetwork = new azure.network.VirtualNetwork("example", {
    name: "examplevnet",
    addressSpaces: ["10.0.0.0/16"],
    location: example.location,
    resourceGroupName: example.name,
});
const exampleSubnet = new azure.network.Subnet("example", {
    name: "internal",
    resourceGroupName: example.name,
    virtualNetworkName: exampleVirtualNetwork.name,
    addressPrefixes: ["10.0.2.0/24"],
});
const exampleNetworkInterface = new azure.network.NetworkInterface("example", {
    name: "exampleni",
    location: example.location,
    resourceGroupName: example.name,
    ipConfigurations: [{
        name: "internal",
        subnetId: exampleSubnet.id,
        privateIpAddressAllocation: "Dynamic",
    }],
});
const exampleLinuxVirtualMachine = new azure.compute.LinuxVirtualMachine("example", {
    name: "examplevm",
    resourceGroupName: example.name,
    location: example.location,
    size: "Standard_F2",
    adminUsername: "adminuser",
    adminPassword: "P@$$w0rd1234!",
    disablePasswordAuthentication: false,
    networkInterfaceIds: [exampleNetworkInterface.id],
    osDisk: {
        caching: "ReadWrite",
        storageAccountType: "Standard_LRS",
    },
    sourceImageReference: {
        publisher: "Canonical",
        offer: "0001-com-ubuntu-server-jammy",
        sku: "22_04-lts",
        version: "latest",
    },
});
const exampleConfiguration = new azure.automanage.Configuration("example", {
    name: "exampleconfig",
    resourceGroupName: example.name,
    location: example.location,
});
const exampleAutomanageConfigurationAssignment = new azure.compute.AutomanageConfigurationAssignment("example", {
    virtualMachineId: exampleLinuxVirtualMachine.id,
    configurationId: exampleConfiguration.id,
});
```
```python
import pulumi
import pulumi_azure as azure

example = azure.core.ResourceGroup("example",
    name="example-rg",
    location="westus")
example_virtual_network = azure.network.VirtualNetwork("example",
    name="examplevnet",
    address_spaces=["10.0.0.0/16"],
    location=example.location,
    resource_group_name=example.name)
example_subnet = azure.network.Subnet("example",
    name="internal",
    resource_group_name=example.name,
    virtual_network_name=example_virtual_network.name,
    address_prefixes=["10.0.2.0/24"])
example_network_interface = azure.network.NetworkInterface("example",
    name="exampleni",
    location=example.location,
    resource_group_name=example.name,
    ip_configurations=[{
        "name": "internal",
        "subnet_id": example_subnet.id,
        "private_ip_address_allocation": "Dynamic",
    }])
example_linux_virtual_machine = azure.compute.LinuxVirtualMachine("example",
    name="examplevm",
    resource_group_name=example.name,
    location=example.location,
    size="Standard_F2",
    admin_username="adminuser",
    admin_password="P@$$w0rd1234!",
    disable_password_authentication=False,
    network_interface_ids=[example_network_interface.id],
    os_disk={
        "caching": "ReadWrite",
        "storage_account_type": "Standard_LRS",
    },
    source_image_reference={
        "publisher": "Canonical",
        "offer": "0001-com-ubuntu-server-jammy",
        "sku": "22_04-lts",
        "version": "latest",
    })
example_configuration = azure.automanage.Configuration("example",
    name="exampleconfig",
    resource_group_name=example.name,
    location=example.location)
example_automanage_configuration_assignment = azure.compute.AutomanageConfigurationAssignment("example",
    virtual_machine_id=example_linux_virtual_machine.id,
    configuration_id=example_configuration.id)
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var example = new Azure.Core.ResourceGroup("example", new()
    {
        Name = "example-rg",
        Location = "westus",
    });

    var exampleVirtualNetwork = new Azure.Network.VirtualNetwork("example", new()
    {
        Name = "examplevnet",
        AddressSpaces = new[]
        {
            "10.0.0.0/16",
        },
        Location = example.Location,
        ResourceGroupName = example.Name,
    });

    var exampleSubnet = new Azure.Network.Subnet("example", new()
    {
        Name = "internal",
        ResourceGroupName = example.Name,
        VirtualNetworkName = exampleVirtualNetwork.Name,
        AddressPrefixes = new[]
        {
            "10.0.2.0/24",
        },
    });

    var exampleNetworkInterface = new Azure.Network.NetworkInterface("example", new()
    {
        Name = "exampleni",
        Location = example.Location,
        ResourceGroupName = example.Name,
        IpConfigurations = new[]
        {
            new Azure.Network.Inputs.NetworkInterfaceIpConfigurationArgs
            {
                Name = "internal",
                SubnetId = exampleSubnet.Id,
                PrivateIpAddressAllocation = "Dynamic",
            },
        },
    });

    var exampleLinuxVirtualMachine = new Azure.Compute.LinuxVirtualMachine("example", new()
    {
        Name = "examplevm",
        ResourceGroupName = example.Name,
        Location = example.Location,
        Size = "Standard_F2",
        AdminUsername = "adminuser",
        AdminPassword = "P@$$w0rd1234!",
        DisablePasswordAuthentication = false,
        NetworkInterfaceIds = new[]
        {
            exampleNetworkInterface.Id,
        },
        OsDisk = new Azure.Compute.Inputs.LinuxVirtualMachineOsDiskArgs
        {
            Caching = "ReadWrite",
            StorageAccountType = "Standard_LRS",
        },
        SourceImageReference = new Azure.Compute.Inputs.LinuxVirtualMachineSourceImageReferenceArgs
        {
            Publisher = "Canonical",
            Offer = "0001-com-ubuntu-server-jammy",
            Sku = "22_04-lts",
            Version = "latest",
        },
    });

    var exampleConfiguration = new Azure.Automanage.Configuration("example", new()
    {
        Name = "exampleconfig",
        ResourceGroupName = example.Name,
        Location = example.Location,
    });

    var exampleAutomanageConfigurationAssignment = new Azure.Compute.AutomanageConfigurationAssignment("example", new()
    {
        VirtualMachineId = exampleLinuxVirtualMachine.Id,
        ConfigurationId = exampleConfiguration.Id,
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/automanage"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/compute"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/network"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
			Name:     pulumi.String("example-rg"),
			Location: pulumi.String("westus"),
		})
		if err != nil {
			return err
		}
		exampleVirtualNetwork, err := network.NewVirtualNetwork(ctx, "example", &network.VirtualNetworkArgs{
			Name: pulumi.String("examplevnet"),
			AddressSpaces: pulumi.StringArray{
				pulumi.String("10.0.0.0/16"),
			},
			Location:          example.Location,
			ResourceGroupName: example.Name,
		})
		if err != nil {
			return err
		}
		exampleSubnet, err := network.NewSubnet(ctx, "example", &network.SubnetArgs{
			Name:               pulumi.String("internal"),
			ResourceGroupName:  example.Name,
			VirtualNetworkName: exampleVirtualNetwork.Name,
			AddressPrefixes: pulumi.StringArray{
				pulumi.String("10.0.2.0/24"),
			},
		})
		if err != nil {
			return err
		}
		exampleNetworkInterface, err := network.NewNetworkInterface(ctx, "example", &network.NetworkInterfaceArgs{
			Name:              pulumi.String("exampleni"),
			Location:          example.Location,
			ResourceGroupName: example.Name,
			IpConfigurations: network.NetworkInterfaceIpConfigurationArray{
				&network.NetworkInterfaceIpConfigurationArgs{
					Name:                       pulumi.String("internal"),
					SubnetId:                   exampleSubnet.ID(),
					PrivateIpAddressAllocation: pulumi.String("Dynamic"),
				},
			},
		})
		if err != nil {
			return err
		}
		exampleLinuxVirtualMachine, err := compute.NewLinuxVirtualMachine(ctx, "example", &compute.LinuxVirtualMachineArgs{
			Name:                          pulumi.String("examplevm"),
			ResourceGroupName:             example.Name,
			Location:                      example.Location,
			Size:                          pulumi.String("Standard_F2"),
			AdminUsername:                 pulumi.String("adminuser"),
			AdminPassword:                 pulumi.String("P@$$w0rd1234!"),
			DisablePasswordAuthentication: pulumi.Bool(false),
			NetworkInterfaceIds: pulumi.StringArray{
				exampleNetworkInterface.ID(),
			},
			OsDisk: &compute.LinuxVirtualMachineOsDiskArgs{
				Caching:            pulumi.String("ReadWrite"),
				StorageAccountType: pulumi.String("Standard_LRS"),
			},
			SourceImageReference: &compute.LinuxVirtualMachineSourceImageReferenceArgs{
				Publisher: pulumi.String("Canonical"),
				Offer:     pulumi.String("0001-com-ubuntu-server-jammy"),
				Sku:       pulumi.String("22_04-lts"),
				Version:   pulumi.String("latest"),
			},
		})
		if err != nil {
			return err
		}
		exampleConfiguration, err := automanage.NewConfiguration(ctx, "example", &automanage.ConfigurationArgs{
			Name:              pulumi.String("exampleconfig"),
			ResourceGroupName: example.Name,
			Location:          example.Location,
		})
		if err != nil {
			return err
		}
		_, err = compute.NewAutomanageConfigurationAssignment(ctx, "example", &compute.AutomanageConfigurationAssignmentArgs{
			VirtualMachineId: exampleLinuxVirtualMachine.ID(),
			ConfigurationId:  exampleConfiguration.ID(),
		})
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.core.ResourceGroup;
import com.pulumi.azure.core.ResourceGroupArgs;
import com.pulumi.azure.network.VirtualNetwork;
import com.pulumi.azure.network.VirtualNetworkArgs;
import com.pulumi.azure.network.Subnet;
import com.pulumi.azure.network.SubnetArgs;
import com.pulumi.azure.network.NetworkInterface;
import com.pulumi.azure.network.NetworkInterfaceArgs;
import com.pulumi.azure.network.inputs.NetworkInterfaceIpConfigurationArgs;
import com.pulumi.azure.compute.LinuxVirtualMachine;
import com.pulumi.azure.compute.LinuxVirtualMachineArgs;
import com.pulumi.azure.compute.inputs.LinuxVirtualMachineOsDiskArgs;
import com.pulumi.azure.compute.inputs.LinuxVirtualMachineSourceImageReferenceArgs;
import com.pulumi.azure.automanage.Configuration;
import com.pulumi.azure.automanage.ConfigurationArgs;
import com.pulumi.azure.compute.AutomanageConfigurationAssignment;
import com.pulumi.azure.compute.AutomanageConfigurationAssignmentArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        var example = new ResourceGroup("example", ResourceGroupArgs.builder()
            .name("example-rg")
            .location("westus")
            .build());

        var exampleVirtualNetwork = new VirtualNetwork("exampleVirtualNetwork", VirtualNetworkArgs.builder()
            .name("examplevnet")
            .addressSpaces("10.0.0.0/16")
            .location(example.location())
            .resourceGroupName(example.name())
            .build());

        var exampleSubnet = new Subnet("exampleSubnet", SubnetArgs.builder()
            .name("internal")
            .resourceGroupName(example.name())
            .virtualNetworkName(exampleVirtualNetwork.name())
            .addressPrefixes("10.0.2.0/24")
            .build());

        var exampleNetworkInterface = new NetworkInterface("exampleNetworkInterface", NetworkInterfaceArgs.builder()
            .name("exampleni")
            .location(example.location())
            .resourceGroupName(example.name())
            .ipConfigurations(NetworkInterfaceIpConfigurationArgs.builder()
                .name("internal")
                .subnetId(exampleSubnet.id())
                .privateIpAddressAllocation("Dynamic")
                .build())
            .build());

        var exampleLinuxVirtualMachine = new LinuxVirtualMachine("exampleLinuxVirtualMachine", LinuxVirtualMachineArgs.builder()
            .name("examplevm")
            .resourceGroupName(example.name())
            .location(example.location())
            .size("Standard_F2")
            .adminUsername("adminuser")
            .adminPassword("P@$$w0rd1234!")
            .disablePasswordAuthentication(false)
            .networkInterfaceIds(exampleNetworkInterface.id())
            .osDisk(LinuxVirtualMachineOsDiskArgs.builder()
                .caching("ReadWrite")
                .storageAccountType("Standard_LRS")
                .build())
            .sourceImageReference(LinuxVirtualMachineSourceImageReferenceArgs.builder()
                .publisher("Canonical")
                .offer("0001-com-ubuntu-server-jammy")
                .sku("22_04-lts")
                .version("latest")
                .build())
            .build());

        var exampleConfiguration = new Configuration("exampleConfiguration", ConfigurationArgs.builder()
            .name("exampleconfig")
            .resourceGroupName(example.name())
            .location(example.location())
            .build());

        var exampleAutomanageConfigurationAssignment = new AutomanageConfigurationAssignment("exampleAutomanageConfigurationAssignment", AutomanageConfigurationAssignmentArgs.builder()
            .virtualMachineId(exampleLinuxVirtualMachine.id())
            .configurationId(exampleConfiguration.id())
            .build());

    }
}
```
```yaml
resources:
  example:
    type: azure:core:ResourceGroup
    properties:
      name: example-rg
      location: westus
  exampleVirtualNetwork:
    type: azure:network:VirtualNetwork
    name: example
    properties:
      name: examplevnet
      addressSpaces:
        - 10.0.0.0/16
      location: ${example.location}
      resourceGroupName: ${example.name}
  exampleSubnet:
    type: azure:network:Subnet
    name: example
    properties:
      name: internal
      resourceGroupName: ${example.name}
      virtualNetworkName: ${exampleVirtualNetwork.name}
      addressPrefixes:
        - 10.0.2.0/24
  exampleNetworkInterface:
    type: azure:network:NetworkInterface
    name: example
    properties:
      name: exampleni
      location: ${example.location}
      resourceGroupName: ${example.name}
      ipConfigurations:
        - name: internal
          subnetId: ${exampleSubnet.id}
          privateIpAddressAllocation: Dynamic
  exampleLinuxVirtualMachine:
    type: azure:compute:LinuxVirtualMachine
    name: example
    properties:
      name: examplevm
      resourceGroupName: ${example.name}
      location: ${example.location}
      size: Standard_F2
      adminUsername: adminuser
      adminPassword: P@$$w0rd1234!
      disablePasswordAuthentication: false
      networkInterfaceIds:
        - ${exampleNetworkInterface.id}
      osDisk:
        caching: ReadWrite
        storageAccountType: Standard_LRS
      sourceImageReference:
        publisher: Canonical
        offer: 0001-com-ubuntu-server-jammy
        sku: 22_04-lts
        version: latest
  exampleConfiguration:
    type: azure:automanage:Configuration
    name: example
    properties:
      name: exampleconfig
      resourceGroupName: ${example.name}
      location: ${example.location}
  exampleAutomanageConfigurationAssignment:
    type: azure:compute:AutomanageConfigurationAssignment
    name: example
    properties:
      virtualMachineId: ${exampleLinuxVirtualMachine.id}
      configurationId: ${exampleConfiguration.id}
```
<!--End PulumiCodeChooser -->

## Import

Virtual Machine Automanage Configuration Profile Assignment can be imported using the `resource id`, e.g.

```sh
$ pulumi import azure:compute/automanageConfigurationAssignment:AutomanageConfigurationAssignment example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Compute/virtualMachines/vm1/providers/Microsoft.AutoManage/configurationProfileAssignments/default
```

¡
configurationId" The ARM resource ID of the Automanage Configuration to assign to the Virtual Machine. Changing this forces a new resource to be created.
¢
virtualMachineId" The ARM resource ID of the Virtual Machine to assign the Automanage Configuration to. Changing this forces a new resource to be created.
"¡
configurationId" The ARM resource ID of the Automanage Configuration to assign to the Virtual Machine. Changing this forces a new resource to be created.
"¢
virtualMachineId" The ARM resource ID of the Virtual Machine to assign the Automanage Configuration to. Changing this forces a new resource to be created.
*<
I
computeAvailabilitySet-azure:compute/availabilitySet:AvailabilitySetÓ Manages an Availability Set for Virtual Machines.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const example = new azure.core.ResourceGroup("example", {
    name: "example-resources",
    location: "West Europe",
});
const exampleAvailabilitySet = new azure.compute.AvailabilitySet("example", {
    name: "example-aset",
    location: example.location,
    resourceGroupName: example.name,
    tags: {
        environment: "Production",
    },
});
```
```python
import pulumi
import pulumi_azure as azure

example = azure.core.ResourceGroup("example",
    name="example-resources",
    location="West Europe")
example_availability_set = azure.compute.AvailabilitySet("example",
    name="example-aset",
    location=example.location,
    resource_group_name=example.name,
    tags={
        "environment": "Production",
    })
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var example = new Azure.Core.ResourceGroup("example", new()
    {
        Name = "example-resources",
        Location = "West Europe",
    });

    var exampleAvailabilitySet = new Azure.Compute.AvailabilitySet("example", new()
    {
        Name = "example-aset",
        Location = example.Location,
        ResourceGroupName = example.Name,
        Tags = 
        {
            { "environment", "Production" },
        },
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/compute"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
			Name:     pulumi.String("example-resources"),
			Location: pulumi.String("West Europe"),
		})
		if err != nil {
			return err
		}
		_, err = compute.NewAvailabilitySet(ctx, "example", &compute.AvailabilitySetArgs{
			Name:              pulumi.String("example-aset"),
			Location:          example.Location,
			ResourceGroupName: example.Name,
			Tags: pulumi.StringMap{
				"environment": pulumi.String("Production"),
			},
		})
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.core.ResourceGroup;
import com.pulumi.azure.core.ResourceGroupArgs;
import com.pulumi.azure.compute.AvailabilitySet;
import com.pulumi.azure.compute.AvailabilitySetArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        var example = new ResourceGroup("example", ResourceGroupArgs.builder()
            .name("example-resources")
            .location("West Europe")
            .build());

        var exampleAvailabilitySet = new AvailabilitySet("exampleAvailabilitySet", AvailabilitySetArgs.builder()
            .name("example-aset")
            .location(example.location())
            .resourceGroupName(example.name())
            .tags(Map.of("environment", "Production"))
            .build());

    }
}
```
```yaml
resources:
  example:
    type: azure:core:ResourceGroup
    properties:
      name: example-resources
      location: West Europe
  exampleAvailabilitySet:
    type: azure:compute:AvailabilitySet
    name: example
    properties:
      name: example-aset
      location: ${example.location}
      resourceGroupName: ${example.name}
      tags:
        environment: Production
```
<!--End PulumiCodeChooser -->

## Import

Availability Sets can be imported using the `resource id`, e.g.

```sh
$ pulumi import azure:compute/availabilitySet:AvailabilitySet group1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Compute/availabilitySets/webAvailSet
```


locationB" uSpecifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
ã
managedB
 ÑSpecifies whether the availability set is managed or not. Possible values are `true` (to specify aligned) or `false` (to specify classic). Default is `true`. Changing this forces a new resource to be created.
m
nameB" _Specifies the name of the availability set. Changing this forces a new resource to be created.
¥
platformFaultDomainCountB Specifies the number of fault domains that are used. Defaults to `3`. Changing this forces a new resource to be created.

> **NOTE:** The number of Fault Domains varies depending on which Azure Region you're using. More information about update and fault domains and how they work can be found [here](https://learn.microsoft.com/en-us/azure/virtual-machines/availability-set-overview).
¨
platformUpdateDomainCountB Specifies the number of update domains that are used. Defaults to `5`. Changing this forces a new resource to be created.

> **NOTE:** The number of Update Domains varies depending on which Azure Region you're using. More information about update and fault domains and how they work can be found [here](https://learn.microsoft.com/en-us/azure/virtual-machines/availability-set-overview).
±
proximityPlacementGroupIdB" The ID of the Proximity Placement Group to which this Virtual Machine should be assigned. Changing this forces a new resource to be created.

resourceGroupName" {The name of the resource group in which to create the availability set. Changing this forces a new resource to be created.
=
tagsB2" -A mapping of tags to assign to the resource.
"
location" uSpecifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
"ã
managedB
 ÑSpecifies whether the availability set is managed or not. Possible values are `true` (to specify aligned) or `false` (to specify classic). Default is `true`. Changing this forces a new resource to be created.
"k
name" _Specifies the name of the availability set. Changing this forces a new resource to be created.
"¥
platformFaultDomainCountB Specifies the number of fault domains that are used. Defaults to `3`. Changing this forces a new resource to be created.

> **NOTE:** The number of Fault Domains varies depending on which Azure Region you're using. More information about update and fault domains and how they work can be found [here](https://learn.microsoft.com/en-us/azure/virtual-machines/availability-set-overview).
"¨
platformUpdateDomainCountB Specifies the number of update domains that are used. Defaults to `5`. Changing this forces a new resource to be created.

> **NOTE:** The number of Update Domains varies depending on which Azure Region you're using. More information about update and fault domains and how they work can be found [here](https://learn.microsoft.com/en-us/azure/virtual-machines/availability-set-overview).
"±
proximityPlacementGroupIdB" The ID of the Proximity Placement Group to which this Virtual Machine should be assigned. Changing this forces a new resource to be created.
"
resourceGroupName" {The name of the resource group in which to create the availability set. Changing this forces a new resource to be created.
"=
tagsB2" -A mapping of tags to assign to the resource.
*ý|
=
computeBastionHost%azure:compute/bastionHost:BastionHostýNManages a Bastion Host.

## Example Usage

This example deploys an Azure Bastion Host Instance to a target virtual network.

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const example = new azure.core.ResourceGroup("example", {
    name: "example-resources",
    location: "West Europe",
});
const exampleVirtualNetwork = new azure.network.VirtualNetwork("example", {
    name: "examplevnet",
    addressSpaces: ["192.168.1.0/24"],
    location: example.location,
    resourceGroupName: example.name,
});
const exampleSubnet = new azure.network.Subnet("example", {
    name: "AzureBastionSubnet",
    resourceGroupName: example.name,
    virtualNetworkName: exampleVirtualNetwork.name,
    addressPrefixes: ["192.168.1.224/27"],
});
const examplePublicIp = new azure.network.PublicIp("example", {
    name: "examplepip",
    location: example.location,
    resourceGroupName: example.name,
    allocationMethod: "Static",
    sku: "Standard",
});
const exampleBastionHost = new azure.compute.BastionHost("example", {
    name: "examplebastion",
    location: example.location,
    resourceGroupName: example.name,
    ipConfiguration: {
        name: "configuration",
        subnetId: exampleSubnet.id,
        publicIpAddressId: examplePublicIp.id,
    },
});
```
```python
import pulumi
import pulumi_azure as azure

example = azure.core.ResourceGroup("example",
    name="example-resources",
    location="West Europe")
example_virtual_network = azure.network.VirtualNetwork("example",
    name="examplevnet",
    address_spaces=["192.168.1.0/24"],
    location=example.location,
    resource_group_name=example.name)
example_subnet = azure.network.Subnet("example",
    name="AzureBastionSubnet",
    resource_group_name=example.name,
    virtual_network_name=example_virtual_network.name,
    address_prefixes=["192.168.1.224/27"])
example_public_ip = azure.network.PublicIp("example",
    name="examplepip",
    location=example.location,
    resource_group_name=example.name,
    allocation_method="Static",
    sku="Standard")
example_bastion_host = azure.compute.BastionHost("example",
    name="examplebastion",
    location=example.location,
    resource_group_name=example.name,
    ip_configuration={
        "name": "configuration",
        "subnet_id": example_subnet.id,
        "public_ip_address_id": example_public_ip.id,
    })
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var example = new Azure.Core.ResourceGroup("example", new()
    {
        Name = "example-resources",
        Location = "West Europe",
    });

    var exampleVirtualNetwork = new Azure.Network.VirtualNetwork("example", new()
    {
        Name = "examplevnet",
        AddressSpaces = new[]
        {
            "192.168.1.0/24",
        },
        Location = example.Location,
        ResourceGroupName = example.Name,
    });

    var exampleSubnet = new Azure.Network.Subnet("example", new()
    {
        Name = "AzureBastionSubnet",
        ResourceGroupName = example.Name,
        VirtualNetworkName = exampleVirtualNetwork.Name,
        AddressPrefixes = new[]
        {
            "192.168.1.224/27",
        },
    });

    var examplePublicIp = new Azure.Network.PublicIp("example", new()
    {
        Name = "examplepip",
        Location = example.Location,
        ResourceGroupName = example.Name,
        AllocationMethod = "Static",
        Sku = "Standard",
    });

    var exampleBastionHost = new Azure.Compute.BastionHost("example", new()
    {
        Name = "examplebastion",
        Location = example.Location,
        ResourceGroupName = example.Name,
        IpConfiguration = new Azure.Compute.Inputs.BastionHostIpConfigurationArgs
        {
            Name = "configuration",
            SubnetId = exampleSubnet.Id,
            PublicIpAddressId = examplePublicIp.Id,
        },
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/compute"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/network"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
			Name:     pulumi.String("example-resources"),
			Location: pulumi.String("West Europe"),
		})
		if err != nil {
			return err
		}
		exampleVirtualNetwork, err := network.NewVirtualNetwork(ctx, "example", &network.VirtualNetworkArgs{
			Name: pulumi.String("examplevnet"),
			AddressSpaces: pulumi.StringArray{
				pulumi.String("192.168.1.0/24"),
			},
			Location:          example.Location,
			ResourceGroupName: example.Name,
		})
		if err != nil {
			return err
		}
		exampleSubnet, err := network.NewSubnet(ctx, "example", &network.SubnetArgs{
			Name:               pulumi.String("AzureBastionSubnet"),
			ResourceGroupName:  example.Name,
			VirtualNetworkName: exampleVirtualNetwork.Name,
			AddressPrefixes: pulumi.StringArray{
				pulumi.String("192.168.1.224/27"),
			},
		})
		if err != nil {
			return err
		}
		examplePublicIp, err := network.NewPublicIp(ctx, "example", &network.PublicIpArgs{
			Name:              pulumi.String("examplepip"),
			Location:          example.Location,
			ResourceGroupName: example.Name,
			AllocationMethod:  pulumi.String("Static"),
			Sku:               pulumi.String("Standard"),
		})
		if err != nil {
			return err
		}
		_, err = compute.NewBastionHost(ctx, "example", &compute.BastionHostArgs{
			Name:              pulumi.String("examplebastion"),
			Location:          example.Location,
			ResourceGroupName: example.Name,
			IpConfiguration: &compute.BastionHostIpConfigurationArgs{
				Name:              pulumi.String("configuration"),
				SubnetId:          exampleSubnet.ID(),
				PublicIpAddressId: examplePublicIp.ID(),
			},
		})
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.core.ResourceGroup;
import com.pulumi.azure.core.ResourceGroupArgs;
import com.pulumi.azure.network.VirtualNetwork;
import com.pulumi.azure.network.VirtualNetworkArgs;
import com.pulumi.azure.network.Subnet;
import com.pulumi.azure.network.SubnetArgs;
import com.pulumi.azure.network.PublicIp;
import com.pulumi.azure.network.PublicIpArgs;
import com.pulumi.azure.compute.BastionHost;
import com.pulumi.azure.compute.BastionHostArgs;
import com.pulumi.azure.compute.inputs.BastionHostIpConfigurationArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        var example = new ResourceGroup("example", ResourceGroupArgs.builder()
            .name("example-resources")
            .location("West Europe")
            .build());

        var exampleVirtualNetwork = new VirtualNetwork("exampleVirtualNetwork", VirtualNetworkArgs.builder()
            .name("examplevnet")
            .addressSpaces("192.168.1.0/24")
            .location(example.location())
            .resourceGroupName(example.name())
            .build());

        var exampleSubnet = new Subnet("exampleSubnet", SubnetArgs.builder()
            .name("AzureBastionSubnet")
            .resourceGroupName(example.name())
            .virtualNetworkName(exampleVirtualNetwork.name())
            .addressPrefixes("192.168.1.224/27")
            .build());

        var examplePublicIp = new PublicIp("examplePublicIp", PublicIpArgs.builder()
            .name("examplepip")
            .location(example.location())
            .resourceGroupName(example.name())
            .allocationMethod("Static")
            .sku("Standard")
            .build());

        var exampleBastionHost = new BastionHost("exampleBastionHost", BastionHostArgs.builder()
            .name("examplebastion")
            .location(example.location())
            .resourceGroupName(example.name())
            .ipConfiguration(BastionHostIpConfigurationArgs.builder()
                .name("configuration")
                .subnetId(exampleSubnet.id())
                .publicIpAddressId(examplePublicIp.id())
                .build())
            .build());

    }
}
```
```yaml
resources:
  example:
    type: azure:core:ResourceGroup
    properties:
      name: example-resources
      location: West Europe
  exampleVirtualNetwork:
    type: azure:network:VirtualNetwork
    name: example
    properties:
      name: examplevnet
      addressSpaces:
        - 192.168.1.0/24
      location: ${example.location}
      resourceGroupName: ${example.name}
  exampleSubnet:
    type: azure:network:Subnet
    name: example
    properties:
      name: AzureBastionSubnet
      resourceGroupName: ${example.name}
      virtualNetworkName: ${exampleVirtualNetwork.name}
      addressPrefixes:
        - 192.168.1.224/27
  examplePublicIp:
    type: azure:network:PublicIp
    name: example
    properties:
      name: examplepip
      location: ${example.location}
      resourceGroupName: ${example.name}
      allocationMethod: Static
      sku: Standard
  exampleBastionHost:
    type: azure:compute:BastionHost
    name: example
    properties:
      name: examplebastion
      location: ${example.location}
      resourceGroupName: ${example.name}
      ipConfiguration:
        name: configuration
        subnetId: ${exampleSubnet.id}
        publicIpAddressId: ${examplePublicIp.id}
```
<!--End PulumiCodeChooser -->

## Import

Bastion Hosts can be imported using the `resource id`, e.g.

```sh
$ pulumi import azure:compute/bastionHost:BastionHost example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Network/bastionHosts/instance1
```

b
copyPasteEnabledB
 HIs Copy/Paste feature enabled for the Bastion Host. Defaults to `true`.
¼
fileCopyEnabledB
 ¢Is File Copy feature enabled for the Bastion Host. Defaults to `false`.

> **Note:** `file_copy_enabled` is only supported when `sku` is `Standard` or `Premium`.
å
ipConfigurationpBn:l
j
computeBastionHostIpConfigurationCazure:compute/BastionHostIpConfiguration:BastionHostIpConfiguration`A `ip_configuration` block as defined below. Changing this forces a new resource to be created.
¿
ipConnectEnabledB
 ¤Is IP Connect feature enabled for the Bastion Host. Defaults to `false`.

> **Note:** `ip_connect_enabled` is only supported when `sku` is `Standard` or `Premium`.
É
kerberosEnabledB
 ¯Is Kerberos authentication feature enabled for the Bastion Host. Defaults to `false`.

> **Note:** `kerberos_enabled` is only supported when `sku` is `Standard` or `Premium`.
÷
locationB" äSpecifies the supported Azure location where the resource exists. Changing this forces a new resource to be created. Review [Azure Bastion Host FAQ](https://docs.microsoft.com/azure/bastion/bastion-faq) for supported locations.
i
nameB" [Specifies the name of the Bastion Host. Changing this forces a new resource to be created.

resourceGroupName" wThe name of the resource group in which to create the Bastion Host. Changing this forces a new resource to be created.


scaleUnitsB The number of scale units with which to provision the Bastion Host. Possible values are between `2` and `50`. Defaults to `2`.

> **Note:** `scale_units` only can be changed when `sku` is `Standard` or `Premium`. `scale_units` is always `2` when `sku` is `Basic`.
Æ
sessionRecordingEnabledB
 ¤Is Session Recording feature enabled for the Bastion Host. Defaults to `false`.

> **Note:** `session_recording_enabled` is only supported when `sku` is `Premium`.
Ë
shareableLinkEnabledB
 ¬Is Shareable Link feature enabled for the Bastion Host. Defaults to `false`.

> **Note:** `shareable_link_enabled` is only supported when `sku` is `Standard` or `Premium`.
Í
skuB" ¿The SKU of the Bastion Host. Accepted values are `Developer`, `Basic`, `Standard` and `Premium`. Defaults to `Basic`.

> **Note** Downgrading the SKU will force a new resource to be created.
=
tagsB2" -A mapping of tags to assign to the resource.
½
tunnelingEnabledB
 ¢Is Tunneling feature enabled for the Bastion Host. Defaults to `false`.

> **Note:** `tunneling_enabled` is only supported when `sku` is `Standard` or `Premium`.

virtualNetworkIdB" qThe ID of the Virtual Network for the Developer Bastion Host. Changing this forces a new resource to be created.
¡
zonesB*" Specifies a list of Availability Zones in which this Public Bastion Host should be located. Changing this forces a new resource to be created.
"b
copyPasteEnabledB
 HIs Copy/Paste feature enabled for the Bastion Host. Defaults to `true`.
".
dnsName" The FQDN for the Bastion Host.
"¼
fileCopyEnabledB
 ¢Is File Copy feature enabled for the Bastion Host. Defaults to `false`.

> **Note:** `file_copy_enabled` is only supported when `sku` is `Standard` or `Premium`.
"å
ipConfigurationpBn:l
j
computeBastionHostIpConfigurationCazure:compute/BastionHostIpConfiguration:BastionHostIpConfiguration`A `ip_configuration` block as defined below. Changing this forces a new resource to be created.
"¿
ipConnectEnabledB
 ¤Is IP Connect feature enabled for the Bastion Host. Defaults to `false`.

> **Note:** `ip_connect_enabled` is only supported when `sku` is `Standard` or `Premium`.
"É
kerberosEnabledB
 ¯Is Kerberos authentication feature enabled for the Bastion Host. Defaults to `false`.

> **Note:** `kerberos_enabled` is only supported when `sku` is `Standard` or `Premium`.
"õ
location" äSpecifies the supported Azure location where the resource exists. Changing this forces a new resource to be created. Review [Azure Bastion Host FAQ](https://docs.microsoft.com/azure/bastion/bastion-faq) for supported locations.
"g
name" [Specifies the name of the Bastion Host. Changing this forces a new resource to be created.
"
resourceGroupName" wThe name of the resource group in which to create the Bastion Host. Changing this forces a new resource to be created.
"

scaleUnitsB The number of scale units with which to provision the Bastion Host. Possible values are between `2` and `50`. Defaults to `2`.

> **Note:** `scale_units` only can be changed when `sku` is `Standard` or `Premium`. `scale_units` is always `2` when `sku` is `Basic`.
"Æ
sessionRecordingEnabledB
 ¤Is Session Recording feature enabled for the Bastion Host. Defaults to `false`.

> **Note:** `session_recording_enabled` is only supported when `sku` is `Premium`.
"Ë
shareableLinkEnabledB
 ¬Is Shareable Link feature enabled for the Bastion Host. Defaults to `false`.

> **Note:** `shareable_link_enabled` is only supported when `sku` is `Standard` or `Premium`.
"Í
skuB" ¿The SKU of the Bastion Host. Accepted values are `Developer`, `Basic`, `Standard` and `Premium`. Defaults to `Basic`.

> **Note** Downgrading the SKU will force a new resource to be created.
"=
tagsB2" -A mapping of tags to assign to the resource.
"½
tunnelingEnabledB
 ¢Is Tunneling feature enabled for the Bastion Host. Defaults to `false`.

> **Note:** `tunneling_enabled` is only supported when `sku` is `Standard` or `Premium`.
"
virtualNetworkIdB" qThe ID of the Virtual Network for the Developer Bastion Host. Changing this forces a new resource to be created.
"¡
zonesB*" Specifies a list of Availability Zones in which this Public Bastion Host should be located. Changing this forces a new resource to be created.
*<
U
computeCapacityReservation5azure:compute/capacityReservation:CapacityReservationí1Manages a Capacity Reservation within a Capacity Reservation Group.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const example = new azure.core.ResourceGroup("example", {
    name: "example-rg",
    location: "West Europe",
});
const exampleCapacityReservationGroup = new azure.compute.CapacityReservationGroup("example", {
    name: "example-capacity-reservation-group",
    resourceGroupName: example.name,
    location: example.location,
});
const exampleCapacityReservation = new azure.compute.CapacityReservation("example", {
    name: "example-capacity-reservation",
    capacityReservationGroupId: exampleCapacityReservationGroup.id,
    sku: {
        name: "Standard_D2s_v3",
        capacity: 1,
    },
});
```
```python
import pulumi
import pulumi_azure as azure

example = azure.core.ResourceGroup("example",
    name="example-rg",
    location="West Europe")
example_capacity_reservation_group = azure.compute.CapacityReservationGroup("example",
    name="example-capacity-reservation-group",
    resource_group_name=example.name,
    location=example.location)
example_capacity_reservation = azure.compute.CapacityReservation("example",
    name="example-capacity-reservation",
    capacity_reservation_group_id=example_capacity_reservation_group.id,
    sku={
        "name": "Standard_D2s_v3",
        "capacity": 1,
    })
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var example = new Azure.Core.ResourceGroup("example", new()
    {
        Name = "example-rg",
        Location = "West Europe",
    });

    var exampleCapacityReservationGroup = new Azure.Compute.CapacityReservationGroup("example", new()
    {
        Name = "example-capacity-reservation-group",
        ResourceGroupName = example.Name,
        Location = example.Location,
    });

    var exampleCapacityReservation = new Azure.Compute.CapacityReservation("example", new()
    {
        Name = "example-capacity-reservation",
        CapacityReservationGroupId = exampleCapacityReservationGroup.Id,
        Sku = new Azure.Compute.Inputs.CapacityReservationSkuArgs
        {
            Name = "Standard_D2s_v3",
            Capacity = 1,
        },
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/compute"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
			Name:     pulumi.String("example-rg"),
			Location: pulumi.String("West Europe"),
		})
		if err != nil {
			return err
		}
		exampleCapacityReservationGroup, err := compute.NewCapacityReservationGroup(ctx, "example", &compute.CapacityReservationGroupArgs{
			Name:              pulumi.String("example-capacity-reservation-group"),
			ResourceGroupName: example.Name,
			Location:          example.Location,
		})
		if err != nil {
			return err
		}
		_, err = compute.NewCapacityReservation(ctx, "example", &compute.CapacityReservationArgs{
			Name:                       pulumi.String("example-capacity-reservation"),
			CapacityReservationGroupId: exampleCapacityReservationGroup.ID(),
			Sku: &compute.CapacityReservationSkuArgs{
				Name:     pulumi.String("Standard_D2s_v3"),
				Capacity: pulumi.Int(1),
			},
		})
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.core.ResourceGroup;
import com.pulumi.azure.core.ResourceGroupArgs;
import com.pulumi.azure.compute.CapacityReservationGroup;
import com.pulumi.azure.compute.CapacityReservationGroupArgs;
import com.pulumi.azure.compute.CapacityReservation;
import com.pulumi.azure.compute.CapacityReservationArgs;
import com.pulumi.azure.compute.inputs.CapacityReservationSkuArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        var example = new ResourceGroup("example", ResourceGroupArgs.builder()
            .name("example-rg")
            .location("West Europe")
            .build());

        var exampleCapacityReservationGroup = new CapacityReservationGroup("exampleCapacityReservationGroup", CapacityReservationGroupArgs.builder()
            .name("example-capacity-reservation-group")
            .resourceGroupName(example.name())
            .location(example.location())
            .build());

        var exampleCapacityReservation = new CapacityReservation("exampleCapacityReservation", CapacityReservationArgs.builder()
            .name("example-capacity-reservation")
            .capacityReservationGroupId(exampleCapacityReservationGroup.id())
            .sku(CapacityReservationSkuArgs.builder()
                .name("Standard_D2s_v3")
                .capacity(1)
                .build())
            .build());

    }
}
```
```yaml
resources:
  example:
    type: azure:core:ResourceGroup
    properties:
      name: example-rg
      location: West Europe
  exampleCapacityReservationGroup:
    type: azure:compute:CapacityReservationGroup
    name: example
    properties:
      name: example-capacity-reservation-group
      resourceGroupName: ${example.name}
      location: ${example.location}
  exampleCapacityReservation:
    type: azure:compute:CapacityReservation
    name: example
    properties:
      name: example-capacity-reservation
      capacityReservationGroupId: ${exampleCapacityReservationGroup.id}
      sku:
        name: Standard_D2s_v3
        capacity: 1
```
<!--End PulumiCodeChooser -->

## Import

Capacity Reservations can be imported using the `resource id`, e.g.

```sh
$ pulumi import azure:compute/capacityReservation:CapacityReservation example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Compute/capacityReservationGroups/capacityReservationGroup1/capacityReservations/capacityReservation1
```

¦
capacityReservationGroupId" The ID of the Capacity Reservation Group where the Capacity Reservation exists. Changing this forces a new resource to be created.
r
nameB" dSpecifies the name of this Capacity Reservation. Changing this forces a new resource to be created.

skub:`
^
computeCapacityReservationSku;azure:compute/CapacityReservationSku:CapacityReservationSku A `sku` block as defined below.
=
tagsB2" -A mapping of tags to assign to the resource.

zoneB" rSpecifies the Availability Zone for this Capacity Reservation. Changing this forces a new resource to be created.
"¦
capacityReservationGroupId" The ID of the Capacity Reservation Group where the Capacity Reservation exists. Changing this forces a new resource to be created.
"p
name" dSpecifies the name of this Capacity Reservation. Changing this forces a new resource to be created.
"
skub:`
^
computeCapacityReservationSku;azure:compute/CapacityReservationSku:CapacityReservationSku A `sku` block as defined below.
"=
tagsB2" -A mapping of tags to assign to the resource.
"
zoneB" rSpecifies the Availability Zone for this Capacity Reservation. Changing this forces a new resource to be created.
*Ì*
d
computeCapacityReservationGroup?azure:compute/capacityReservationGroup:CapacityReservationGroupñManages a Capacity Reservation Group.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const example = new azure.core.ResourceGroup("example", {
    name: "example-rg",
    location: "West Europe",
});
const exampleCapacityReservationGroup = new azure.compute.CapacityReservationGroup("example", {
    name: "example-capacity-reservation-group",
    resourceGroupName: example.name,
    location: example.location,
});
```
```python
import pulumi
import pulumi_azure as azure

example = azure.core.ResourceGroup("example",
    name="example-rg",
    location="West Europe")
example_capacity_reservation_group = azure.compute.CapacityReservationGroup("example",
    name="example-capacity-reservation-group",
    resource_group_name=example.name,
    location=example.location)
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var example = new Azure.Core.ResourceGroup("example", new()
    {
        Name = "example-rg",
        Location = "West Europe",
    });

    var exampleCapacityReservationGroup = new Azure.Compute.CapacityReservationGroup("example", new()
    {
        Name = "example-capacity-reservation-group",
        ResourceGroupName = example.Name,
        Location = example.Location,
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/compute"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
			Name:     pulumi.String("example-rg"),
			Location: pulumi.String("West Europe"),
		})
		if err != nil {
			return err
		}
		_, err = compute.NewCapacityReservationGroup(ctx, "example", &compute.CapacityReservationGroupArgs{
			Name:              pulumi.String("example-capacity-reservation-group"),
			ResourceGroupName: example.Name,
			Location:          example.Location,
		})
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.core.ResourceGroup;
import com.pulumi.azure.core.ResourceGroupArgs;
import com.pulumi.azure.compute.CapacityReservationGroup;
import com.pulumi.azure.compute.CapacityReservationGroupArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        var example = new ResourceGroup("example", ResourceGroupArgs.builder()
            .name("example-rg")
            .location("West Europe")
            .build());

        var exampleCapacityReservationGroup = new CapacityReservationGroup("exampleCapacityReservationGroup", CapacityReservationGroupArgs.builder()
            .name("example-capacity-reservation-group")
            .resourceGroupName(example.name())
            .location(example.location())
            .build());

    }
}
```
```yaml
resources:
  example:
    type: azure:core:ResourceGroup
    properties:
      name: example-rg
      location: West Europe
  exampleCapacityReservationGroup:
    type: azure:compute:CapacityReservationGroup
    name: example
    properties:
      name: example-capacity-reservation-group
      resourceGroupName: ${example.name}
      location: ${example.location}
```
<!--End PulumiCodeChooser -->

## Import

Capacity Reservation Groups can be imported using the `resource id`, e.g.

```sh
$ pulumi import azure:compute/capacityReservationGroup:CapacityReservationGroup example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Compute/capacityReservationGroups/capacityReservationGroup1
```


locationB" sThe Azure location where the Capacity Reservation Group exists. Changing this forces a new resource to be created.
x
nameB" jSpecifies the name of this Capacity Reservation Group. Changing this forces a new resource to be created.
¤
resourceGroupName" Specifies the name of the resource group the Capacity Reservation Group is located in. Changing this forces a new resource to be created.
=
tagsB2" -A mapping of tags to assign to the resource.

zonesB*" Specifies a list of Availability Zones for this Capacity Reservation Group. Changing this forces a new resource to be created.
"
location" sThe Azure location where the Capacity Reservation Group exists. Changing this forces a new resource to be created.
"v
name" jSpecifies the name of this Capacity Reservation Group. Changing this forces a new resource to be created.
"¤
resourceGroupName" Specifies the name of the resource group the Capacity Reservation Group is located in. Changing this forces a new resource to be created.
"=
tagsB2" -A mapping of tags to assign to the resource.
"
zonesB*" Specifies a list of Availability Zones for this Capacity Reservation Group. Changing this forces a new resource to be created.
*Þ«
R
computeDataDiskAttachment3azure:compute/dataDiskAttachment:DataDiskAttachmentØManages attaching a Disk to a Virtual Machine.

> **NOTE:** Data Disks can be attached either directly on the `azure.compute.VirtualMachine` resource, or using the `azure.compute.DataDiskAttachment` resource - but the two cannot be used together. If both are used against the same Virtual Machine, spurious changes will occur.

> **Please Note:** only Managed Disks are supported via this separate resource, Unmanaged Disks can be attached using the `storage_data_disk` block in the `azure.compute.VirtualMachine` resource.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const config = new pulumi.Config();
const prefix = config.get("prefix") || "example";
const vmName = `${prefix}-vm`;
const example = new azure.core.ResourceGroup("example", {
    name: `${prefix}-resources`,
    location: "West Europe",
});
const main = new azure.network.VirtualNetwork("main", {
    name: `${prefix}-network`,
    addressSpaces: ["10.0.0.0/16"],
    location: example.location,
    resourceGroupName: example.name,
});
const internal = new azure.network.Subnet("internal", {
    name: "internal",
    resourceGroupName: example.name,
    virtualNetworkName: main.name,
    addressPrefixes: ["10.0.2.0/24"],
});
const mainNetworkInterface = new azure.network.NetworkInterface("main", {
    name: `${prefix}-nic`,
    location: example.location,
    resourceGroupName: example.name,
    ipConfigurations: [{
        name: "internal",
        subnetId: internal.id,
        privateIpAddressAllocation: "Dynamic",
    }],
});
const exampleVirtualMachine = new azure.compute.VirtualMachine("example", {
    name: vmName,
    location: example.location,
    resourceGroupName: example.name,
    networkInterfaceIds: [mainNetworkInterface.id],
    vmSize: "Standard_F2",
    storageImageReference: {
        publisher: "Canonical",
        offer: "0001-com-ubuntu-server-jammy",
        sku: "22_04-lts",
        version: "latest",
    },
    storageOsDisk: {
        name: "myosdisk1",
        caching: "ReadWrite",
        createOption: "FromImage",
        managedDiskType: "Standard_LRS",
    },
    osProfile: {
        computerName: vmName,
        adminUsername: "testadmin",
        adminPassword: "Password1234!",
    },
    osProfileLinuxConfig: {
        disablePasswordAuthentication: false,
    },
});
const exampleManagedDisk = new azure.compute.ManagedDisk("example", {
    name: `${vmName}-disk1`,
    location: example.location,
    resourceGroupName: example.name,
    storageAccountType: "Standard_LRS",
    createOption: "Empty",
    diskSizeGb: 10,
});
const exampleDataDiskAttachment = new azure.compute.DataDiskAttachment("example", {
    managedDiskId: exampleManagedDisk.id,
    virtualMachineId: exampleVirtualMachine.id,
    lun: 10,
    caching: "ReadWrite",
});
```
```python
import pulumi
import pulumi_azure as azure

config = pulumi.Config()
prefix = config.get("prefix")
if prefix is None:
    prefix = "example"
vm_name = f"{prefix}-vm"
example = azure.core.ResourceGroup("example",
    name=f"{prefix}-resources",
    location="West Europe")
main = azure.network.VirtualNetwork("main",
    name=f"{prefix}-network",
    address_spaces=["10.0.0.0/16"],
    location=example.location,
    resource_group_name=example.name)
internal = azure.network.Subnet("internal",
    name="internal",
    resource_group_name=example.name,
    virtual_network_name=main.name,
    address_prefixes=["10.0.2.0/24"])
main_network_interface = azure.network.NetworkInterface("main",
    name=f"{prefix}-nic",
    location=example.location,
    resource_group_name=example.name,
    ip_configurations=[{
        "name": "internal",
        "subnet_id": internal.id,
        "private_ip_address_allocation": "Dynamic",
    }])
example_virtual_machine = azure.compute.VirtualMachine("example",
    name=vm_name,
    location=example.location,
    resource_group_name=example.name,
    network_interface_ids=[main_network_interface.id],
    vm_size="Standard_F2",
    storage_image_reference={
        "publisher": "Canonical",
        "offer": "0001-com-ubuntu-server-jammy",
        "sku": "22_04-lts",
        "version": "latest",
    },
    storage_os_disk={
        "name": "myosdisk1",
        "caching": "ReadWrite",
        "create_option": "FromImage",
        "managed_disk_type": "Standard_LRS",
    },
    os_profile={
        "computer_name": vm_name,
        "admin_username": "testadmin",
        "admin_password": "Password1234!",
    },
    os_profile_linux_config={
        "disable_password_authentication": False,
    })
example_managed_disk = azure.compute.ManagedDisk("example",
    name=f"{vm_name}-disk1",
    location=example.location,
    resource_group_name=example.name,
    storage_account_type="Standard_LRS",
    create_option="Empty",
    disk_size_gb=10)
example_data_disk_attachment = azure.compute.DataDiskAttachment("example",
    managed_disk_id=example_managed_disk.id,
    virtual_machine_id=example_virtual_machine.id,
    lun=10,
    caching="ReadWrite")
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var config = new Config();
    var prefix = config.Get("prefix") ?? "example";
    var vmName = $"{prefix}-vm";

    var example = new Azure.Core.ResourceGroup("example", new()
    {
        Name = $"{prefix}-resources",
        Location = "West Europe",
    });

    var main = new Azure.Network.VirtualNetwork("main", new()
    {
        Name = $"{prefix}-network",
        AddressSpaces = new[]
        {
            "10.0.0.0/16",
        },
        Location = example.Location,
        ResourceGroupName = example.Name,
    });

    var @internal = new Azure.Network.Subnet("internal", new()
    {
        Name = "internal",
        ResourceGroupName = example.Name,
        VirtualNetworkName = main.Name,
        AddressPrefixes = new[]
        {
            "10.0.2.0/24",
        },
    });

    var mainNetworkInterface = new Azure.Network.NetworkInterface("main", new()
    {
        Name = $"{prefix}-nic",
        Location = example.Location,
        ResourceGroupName = example.Name,
        IpConfigurations = new[]
        {
            new Azure.Network.Inputs.NetworkInterfaceIpConfigurationArgs
            {
                Name = "internal",
                SubnetId = @internal.Id,
                PrivateIpAddressAllocation = "Dynamic",
            },
        },
    });

    var exampleVirtualMachine = new Azure.Compute.VirtualMachine("example", new()
    {
        Name = vmName,
        Location = example.Location,
        ResourceGroupName = example.Name,
        NetworkInterfaceIds = new[]
        {
            mainNetworkInterface.Id,
        },
        VmSize = "Standard_F2",
        StorageImageReference = new Azure.Compute.Inputs.VirtualMachineStorageImageReferenceArgs
        {
            Publisher = "Canonical",
            Offer = "0001-com-ubuntu-server-jammy",
            Sku = "22_04-lts",
            Version = "latest",
        },
        StorageOsDisk = new Azure.Compute.Inputs.VirtualMachineStorageOsDiskArgs
        {
            Name = "myosdisk1",
            Caching = "ReadWrite",
            CreateOption = "FromImage",
            ManagedDiskType = "Standard_LRS",
        },
        OsProfile = new Azure.Compute.Inputs.VirtualMachineOsProfileArgs
        {
            ComputerName = vmName,
            AdminUsername = "testadmin",
            AdminPassword = "Password1234!",
        },
        OsProfileLinuxConfig = new Azure.Compute.Inputs.VirtualMachineOsProfileLinuxConfigArgs
        {
            DisablePasswordAuthentication = false,
        },
    });

    var exampleManagedDisk = new Azure.Compute.ManagedDisk("example", new()
    {
        Name = $"{vmName}-disk1",
        Location = example.Location,
        ResourceGroupName = example.Name,
        StorageAccountType = "Standard_LRS",
        CreateOption = "Empty",
        DiskSizeGb = 10,
    });

    var exampleDataDiskAttachment = new Azure.Compute.DataDiskAttachment("example", new()
    {
        ManagedDiskId = exampleManagedDisk.Id,
        VirtualMachineId = exampleVirtualMachine.Id,
        Lun = 10,
        Caching = "ReadWrite",
    });

});
```
```go
package main

import (
	"fmt"

	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/compute"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/network"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		cfg := config.New(ctx, "")
		prefix := "example"
		if param := cfg.Get("prefix"); param != "" {
			prefix = param
		}
		vmName := fmt.Sprintf("%v-vm", prefix)
		example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
			Name:     pulumi.Sprintf("%v-resources", prefix),
			Location: pulumi.String("West Europe"),
		})
		if err != nil {
			return err
		}
		main, err := network.NewVirtualNetwork(ctx, "main", &network.VirtualNetworkArgs{
			Name: pulumi.Sprintf("%v-network", prefix),
			AddressSpaces: pulumi.StringArray{
				pulumi.String("10.0.0.0/16"),
			},
			Location:          example.Location,
			ResourceGroupName: example.Name,
		})
		if err != nil {
			return err
		}
		internal, err := network.NewSubnet(ctx, "internal", &network.SubnetArgs{
			Name:               pulumi.String("internal"),
			ResourceGroupName:  example.Name,
			VirtualNetworkName: main.Name,
			AddressPrefixes: pulumi.StringArray{
				pulumi.String("10.0.2.0/24"),
			},
		})
		if err != nil {
			return err
		}
		mainNetworkInterface, err := network.NewNetworkInterface(ctx, "main", &network.NetworkInterfaceArgs{
			Name:              pulumi.Sprintf("%v-nic", prefix),
			Location:          example.Location,
			ResourceGroupName: example.Name,
			IpConfigurations: network.NetworkInterfaceIpConfigurationArray{
				&network.NetworkInterfaceIpConfigurationArgs{
					Name:                       pulumi.String("internal"),
					SubnetId:                   internal.ID(),
					PrivateIpAddressAllocation: pulumi.String("Dynamic"),
				},
			},
		})
		if err != nil {
			return err
		}
		exampleVirtualMachine, err := compute.NewVirtualMachine(ctx, "example", &compute.VirtualMachineArgs{
			Name:              pulumi.String(vmName),
			Location:          example.Location,
			ResourceGroupName: example.Name,
			NetworkInterfaceIds: pulumi.StringArray{
				mainNetworkInterface.ID(),
			},
			VmSize: pulumi.String("Standard_F2"),
			StorageImageReference: &compute.VirtualMachineStorageImageReferenceArgs{
				Publisher: pulumi.String("Canonical"),
				Offer:     pulumi.String("0001-com-ubuntu-server-jammy"),
				Sku:       pulumi.String("22_04-lts"),
				Version:   pulumi.String("latest"),
			},
			StorageOsDisk: &compute.VirtualMachineStorageOsDiskArgs{
				Name:            pulumi.String("myosdisk1"),
				Caching:         pulumi.String("ReadWrite"),
				CreateOption:    pulumi.String("FromImage"),
				ManagedDiskType: pulumi.String("Standard_LRS"),
			},
			OsProfile: &compute.VirtualMachineOsProfileArgs{
				ComputerName:  pulumi.String(vmName),
				AdminUsername: pulumi.String("testadmin"),
				AdminPassword: pulumi.String("Password1234!"),
			},
			OsProfileLinuxConfig: &compute.VirtualMachineOsProfileLinuxConfigArgs{
				DisablePasswordAuthentication: pulumi.Bool(false),
			},
		})
		if err != nil {
			return err
		}
		exampleManagedDisk, err := compute.NewManagedDisk(ctx, "example", &compute.ManagedDiskArgs{
			Name:               pulumi.Sprintf("%v-disk1", vmName),
			Location:           example.Location,
			ResourceGroupName:  example.Name,
			StorageAccountType: pulumi.String("Standard_LRS"),
			CreateOption:       pulumi.String("Empty"),
			DiskSizeGb:         pulumi.Int(10),
		})
		if err != nil {
			return err
		}
		_, err = compute.NewDataDiskAttachment(ctx, "example", &compute.DataDiskAttachmentArgs{
			ManagedDiskId:    exampleManagedDisk.ID(),
			VirtualMachineId: exampleVirtualMachine.ID(),
			Lun:              pulumi.Int(10),
			Caching:          pulumi.String("ReadWrite"),
		})
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.core.ResourceGroup;
import com.pulumi.azure.core.ResourceGroupArgs;
import com.pulumi.azure.network.VirtualNetwork;
import com.pulumi.azure.network.VirtualNetworkArgs;
import com.pulumi.azure.network.Subnet;
import com.pulumi.azure.network.SubnetArgs;
import com.pulumi.azure.network.NetworkInterface;
import com.pulumi.azure.network.NetworkInterfaceArgs;
import com.pulumi.azure.network.inputs.NetworkInterfaceIpConfigurationArgs;
import com.pulumi.azure.compute.VirtualMachine;
import com.pulumi.azure.compute.VirtualMachineArgs;
import com.pulumi.azure.compute.inputs.VirtualMachineStorageImageReferenceArgs;
import com.pulumi.azure.compute.inputs.VirtualMachineStorageOsDiskArgs;
import com.pulumi.azure.compute.inputs.VirtualMachineOsProfileArgs;
import com.pulumi.azure.compute.inputs.VirtualMachineOsProfileLinuxConfigArgs;
import com.pulumi.azure.compute.ManagedDisk;
import com.pulumi.azure.compute.ManagedDiskArgs;
import com.pulumi.azure.compute.DataDiskAttachment;
import com.pulumi.azure.compute.DataDiskAttachmentArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        final var config = ctx.config();
        final var prefix = config.get("prefix").orElse("example");
        final var vmName = String.format("%s-vm", prefix);

        var example = new ResourceGroup("example", ResourceGroupArgs.builder()
            .name(String.format("%s-resources", prefix))
            .location("West Europe")
            .build());

        var main = new VirtualNetwork("main", VirtualNetworkArgs.builder()
            .name(String.format("%s-network", prefix))
            .addressSpaces("10.0.0.0/16")
            .location(example.location())
            .resourceGroupName(example.name())
            .build());

        var internal = new Subnet("internal", SubnetArgs.builder()
            .name("internal")
            .resourceGroupName(example.name())
            .virtualNetworkName(main.name())
            .addressPrefixes("10.0.2.0/24")
            .build());

        var mainNetworkInterface = new NetworkInterface("mainNetworkInterface", NetworkInterfaceArgs.builder()
            .name(String.format("%s-nic", prefix))
            .location(example.location())
            .resourceGroupName(example.name())
            .ipConfigurations(NetworkInterfaceIpConfigurationArgs.builder()
                .name("internal")
                .subnetId(internal.id())
                .privateIpAddressAllocation("Dynamic")
                .build())
            .build());

        var exampleVirtualMachine = new VirtualMachine("exampleVirtualMachine", VirtualMachineArgs.builder()
            .name(vmName)
            .location(example.location())
            .resourceGroupName(example.name())
            .networkInterfaceIds(mainNetworkInterface.id())
            .vmSize("Standard_F2")
            .storageImageReference(VirtualMachineStorageImageReferenceArgs.builder()
                .publisher("Canonical")
                .offer("0001-com-ubuntu-server-jammy")
                .sku("22_04-lts")
                .version("latest")
                .build())
            .storageOsDisk(VirtualMachineStorageOsDiskArgs.builder()
                .name("myosdisk1")
                .caching("ReadWrite")
                .createOption("FromImage")
                .managedDiskType("Standard_LRS")
                .build())
            .osProfile(VirtualMachineOsProfileArgs.builder()
                .computerName(vmName)
                .adminUsername("testadmin")
                .adminPassword("Password1234!")
                .build())
            .osProfileLinuxConfig(VirtualMachineOsProfileLinuxConfigArgs.builder()
                .disablePasswordAuthentication(false)
                .build())
            .build());

        var exampleManagedDisk = new ManagedDisk("exampleManagedDisk", ManagedDiskArgs.builder()
            .name(String.format("%s-disk1", vmName))
            .location(example.location())
            .resourceGroupName(example.name())
            .storageAccountType("Standard_LRS")
            .createOption("Empty")
            .diskSizeGb(10)
            .build());

        var exampleDataDiskAttachment = new DataDiskAttachment("exampleDataDiskAttachment", DataDiskAttachmentArgs.builder()
            .managedDiskId(exampleManagedDisk.id())
            .virtualMachineId(exampleVirtualMachine.id())
            .lun("10")
            .caching("ReadWrite")
            .build());

    }
}
```
```yaml
configuration:
  prefix:
    type: string
    default: example
resources:
  example:
    type: azure:core:ResourceGroup
    properties:
      name: ${prefix}-resources
      location: West Europe
  main:
    type: azure:network:VirtualNetwork
    properties:
      name: ${prefix}-network
      addressSpaces:
        - 10.0.0.0/16
      location: ${example.location}
      resourceGroupName: ${example.name}
  internal:
    type: azure:network:Subnet
    properties:
      name: internal
      resourceGroupName: ${example.name}
      virtualNetworkName: ${main.name}
      addressPrefixes:
        - 10.0.2.0/24
  mainNetworkInterface:
    type: azure:network:NetworkInterface
    name: main
    properties:
      name: ${prefix}-nic
      location: ${example.location}
      resourceGroupName: ${example.name}
      ipConfigurations:
        - name: internal
          subnetId: ${internal.id}
          privateIpAddressAllocation: Dynamic
  exampleVirtualMachine:
    type: azure:compute:VirtualMachine
    name: example
    properties:
      name: ${vmName}
      location: ${example.location}
      resourceGroupName: ${example.name}
      networkInterfaceIds:
        - ${mainNetworkInterface.id}
      vmSize: Standard_F2
      storageImageReference:
        publisher: Canonical
        offer: 0001-com-ubuntu-server-jammy
        sku: 22_04-lts
        version: latest
      storageOsDisk:
        name: myosdisk1
        caching: ReadWrite
        createOption: FromImage
        managedDiskType: Standard_LRS
      osProfile:
        computerName: ${vmName}
        adminUsername: testadmin
        adminPassword: Password1234!
      osProfileLinuxConfig:
        disablePasswordAuthentication: false
  exampleManagedDisk:
    type: azure:compute:ManagedDisk
    name: example
    properties:
      name: ${vmName}-disk1
      location: ${example.location}
      resourceGroupName: ${example.name}
      storageAccountType: Standard_LRS
      createOption: Empty
      diskSizeGb: 10
  exampleDataDiskAttachment:
    type: azure:compute:DataDiskAttachment
    name: example
    properties:
      managedDiskId: ${exampleManagedDisk.id}
      virtualMachineId: ${exampleVirtualMachine.id}
      lun: '10'
      caching: ReadWrite
variables:
  vmName: ${prefix}-vm
```
<!--End PulumiCodeChooser -->

## Import

Virtual Machines Data Disk Attachments can be imported using the `resource id`, e.g.

```sh
$ pulumi import azure:compute/dataDiskAttachment:DataDiskAttachment example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Compute/virtualMachines/machine1/dataDisks/disk1
```


caching" sSpecifies the caching requirements for this Data Disk. Possible values include `None`, `ReadOnly` and `ReadWrite`.
¡
createOptionB" The Create Option of the Data Disk, such as `Empty` or `Attach`. Defaults to `Attach`. Changing this forces a new resource to be created.

lun The Logical Unit Number of the Data Disk, which needs to be unique within the Virtual Machine. Changing this forces a new resource to be created.

managedDiskId" pThe ID of an existing Managed Disk which should be attached. Changing this forces a new resource to be created.

virtualMachineId" |The ID of the Virtual Machine to which the Data Disk should be attached. Changing this forces a new resource to be created.
«
writeAcceleratorEnabledB
 Specifies if Write Accelerator is enabled on the disk. This can only be enabled on `Premium_LRS` managed disks with no caching and [M-Series VMs](https://docs.microsoft.com/azure/virtual-machines/workloads/sap/how-to-enable-write-accelerator). Defaults to `false`.
"
caching" sSpecifies the caching requirements for this Data Disk. Possible values include `None`, `ReadOnly` and `ReadWrite`.
"¡
createOptionB" The Create Option of the Data Disk, such as `Empty` or `Attach`. Defaults to `Attach`. Changing this forces a new resource to be created.
"
lun The Logical Unit Number of the Data Disk, which needs to be unique within the Virtual Machine. Changing this forces a new resource to be created.
"
managedDiskId" pThe ID of an existing Managed Disk which should be attached. Changing this forces a new resource to be created.
"
virtualMachineId" |The ID of the Virtual Machine to which the Data Disk should be attached. Changing this forces a new resource to be created.
"«
writeAcceleratorEnabledB
 Specifies if Write Accelerator is enabled on the disk. This can only be enabled on `Premium_LRS` managed disks with no caching and [M-Series VMs](https://docs.microsoft.com/azure/virtual-machines/workloads/sap/how-to-enable-write-accelerator). Defaults to `false`.
*L
C
computeDedicatedHost)azure:compute/dedicatedHost:DedicatedHost/Manage a Dedicated Host within a Dedicated Host Group.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const example = new azure.core.ResourceGroup("example", {
    name: "example-resources",
    location: "West Europe",
});
const exampleDedicatedHostGroup = new azure.compute.DedicatedHostGroup("example", {
    name: "example-host-group",
    resourceGroupName: example.name,
    location: example.location,
    platformFaultDomainCount: 2,
});
const exampleDedicatedHost = new azure.compute.DedicatedHost("example", {
    name: "example-host",
    location: example.location,
    dedicatedHostGroupId: exampleDedicatedHostGroup.id,
    skuName: "DSv3-Type3",
    platformFaultDomain: 1,
});
```
```python
import pulumi
import pulumi_azure as azure

example = azure.core.ResourceGroup("example",
    name="example-resources",
    location="West Europe")
example_dedicated_host_group = azure.compute.DedicatedHostGroup("example",
    name="example-host-group",
    resource_group_name=example.name,
    location=example.location,
    platform_fault_domain_count=2)
example_dedicated_host = azure.compute.DedicatedHost("example",
    name="example-host",
    location=example.location,
    dedicated_host_group_id=example_dedicated_host_group.id,
    sku_name="DSv3-Type3",
    platform_fault_domain=1)
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var example = new Azure.Core.ResourceGroup("example", new()
    {
        Name = "example-resources",
        Location = "West Europe",
    });

    var exampleDedicatedHostGroup = new Azure.Compute.DedicatedHostGroup("example", new()
    {
        Name = "example-host-group",
        ResourceGroupName = example.Name,
        Location = example.Location,
        PlatformFaultDomainCount = 2,
    });

    var exampleDedicatedHost = new Azure.Compute.DedicatedHost("example", new()
    {
        Name = "example-host",
        Location = example.Location,
        DedicatedHostGroupId = exampleDedicatedHostGroup.Id,
        SkuName = "DSv3-Type3",
        PlatformFaultDomain = 1,
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/compute"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
			Name:     pulumi.String("example-resources"),
			Location: pulumi.String("West Europe"),
		})
		if err != nil {
			return err
		}
		exampleDedicatedHostGroup, err := compute.NewDedicatedHostGroup(ctx, "example", &compute.DedicatedHostGroupArgs{
			Name:                     pulumi.String("example-host-group"),
			ResourceGroupName:        example.Name,
			Location:                 example.Location,
			PlatformFaultDomainCount: pulumi.Int(2),
		})
		if err != nil {
			return err
		}
		_, err = compute.NewDedicatedHost(ctx, "example", &compute.DedicatedHostArgs{
			Name:                 pulumi.String("example-host"),
			Location:             example.Location,
			DedicatedHostGroupId: exampleDedicatedHostGroup.ID(),
			SkuName:              pulumi.String("DSv3-Type3"),
			PlatformFaultDomain:  pulumi.Int(1),
		})
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.core.ResourceGroup;
import com.pulumi.azure.core.ResourceGroupArgs;
import com.pulumi.azure.compute.DedicatedHostGroup;
import com.pulumi.azure.compute.DedicatedHostGroupArgs;
import com.pulumi.azure.compute.DedicatedHost;
import com.pulumi.azure.compute.DedicatedHostArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        var example = new ResourceGroup("example", ResourceGroupArgs.builder()
            .name("example-resources")
            .location("West Europe")
            .build());

        var exampleDedicatedHostGroup = new DedicatedHostGroup("exampleDedicatedHostGroup", DedicatedHostGroupArgs.builder()
            .name("example-host-group")
            .resourceGroupName(example.name())
            .location(example.location())
            .platformFaultDomainCount(2)
            .build());

        var exampleDedicatedHost = new DedicatedHost("exampleDedicatedHost", DedicatedHostArgs.builder()
            .name("example-host")
            .location(example.location())
            .dedicatedHostGroupId(exampleDedicatedHostGroup.id())
            .skuName("DSv3-Type3")
            .platformFaultDomain(1)
            .build());

    }
}
```
```yaml
resources:
  example:
    type: azure:core:ResourceGroup
    properties:
      name: example-resources
      location: West Europe
  exampleDedicatedHostGroup:
    type: azure:compute:DedicatedHostGroup
    name: example
    properties:
      name: example-host-group
      resourceGroupName: ${example.name}
      location: ${example.location}
      platformFaultDomainCount: 2
  exampleDedicatedHost:
    type: azure:compute:DedicatedHost
    name: example
    properties:
      name: example-host
      location: ${example.location}
      dedicatedHostGroupId: ${exampleDedicatedHostGroup.id}
      skuName: DSv3-Type3
      platformFaultDomain: 1
```
<!--End PulumiCodeChooser -->

## Import

Dedicated Hosts can be imported using the `resource id`, e.g.

```sh
$ pulumi import azure:compute/dedicatedHost:DedicatedHost example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Compute/hostGroups/group1/hosts/host1
```


autoReplaceOnFailureB
 gShould the Dedicated Host automatically be replaced in case of a Hardware Failure? Defaults to `true`.
¤
dedicatedHostGroupId" Specifies the ID of the Dedicated Host Group where the Dedicated Host should exist. Changing this forces a new resource to be created.
â
licenseTypeB" ÌSpecifies the software license type that will be applied to the VMs deployed on the Dedicated Host. Possible values are `None`, `Windows_Server_Hybrid` and `Windows_Server_Perpetual`. Defaults to `None`.

locationB" sSpecify the supported Azure location where the resource exists. Changing this forces a new resource to be created.
l
nameB" ^Specifies the name of this Dedicated Host. Changing this forces a new resource to be created.
«
platformFaultDomain Specify the fault domain of the Dedicated Host Group in which to create the Dedicated Host. Changing this forces a new resource to be created.
«
skuName" Specify the SKU name of the Dedicated Host. Possible values are `DADSv5-Type1`, `DASv4-Type1`, `DASv4-Type2`, `DASv5-Type1`, `DCSv2-Type1`, `DDSv4-Type1`, `DDSv4-Type2`, `DDSv5-Type1`, `DSv3-Type1`, `DSv3-Type2`, `DSv3-Type3`, `DSv3-Type4`, `DSv4-Type1`, `DSv4-Type2`, `DSv5-Type1`, `EADSv5-Type1`, `EASv4-Type1`, `EASv4-Type2`, `EASv5-Type1`, `EDSv4-Type1`, `EDSv4-Type2`, `EDSv5-Type1`, `ESv3-Type1`, `ESv3-Type2`, `ESv3-Type3`, `ESv3-Type4`, `ESv4-Type1`, `ESv4-Type2`, `ESv5-Type1`, `FSv2-Type2`, `FSv2-Type3`, `FSv2-Type4`, `FXmds-Type1`, `LSv2-Type1`, `LSv3-Type1`, `MDMSv2MedMem-Type1`, `MDSv2MedMem-Type1`, `MMSv2MedMem-Type1`, `MS-Type1`, `MSm-Type1`, `MSmv2-Type1`, `MSv2-Type1`, `MSv2MedMem-Type1`, `NVASv4-Type1` and `NVSv3-Type1`. Changing this forces a new resource to be created.
=
tagsB2" -A mapping of tags to assign to the resource.
"
autoReplaceOnFailureB
 gShould the Dedicated Host automatically be replaced in case of a Hardware Failure? Defaults to `true`.
"¤
dedicatedHostGroupId" Specifies the ID of the Dedicated Host Group where the Dedicated Host should exist. Changing this forces a new resource to be created.
"â
licenseTypeB" ÌSpecifies the software license type that will be applied to the VMs deployed on the Dedicated Host. Possible values are `None`, `Windows_Server_Hybrid` and `Windows_Server_Perpetual`. Defaults to `None`.
"
location" sSpecify the supported Azure location where the resource exists. Changing this forces a new resource to be created.
"j
name" ^Specifies the name of this Dedicated Host. Changing this forces a new resource to be created.
"«
platformFaultDomain Specify the fault domain of the Dedicated Host Group in which to create the Dedicated Host. Changing this forces a new resource to be created.
"«
skuName" Specify the SKU name of the Dedicated Host. Possible values are `DADSv5-Type1`, `DASv4-Type1`, `DASv4-Type2`, `DASv5-Type1`, `DCSv2-Type1`, `DDSv4-Type1`, `DDSv4-Type2`, `DDSv5-Type1`, `DSv3-Type1`, `DSv3-Type2`, `DSv3-Type3`, `DSv3-Type4`, `DSv4-Type1`, `DSv4-Type2`, `DSv5-Type1`, `EADSv5-Type1`, `EASv4-Type1`, `EASv4-Type2`, `EASv5-Type1`, `EDSv4-Type1`, `EDSv4-Type2`, `EDSv5-Type1`, `ESv3-Type1`, `ESv3-Type2`, `ESv3-Type3`, `ESv3-Type4`, `ESv4-Type1`, `ESv4-Type2`, `ESv5-Type1`, `FSv2-Type2`, `FSv2-Type3`, `FSv2-Type4`, `FXmds-Type1`, `LSv2-Type1`, `LSv3-Type1`, `MDMSv2MedMem-Type1`, `MDSv2MedMem-Type1`, `MMSv2MedMem-Type1`, `MS-Type1`, `MSm-Type1`, `MSmv2-Type1`, `MSv2-Type1`, `MSv2MedMem-Type1`, `NVASv4-Type1` and `NVSv3-Type1`. Changing this forces a new resource to be created.
"=
tagsB2" -A mapping of tags to assign to the resource.
*1
R
computeDedicatedHostGroup3azure:compute/dedicatedHostGroup:DedicatedHostGroupÛ Manage a Dedicated Host Group.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const example = new azure.core.ResourceGroup("example", {
    name: "example-rg-compute",
    location: "West Europe",
});
const exampleDedicatedHostGroup = new azure.compute.DedicatedHostGroup("example", {
    name: "example-dedicated-host-group",
    resourceGroupName: example.name,
    location: example.location,
    platformFaultDomainCount: 1,
});
```
```python
import pulumi
import pulumi_azure as azure

example = azure.core.ResourceGroup("example",
    name="example-rg-compute",
    location="West Europe")
example_dedicated_host_group = azure.compute.DedicatedHostGroup("example",
    name="example-dedicated-host-group",
    resource_group_name=example.name,
    location=example.location,
    platform_fault_domain_count=1)
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var example = new Azure.Core.ResourceGroup("example", new()
    {
        Name = "example-rg-compute",
        Location = "West Europe",
    });

    var exampleDedicatedHostGroup = new Azure.Compute.DedicatedHostGroup("example", new()
    {
        Name = "example-dedicated-host-group",
        ResourceGroupName = example.Name,
        Location = example.Location,
        PlatformFaultDomainCount = 1,
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/compute"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
			Name:     pulumi.String("example-rg-compute"),
			Location: pulumi.String("West Europe"),
		})
		if err != nil {
			return err
		}
		_, err = compute.NewDedicatedHostGroup(ctx, "example", &compute.DedicatedHostGroupArgs{
			Name:                     pulumi.String("example-dedicated-host-group"),
			ResourceGroupName:        example.Name,
			Location:                 example.Location,
			PlatformFaultDomainCount: pulumi.Int(1),
		})
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.core.ResourceGroup;
import com.pulumi.azure.core.ResourceGroupArgs;
import com.pulumi.azure.compute.DedicatedHostGroup;
import com.pulumi.azure.compute.DedicatedHostGroupArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        var example = new ResourceGroup("example", ResourceGroupArgs.builder()
            .name("example-rg-compute")
            .location("West Europe")
            .build());

        var exampleDedicatedHostGroup = new DedicatedHostGroup("exampleDedicatedHostGroup", DedicatedHostGroupArgs.builder()
            .name("example-dedicated-host-group")
            .resourceGroupName(example.name())
            .location(example.location())
            .platformFaultDomainCount(1)
            .build());

    }
}
```
```yaml
resources:
  example:
    type: azure:core:ResourceGroup
    properties:
      name: example-rg-compute
      location: West Europe
  exampleDedicatedHostGroup:
    type: azure:compute:DedicatedHostGroup
    name: example
    properties:
      name: example-dedicated-host-group
      resourceGroupName: ${example.name}
      location: ${example.location}
      platformFaultDomainCount: 1
```
<!--End PulumiCodeChooser -->

## Import

Dedicated Host Group can be imported using the `resource id`, e.g.

```sh
$ pulumi import azure:compute/dedicatedHostGroup:DedicatedHostGroup example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/example-rg/providers/Microsoft.Compute/hostGroups/group1
```

×
automaticPlacementEnabledB
 ³Would virtual machines or virtual machine scale sets be placed automatically on this Dedicated Host Group? Defaults to `false`. Changing this forces a new resource to be created.

locationB" mThe Azure location where the Dedicated Host Group exists. Changing this forces a new resource to be created.
q
nameB" cSpecifies the name of the Dedicated Host Group. Changing this forces a new resource to be created.

platformFaultDomainCount tThe number of fault domains that the Dedicated Host Group spans. Changing this forces a new resource to be created.

resourceGroupName" Specifies the name of the resource group the Dedicated Host Group is located in. Changing this forces a new resource to be created.
=
tagsB2" -A mapping of tags to assign to the resource.
¤
zoneB" Specifies the Availability Zone in which this Dedicated Host Group should be located. Changing this forces a new Dedicated Host Group to be created.
"×
automaticPlacementEnabledB
 ³Would virtual machines or virtual machine scale sets be placed automatically on this Dedicated Host Group? Defaults to `false`. Changing this forces a new resource to be created.
"}
location" mThe Azure location where the Dedicated Host Group exists. Changing this forces a new resource to be created.
"o
name" cSpecifies the name of the Dedicated Host Group. Changing this forces a new resource to be created.
"
platformFaultDomainCount tThe number of fault domains that the Dedicated Host Group spans. Changing this forces a new resource to be created.
"
resourceGroupName" Specifies the name of the resource group the Dedicated Host Group is located in. Changing this forces a new resource to be created.
"=
tagsB2" -A mapping of tags to assign to the resource.
"¤
zoneB" Specifies the Availability Zone in which this Dedicated Host Group should be located. Changing this forces a new Dedicated Host Group to be created.
*Ë
:
compute
DiskAccess#azure:compute/diskAccess:DiskAccessàManages a Disk Access.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const example = new azure.compute.DiskAccess("example", {
    name: "example",
    resourceGroupName: "example",
    location: "West Europe",
});
```
```python
import pulumi
import pulumi_azure as azure

example = azure.compute.DiskAccess("example",
    name="example",
    resource_group_name="example",
    location="West Europe")
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var example = new Azure.Compute.DiskAccess("example", new()
    {
        Name = "example",
        ResourceGroupName = "example",
        Location = "West Europe",
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/compute"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		_, err := compute.NewDiskAccess(ctx, "example", &compute.DiskAccessArgs{
			Name:              pulumi.String("example"),
			ResourceGroupName: pulumi.String("example"),
			Location:          pulumi.String("West Europe"),
		})
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.compute.DiskAccess;
import com.pulumi.azure.compute.DiskAccessArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        var example = new DiskAccess("example", DiskAccessArgs.builder()
            .name("example")
            .resourceGroupName("example")
            .location("West Europe")
            .build());

    }
}
```
```yaml
resources:
  example:
    type: azure:compute:DiskAccess
    properties:
      name: example
      resourceGroupName: example
      location: West Europe
```
<!--End PulumiCodeChooser -->

## Import

Disk Access resource can be imported using the `resource id`, e.g.

```sh
$ pulumi import azure:compute/diskAccess:DiskAccess example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/resGroup1/providers/Microsoft.Compute/diskAccesses/diskAccess1
```

v
locationB" dThe Azure Region where the Disk Access should exist. Changing this forces a new Disk to be created.
x
nameB" jThe name which should be used for this Disk Access. Changing this forces a new Disk Access to be created.

resourceGroupName" yThe name of the Resource Group where the Disk Access should exist. Changing this forces a new Disk Access to be created.
O
tagsB2" ?A mapping of tags which should be assigned to the Disk Access.
"t
location" dThe Azure Region where the Disk Access should exist. Changing this forces a new Disk to be created.
"v
name" jThe name which should be used for this Disk Access. Changing this forces a new Disk Access to be created.
"
resourceGroupName" yThe name of the Resource Group where the Disk Access should exist. Changing this forces a new Disk Access to be created.
"O
tagsB2" ?A mapping of tags which should be assigned to the Disk Access.
*ÙÊ
O
computeDiskEncryptionSet1azure:compute/diskEncryptionSet:DiskEncryptionSetµ¨Manages a Disk Encryption Set.

> **NOTE:** At this time the Key Vault used to store the Active Key for this Disk Encryption Set must have both Soft Delete & Purge Protection enabled - which are not yet supported by this provider.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const current = azure.core.getClientConfig({});
const example = new azure.core.ResourceGroup("example", {
    name: "example-resources",
    location: "West Europe",
});
const exampleKeyVault = new azure.keyvault.KeyVault("example", {
    name: "des-example-keyvault",
    location: example.location,
    resourceGroupName: example.name,
    tenantId: current.then(current => current.tenantId),
    skuName: "premium",
    enabledForDiskEncryption: true,
    purgeProtectionEnabled: true,
});
const example_user = new azure.keyvault.AccessPolicy("example-user", {
    keyVaultId: exampleKeyVault.id,
    tenantId: current.then(current => current.tenantId),
    objectId: current.then(current => current.objectId),
    keyPermissions: [
        "Create",
        "Delete",
        "Get",
        "Purge",
        "Recover",
        "Update",
        "List",
        "Decrypt",
        "Sign",
        "GetRotationPolicy",
    ],
});
const exampleKey = new azure.keyvault.Key("example", {
    name: "des-example-key",
    keyVaultId: exampleKeyVault.id,
    keyType: "RSA",
    keySize: 2048,
    keyOpts: [
        "decrypt",
        "encrypt",
        "sign",
        "unwrapKey",
        "verify",
        "wrapKey",
    ],
}, {
    dependsOn: [example_user],
});
const exampleDiskEncryptionSet = new azure.compute.DiskEncryptionSet("example", {
    name: "des",
    resourceGroupName: example.name,
    location: example.location,
    keyVaultKeyId: exampleKey.id,
    identity: {
        type: "SystemAssigned",
    },
});
const example_disk = new azure.keyvault.AccessPolicy("example-disk", {
    keyVaultId: exampleKeyVault.id,
    tenantId: exampleDiskEncryptionSet.identity.apply(identity => identity.tenantId),
    objectId: exampleDiskEncryptionSet.identity.apply(identity => identity.principalId),
    keyPermissions: [
        "Create",
        "Delete",
        "Get",
        "Purge",
        "Recover",
        "Update",
        "List",
        "Decrypt",
        "Sign",
    ],
});
const example_diskAssignment = new azure.authorization.Assignment("example-disk", {
    scope: exampleKeyVault.id,
    roleDefinitionName: "Key Vault Crypto Service Encryption User",
    principalId: exampleDiskEncryptionSet.identity.apply(identity => identity.principalId),
});
```
```python
import pulumi
import pulumi_azure as azure

current = azure.core.get_client_config()
example = azure.core.ResourceGroup("example",
    name="example-resources",
    location="West Europe")
example_key_vault = azure.keyvault.KeyVault("example",
    name="des-example-keyvault",
    location=example.location,
    resource_group_name=example.name,
    tenant_id=current.tenant_id,
    sku_name="premium",
    enabled_for_disk_encryption=True,
    purge_protection_enabled=True)
example_user = azure.keyvault.AccessPolicy("example-user",
    key_vault_id=example_key_vault.id,
    tenant_id=current.tenant_id,
    object_id=current.object_id,
    key_permissions=[
        "Create",
        "Delete",
        "Get",
        "Purge",
        "Recover",
        "Update",
        "List",
        "Decrypt",
        "Sign",
        "GetRotationPolicy",
    ])
example_key = azure.keyvault.Key("example",
    name="des-example-key",
    key_vault_id=example_key_vault.id,
    key_type="RSA",
    key_size=2048,
    key_opts=[
        "decrypt",
        "encrypt",
        "sign",
        "unwrapKey",
        "verify",
        "wrapKey",
    ],
    opts = pulumi.ResourceOptions(depends_on=[example_user]))
example_disk_encryption_set = azure.compute.DiskEncryptionSet("example",
    name="des",
    resource_group_name=example.name,
    location=example.location,
    key_vault_key_id=example_key.id,
    identity={
        "type": "SystemAssigned",
    })
example_disk = azure.keyvault.AccessPolicy("example-disk",
    key_vault_id=example_key_vault.id,
    tenant_id=example_disk_encryption_set.identity.tenant_id,
    object_id=example_disk_encryption_set.identity.principal_id,
    key_permissions=[
        "Create",
        "Delete",
        "Get",
        "Purge",
        "Recover",
        "Update",
        "List",
        "Decrypt",
        "Sign",
    ])
example_disk_assignment = azure.authorization.Assignment("example-disk",
    scope=example_key_vault.id,
    role_definition_name="Key Vault Crypto Service Encryption User",
    principal_id=example_disk_encryption_set.identity.principal_id)
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var current = Azure.Core.GetClientConfig.Invoke();

    var example = new Azure.Core.ResourceGroup("example", new()
    {
        Name = "example-resources",
        Location = "West Europe",
    });

    var exampleKeyVault = new Azure.KeyVault.KeyVault("example", new()
    {
        Name = "des-example-keyvault",
        Location = example.Location,
        ResourceGroupName = example.Name,
        TenantId = current.Apply(getClientConfigResult => getClientConfigResult.TenantId),
        SkuName = "premium",
        EnabledForDiskEncryption = true,
        PurgeProtectionEnabled = true,
    });

    var example_user = new Azure.KeyVault.AccessPolicy("example-user", new()
    {
        KeyVaultId = exampleKeyVault.Id,
        TenantId = current.Apply(getClientConfigResult => getClientConfigResult.TenantId),
        ObjectId = current.Apply(getClientConfigResult => getClientConfigResult.ObjectId),
        KeyPermissions = new[]
        {
            "Create",
            "Delete",
            "Get",
            "Purge",
            "Recover",
            "Update",
            "List",
            "Decrypt",
            "Sign",
            "GetRotationPolicy",
        },
    });

    var exampleKey = new Azure.KeyVault.Key("example", new()
    {
        Name = "des-example-key",
        KeyVaultId = exampleKeyVault.Id,
        KeyType = "RSA",
        KeySize = 2048,
        KeyOpts = new[]
        {
            "decrypt",
            "encrypt",
            "sign",
            "unwrapKey",
            "verify",
            "wrapKey",
        },
    }, new CustomResourceOptions
    {
        DependsOn =
        {
            example_user,
        },
    });

    var exampleDiskEncryptionSet = new Azure.Compute.DiskEncryptionSet("example", new()
    {
        Name = "des",
        ResourceGroupName = example.Name,
        Location = example.Location,
        KeyVaultKeyId = exampleKey.Id,
        Identity = new Azure.Compute.Inputs.DiskEncryptionSetIdentityArgs
        {
            Type = "SystemAssigned",
        },
    });

    var example_disk = new Azure.KeyVault.AccessPolicy("example-disk", new()
    {
        KeyVaultId = exampleKeyVault.Id,
        TenantId = exampleDiskEncryptionSet.Identity.Apply(identity => identity.TenantId),
        ObjectId = exampleDiskEncryptionSet.Identity.Apply(identity => identity.PrincipalId),
        KeyPermissions = new[]
        {
            "Create",
            "Delete",
            "Get",
            "Purge",
            "Recover",
            "Update",
            "List",
            "Decrypt",
            "Sign",
        },
    });

    var example_diskAssignment = new Azure.Authorization.Assignment("example-disk", new()
    {
        Scope = exampleKeyVault.Id,
        RoleDefinitionName = "Key Vault Crypto Service Encryption User",
        PrincipalId = exampleDiskEncryptionSet.Identity.Apply(identity => identity.PrincipalId),
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/authorization"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/compute"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/keyvault"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		current, err := core.GetClientConfig(ctx, map[string]interface{}{}, nil)
		if err != nil {
			return err
		}
		example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
			Name:     pulumi.String("example-resources"),
			Location: pulumi.String("West Europe"),
		})
		if err != nil {
			return err
		}
		exampleKeyVault, err := keyvault.NewKeyVault(ctx, "example", &keyvault.KeyVaultArgs{
			Name:                     pulumi.String("des-example-keyvault"),
			Location:                 example.Location,
			ResourceGroupName:        example.Name,
			TenantId:                 pulumi.String(current.TenantId),
			SkuName:                  pulumi.String("premium"),
			EnabledForDiskEncryption: pulumi.Bool(true),
			PurgeProtectionEnabled:   pulumi.Bool(true),
		})
		if err != nil {
			return err
		}
		_, err = keyvault.NewAccessPolicy(ctx, "example-user", &keyvault.AccessPolicyArgs{
			KeyVaultId: exampleKeyVault.ID(),
			TenantId:   pulumi.String(current.TenantId),
			ObjectId:   pulumi.String(current.ObjectId),
			KeyPermissions: pulumi.StringArray{
				pulumi.String("Create"),
				pulumi.String("Delete"),
				pulumi.String("Get"),
				pulumi.String("Purge"),
				pulumi.String("Recover"),
				pulumi.String("Update"),
				pulumi.String("List"),
				pulumi.String("Decrypt"),
				pulumi.String("Sign"),
				pulumi.String("GetRotationPolicy"),
			},
		})
		if err != nil {
			return err
		}
		exampleKey, err := keyvault.NewKey(ctx, "example", &keyvault.KeyArgs{
			Name:       pulumi.String("des-example-key"),
			KeyVaultId: exampleKeyVault.ID(),
			KeyType:    pulumi.String("RSA"),
			KeySize:    pulumi.Int(2048),
			KeyOpts: pulumi.StringArray{
				pulumi.String("decrypt"),
				pulumi.String("encrypt"),
				pulumi.String("sign"),
				pulumi.String("unwrapKey"),
				pulumi.String("verify"),
				pulumi.String("wrapKey"),
			},
		}, pulumi.DependsOn([]pulumi.Resource{
			example_user,
		}))
		if err != nil {
			return err
		}
		exampleDiskEncryptionSet, err := compute.NewDiskEncryptionSet(ctx, "example", &compute.DiskEncryptionSetArgs{
			Name:              pulumi.String("des"),
			ResourceGroupName: example.Name,
			Location:          example.Location,
			KeyVaultKeyId:     exampleKey.ID(),
			Identity: &compute.DiskEncryptionSetIdentityArgs{
				Type: pulumi.String("SystemAssigned"),
			},
		})
		if err != nil {
			return err
		}
		_, err = keyvault.NewAccessPolicy(ctx, "example-disk", &keyvault.AccessPolicyArgs{
			KeyVaultId: exampleKeyVault.ID(),
			TenantId: pulumi.String(exampleDiskEncryptionSet.Identity.ApplyT(func(identity compute.DiskEncryptionSetIdentity) (*string, error) {
				return &identity.TenantId, nil
			}).(pulumi.StringPtrOutput)),
			ObjectId: pulumi.String(exampleDiskEncryptionSet.Identity.ApplyT(func(identity compute.DiskEncryptionSetIdentity) (*string, error) {
				return &identity.PrincipalId, nil
			}).(pulumi.StringPtrOutput)),
			KeyPermissions: pulumi.StringArray{
				pulumi.String("Create"),
				pulumi.String("Delete"),
				pulumi.String("Get"),
				pulumi.String("Purge"),
				pulumi.String("Recover"),
				pulumi.String("Update"),
				pulumi.String("List"),
				pulumi.String("Decrypt"),
				pulumi.String("Sign"),
			},
		})
		if err != nil {
			return err
		}
		_, err = authorization.NewAssignment(ctx, "example-disk", &authorization.AssignmentArgs{
			Scope:              exampleKeyVault.ID(),
			RoleDefinitionName: pulumi.String("Key Vault Crypto Service Encryption User"),
			PrincipalId: pulumi.String(exampleDiskEncryptionSet.Identity.ApplyT(func(identity compute.DiskEncryptionSetIdentity) (*string, error) {
				return &identity.PrincipalId, nil
			}).(pulumi.StringPtrOutput)),
		})
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.core.CoreFunctions;
import com.pulumi.azure.core.ResourceGroup;
import com.pulumi.azure.core.ResourceGroupArgs;
import com.pulumi.azure.keyvault.KeyVault;
import com.pulumi.azure.keyvault.KeyVaultArgs;
import com.pulumi.azure.keyvault.AccessPolicy;
import com.pulumi.azure.keyvault.AccessPolicyArgs;
import com.pulumi.azure.keyvault.Key;
import com.pulumi.azure.keyvault.KeyArgs;
import com.pulumi.azure.compute.DiskEncryptionSet;
import com.pulumi.azure.compute.DiskEncryptionSetArgs;
import com.pulumi.azure.compute.inputs.DiskEncryptionSetIdentityArgs;
import com.pulumi.azure.authorization.Assignment;
import com.pulumi.azure.authorization.AssignmentArgs;
import com.pulumi.resources.CustomResourceOptions;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        final var current = CoreFunctions.getClientConfig();

        var example = new ResourceGroup("example", ResourceGroupArgs.builder()
            .name("example-resources")
            .location("West Europe")
            .build());

        var exampleKeyVault = new KeyVault("exampleKeyVault", KeyVaultArgs.builder()
            .name("des-example-keyvault")
            .location(example.location())
            .resourceGroupName(example.name())
            .tenantId(current.applyValue(getClientConfigResult -> getClientConfigResult.tenantId()))
            .skuName("premium")
            .enabledForDiskEncryption(true)
            .purgeProtectionEnabled(true)
            .build());

        var example_user = new AccessPolicy("example-user", AccessPolicyArgs.builder()
            .keyVaultId(exampleKeyVault.id())
            .tenantId(current.applyValue(getClientConfigResult -> getClientConfigResult.tenantId()))
            .objectId(current.applyValue(getClientConfigResult -> getClientConfigResult.objectId()))
            .keyPermissions(            
                "Create",
                "Delete",
                "Get",
                "Purge",
                "Recover",
                "Update",
                "List",
                "Decrypt",
                "Sign",
                "GetRotationPolicy")
            .build());

        var exampleKey = new Key("exampleKey", KeyArgs.builder()
            .name("des-example-key")
            .keyVaultId(exampleKeyVault.id())
            .keyType("RSA")
            .keySize(2048)
            .keyOpts(            
                "decrypt",
                "encrypt",
                "sign",
                "unwrapKey",
                "verify",
                "wrapKey")
            .build(), CustomResourceOptions.builder()
                .dependsOn(example_user)
                .build());

        var exampleDiskEncryptionSet = new DiskEncryptionSet("exampleDiskEncryptionSet", DiskEncryptionSetArgs.builder()
            .name("des")
            .resourceGroupName(example.name())
            .location(example.location())
            .keyVaultKeyId(exampleKey.id())
            .identity(DiskEncryptionSetIdentityArgs.builder()
                .type("SystemAssigned")
                .build())
            .build());

        var example_disk = new AccessPolicy("example-disk", AccessPolicyArgs.builder()
            .keyVaultId(exampleKeyVault.id())
            .tenantId(exampleDiskEncryptionSet.identity().applyValue(identity -> identity.tenantId()))
            .objectId(exampleDiskEncryptionSet.identity().applyValue(identity -> identity.principalId()))
            .keyPermissions(            
                "Create",
                "Delete",
                "Get",
                "Purge",
                "Recover",
                "Update",
                "List",
                "Decrypt",
                "Sign")
            .build());

        var example_diskAssignment = new Assignment("example-diskAssignment", AssignmentArgs.builder()
            .scope(exampleKeyVault.id())
            .roleDefinitionName("Key Vault Crypto Service Encryption User")
            .principalId(exampleDiskEncryptionSet.identity().applyValue(identity -> identity.principalId()))
            .build());

    }
}
```
```yaml
resources:
  example:
    type: azure:core:ResourceGroup
    properties:
      name: example-resources
      location: West Europe
  exampleKeyVault:
    type: azure:keyvault:KeyVault
    name: example
    properties:
      name: des-example-keyvault
      location: ${example.location}
      resourceGroupName: ${example.name}
      tenantId: ${current.tenantId}
      skuName: premium
      enabledForDiskEncryption: true
      purgeProtectionEnabled: true
  exampleKey:
    type: azure:keyvault:Key
    name: example
    properties:
      name: des-example-key
      keyVaultId: ${exampleKeyVault.id}
      keyType: RSA
      keySize: 2048
      keyOpts:
        - decrypt
        - encrypt
        - sign
        - unwrapKey
        - verify
        - wrapKey
    options:
      dependsOn:
        - ${["example-user"]}
  exampleDiskEncryptionSet:
    type: azure:compute:DiskEncryptionSet
    name: example
    properties:
      name: des
      resourceGroupName: ${example.name}
      location: ${example.location}
      keyVaultKeyId: ${exampleKey.id}
      identity:
        type: SystemAssigned
  example-disk:
    type: azure:keyvault:AccessPolicy
    properties:
      keyVaultId: ${exampleKeyVault.id}
      tenantId: ${exampleDiskEncryptionSet.identity.tenantId}
      objectId: ${exampleDiskEncryptionSet.identity.principalId}
      keyPermissions:
        - Create
        - Delete
        - Get
        - Purge
        - Recover
        - Update
        - List
        - Decrypt
        - Sign
  example-user:
    type: azure:keyvault:AccessPolicy
    properties:
      keyVaultId: ${exampleKeyVault.id}
      tenantId: ${current.tenantId}
      objectId: ${current.objectId}
      keyPermissions:
        - Create
        - Delete
        - Get
        - Purge
        - Recover
        - Update
        - List
        - Decrypt
        - Sign
        - GetRotationPolicy
  example-diskAssignment:
    type: azure:authorization:Assignment
    name: example-disk
    properties:
      scope: ${exampleKeyVault.id}
      roleDefinitionName: Key Vault Crypto Service Encryption User
      principalId: ${exampleDiskEncryptionSet.identity.principalId}
variables:
  current:
    fn::invoke:
      function: azure:core:getClientConfig
      arguments: {}
```
<!--End PulumiCodeChooser -->


### With Automatic Key Rotation Enabled

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const current = azure.core.getClientConfig({});
const example = new azure.core.ResourceGroup("example", {
    name: "example-resources",
    location: "West Europe",
});
const exampleKeyVault = new azure.keyvault.KeyVault("example", {
    name: "des-example-keyvault",
    location: example.location,
    resourceGroupName: example.name,
    tenantId: current.then(current => current.tenantId),
    skuName: "premium",
    enabledForDiskEncryption: true,
    purgeProtectionEnabled: true,
});
const example_user = new azure.keyvault.AccessPolicy("example-user", {
    keyVaultId: exampleKeyVault.id,
    tenantId: current.then(current => current.tenantId),
    objectId: current.then(current => current.objectId),
    keyPermissions: [
        "Create",
        "Delete",
        "Get",
        "Purge",
        "Recover",
        "Update",
        "List",
        "Decrypt",
        "Sign",
        "GetRotationPolicy",
    ],
});
const exampleKey = new azure.keyvault.Key("example", {
    name: "des-example-key",
    keyVaultId: exampleKeyVault.id,
    keyType: "RSA",
    keySize: 2048,
    keyOpts: [
        "decrypt",
        "encrypt",
        "sign",
        "unwrapKey",
        "verify",
        "wrapKey",
    ],
}, {
    dependsOn: [example_user],
});
const exampleDiskEncryptionSet = new azure.compute.DiskEncryptionSet("example", {
    name: "des",
    resourceGroupName: example.name,
    location: example.location,
    keyVaultKeyId: exampleKey.versionlessId,
    autoKeyRotationEnabled: true,
    identity: {
        type: "SystemAssigned",
    },
});
const example_disk = new azure.keyvault.AccessPolicy("example-disk", {
    keyVaultId: exampleKeyVault.id,
    tenantId: exampleDiskEncryptionSet.identity.apply(identity => identity.tenantId),
    objectId: exampleDiskEncryptionSet.identity.apply(identity => identity.principalId),
    keyPermissions: [
        "Create",
        "Delete",
        "Get",
        "Purge",
        "Recover",
        "Update",
        "List",
        "Decrypt",
        "Sign",
    ],
});
const example_diskAssignment = new azure.authorization.Assignment("example-disk", {
    scope: exampleKeyVault.id,
    roleDefinitionName: "Key Vault Crypto Service Encryption User",
    principalId: exampleDiskEncryptionSet.identity.apply(identity => identity.principalId),
});
```
```python
import pulumi
import pulumi_azure as azure

current = azure.core.get_client_config()
example = azure.core.ResourceGroup("example",
    name="example-resources",
    location="West Europe")
example_key_vault = azure.keyvault.KeyVault("example",
    name="des-example-keyvault",
    location=example.location,
    resource_group_name=example.name,
    tenant_id=current.tenant_id,
    sku_name="premium",
    enabled_for_disk_encryption=True,
    purge_protection_enabled=True)
example_user = azure.keyvault.AccessPolicy("example-user",
    key_vault_id=example_key_vault.id,
    tenant_id=current.tenant_id,
    object_id=current.object_id,
    key_permissions=[
        "Create",
        "Delete",
        "Get",
        "Purge",
        "Recover",
        "Update",
        "List",
        "Decrypt",
        "Sign",
        "GetRotationPolicy",
    ])
example_key = azure.keyvault.Key("example",
    name="des-example-key",
    key_vault_id=example_key_vault.id,
    key_type="RSA",
    key_size=2048,
    key_opts=[
        "decrypt",
        "encrypt",
        "sign",
        "unwrapKey",
        "verify",
        "wrapKey",
    ],
    opts = pulumi.ResourceOptions(depends_on=[example_user]))
example_disk_encryption_set = azure.compute.DiskEncryptionSet("example",
    name="des",
    resource_group_name=example.name,
    location=example.location,
    key_vault_key_id=example_key.versionless_id,
    auto_key_rotation_enabled=True,
    identity={
        "type": "SystemAssigned",
    })
example_disk = azure.keyvault.AccessPolicy("example-disk",
    key_vault_id=example_key_vault.id,
    tenant_id=example_disk_encryption_set.identity.tenant_id,
    object_id=example_disk_encryption_set.identity.principal_id,
    key_permissions=[
        "Create",
        "Delete",
        "Get",
        "Purge",
        "Recover",
        "Update",
        "List",
        "Decrypt",
        "Sign",
    ])
example_disk_assignment = azure.authorization.Assignment("example-disk",
    scope=example_key_vault.id,
    role_definition_name="Key Vault Crypto Service Encryption User",
    principal_id=example_disk_encryption_set.identity.principal_id)
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var current = Azure.Core.GetClientConfig.Invoke();

    var example = new Azure.Core.ResourceGroup("example", new()
    {
        Name = "example-resources",
        Location = "West Europe",
    });

    var exampleKeyVault = new Azure.KeyVault.KeyVault("example", new()
    {
        Name = "des-example-keyvault",
        Location = example.Location,
        ResourceGroupName = example.Name,
        TenantId = current.Apply(getClientConfigResult => getClientConfigResult.TenantId),
        SkuName = "premium",
        EnabledForDiskEncryption = true,
        PurgeProtectionEnabled = true,
    });

    var example_user = new Azure.KeyVault.AccessPolicy("example-user", new()
    {
        KeyVaultId = exampleKeyVault.Id,
        TenantId = current.Apply(getClientConfigResult => getClientConfigResult.TenantId),
        ObjectId = current.Apply(getClientConfigResult => getClientConfigResult.ObjectId),
        KeyPermissions = new[]
        {
            "Create",
            "Delete",
            "Get",
            "Purge",
            "Recover",
            "Update",
            "List",
            "Decrypt",
            "Sign",
            "GetRotationPolicy",
        },
    });

    var exampleKey = new Azure.KeyVault.Key("example", new()
    {
        Name = "des-example-key",
        KeyVaultId = exampleKeyVault.Id,
        KeyType = "RSA",
        KeySize = 2048,
        KeyOpts = new[]
        {
            "decrypt",
            "encrypt",
            "sign",
            "unwrapKey",
            "verify",
            "wrapKey",
        },
    }, new CustomResourceOptions
    {
        DependsOn =
        {
            example_user,
        },
    });

    var exampleDiskEncryptionSet = new Azure.Compute.DiskEncryptionSet("example", new()
    {
        Name = "des",
        ResourceGroupName = example.Name,
        Location = example.Location,
        KeyVaultKeyId = exampleKey.VersionlessId,
        AutoKeyRotationEnabled = true,
        Identity = new Azure.Compute.Inputs.DiskEncryptionSetIdentityArgs
        {
            Type = "SystemAssigned",
        },
    });

    var example_disk = new Azure.KeyVault.AccessPolicy("example-disk", new()
    {
        KeyVaultId = exampleKeyVault.Id,
        TenantId = exampleDiskEncryptionSet.Identity.Apply(identity => identity.TenantId),
        ObjectId = exampleDiskEncryptionSet.Identity.Apply(identity => identity.PrincipalId),
        KeyPermissions = new[]
        {
            "Create",
            "Delete",
            "Get",
            "Purge",
            "Recover",
            "Update",
            "List",
            "Decrypt",
            "Sign",
        },
    });

    var example_diskAssignment = new Azure.Authorization.Assignment("example-disk", new()
    {
        Scope = exampleKeyVault.Id,
        RoleDefinitionName = "Key Vault Crypto Service Encryption User",
        PrincipalId = exampleDiskEncryptionSet.Identity.Apply(identity => identity.PrincipalId),
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/authorization"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/compute"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/keyvault"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		current, err := core.GetClientConfig(ctx, map[string]interface{}{}, nil)
		if err != nil {
			return err
		}
		example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
			Name:     pulumi.String("example-resources"),
			Location: pulumi.String("West Europe"),
		})
		if err != nil {
			return err
		}
		exampleKeyVault, err := keyvault.NewKeyVault(ctx, "example", &keyvault.KeyVaultArgs{
			Name:                     pulumi.String("des-example-keyvault"),
			Location:                 example.Location,
			ResourceGroupName:        example.Name,
			TenantId:                 pulumi.String(current.TenantId),
			SkuName:                  pulumi.String("premium"),
			EnabledForDiskEncryption: pulumi.Bool(true),
			PurgeProtectionEnabled:   pulumi.Bool(true),
		})
		if err != nil {
			return err
		}
		_, err = keyvault.NewAccessPolicy(ctx, "example-user", &keyvault.AccessPolicyArgs{
			KeyVaultId: exampleKeyVault.ID(),
			TenantId:   pulumi.String(current.TenantId),
			ObjectId:   pulumi.String(current.ObjectId),
			KeyPermissions: pulumi.StringArray{
				pulumi.String("Create"),
				pulumi.String("Delete"),
				pulumi.String("Get"),
				pulumi.String("Purge"),
				pulumi.String("Recover"),
				pulumi.String("Update"),
				pulumi.String("List"),
				pulumi.String("Decrypt"),
				pulumi.String("Sign"),
				pulumi.String("GetRotationPolicy"),
			},
		})
		if err != nil {
			return err
		}
		exampleKey, err := keyvault.NewKey(ctx, "example", &keyvault.KeyArgs{
			Name:       pulumi.String("des-example-key"),
			KeyVaultId: exampleKeyVault.ID(),
			KeyType:    pulumi.String("RSA"),
			KeySize:    pulumi.Int(2048),
			KeyOpts: pulumi.StringArray{
				pulumi.String("decrypt"),
				pulumi.String("encrypt"),
				pulumi.String("sign"),
				pulumi.String("unwrapKey"),
				pulumi.String("verify"),
				pulumi.String("wrapKey"),
			},
		}, pulumi.DependsOn([]pulumi.Resource{
			example_user,
		}))
		if err != nil {
			return err
		}
		exampleDiskEncryptionSet, err := compute.NewDiskEncryptionSet(ctx, "example", &compute.DiskEncryptionSetArgs{
			Name:                   pulumi.String("des"),
			ResourceGroupName:      example.Name,
			Location:               example.Location,
			KeyVaultKeyId:          exampleKey.VersionlessId,
			AutoKeyRotationEnabled: pulumi.Bool(true),
			Identity: &compute.DiskEncryptionSetIdentityArgs{
				Type: pulumi.String("SystemAssigned"),
			},
		})
		if err != nil {
			return err
		}
		_, err = keyvault.NewAccessPolicy(ctx, "example-disk", &keyvault.AccessPolicyArgs{
			KeyVaultId: exampleKeyVault.ID(),
			TenantId: pulumi.String(exampleDiskEncryptionSet.Identity.ApplyT(func(identity compute.DiskEncryptionSetIdentity) (*string, error) {
				return &identity.TenantId, nil
			}).(pulumi.StringPtrOutput)),
			ObjectId: pulumi.String(exampleDiskEncryptionSet.Identity.ApplyT(func(identity compute.DiskEncryptionSetIdentity) (*string, error) {
				return &identity.PrincipalId, nil
			}).(pulumi.StringPtrOutput)),
			KeyPermissions: pulumi.StringArray{
				pulumi.String("Create"),
				pulumi.String("Delete"),
				pulumi.String("Get"),
				pulumi.String("Purge"),
				pulumi.String("Recover"),
				pulumi.String("Update"),
				pulumi.String("List"),
				pulumi.String("Decrypt"),
				pulumi.String("Sign"),
			},
		})
		if err != nil {
			return err
		}
		_, err = authorization.NewAssignment(ctx, "example-disk", &authorization.AssignmentArgs{
			Scope:              exampleKeyVault.ID(),
			RoleDefinitionName: pulumi.String("Key Vault Crypto Service Encryption User"),
			PrincipalId: pulumi.String(exampleDiskEncryptionSet.Identity.ApplyT(func(identity compute.DiskEncryptionSetIdentity) (*string, error) {
				return &identity.PrincipalId, nil
			}).(pulumi.StringPtrOutput)),
		})
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.core.CoreFunctions;
import com.pulumi.azure.core.ResourceGroup;
import com.pulumi.azure.core.ResourceGroupArgs;
import com.pulumi.azure.keyvault.KeyVault;
import com.pulumi.azure.keyvault.KeyVaultArgs;
import com.pulumi.azure.keyvault.AccessPolicy;
import com.pulumi.azure.keyvault.AccessPolicyArgs;
import com.pulumi.azure.keyvault.Key;
import com.pulumi.azure.keyvault.KeyArgs;
import com.pulumi.azure.compute.DiskEncryptionSet;
import com.pulumi.azure.compute.DiskEncryptionSetArgs;
import com.pulumi.azure.compute.inputs.DiskEncryptionSetIdentityArgs;
import com.pulumi.azure.authorization.Assignment;
import com.pulumi.azure.authorization.AssignmentArgs;
import com.pulumi.resources.CustomResourceOptions;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        final var current = CoreFunctions.getClientConfig();

        var example = new ResourceGroup("example", ResourceGroupArgs.builder()
            .name("example-resources")
            .location("West Europe")
            .build());

        var exampleKeyVault = new KeyVault("exampleKeyVault", KeyVaultArgs.builder()
            .name("des-example-keyvault")
            .location(example.location())
            .resourceGroupName(example.name())
            .tenantId(current.applyValue(getClientConfigResult -> getClientConfigResult.tenantId()))
            .skuName("premium")
            .enabledForDiskEncryption(true)
            .purgeProtectionEnabled(true)
            .build());

        var example_user = new AccessPolicy("example-user", AccessPolicyArgs.builder()
            .keyVaultId(exampleKeyVault.id())
            .tenantId(current.applyValue(getClientConfigResult -> getClientConfigResult.tenantId()))
            .objectId(current.applyValue(getClientConfigResult -> getClientConfigResult.objectId()))
            .keyPermissions(            
                "Create",
                "Delete",
                "Get",
                "Purge",
                "Recover",
                "Update",
                "List",
                "Decrypt",
                "Sign",
                "GetRotationPolicy")
            .build());

        var exampleKey = new Key("exampleKey", KeyArgs.builder()
            .name("des-example-key")
            .keyVaultId(exampleKeyVault.id())
            .keyType("RSA")
            .keySize(2048)
            .keyOpts(            
                "decrypt",
                "encrypt",
                "sign",
                "unwrapKey",
                "verify",
                "wrapKey")
            .build(), CustomResourceOptions.builder()
                .dependsOn(example_user)
                .build());

        var exampleDiskEncryptionSet = new DiskEncryptionSet("exampleDiskEncryptionSet", DiskEncryptionSetArgs.builder()
            .name("des")
            .resourceGroupName(example.name())
            .location(example.location())
            .keyVaultKeyId(exampleKey.versionlessId())
            .autoKeyRotationEnabled(true)
            .identity(DiskEncryptionSetIdentityArgs.builder()
                .type("SystemAssigned")
                .build())
            .build());

        var example_disk = new AccessPolicy("example-disk", AccessPolicyArgs.builder()
            .keyVaultId(exampleKeyVault.id())
            .tenantId(exampleDiskEncryptionSet.identity().applyValue(identity -> identity.tenantId()))
            .objectId(exampleDiskEncryptionSet.identity().applyValue(identity -> identity.principalId()))
            .keyPermissions(            
                "Create",
                "Delete",
                "Get",
                "Purge",
                "Recover",
                "Update",
                "List",
                "Decrypt",
                "Sign")
            .build());

        var example_diskAssignment = new Assignment("example-diskAssignment", AssignmentArgs.builder()
            .scope(exampleKeyVault.id())
            .roleDefinitionName("Key Vault Crypto Service Encryption User")
            .principalId(exampleDiskEncryptionSet.identity().applyValue(identity -> identity.principalId()))
            .build());

    }
}
```
```yaml
resources:
  example:
    type: azure:core:ResourceGroup
    properties:
      name: example-resources
      location: West Europe
  exampleKeyVault:
    type: azure:keyvault:KeyVault
    name: example
    properties:
      name: des-example-keyvault
      location: ${example.location}
      resourceGroupName: ${example.name}
      tenantId: ${current.tenantId}
      skuName: premium
      enabledForDiskEncryption: true
      purgeProtectionEnabled: true
  exampleKey:
    type: azure:keyvault:Key
    name: example
    properties:
      name: des-example-key
      keyVaultId: ${exampleKeyVault.id}
      keyType: RSA
      keySize: 2048
      keyOpts:
        - decrypt
        - encrypt
        - sign
        - unwrapKey
        - verify
        - wrapKey
    options:
      dependsOn:
        - ${["example-user"]}
  exampleDiskEncryptionSet:
    type: azure:compute:DiskEncryptionSet
    name: example
    properties:
      name: des
      resourceGroupName: ${example.name}
      location: ${example.location}
      keyVaultKeyId: ${exampleKey.versionlessId}
      autoKeyRotationEnabled: true
      identity:
        type: SystemAssigned
  example-disk:
    type: azure:keyvault:AccessPolicy
    properties:
      keyVaultId: ${exampleKeyVault.id}
      tenantId: ${exampleDiskEncryptionSet.identity.tenantId}
      objectId: ${exampleDiskEncryptionSet.identity.principalId}
      keyPermissions:
        - Create
        - Delete
        - Get
        - Purge
        - Recover
        - Update
        - List
        - Decrypt
        - Sign
  example-user:
    type: azure:keyvault:AccessPolicy
    properties:
      keyVaultId: ${exampleKeyVault.id}
      tenantId: ${current.tenantId}
      objectId: ${current.objectId}
      keyPermissions:
        - Create
        - Delete
        - Get
        - Purge
        - Recover
        - Update
        - List
        - Decrypt
        - Sign
        - GetRotationPolicy
  example-diskAssignment:
    type: azure:authorization:Assignment
    name: example-disk
    properties:
      scope: ${exampleKeyVault.id}
      roleDefinitionName: Key Vault Crypto Service Encryption User
      principalId: ${exampleDiskEncryptionSet.identity.principalId}
variables:
  current:
    fn::invoke:
      function: azure:core:getClientConfig
      arguments: {}
```
<!--End PulumiCodeChooser -->

## Import

Disk Encryption Sets can be imported using the `resource id`, e.g.

```sh
$ pulumi import azure:compute/diskEncryptionSet:DiskEncryptionSet example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Compute/diskEncryptionSets/encryptionSet1
```


autoKeyRotationEnabledB
 Ä
encryptionTypeB" «The type of key used to encrypt the data of the disk. Possible values are `EncryptionAtRestWithCustomerKey`, `EncryptionAtRestWithPlatformAndCustomerKeys` and `ConfidentialVmEncryptedWithCustomerKey`. Defaults to `EncryptionAtRestWithCustomerKey`. Changing this forces a new resource to be created.
i
federatedClientIdB" NMulti-tenant application client id to access key vault in a different tenant.

identityk:i
g
computeDiskEncryptionSetIdentityAazure:compute/DiskEncryptionSetIdentity:DiskEncryptionSetIdentity&An `identity` block as defined below.
Í
keyVaultKeyIdB" µSpecifies the URL to a Key Vault Key (either from a Key Vault Key, or the Key URL for the Key Vault Secret). Exactly one of `managed_hsm_key_id`, `key_vault_key_id` must be specified.

> **NOTE** Access to the KeyVault must be granted for this Disk Encryption Set, if you want to further use this Disk Encryption Set in a Managed Disk or Virtual Machine, or Virtual Machine Scale Set. For instructions, please refer to the doc of [Server side encryption of Azure managed disks](https://docs.microsoft.com/azure/virtual-machines/linux/disk-encryption).

> **NOTE** A KeyVault or Managed HSM using enable_rbac_authorization requires to use `azure.authorization.Assignment` to assign the role `Key Vault Crypto Service Encryption User` to this Disk Encryption Set.
In this case, `azure.keyvault.AccessPolicy` is not needed.

locationB" tSpecifies the Azure Region where the Disk Encryption Set exists. Changing this forces a new resource to be created.

managedHsmKeyIdB" nKey ID of a key in a managed HSM.  Exactly one of `managed_hsm_key_id`, `key_vault_key_id` must be specified.
f
nameB" XThe name of the Disk Encryption Set. Changing this forces a new resource to be created.
¢
resourceGroupName" Specifies the name of the Resource Group where the Disk Encryption Set should exist. Changing this forces a new resource to be created.
H
tagsB2" 8A mapping of tags to assign to the Disk Encryption Set.
"
autoKeyRotationEnabledB
 "Ä
encryptionTypeB" «The type of key used to encrypt the data of the disk. Possible values are `EncryptionAtRestWithCustomerKey`, `EncryptionAtRestWithPlatformAndCustomerKeys` and `ConfidentialVmEncryptedWithCustomerKey`. Defaults to `EncryptionAtRestWithCustomerKey`. Changing this forces a new resource to be created.
"i
federatedClientIdB" NMulti-tenant application client id to access key vault in a different tenant.
"
identityk:i
g
computeDiskEncryptionSetIdentityAazure:compute/DiskEncryptionSetIdentity:DiskEncryptionSetIdentity&An `identity` block as defined below.
"Í
keyVaultKeyIdB" µSpecifies the URL to a Key Vault Key (either from a Key Vault Key, or the Key URL for the Key Vault Secret). Exactly one of `managed_hsm_key_id`, `key_vault_key_id` must be specified.

> **NOTE** Access to the KeyVault must be granted for this Disk Encryption Set, if you want to further use this Disk Encryption Set in a Managed Disk or Virtual Machine, or Virtual Machine Scale Set. For instructions, please refer to the doc of [Server side encryption of Azure managed disks](https://docs.microsoft.com/azure/virtual-machines/linux/disk-encryption).

> **NOTE** A KeyVault or Managed HSM using enable_rbac_authorization requires to use `azure.authorization.Assignment` to assign the role `Key Vault Crypto Service Encryption User` to this Disk Encryption Set.
In this case, `azure.keyvault.AccessPolicy` is not needed.
"u
keyVaultKeyUrl" _The URL for the Key Vault Key or Key Vault Secret that is currently being used by the service.
"
location" tSpecifies the Azure Region where the Disk Encryption Set exists. Changing this forces a new resource to be created.
"
managedHsmKeyIdB" nKey ID of a key in a managed HSM.  Exactly one of `managed_hsm_key_id`, `key_vault_key_id` must be specified.
"d
name" XThe name of the Disk Encryption Set. Changing this forces a new resource to be created.
"¢
resourceGroupName" Specifies the name of the Resource Group where the Disk Encryption Set should exist. Changing this forces a new resource to be created.
"H
tagsB2" 8A mapping of tags to assign to the Disk Encryption Set.
*¹
7
compute	Extension!azure:compute/extension:ExtensionÁManages a Virtual Machine Extension to provide post deployment configuration
and run automated tasks.

> **NOTE:** Custom Script Extensions for Linux & Windows require that the `commandToExecute` returns a `0` exit code to be classified as successfully deployed. You can achieve this by appending `exit 0` to the end of your `commandToExecute`.

> **NOTE:** Custom Script Extensions require that the Azure Virtual Machine Guest Agent is running on the Virtual Machine.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";
import * as std from "@pulumi/std";

const example = new azure.core.ResourceGroup("example", {
    name: "example-resources",
    location: "West Europe",
});
const exampleVirtualNetwork = new azure.network.VirtualNetwork("example", {
    name: "acctvn",
    addressSpaces: ["10.0.0.0/16"],
    location: example.location,
    resourceGroupName: example.name,
});
const exampleSubnet = new azure.network.Subnet("example", {
    name: "acctsub",
    resourceGroupName: example.name,
    virtualNetworkName: exampleVirtualNetwork.name,
    addressPrefixes: ["10.0.2.0/24"],
});
const exampleNetworkInterface = new azure.network.NetworkInterface("example", {
    name: "acctni",
    location: example.location,
    resourceGroupName: example.name,
    ipConfigurations: [{
        name: "testconfiguration1",
        subnetId: exampleSubnet.id,
        privateIpAddressAllocation: "Dynamic",
    }],
});
const exampleLinuxVirtualMachine = new azure.compute.LinuxVirtualMachine("example", {
    name: "example-machine",
    resourceGroupName: example.name,
    location: example.location,
    size: "Standard_F2",
    adminUsername: "adminuser",
    networkInterfaceIds: [exampleNetworkInterface.id],
    adminSshKeys: [{
        username: "adminuser",
        publicKey: std.file({
            input: "~/.ssh/id_rsa.pub",
        }).then(invoke => invoke.result),
    }],
    osDisk: {
        caching: "ReadWrite",
        storageAccountType: "Standard_LRS",
    },
    sourceImageReference: {
        publisher: "Canonical",
        offer: "0001-com-ubuntu-server-jammy",
        sku: "22_04-lts",
        version: "latest",
    },
});
const exampleExtension = new azure.compute.Extension("example", {
    name: "hostname",
    virtualMachineId: exampleLinuxVirtualMachine.id,
    publisher: "Microsoft.Azure.Extensions",
    type: "CustomScript",
    typeHandlerVersion: "2.0",
    settings: ` {
  "commandToExecute": "hostname && uptime"
 }
`,
    tags: {
        environment: "Production",
    },
});
```
```python
import pulumi
import pulumi_azure as azure
import pulumi_std as std

example = azure.core.ResourceGroup("example",
    name="example-resources",
    location="West Europe")
example_virtual_network = azure.network.VirtualNetwork("example",
    name="acctvn",
    address_spaces=["10.0.0.0/16"],
    location=example.location,
    resource_group_name=example.name)
example_subnet = azure.network.Subnet("example",
    name="acctsub",
    resource_group_name=example.name,
    virtual_network_name=example_virtual_network.name,
    address_prefixes=["10.0.2.0/24"])
example_network_interface = azure.network.NetworkInterface("example",
    name="acctni",
    location=example.location,
    resource_group_name=example.name,
    ip_configurations=[{
        "name": "testconfiguration1",
        "subnet_id": example_subnet.id,
        "private_ip_address_allocation": "Dynamic",
    }])
example_linux_virtual_machine = azure.compute.LinuxVirtualMachine("example",
    name="example-machine",
    resource_group_name=example.name,
    location=example.location,
    size="Standard_F2",
    admin_username="adminuser",
    network_interface_ids=[example_network_interface.id],
    admin_ssh_keys=[{
        "username": "adminuser",
        "public_key": std.file(input="~/.ssh/id_rsa.pub").result,
    }],
    os_disk={
        "caching": "ReadWrite",
        "storage_account_type": "Standard_LRS",
    },
    source_image_reference={
        "publisher": "Canonical",
        "offer": "0001-com-ubuntu-server-jammy",
        "sku": "22_04-lts",
        "version": "latest",
    })
example_extension = azure.compute.Extension("example",
    name="hostname",
    virtual_machine_id=example_linux_virtual_machine.id,
    publisher="Microsoft.Azure.Extensions",
    type="CustomScript",
    type_handler_version="2.0",
    settings=""" {
  "commandToExecute": "hostname && uptime"
 }
""",
    tags={
        "environment": "Production",
    })
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;
using Std = Pulumi.Std;

return await Deployment.RunAsync(() => 
{
    var example = new Azure.Core.ResourceGroup("example", new()
    {
        Name = "example-resources",
        Location = "West Europe",
    });

    var exampleVirtualNetwork = new Azure.Network.VirtualNetwork("example", new()
    {
        Name = "acctvn",
        AddressSpaces = new[]
        {
            "10.0.0.0/16",
        },
        Location = example.Location,
        ResourceGroupName = example.Name,
    });

    var exampleSubnet = new Azure.Network.Subnet("example", new()
    {
        Name = "acctsub",
        ResourceGroupName = example.Name,
        VirtualNetworkName = exampleVirtualNetwork.Name,
        AddressPrefixes = new[]
        {
            "10.0.2.0/24",
        },
    });

    var exampleNetworkInterface = new Azure.Network.NetworkInterface("example", new()
    {
        Name = "acctni",
        Location = example.Location,
        ResourceGroupName = example.Name,
        IpConfigurations = new[]
        {
            new Azure.Network.Inputs.NetworkInterfaceIpConfigurationArgs
            {
                Name = "testconfiguration1",
                SubnetId = exampleSubnet.Id,
                PrivateIpAddressAllocation = "Dynamic",
            },
        },
    });

    var exampleLinuxVirtualMachine = new Azure.Compute.LinuxVirtualMachine("example", new()
    {
        Name = "example-machine",
        ResourceGroupName = example.Name,
        Location = example.Location,
        Size = "Standard_F2",
        AdminUsername = "adminuser",
        NetworkInterfaceIds = new[]
        {
            exampleNetworkInterface.Id,
        },
        AdminSshKeys = new[]
        {
            new Azure.Compute.Inputs.LinuxVirtualMachineAdminSshKeyArgs
            {
                Username = "adminuser",
                PublicKey = Std.File.Invoke(new()
                {
                    Input = "~/.ssh/id_rsa.pub",
                }).Apply(invoke => invoke.Result),
            },
        },
        OsDisk = new Azure.Compute.Inputs.LinuxVirtualMachineOsDiskArgs
        {
            Caching = "ReadWrite",
            StorageAccountType = "Standard_LRS",
        },
        SourceImageReference = new Azure.Compute.Inputs.LinuxVirtualMachineSourceImageReferenceArgs
        {
            Publisher = "Canonical",
            Offer = "0001-com-ubuntu-server-jammy",
            Sku = "22_04-lts",
            Version = "latest",
        },
    });

    var exampleExtension = new Azure.Compute.Extension("example", new()
    {
        Name = "hostname",
        VirtualMachineId = exampleLinuxVirtualMachine.Id,
        Publisher = "Microsoft.Azure.Extensions",
        Type = "CustomScript",
        TypeHandlerVersion = "2.0",
        Settings = @" {
  ""commandToExecute"": ""hostname && uptime""
 }
",
        Tags = 
        {
            { "environment", "Production" },
        },
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/compute"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/network"
	"github.com/pulumi/pulumi-std/sdk/go/std"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
			Name:     pulumi.String("example-resources"),
			Location: pulumi.String("West Europe"),
		})
		if err != nil {
			return err
		}
		exampleVirtualNetwork, err := network.NewVirtualNetwork(ctx, "example", &network.VirtualNetworkArgs{
			Name: pulumi.String("acctvn"),
			AddressSpaces: pulumi.StringArray{
				pulumi.String("10.0.0.0/16"),
			},
			Location:          example.Location,
			ResourceGroupName: example.Name,
		})
		if err != nil {
			return err
		}
		exampleSubnet, err := network.NewSubnet(ctx, "example", &network.SubnetArgs{
			Name:               pulumi.String("acctsub"),
			ResourceGroupName:  example.Name,
			VirtualNetworkName: exampleVirtualNetwork.Name,
			AddressPrefixes: pulumi.StringArray{
				pulumi.String("10.0.2.0/24"),
			},
		})
		if err != nil {
			return err
		}
		exampleNetworkInterface, err := network.NewNetworkInterface(ctx, "example", &network.NetworkInterfaceArgs{
			Name:              pulumi.String("acctni"),
			Location:          example.Location,
			ResourceGroupName: example.Name,
			IpConfigurations: network.NetworkInterfaceIpConfigurationArray{
				&network.NetworkInterfaceIpConfigurationArgs{
					Name:                       pulumi.String("testconfiguration1"),
					SubnetId:                   exampleSubnet.ID(),
					PrivateIpAddressAllocation: pulumi.String("Dynamic"),
				},
			},
		})
		if err != nil {
			return err
		}
		invokeFile, err := std.File(ctx, &std.FileArgs{
			Input: "~/.ssh/id_rsa.pub",
		}, nil)
		if err != nil {
			return err
		}
		exampleLinuxVirtualMachine, err := compute.NewLinuxVirtualMachine(ctx, "example", &compute.LinuxVirtualMachineArgs{
			Name:              pulumi.String("example-machine"),
			ResourceGroupName: example.Name,
			Location:          example.Location,
			Size:              pulumi.String("Standard_F2"),
			AdminUsername:     pulumi.String("adminuser"),
			NetworkInterfaceIds: pulumi.StringArray{
				exampleNetworkInterface.ID(),
			},
			AdminSshKeys: compute.LinuxVirtualMachineAdminSshKeyArray{
				&compute.LinuxVirtualMachineAdminSshKeyArgs{
					Username:  pulumi.String("adminuser"),
					PublicKey: pulumi.String(invokeFile.Result),
				},
			},
			OsDisk: &compute.LinuxVirtualMachineOsDiskArgs{
				Caching:            pulumi.String("ReadWrite"),
				StorageAccountType: pulumi.String("Standard_LRS"),
			},
			SourceImageReference: &compute.LinuxVirtualMachineSourceImageReferenceArgs{
				Publisher: pulumi.String("Canonical"),
				Offer:     pulumi.String("0001-com-ubuntu-server-jammy"),
				Sku:       pulumi.String("22_04-lts"),
				Version:   pulumi.String("latest"),
			},
		})
		if err != nil {
			return err
		}
		_, err = compute.NewExtension(ctx, "example", &compute.ExtensionArgs{
			Name:               pulumi.String("hostname"),
			VirtualMachineId:   exampleLinuxVirtualMachine.ID(),
			Publisher:          pulumi.String("Microsoft.Azure.Extensions"),
			Type:               pulumi.String("CustomScript"),
			TypeHandlerVersion: pulumi.String("2.0"),
			Settings:           pulumi.String(" {\n  \"commandToExecute\": \"hostname && uptime\"\n }\n"),
			Tags: pulumi.StringMap{
				"environment": pulumi.String("Production"),
			},
		})
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.core.ResourceGroup;
import com.pulumi.azure.core.ResourceGroupArgs;
import com.pulumi.azure.network.VirtualNetwork;
import com.pulumi.azure.network.VirtualNetworkArgs;
import com.pulumi.azure.network.Subnet;
import com.pulumi.azure.network.SubnetArgs;
import com.pulumi.azure.network.NetworkInterface;
import com.pulumi.azure.network.NetworkInterfaceArgs;
import com.pulumi.azure.network.inputs.NetworkInterfaceIpConfigurationArgs;
import com.pulumi.azure.compute.LinuxVirtualMachine;
import com.pulumi.azure.compute.LinuxVirtualMachineArgs;
import com.pulumi.azure.compute.inputs.LinuxVirtualMachineAdminSshKeyArgs;
import com.pulumi.azure.compute.inputs.LinuxVirtualMachineOsDiskArgs;
import com.pulumi.azure.compute.inputs.LinuxVirtualMachineSourceImageReferenceArgs;
import com.pulumi.azure.compute.Extension;
import com.pulumi.azure.compute.ExtensionArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        var example = new ResourceGroup("example", ResourceGroupArgs.builder()
            .name("example-resources")
            .location("West Europe")
            .build());

        var exampleVirtualNetwork = new VirtualNetwork("exampleVirtualNetwork", VirtualNetworkArgs.builder()
            .name("acctvn")
            .addressSpaces("10.0.0.0/16")
            .location(example.location())
            .resourceGroupName(example.name())
            .build());

        var exampleSubnet = new Subnet("exampleSubnet", SubnetArgs.builder()
            .name("acctsub")
            .resourceGroupName(example.name())
            .virtualNetworkName(exampleVirtualNetwork.name())
            .addressPrefixes("10.0.2.0/24")
            .build());

        var exampleNetworkInterface = new NetworkInterface("exampleNetworkInterface", NetworkInterfaceArgs.builder()
            .name("acctni")
            .location(example.location())
            .resourceGroupName(example.name())
            .ipConfigurations(NetworkInterfaceIpConfigurationArgs.builder()
                .name("testconfiguration1")
                .subnetId(exampleSubnet.id())
                .privateIpAddressAllocation("Dynamic")
                .build())
            .build());

        var exampleLinuxVirtualMachine = new LinuxVirtualMachine("exampleLinuxVirtualMachine", LinuxVirtualMachineArgs.builder()
            .name("example-machine")
            .resourceGroupName(example.name())
            .location(example.location())
            .size("Standard_F2")
            .adminUsername("adminuser")
            .networkInterfaceIds(exampleNetworkInterface.id())
            .adminSshKeys(LinuxVirtualMachineAdminSshKeyArgs.builder()
                .username("adminuser")
                .publicKey(StdFunctions.file(FileArgs.builder()
                    .input("~/.ssh/id_rsa.pub")
                    .build()).result())
                .build())
            .osDisk(LinuxVirtualMachineOsDiskArgs.builder()
                .caching("ReadWrite")
                .storageAccountType("Standard_LRS")
                .build())
            .sourceImageReference(LinuxVirtualMachineSourceImageReferenceArgs.builder()
                .publisher("Canonical")
                .offer("0001-com-ubuntu-server-jammy")
                .sku("22_04-lts")
                .version("latest")
                .build())
            .build());

        var exampleExtension = new Extension("exampleExtension", ExtensionArgs.builder()
            .name("hostname")
            .virtualMachineId(exampleLinuxVirtualMachine.id())
            .publisher("Microsoft.Azure.Extensions")
            .type("CustomScript")
            .typeHandlerVersion("2.0")
            .settings("""
 {
  "commandToExecute": "hostname && uptime"
 }
            """)
            .tags(Map.of("environment", "Production"))
            .build());

    }
}
```
```yaml
resources:
  example:
    type: azure:core:ResourceGroup
    properties:
      name: example-resources
      location: West Europe
  exampleVirtualNetwork:
    type: azure:network:VirtualNetwork
    name: example
    properties:
      name: acctvn
      addressSpaces:
        - 10.0.0.0/16
      location: ${example.location}
      resourceGroupName: ${example.name}
  exampleSubnet:
    type: azure:network:Subnet
    name: example
    properties:
      name: acctsub
      resourceGroupName: ${example.name}
      virtualNetworkName: ${exampleVirtualNetwork.name}
      addressPrefixes:
        - 10.0.2.0/24
  exampleNetworkInterface:
    type: azure:network:NetworkInterface
    name: example
    properties:
      name: acctni
      location: ${example.location}
      resourceGroupName: ${example.name}
      ipConfigurations:
        - name: testconfiguration1
          subnetId: ${exampleSubnet.id}
          privateIpAddressAllocation: Dynamic
  exampleLinuxVirtualMachine:
    type: azure:compute:LinuxVirtualMachine
    name: example
    properties:
      name: example-machine
      resourceGroupName: ${example.name}
      location: ${example.location}
      size: Standard_F2
      adminUsername: adminuser
      networkInterfaceIds:
        - ${exampleNetworkInterface.id}
      adminSshKeys:
        - username: adminuser
          publicKey:
            fn::invoke:
              function: std:file
              arguments:
                input: ~/.ssh/id_rsa.pub
              return: result
      osDisk:
        caching: ReadWrite
        storageAccountType: Standard_LRS
      sourceImageReference:
        publisher: Canonical
        offer: 0001-com-ubuntu-server-jammy
        sku: 22_04-lts
        version: latest
  exampleExtension:
    type: azure:compute:Extension
    name: example
    properties:
      name: hostname
      virtualMachineId: ${exampleLinuxVirtualMachine.id}
      publisher: Microsoft.Azure.Extensions
      type: CustomScript
      typeHandlerVersion: '2.0'
      settings: |2
         {
          "commandToExecute": "hostname && uptime"
         }
      tags:
        environment: Production
```
<!--End PulumiCodeChooser -->

## Import

Virtual Machine Extensions can be imported using the `resource id`, e.g.

```sh
$ pulumi import azure:compute/extension:Extension example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Compute/virtualMachines/myVM/extensions/extensionName
```


autoUpgradeMinorVersionB
 kSpecifies if the platform deploys the latest minor version update to the `type_handler_version` specified.

automaticUpgradeEnabledB
 rShould the Extension be automatically updated whenever the Publisher releases a new version of this VM Extension?
£
failureSuppressionEnabledB
 ÿShould failures from the extension be suppressed? Possible values are `true` or `false`. Defaults to `false`.

> **NOTE:** Operational failures such as not connecting to the VM will not be suppressed regardless of the `failure_suppression_enabled` value.
t
nameB" fThe name of the virtual machine extension peering. Changing this forces a new resource to be created.
Ô
protectedSettingsB" ¸The protected_settings passed to the extension, like settings, these are specified as a JSON object in a string.

> **Please Note:** Certain VM Extensions require that the keys in the `protected_settings` block are case sensitive. If you're seeing unhelpful errors, please ensure the keys are consistent with how Azure is expecting them (for instance, for the `JsonADDomainExtension` extension, the keys are expected to be in `TitleCase`.)
Ô
protectedSettingsFromKeyVaultB:

compute&ExtensionProtectedSettingsFromKeyVault[azure:compute/ExtensionProtectedSettingsFromKeyVault:ExtensionProtectedSettingsFromKeyVaultA `protected_settings_from_key_vault` block as defined below.

> **Note:** `protected_settings_from_key_vault` cannot be used with `protected_settings`

provisionAfterExtensionsB*" `Specifies the collection of extension names after which this extension needs to be provisioned.

	publisher" The publisher of the extension, available publishers can be found by using the Azure CLI. Changing this forces a new resource to be created.
¨
settingsB" The settings passed to the extension, these are specified as a JSON object in a string.

> **Please Note:** Certain VM Extensions require that the keys in the `settings` block are case sensitive. If you're seeing unhelpful errors, please ensure the keys are consistent with how Azure is expecting them (for instance, for the `JsonADDomainExtension` extension, the keys are expected to be in `TitleCase`.)
=
tagsB2" -A mapping of tags to assign to the resource.

type" The type of extension, available types for a publisher can be found using the Azure CLI.

> **Note:** The `Publisher` and `Type` of Virtual Machine Extensions can be found using the Azure CLI, via:

```shell
az vm extension image list --location westus -o table
```
~
typeHandlerVersion" dSpecifies the version of the extension to use, available versions can be found using the Azure CLI.
i
virtualMachineId" QThe ID of the Virtual Machine. Changing this forces a new resource to be created
"
autoUpgradeMinorVersionB
 kSpecifies if the platform deploys the latest minor version update to the `type_handler_version` specified.
"
automaticUpgradeEnabledB
 rShould the Extension be automatically updated whenever the Publisher releases a new version of this VM Extension?
"£
failureSuppressionEnabledB
 ÿShould failures from the extension be suppressed? Possible values are `true` or `false`. Defaults to `false`.

> **NOTE:** Operational failures such as not connecting to the VM will not be suppressed regardless of the `failure_suppression_enabled` value.
"r
name" fThe name of the virtual machine extension peering. Changing this forces a new resource to be created.
"Ô
protectedSettingsB" ¸The protected_settings passed to the extension, like settings, these are specified as a JSON object in a string.

> **Please Note:** Certain VM Extensions require that the keys in the `protected_settings` block are case sensitive. If you're seeing unhelpful errors, please ensure the keys are consistent with how Azure is expecting them (for instance, for the `JsonADDomainExtension` extension, the keys are expected to be in `TitleCase`.)
"Ô
protectedSettingsFromKeyVaultB:

compute&ExtensionProtectedSettingsFromKeyVault[azure:compute/ExtensionProtectedSettingsFromKeyVault:ExtensionProtectedSettingsFromKeyVaultA `protected_settings_from_key_vault` block as defined below.

> **Note:** `protected_settings_from_key_vault` cannot be used with `protected_settings`
"
provisionAfterExtensionsB*" `Specifies the collection of extension names after which this extension needs to be provisioned.
"
	publisher" The publisher of the extension, available publishers can be found by using the Azure CLI. Changing this forces a new resource to be created.
"¨
settingsB" The settings passed to the extension, these are specified as a JSON object in a string.

> **Please Note:** Certain VM Extensions require that the keys in the `settings` block are case sensitive. If you're seeing unhelpful errors, please ensure the keys are consistent with how Azure is expecting them (for instance, for the `JsonADDomainExtension` extension, the keys are expected to be in `TitleCase`.)
"=
tagsB2" -A mapping of tags to assign to the resource.
"
type" The type of extension, available types for a publisher can be found using the Azure CLI.

> **Note:** The `Publisher` and `Type` of Virtual Machine Extensions can be found using the Azure CLI, via:

```shell
az vm extension image list --location westus -o table
```
"~
typeHandlerVersion" dSpecifies the version of the extension to use, available versions can be found using the Azure CLI.
"i
virtualMachineId" QThe ID of the Virtual Machine. Changing this forces a new resource to be created
*¨<
R
computeGalleryApplication3azure:compute/galleryApplication:GalleryApplication+Manages a Gallery Application.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const example = new azure.core.ResourceGroup("example", {
    name: "example-rg",
    location: "West Europe",
});
const exampleSharedImageGallery = new azure.compute.SharedImageGallery("example", {
    name: "examplegallery",
    resourceGroupName: example.name,
    location: example.location,
});
const exampleGalleryApplication = new azure.compute.GalleryApplication("example", {
    name: "example-app",
    galleryId: exampleSharedImageGallery.id,
    location: example.location,
    supportedOsType: "Linux",
});
```
```python
import pulumi
import pulumi_azure as azure

example = azure.core.ResourceGroup("example",
    name="example-rg",
    location="West Europe")
example_shared_image_gallery = azure.compute.SharedImageGallery("example",
    name="examplegallery",
    resource_group_name=example.name,
    location=example.location)
example_gallery_application = azure.compute.GalleryApplication("example",
    name="example-app",
    gallery_id=example_shared_image_gallery.id,
    location=example.location,
    supported_os_type="Linux")
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var example = new Azure.Core.ResourceGroup("example", new()
    {
        Name = "example-rg",
        Location = "West Europe",
    });

    var exampleSharedImageGallery = new Azure.Compute.SharedImageGallery("example", new()
    {
        Name = "examplegallery",
        ResourceGroupName = example.Name,
        Location = example.Location,
    });

    var exampleGalleryApplication = new Azure.Compute.GalleryApplication("example", new()
    {
        Name = "example-app",
        GalleryId = exampleSharedImageGallery.Id,
        Location = example.Location,
        SupportedOsType = "Linux",
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/compute"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
			Name:     pulumi.String("example-rg"),
			Location: pulumi.String("West Europe"),
		})
		if err != nil {
			return err
		}
		exampleSharedImageGallery, err := compute.NewSharedImageGallery(ctx, "example", &compute.SharedImageGalleryArgs{
			Name:              pulumi.String("examplegallery"),
			ResourceGroupName: example.Name,
			Location:          example.Location,
		})
		if err != nil {
			return err
		}
		_, err = compute.NewGalleryApplication(ctx, "example", &compute.GalleryApplicationArgs{
			Name:            pulumi.String("example-app"),
			GalleryId:       exampleSharedImageGallery.ID(),
			Location:        example.Location,
			SupportedOsType: pulumi.String("Linux"),
		})
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.core.ResourceGroup;
import com.pulumi.azure.core.ResourceGroupArgs;
import com.pulumi.azure.compute.SharedImageGallery;
import com.pulumi.azure.compute.SharedImageGalleryArgs;
import com.pulumi.azure.compute.GalleryApplication;
import com.pulumi.azure.compute.GalleryApplicationArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        var example = new ResourceGroup("example", ResourceGroupArgs.builder()
            .name("example-rg")
            .location("West Europe")
            .build());

        var exampleSharedImageGallery = new SharedImageGallery("exampleSharedImageGallery", SharedImageGalleryArgs.builder()
            .name("examplegallery")
            .resourceGroupName(example.name())
            .location(example.location())
            .build());

        var exampleGalleryApplication = new GalleryApplication("exampleGalleryApplication", GalleryApplicationArgs.builder()
            .name("example-app")
            .galleryId(exampleSharedImageGallery.id())
            .location(example.location())
            .supportedOsType("Linux")
            .build());

    }
}
```
```yaml
resources:
  example:
    type: azure:core:ResourceGroup
    properties:
      name: example-rg
      location: West Europe
  exampleSharedImageGallery:
    type: azure:compute:SharedImageGallery
    name: example
    properties:
      name: examplegallery
      resourceGroupName: ${example.name}
      location: ${example.location}
  exampleGalleryApplication:
    type: azure:compute:GalleryApplication
    name: example
    properties:
      name: example-app
      galleryId: ${exampleSharedImageGallery.id}
      location: ${example.location}
      supportedOsType: Linux
```
<!--End PulumiCodeChooser -->

## Import

Gallery Applications can be imported using the `resource id`, e.g.

```sh
$ pulumi import azure:compute/galleryApplication:GalleryApplication example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Compute/galleries/gallery1/applications/galleryApplication1
```

?
descriptionB" *A description of the Gallery Application.
Z
endOfLifeDateB" CThe end of life date in RFC3339 format of the Gallery Application.
I
eulaB" ;The End User Licence Agreement of the Gallery Application.
h
	galleryId" WThe ID of the Shared Image Gallery. Changing this forces a new resource to be created.
|
locationB" jThe Azure Region where the Gallery Application exists. Changing this forces a new resource to be created.
f
nameB" XThe name of the Gallery Application. Changing this forces a new resource to be created.
o
privacyStatementUriB" RThe URI containing the Privacy Statement associated with the Gallery Application.
f
releaseNoteUriB" NThe URI containing the Release Notes associated with the Gallery Application.
¾
supportedOsType" ¦The type of the Operating System supported for the Gallery Application. Possible values are `Linux` and `Windows`. Changing this forces a new resource to be created.
H
tagsB2" 8A mapping of tags to assign to the Gallery Application.
"?
descriptionB" *A description of the Gallery Application.
"Z
endOfLifeDateB" CThe end of life date in RFC3339 format of the Gallery Application.
"I
eulaB" ;The End User Licence Agreement of the Gallery Application.
"h
	galleryId" WThe ID of the Shared Image Gallery. Changing this forces a new resource to be created.
"z
location" jThe Azure Region where the Gallery Application exists. Changing this forces a new resource to be created.
"d
name" XThe name of the Gallery Application. Changing this forces a new resource to be created.
"o
privacyStatementUriB" RThe URI containing the Privacy Statement associated with the Gallery Application.
"f
releaseNoteUriB" NThe URI containing the Release Notes associated with the Gallery Application.
"¾
supportedOsType" ¦The type of the Operating System supported for the Gallery Application. Possible values are `Linux` and `Windows`. Changing this forces a new resource to be created.
"H
tagsB2" 8A mapping of tags to assign to the Gallery Application.
*¢
p
computeGalleryApplicationAssignmentGazure:compute/galleryApplicationAssignment:GalleryApplicationAssignmentºManages a Virtual Machine Gallery Application Assignment.

> **Note:** Gallery Application Assignments can be defined either directly on `azure.compute.LinuxVirtualMachine` and `azure.compute.WindowsVirtualMachine` resources, or using the `azure.compute.GalleryApplicationAssignment` resource - but the two approaches cannot be used together. If both are used with the same Virtual Machine, spurious changes will occur. It's recommended to use `ignore_changes` for the `gallery_application` block on the associated virtual machine resources, to avoid a persistent diff when using this resource.
## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const example = azure.compute.getVirtualMachine({
    name: "example-vm",
    resourceGroupName: "example-resources-vm",
});
const exampleResourceGroup = new azure.core.ResourceGroup("example", {
    name: "example-resources",
    location: "West Europe",
});
const exampleSharedImageGallery = new azure.compute.SharedImageGallery("example", {
    name: "examplegallery",
    resourceGroupName: exampleResourceGroup.name,
    location: exampleResourceGroup.location,
});
const exampleGalleryApplication = new azure.compute.GalleryApplication("example", {
    name: "example-app",
    galleryId: exampleSharedImageGallery.id,
    location: exampleResourceGroup.location,
    supportedOsType: "Linux",
});
const exampleAccount = new azure.storage.Account("example", {
    name: "examplestorage",
    resourceGroupName: exampleResourceGroup.name,
    location: exampleResourceGroup.location,
    accountTier: "Standard",
    accountReplicationType: "LRS",
});
const exampleContainer = new azure.storage.Container("example", {
    name: "example-container",
    storageAccountName: exampleAccount.name,
    containerAccessType: "blob",
});
const exampleBlob = new azure.storage.Blob("example", {
    name: "scripts",
    storageAccountName: exampleAccount.name,
    storageContainerName: exampleContainer.name,
    type: "Block",
    sourceContent: "[scripts file content]",
});
const exampleGalleryApplicationVersion = new azure.compute.GalleryApplicationVersion("example", {
    name: "0.0.1",
    galleryApplicationId: exampleGalleryApplication.id,
    location: exampleGalleryApplication.location,
    manageAction: {
        install: "[install command]",
        remove: "[remove command]",
    },
    source: {
        mediaLink: exampleBlob.id,
    },
    targetRegions: [{
        name: exampleGalleryApplication.location,
        regionalReplicaCount: 1,
    }],
});
const exampleGalleryApplicationAssignment = new azure.compute.GalleryApplicationAssignment("example", {
    galleryApplicationVersionId: exampleGalleryApplicationVersion.id,
    virtualMachineId: example.then(example => example.id),
});
```
```python
import pulumi
import pulumi_azure as azure

example = azure.compute.get_virtual_machine(name="example-vm",
    resource_group_name="example-resources-vm")
example_resource_group = azure.core.ResourceGroup("example",
    name="example-resources",
    location="West Europe")
example_shared_image_gallery = azure.compute.SharedImageGallery("example",
    name="examplegallery",
    resource_group_name=example_resource_group.name,
    location=example_resource_group.location)
example_gallery_application = azure.compute.GalleryApplication("example",
    name="example-app",
    gallery_id=example_shared_image_gallery.id,
    location=example_resource_group.location,
    supported_os_type="Linux")
example_account = azure.storage.Account("example",
    name="examplestorage",
    resource_group_name=example_resource_group.name,
    location=example_resource_group.location,
    account_tier="Standard",
    account_replication_type="LRS")
example_container = azure.storage.Container("example",
    name="example-container",
    storage_account_name=example_account.name,
    container_access_type="blob")
example_blob = azure.storage.Blob("example",
    name="scripts",
    storage_account_name=example_account.name,
    storage_container_name=example_container.name,
    type="Block",
    source_content="[scripts file content]")
example_gallery_application_version = azure.compute.GalleryApplicationVersion("example",
    name="0.0.1",
    gallery_application_id=example_gallery_application.id,
    location=example_gallery_application.location,
    manage_action={
        "install": "[install command]",
        "remove": "[remove command]",
    },
    source={
        "media_link": example_blob.id,
    },
    target_regions=[{
        "name": example_gallery_application.location,
        "regional_replica_count": 1,
    }])
example_gallery_application_assignment = azure.compute.GalleryApplicationAssignment("example",
    gallery_application_version_id=example_gallery_application_version.id,
    virtual_machine_id=example.id)
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var example = Azure.Compute.GetVirtualMachine.Invoke(new()
    {
        Name = "example-vm",
        ResourceGroupName = "example-resources-vm",
    });

    var exampleResourceGroup = new Azure.Core.ResourceGroup("example", new()
    {
        Name = "example-resources",
        Location = "West Europe",
    });

    var exampleSharedImageGallery = new Azure.Compute.SharedImageGallery("example", new()
    {
        Name = "examplegallery",
        ResourceGroupName = exampleResourceGroup.Name,
        Location = exampleResourceGroup.Location,
    });

    var exampleGalleryApplication = new Azure.Compute.GalleryApplication("example", new()
    {
        Name = "example-app",
        GalleryId = exampleSharedImageGallery.Id,
        Location = exampleResourceGroup.Location,
        SupportedOsType = "Linux",
    });

    var exampleAccount = new Azure.Storage.Account("example", new()
    {
        Name = "examplestorage",
        ResourceGroupName = exampleResourceGroup.Name,
        Location = exampleResourceGroup.Location,
        AccountTier = "Standard",
        AccountReplicationType = "LRS",
    });

    var exampleContainer = new Azure.Storage.Container("example", new()
    {
        Name = "example-container",
        StorageAccountName = exampleAccount.Name,
        ContainerAccessType = "blob",
    });

    var exampleBlob = new Azure.Storage.Blob("example", new()
    {
        Name = "scripts",
        StorageAccountName = exampleAccount.Name,
        StorageContainerName = exampleContainer.Name,
        Type = "Block",
        SourceContent = "[scripts file content]",
    });

    var exampleGalleryApplicationVersion = new Azure.Compute.GalleryApplicationVersion("example", new()
    {
        Name = "0.0.1",
        GalleryApplicationId = exampleGalleryApplication.Id,
        Location = exampleGalleryApplication.Location,
        ManageAction = new Azure.Compute.Inputs.GalleryApplicationVersionManageActionArgs
        {
            Install = "[install command]",
            Remove = "[remove command]",
        },
        Source = new Azure.Compute.Inputs.GalleryApplicationVersionSourceArgs
        {
            MediaLink = exampleBlob.Id,
        },
        TargetRegions = new[]
        {
            new Azure.Compute.Inputs.GalleryApplicationVersionTargetRegionArgs
            {
                Name = exampleGalleryApplication.Location,
                RegionalReplicaCount = 1,
            },
        },
    });

    var exampleGalleryApplicationAssignment = new Azure.Compute.GalleryApplicationAssignment("example", new()
    {
        GalleryApplicationVersionId = exampleGalleryApplicationVersion.Id,
        VirtualMachineId = example.Apply(getVirtualMachineResult => getVirtualMachineResult.Id),
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/compute"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/storage"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		example, err := compute.LookupVirtualMachine(ctx, &compute.LookupVirtualMachineArgs{
			Name:              "example-vm",
			ResourceGroupName: "example-resources-vm",
		}, nil)
		if err != nil {
			return err
		}
		exampleResourceGroup, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
			Name:     pulumi.String("example-resources"),
			Location: pulumi.String("West Europe"),
		})
		if err != nil {
			return err
		}
		exampleSharedImageGallery, err := compute.NewSharedImageGallery(ctx, "example", &compute.SharedImageGalleryArgs{
			Name:              pulumi.String("examplegallery"),
			ResourceGroupName: exampleResourceGroup.Name,
			Location:          exampleResourceGroup.Location,
		})
		if err != nil {
			return err
		}
		exampleGalleryApplication, err := compute.NewGalleryApplication(ctx, "example", &compute.GalleryApplicationArgs{
			Name:            pulumi.String("example-app"),
			GalleryId:       exampleSharedImageGallery.ID(),
			Location:        exampleResourceGroup.Location,
			SupportedOsType: pulumi.String("Linux"),
		})
		if err != nil {
			return err
		}
		exampleAccount, err := storage.NewAccount(ctx, "example", &storage.AccountArgs{
			Name:                   pulumi.String("examplestorage"),
			ResourceGroupName:      exampleResourceGroup.Name,
			Location:               exampleResourceGroup.Location,
			AccountTier:            pulumi.String("Standard"),
			AccountReplicationType: pulumi.String("LRS"),
		})
		if err != nil {
			return err
		}
		exampleContainer, err := storage.NewContainer(ctx, "example", &storage.ContainerArgs{
			Name:                pulumi.String("example-container"),
			StorageAccountName:  exampleAccount.Name,
			ContainerAccessType: pulumi.String("blob"),
		})
		if err != nil {
			return err
		}
		exampleBlob, err := storage.NewBlob(ctx, "example", &storage.BlobArgs{
			Name:                 pulumi.String("scripts"),
			StorageAccountName:   exampleAccount.Name,
			StorageContainerName: exampleContainer.Name,
			Type:                 pulumi.String("Block"),
			SourceContent:        pulumi.String("[scripts file content]"),
		})
		if err != nil {
			return err
		}
		exampleGalleryApplicationVersion, err := compute.NewGalleryApplicationVersion(ctx, "example", &compute.GalleryApplicationVersionArgs{
			Name:                 pulumi.String("0.0.1"),
			GalleryApplicationId: exampleGalleryApplication.ID(),
			Location:             exampleGalleryApplication.Location,
			ManageAction: &compute.GalleryApplicationVersionManageActionArgs{
				Install: pulumi.String("[install command]"),
				Remove:  pulumi.String("[remove command]"),
			},
			Source: &compute.GalleryApplicationVersionSourceArgs{
				MediaLink: exampleBlob.ID(),
			},
			TargetRegions: compute.GalleryApplicationVersionTargetRegionArray{
				&compute.GalleryApplicationVersionTargetRegionArgs{
					Name:                 exampleGalleryApplication.Location,
					RegionalReplicaCount: pulumi.Int(1),
				},
			},
		})
		if err != nil {
			return err
		}
		_, err = compute.NewGalleryApplicationAssignment(ctx, "example", &compute.GalleryApplicationAssignmentArgs{
			GalleryApplicationVersionId: exampleGalleryApplicationVersion.ID(),
			VirtualMachineId:            pulumi.String(example.Id),
		})
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.compute.ComputeFunctions;
import com.pulumi.azure.compute.inputs.GetVirtualMachineArgs;
import com.pulumi.azure.core.ResourceGroup;
import com.pulumi.azure.core.ResourceGroupArgs;
import com.pulumi.azure.compute.SharedImageGallery;
import com.pulumi.azure.compute.SharedImageGalleryArgs;
import com.pulumi.azure.compute.GalleryApplication;
import com.pulumi.azure.compute.GalleryApplicationArgs;
import com.pulumi.azure.storage.Account;
import com.pulumi.azure.storage.AccountArgs;
import com.pulumi.azure.storage.Container;
import com.pulumi.azure.storage.ContainerArgs;
import com.pulumi.azure.storage.Blob;
import com.pulumi.azure.storage.BlobArgs;
import com.pulumi.azure.compute.GalleryApplicationVersion;
import com.pulumi.azure.compute.GalleryApplicationVersionArgs;
import com.pulumi.azure.compute.inputs.GalleryApplicationVersionManageActionArgs;
import com.pulumi.azure.compute.inputs.GalleryApplicationVersionSourceArgs;
import com.pulumi.azure.compute.inputs.GalleryApplicationVersionTargetRegionArgs;
import com.pulumi.azure.compute.GalleryApplicationAssignment;
import com.pulumi.azure.compute.GalleryApplicationAssignmentArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        final var example = ComputeFunctions.getVirtualMachine(GetVirtualMachineArgs.builder()
            .name("example-vm")
            .resourceGroupName("example-resources-vm")
            .build());

        var exampleResourceGroup = new ResourceGroup("exampleResourceGroup", ResourceGroupArgs.builder()
            .name("example-resources")
            .location("West Europe")
            .build());

        var exampleSharedImageGallery = new SharedImageGallery("exampleSharedImageGallery", SharedImageGalleryArgs.builder()
            .name("examplegallery")
            .resourceGroupName(exampleResourceGroup.name())
            .location(exampleResourceGroup.location())
            .build());

        var exampleGalleryApplication = new GalleryApplication("exampleGalleryApplication", GalleryApplicationArgs.builder()
            .name("example-app")
            .galleryId(exampleSharedImageGallery.id())
            .location(exampleResourceGroup.location())
            .supportedOsType("Linux")
            .build());

        var exampleAccount = new Account("exampleAccount", AccountArgs.builder()
            .name("examplestorage")
            .resourceGroupName(exampleResourceGroup.name())
            .location(exampleResourceGroup.location())
            .accountTier("Standard")
            .accountReplicationType("LRS")
            .build());

        var exampleContainer = new Container("exampleContainer", ContainerArgs.builder()
            .name("example-container")
            .storageAccountName(exampleAccount.name())
            .containerAccessType("blob")
            .build());

        var exampleBlob = new Blob("exampleBlob", BlobArgs.builder()
            .name("scripts")
            .storageAccountName(exampleAccount.name())
            .storageContainerName(exampleContainer.name())
            .type("Block")
            .sourceContent("[scripts file content]")
            .build());

        var exampleGalleryApplicationVersion = new GalleryApplicationVersion("exampleGalleryApplicationVersion", GalleryApplicationVersionArgs.builder()
            .name("0.0.1")
            .galleryApplicationId(exampleGalleryApplication.id())
            .location(exampleGalleryApplication.location())
            .manageAction(GalleryApplicationVersionManageActionArgs.builder()
                .install("[install command]")
                .remove("[remove command]")
                .build())
            .source(GalleryApplicationVersionSourceArgs.builder()
                .mediaLink(exampleBlob.id())
                .build())
            .targetRegions(GalleryApplicationVersionTargetRegionArgs.builder()
                .name(exampleGalleryApplication.location())
                .regionalReplicaCount(1)
                .build())
            .build());

        var exampleGalleryApplicationAssignment = new GalleryApplicationAssignment("exampleGalleryApplicationAssignment", GalleryApplicationAssignmentArgs.builder()
            .galleryApplicationVersionId(exampleGalleryApplicationVersion.id())
            .virtualMachineId(example.applyValue(getVirtualMachineResult -> getVirtualMachineResult.id()))
            .build());

    }
}
```
```yaml
resources:
  exampleResourceGroup:
    type: azure:core:ResourceGroup
    name: example
    properties:
      name: example-resources
      location: West Europe
  exampleSharedImageGallery:
    type: azure:compute:SharedImageGallery
    name: example
    properties:
      name: examplegallery
      resourceGroupName: ${exampleResourceGroup.name}
      location: ${exampleResourceGroup.location}
  exampleGalleryApplication:
    type: azure:compute:GalleryApplication
    name: example
    properties:
      name: example-app
      galleryId: ${exampleSharedImageGallery.id}
      location: ${exampleResourceGroup.location}
      supportedOsType: Linux
  exampleAccount:
    type: azure:storage:Account
    name: example
    properties:
      name: examplestorage
      resourceGroupName: ${exampleResourceGroup.name}
      location: ${exampleResourceGroup.location}
      accountTier: Standard
      accountReplicationType: LRS
  exampleContainer:
    type: azure:storage:Container
    name: example
    properties:
      name: example-container
      storageAccountName: ${exampleAccount.name}
      containerAccessType: blob
  exampleBlob:
    type: azure:storage:Blob
    name: example
    properties:
      name: scripts
      storageAccountName: ${exampleAccount.name}
      storageContainerName: ${exampleContainer.name}
      type: Block
      sourceContent: '[scripts file content]'
  exampleGalleryApplicationVersion:
    type: azure:compute:GalleryApplicationVersion
    name: example
    properties:
      name: 0.0.1
      galleryApplicationId: ${exampleGalleryApplication.id}
      location: ${exampleGalleryApplication.location}
      manageAction:
        install: '[install command]'
        remove: '[remove command]'
      source:
        mediaLink: ${exampleBlob.id}
      targetRegions:
        - name: ${exampleGalleryApplication.location}
          regionalReplicaCount: 1
  exampleGalleryApplicationAssignment:
    type: azure:compute:GalleryApplicationAssignment
    name: example
    properties:
      galleryApplicationVersionId: ${exampleGalleryApplicationVersion.id}
      virtualMachineId: ${example.id}
variables:
  example:
    fn::invoke:
      function: azure:compute:getVirtualMachine
      arguments:
        name: example-vm
        resourceGroupName: example-resources-vm
```
<!--End PulumiCodeChooser -->

## Import

Virtual Machine Gallery Application Assignments can be imported using the `resource id`, e.g.

```sh
$ pulumi import azure:compute/galleryApplicationAssignment:GalleryApplicationAssignment example subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Compute/virtualMachines/machine1|/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Compute/galleries/gallery1/applications/galleryApplication1/versions/galleryApplicationVersion1
```

¾
configurationBlobUriB" Specifies the URI to an Azure Blob that will replace the default configuration for the package if provided. Changing this forces a new resource to be created.

galleryApplicationVersionId" ^The ID of the Gallery Application Version. Changing this forces a new resource to be created.

orderB Specifies the order in which the packages have to be installed. Possible values are between `0` and `2147483647`. Defaults to `0`.
¥
tagB" Specifies a passthrough value for more generic context. This field can be any valid `string` value. Changing this forces a new resource to be created.
j
virtualMachineId" RThe ID of the Virtual Machine. Changing this forces a new resource to be created.
"¾
configurationBlobUriB" Specifies the URI to an Azure Blob that will replace the default configuration for the package if provided. Changing this forces a new resource to be created.
"
galleryApplicationVersionId" ^The ID of the Gallery Application Version. Changing this forces a new resource to be created.
"
orderB Specifies the order in which the packages have to be installed. Possible values are between `0` and `2147483647`. Defaults to `0`.
"¥
tagB" Specifies a passthrough value for more generic context. This field can be any valid `string` value. Changing this forces a new resource to be created.
"j
virtualMachineId" RThe ID of the Virtual Machine. Changing this forces a new resource to be created.
*
g
computeGalleryApplicationVersionAazure:compute/galleryApplicationVersion:GalleryApplicationVersionûtManages a Gallery Application Version.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const example = new azure.core.ResourceGroup("example", {
    name: "example-rg",
    location: "West Europe",
});
const exampleSharedImageGallery = new azure.compute.SharedImageGallery("example", {
    name: "examplegallery",
    resourceGroupName: example.name,
    location: example.location,
});
const exampleGalleryApplication = new azure.compute.GalleryApplication("example", {
    name: "example-app",
    galleryId: exampleSharedImageGallery.id,
    location: example.location,
    supportedOsType: "Linux",
});
const exampleAccount = new azure.storage.Account("example", {
    name: "examplestorage",
    resourceGroupName: example.name,
    location: example.location,
    accountTier: "Standard",
    accountReplicationType: "LRS",
});
const exampleContainer = new azure.storage.Container("example", {
    name: "example-container",
    storageAccountName: exampleAccount.name,
    containerAccessType: "blob",
});
const exampleBlob = new azure.storage.Blob("example", {
    name: "scripts",
    storageAccountName: exampleAccount.name,
    storageContainerName: exampleContainer.name,
    type: "Block",
    sourceContent: "[scripts file content]",
});
const exampleGalleryApplicationVersion = new azure.compute.GalleryApplicationVersion("example", {
    name: "0.0.1",
    galleryApplicationId: exampleGalleryApplication.id,
    location: exampleGalleryApplication.location,
    manageAction: {
        install: "[install command]",
        remove: "[remove command]",
    },
    source: {
        mediaLink: exampleBlob.id,
    },
    targetRegions: [{
        name: exampleGalleryApplication.location,
        regionalReplicaCount: 1,
    }],
});
```
```python
import pulumi
import pulumi_azure as azure

example = azure.core.ResourceGroup("example",
    name="example-rg",
    location="West Europe")
example_shared_image_gallery = azure.compute.SharedImageGallery("example",
    name="examplegallery",
    resource_group_name=example.name,
    location=example.location)
example_gallery_application = azure.compute.GalleryApplication("example",
    name="example-app",
    gallery_id=example_shared_image_gallery.id,
    location=example.location,
    supported_os_type="Linux")
example_account = azure.storage.Account("example",
    name="examplestorage",
    resource_group_name=example.name,
    location=example.location,
    account_tier="Standard",
    account_replication_type="LRS")
example_container = azure.storage.Container("example",
    name="example-container",
    storage_account_name=example_account.name,
    container_access_type="blob")
example_blob = azure.storage.Blob("example",
    name="scripts",
    storage_account_name=example_account.name,
    storage_container_name=example_container.name,
    type="Block",
    source_content="[scripts file content]")
example_gallery_application_version = azure.compute.GalleryApplicationVersion("example",
    name="0.0.1",
    gallery_application_id=example_gallery_application.id,
    location=example_gallery_application.location,
    manage_action={
        "install": "[install command]",
        "remove": "[remove command]",
    },
    source={
        "media_link": example_blob.id,
    },
    target_regions=[{
        "name": example_gallery_application.location,
        "regional_replica_count": 1,
    }])
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var example = new Azure.Core.ResourceGroup("example", new()
    {
        Name = "example-rg",
        Location = "West Europe",
    });

    var exampleSharedImageGallery = new Azure.Compute.SharedImageGallery("example", new()
    {
        Name = "examplegallery",
        ResourceGroupName = example.Name,
        Location = example.Location,
    });

    var exampleGalleryApplication = new Azure.Compute.GalleryApplication("example", new()
    {
        Name = "example-app",
        GalleryId = exampleSharedImageGallery.Id,
        Location = example.Location,
        SupportedOsType = "Linux",
    });

    var exampleAccount = new Azure.Storage.Account("example", new()
    {
        Name = "examplestorage",
        ResourceGroupName = example.Name,
        Location = example.Location,
        AccountTier = "Standard",
        AccountReplicationType = "LRS",
    });

    var exampleContainer = new Azure.Storage.Container("example", new()
    {
        Name = "example-container",
        StorageAccountName = exampleAccount.Name,
        ContainerAccessType = "blob",
    });

    var exampleBlob = new Azure.Storage.Blob("example", new()
    {
        Name = "scripts",
        StorageAccountName = exampleAccount.Name,
        StorageContainerName = exampleContainer.Name,
        Type = "Block",
        SourceContent = "[scripts file content]",
    });

    var exampleGalleryApplicationVersion = new Azure.Compute.GalleryApplicationVersion("example", new()
    {
        Name = "0.0.1",
        GalleryApplicationId = exampleGalleryApplication.Id,
        Location = exampleGalleryApplication.Location,
        ManageAction = new Azure.Compute.Inputs.GalleryApplicationVersionManageActionArgs
        {
            Install = "[install command]",
            Remove = "[remove command]",
        },
        Source = new Azure.Compute.Inputs.GalleryApplicationVersionSourceArgs
        {
            MediaLink = exampleBlob.Id,
        },
        TargetRegions = new[]
        {
            new Azure.Compute.Inputs.GalleryApplicationVersionTargetRegionArgs
            {
                Name = exampleGalleryApplication.Location,
                RegionalReplicaCount = 1,
            },
        },
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/compute"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/storage"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
			Name:     pulumi.String("example-rg"),
			Location: pulumi.String("West Europe"),
		})
		if err != nil {
			return err
		}
		exampleSharedImageGallery, err := compute.NewSharedImageGallery(ctx, "example", &compute.SharedImageGalleryArgs{
			Name:              pulumi.String("examplegallery"),
			ResourceGroupName: example.Name,
			Location:          example.Location,
		})
		if err != nil {
			return err
		}
		exampleGalleryApplication, err := compute.NewGalleryApplication(ctx, "example", &compute.GalleryApplicationArgs{
			Name:            pulumi.String("example-app"),
			GalleryId:       exampleSharedImageGallery.ID(),
			Location:        example.Location,
			SupportedOsType: pulumi.String("Linux"),
		})
		if err != nil {
			return err
		}
		exampleAccount, err := storage.NewAccount(ctx, "example", &storage.AccountArgs{
			Name:                   pulumi.String("examplestorage"),
			ResourceGroupName:      example.Name,
			Location:               example.Location,
			AccountTier:            pulumi.String("Standard"),
			AccountReplicationType: pulumi.String("LRS"),
		})
		if err != nil {
			return err
		}
		exampleContainer, err := storage.NewContainer(ctx, "example", &storage.ContainerArgs{
			Name:                pulumi.String("example-container"),
			StorageAccountName:  exampleAccount.Name,
			ContainerAccessType: pulumi.String("blob"),
		})
		if err != nil {
			return err
		}
		exampleBlob, err := storage.NewBlob(ctx, "example", &storage.BlobArgs{
			Name:                 pulumi.String("scripts"),
			StorageAccountName:   exampleAccount.Name,
			StorageContainerName: exampleContainer.Name,
			Type:                 pulumi.String("Block"),
			SourceContent:        pulumi.String("[scripts file content]"),
		})
		if err != nil {
			return err
		}
		_, err = compute.NewGalleryApplicationVersion(ctx, "example", &compute.GalleryApplicationVersionArgs{
			Name:                 pulumi.String("0.0.1"),
			GalleryApplicationId: exampleGalleryApplication.ID(),
			Location:             exampleGalleryApplication.Location,
			ManageAction: &compute.GalleryApplicationVersionManageActionArgs{
				Install: pulumi.String("[install command]"),
				Remove:  pulumi.String("[remove command]"),
			},
			Source: &compute.GalleryApplicationVersionSourceArgs{
				MediaLink: exampleBlob.ID(),
			},
			TargetRegions: compute.GalleryApplicationVersionTargetRegionArray{
				&compute.GalleryApplicationVersionTargetRegionArgs{
					Name:                 exampleGalleryApplication.Location,
					RegionalReplicaCount: pulumi.Int(1),
				},
			},
		})
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.core.ResourceGroup;
import com.pulumi.azure.core.ResourceGroupArgs;
import com.pulumi.azure.compute.SharedImageGallery;
import com.pulumi.azure.compute.SharedImageGalleryArgs;
import com.pulumi.azure.compute.GalleryApplication;
import com.pulumi.azure.compute.GalleryApplicationArgs;
import com.pulumi.azure.storage.Account;
import com.pulumi.azure.storage.AccountArgs;
import com.pulumi.azure.storage.Container;
import com.pulumi.azure.storage.ContainerArgs;
import com.pulumi.azure.storage.Blob;
import com.pulumi.azure.storage.BlobArgs;
import com.pulumi.azure.compute.GalleryApplicationVersion;
import com.pulumi.azure.compute.GalleryApplicationVersionArgs;
import com.pulumi.azure.compute.inputs.GalleryApplicationVersionManageActionArgs;
import com.pulumi.azure.compute.inputs.GalleryApplicationVersionSourceArgs;
import com.pulumi.azure.compute.inputs.GalleryApplicationVersionTargetRegionArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        var example = new ResourceGroup("example", ResourceGroupArgs.builder()
            .name("example-rg")
            .location("West Europe")
            .build());

        var exampleSharedImageGallery = new SharedImageGallery("exampleSharedImageGallery", SharedImageGalleryArgs.builder()
            .name("examplegallery")
            .resourceGroupName(example.name())
            .location(example.location())
            .build());

        var exampleGalleryApplication = new GalleryApplication("exampleGalleryApplication", GalleryApplicationArgs.builder()
            .name("example-app")
            .galleryId(exampleSharedImageGallery.id())
            .location(example.location())
            .supportedOsType("Linux")
            .build());

        var exampleAccount = new Account("exampleAccount", AccountArgs.builder()
            .name("examplestorage")
            .resourceGroupName(example.name())
            .location(example.location())
            .accountTier("Standard")
            .accountReplicationType("LRS")
            .build());

        var exampleContainer = new Container("exampleContainer", ContainerArgs.builder()
            .name("example-container")
            .storageAccountName(exampleAccount.name())
            .containerAccessType("blob")
            .build());

        var exampleBlob = new Blob("exampleBlob", BlobArgs.builder()
            .name("scripts")
            .storageAccountName(exampleAccount.name())
            .storageContainerName(exampleContainer.name())
            .type("Block")
            .sourceContent("[scripts file content]")
            .build());

        var exampleGalleryApplicationVersion = new GalleryApplicationVersion("exampleGalleryApplicationVersion", GalleryApplicationVersionArgs.builder()
            .name("0.0.1")
            .galleryApplicationId(exampleGalleryApplication.id())
            .location(exampleGalleryApplication.location())
            .manageAction(GalleryApplicationVersionManageActionArgs.builder()
                .install("[install command]")
                .remove("[remove command]")
                .build())
            .source(GalleryApplicationVersionSourceArgs.builder()
                .mediaLink(exampleBlob.id())
                .build())
            .targetRegions(GalleryApplicationVersionTargetRegionArgs.builder()
                .name(exampleGalleryApplication.location())
                .regionalReplicaCount(1)
                .build())
            .build());

    }
}
```
```yaml
resources:
  example:
    type: azure:core:ResourceGroup
    properties:
      name: example-rg
      location: West Europe
  exampleSharedImageGallery:
    type: azure:compute:SharedImageGallery
    name: example
    properties:
      name: examplegallery
      resourceGroupName: ${example.name}
      location: ${example.location}
  exampleGalleryApplication:
    type: azure:compute:GalleryApplication
    name: example
    properties:
      name: example-app
      galleryId: ${exampleSharedImageGallery.id}
      location: ${example.location}
      supportedOsType: Linux
  exampleAccount:
    type: azure:storage:Account
    name: example
    properties:
      name: examplestorage
      resourceGroupName: ${example.name}
      location: ${example.location}
      accountTier: Standard
      accountReplicationType: LRS
  exampleContainer:
    type: azure:storage:Container
    name: example
    properties:
      name: example-container
      storageAccountName: ${exampleAccount.name}
      containerAccessType: blob
  exampleBlob:
    type: azure:storage:Blob
    name: example
    properties:
      name: scripts
      storageAccountName: ${exampleAccount.name}
      storageContainerName: ${exampleContainer.name}
      type: Block
      sourceContent: '[scripts file content]'
  exampleGalleryApplicationVersion:
    type: azure:compute:GalleryApplicationVersion
    name: example
    properties:
      name: 0.0.1
      galleryApplicationId: ${exampleGalleryApplication.id}
      location: ${exampleGalleryApplication.location}
      manageAction:
        install: '[install command]'
        remove: '[remove command]'
      source:
        mediaLink: ${exampleBlob.id}
      targetRegions:
        - name: ${exampleGalleryApplication.location}
          regionalReplicaCount: 1
```
<!--End PulumiCodeChooser -->

## Import

Gallery Application Versions can be imported using the `resource id`, e.g.

```sh
$ pulumi import azure:compute/galleryApplicationVersion:GalleryApplicationVersion example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Compute/galleries/gallery1/applications/galleryApplication1/versions/galleryApplicationVersion1
```

x

configFileB" dSpecifies the name of the config file on the VM. Changing this forces a new resource to be created.
_
enableHealthCheckB
 DShould the Gallery Application reports health. Defaults to `false`.
b
endOfLifeDateB" KThe end of life date in RFC3339 format of the Gallery Application Version.
Ü
excludeFromLatestB
 ÀShould the Gallery Application Version be excluded from the `latest` filter? If set to `true` this Gallery Application Version won't be returned for the `latest` version. Defaults to `false`.
r
galleryApplicationId" VThe ID of the Gallery Application. Changing this forces a new resource to be created.

locationB" rThe Azure Region where the Gallery Application Version exists. Changing this forces a new resource to be created.
Î
manageAction:

compute%GalleryApplicationVersionManageActionYazure:compute/GalleryApplicationVersionManageAction:GalleryApplicationVersionManageAction*A `manage_action` block as defined below.

nameB" yThe version name of the Gallery Application Version, such as `1.0.0`. Changing this forces a new resource to be created.
z
packageFileB" eSpecifies the name of the package file on the VM. Changing this forces a new resource to be created.
¬
source}:{
y
computeGalleryApplicationVersionSourceMazure:compute/GalleryApplicationVersionSource:GalleryApplicationVersionSource#A `source` block as defined below.
P
tagsB2" @A mapping of tags to assign to the Gallery Application Version.
Ý
targetRegions*:

compute%GalleryApplicationVersionTargetRegionYazure:compute/GalleryApplicationVersionTargetRegion:GalleryApplicationVersionTargetRegion5One or more `target_region` blocks as defined below.
"x

configFileB" dSpecifies the name of the config file on the VM. Changing this forces a new resource to be created.
"_
enableHealthCheckB
 DShould the Gallery Application reports health. Defaults to `false`.
"b
endOfLifeDateB" KThe end of life date in RFC3339 format of the Gallery Application Version.
"Ü
excludeFromLatestB
 ÀShould the Gallery Application Version be excluded from the `latest` filter? If set to `true` this Gallery Application Version won't be returned for the `latest` version. Defaults to `false`.
"r
galleryApplicationId" VThe ID of the Gallery Application. Changing this forces a new resource to be created.
"
location" rThe Azure Region where the Gallery Application Version exists. Changing this forces a new resource to be created.
"Î
manageAction:

compute%GalleryApplicationVersionManageActionYazure:compute/GalleryApplicationVersionManageAction:GalleryApplicationVersionManageAction*A `manage_action` block as defined below.
"
name" yThe version name of the Gallery Application Version, such as `1.0.0`. Changing this forces a new resource to be created.
"z
packageFileB" eSpecifies the name of the package file on the VM. Changing this forces a new resource to be created.
"¬
source}:{
y
computeGalleryApplicationVersionSourceMazure:compute/GalleryApplicationVersionSource:GalleryApplicationVersionSource#A `source` block as defined below.
"P
tagsB2" @A mapping of tags to assign to the Gallery Application Version.
"Ý
targetRegions*:

compute%GalleryApplicationVersionTargetRegionYazure:compute/GalleryApplicationVersionTargetRegion:GalleryApplicationVersionTargetRegion5One or more `target_region` blocks as defined below.
*ú7
+
computeImageazure:compute/image:ImageÂ#Manages a custom virtual machine image that can be used to create virtual machines.

## Example Usage

> **Note:** For a more complete example, see the `examples/image` directory within the GitHub Repository.

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const example = azure.compute.getVirtualMachine({
    name: "examplevm",
    resourceGroupName: "example-resources",
});
const exampleImage = new azure.compute.Image("example", {
    name: "exampleimage",
    location: example.then(example => example.location),
    resourceGroupName: example.then(example => example.name),
    sourceVirtualMachineId: example.then(example => example.id),
});
```
```python
import pulumi
import pulumi_azure as azure

example = azure.compute.get_virtual_machine(name="examplevm",
    resource_group_name="example-resources")
example_image = azure.compute.Image("example",
    name="exampleimage",
    location=example.location,
    resource_group_name=example.name,
    source_virtual_machine_id=example.id)
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var example = Azure.Compute.GetVirtualMachine.Invoke(new()
    {
        Name = "examplevm",
        ResourceGroupName = "example-resources",
    });

    var exampleImage = new Azure.Compute.Image("example", new()
    {
        Name = "exampleimage",
        Location = example.Apply(getVirtualMachineResult => getVirtualMachineResult.Location),
        ResourceGroupName = example.Apply(getVirtualMachineResult => getVirtualMachineResult.Name),
        SourceVirtualMachineId = example.Apply(getVirtualMachineResult => getVirtualMachineResult.Id),
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/compute"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		example, err := compute.LookupVirtualMachine(ctx, &compute.LookupVirtualMachineArgs{
			Name:              "examplevm",
			ResourceGroupName: "example-resources",
		}, nil)
		if err != nil {
			return err
		}
		_, err = compute.NewImage(ctx, "example", &compute.ImageArgs{
			Name:                   pulumi.String("exampleimage"),
			Location:               pulumi.String(example.Location),
			ResourceGroupName:      pulumi.String(example.Name),
			SourceVirtualMachineId: pulumi.String(example.Id),
		})
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.compute.ComputeFunctions;
import com.pulumi.azure.compute.inputs.GetVirtualMachineArgs;
import com.pulumi.azure.compute.Image;
import com.pulumi.azure.compute.ImageArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        final var example = ComputeFunctions.getVirtualMachine(GetVirtualMachineArgs.builder()
            .name("examplevm")
            .resourceGroupName("example-resources")
            .build());

        var exampleImage = new Image("exampleImage", ImageArgs.builder()
            .name("exampleimage")
            .location(example.applyValue(getVirtualMachineResult -> getVirtualMachineResult.location()))
            .resourceGroupName(example.applyValue(getVirtualMachineResult -> getVirtualMachineResult.name()))
            .sourceVirtualMachineId(example.applyValue(getVirtualMachineResult -> getVirtualMachineResult.id()))
            .build());

    }
}
```
```yaml
resources:
  exampleImage:
    type: azure:compute:Image
    name: example
    properties:
      name: exampleimage
      location: ${example.location}
      resourceGroupName: ${example.name}
      sourceVirtualMachineId: ${example.id}
variables:
  example:
    fn::invoke:
      function: azure:compute:getVirtualMachine
      arguments:
        name: examplevm
        resourceGroupName: example-resources
```
<!--End PulumiCodeChooser -->

## Import

Images can be imported using the `resource id`, e.g.

```sh
$ pulumi import azure:compute/image:Image example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Compute/images/image1
```


	dataDisksKBI*G:E
C
computeImageDataDisk)azure:compute/ImageDataDisk:ImageDataDisk1One or more `data_disk` blocks as defined below.
²
hyperVGenerationB" The HyperVGenerationType of the VirtualMachine created from the image as `V1`, `V2`. Defaults to `V1`. Changing this forces a new resource to be created.

> **Note:** `zone_resilient` can only be set to `true` if the image is stored in a region that supports availability zones.

locationB" uSpecified the supported Azure location where the resource exists. Changing this forces a new resource to be created.
b
nameB" TSpecifies the name of the image. Changing this forces a new resource to be created.
±
osDiskCBA:?
=
computeImageOsDisk%azure:compute/ImageOsDisk:ImageOsDiskbOne or more `os_disk` blocks as defined below. Changing this forces a new resource to be created.

resourceGroupName" pThe name of the resource group in which to create the image. Changing this forces a new resource to be created.
W
sourceVirtualMachineIdB" 7The Virtual Machine ID from which to create the image.
=
tagsB2" -A mapping of tags to assign to the resource.
{
zoneResilientB
 dIs zone resiliency enabled? Defaults to `false`. Changing this forces a new resource to be created.
"
	dataDisksKBI*G:E
C
computeImageDataDisk)azure:compute/ImageDataDisk:ImageDataDisk1One or more `data_disk` blocks as defined below.
"²
hyperVGenerationB" The HyperVGenerationType of the VirtualMachine created from the image as `V1`, `V2`. Defaults to `V1`. Changing this forces a new resource to be created.

> **Note:** `zone_resilient` can only be set to `true` if the image is stored in a region that supports availability zones.
"
location" uSpecified the supported Azure location where the resource exists. Changing this forces a new resource to be created.
"`
name" TSpecifies the name of the image. Changing this forces a new resource to be created.
"±
osDiskCBA:?
=
computeImageOsDisk%azure:compute/ImageOsDisk:ImageOsDiskbOne or more `os_disk` blocks as defined below. Changing this forces a new resource to be created.
"
resourceGroupName" pThe name of the resource group in which to create the image. Changing this forces a new resource to be created.
"W
sourceVirtualMachineIdB" 7The Virtual Machine ID from which to create the image.
"=
tagsB2" -A mapping of tags to assign to the resource.
"{
zoneResilientB
 dIs zone resiliency enabled? Defaults to `false`. Changing this forces a new resource to be created.
*òÀ
j
computeImplicitDataDiskFromSourceCazure:compute/implicitDataDiskFromSource:ImplicitDataDiskFromSource¢¬Manages an implicit Data Disk of a Virtual Machine.

> **Note:** The Implicit Data Disk will be deleted instantly after this resource is destroyed. If you want to detach this disk only, you may set `detach_implicit_data_disk_on_deletion` field to `true` within the `virtual_machine` block in the provider `features` block.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const config = new pulumi.Config();
const prefix = config.get("prefix") || "example";
const vmName = `${prefix}-vm`;
const example = new azure.core.ResourceGroup("example", {
    name: `${prefix}-resources`,
    location: "West Europe",
});
const main = new azure.network.VirtualNetwork("main", {
    name: `${prefix}-network`,
    addressSpaces: ["10.0.0.0/16"],
    location: example.location,
    resourceGroupName: example.name,
});
const internal = new azure.network.Subnet("internal", {
    name: "internal",
    resourceGroupName: example.name,
    virtualNetworkName: main.name,
    addressPrefixes: ["10.0.2.0/24"],
});
const mainNetworkInterface = new azure.network.NetworkInterface("main", {
    name: `${prefix}-nic`,
    location: example.location,
    resourceGroupName: example.name,
    ipConfigurations: [{
        name: "internal",
        subnetId: internal.id,
        privateIpAddressAllocation: "Dynamic",
    }],
});
const exampleVirtualMachine = new azure.compute.VirtualMachine("example", {
    name: vmName,
    location: example.location,
    resourceGroupName: example.name,
    networkInterfaceIds: [mainNetworkInterface.id],
    vmSize: "Standard_F2",
    storageImageReference: {
        publisher: "Canonical",
        offer: "0001-com-ubuntu-server-jammy",
        sku: "22_04-lts",
        version: "latest",
    },
    storageOsDisk: {
        name: "myosdisk1",
        caching: "ReadWrite",
        createOption: "FromImage",
        managedDiskType: "Standard_LRS",
    },
    osProfile: {
        computerName: vmName,
        adminUsername: "testadmin",
        adminPassword: "Password1234!",
    },
    osProfileLinuxConfig: {
        disablePasswordAuthentication: false,
    },
});
const exampleManagedDisk = new azure.compute.ManagedDisk("example", {
    name: `${vmName}-disk1`,
    location: example.location,
    resourceGroupName: example.name,
    storageAccountType: "Standard_LRS",
    createOption: "Empty",
    diskSizeGb: 10,
});
const exampleSnapshot = new azure.compute.Snapshot("example", {
    name: `${vmName}-snapshot1`,
    location: example.location,
    resourceGroupName: example.name,
    createOption: "Copy",
    sourceUri: exampleManagedDisk.id,
});
const exampleImplicitDataDiskFromSource = new azure.compute.ImplicitDataDiskFromSource("example", {
    name: `${vmName}-implicitdisk1`,
    virtualMachineId: testAzurermVirtualMachine.id,
    lun: 0,
    caching: "None",
    createOption: "Copy",
    diskSizeGb: 20,
    sourceResourceId: test.id,
});
```
```python
import pulumi
import pulumi_azure as azure

config = pulumi.Config()
prefix = config.get("prefix")
if prefix is None:
    prefix = "example"
vm_name = f"{prefix}-vm"
example = azure.core.ResourceGroup("example",
    name=f"{prefix}-resources",
    location="West Europe")
main = azure.network.VirtualNetwork("main",
    name=f"{prefix}-network",
    address_spaces=["10.0.0.0/16"],
    location=example.location,
    resource_group_name=example.name)
internal = azure.network.Subnet("internal",
    name="internal",
    resource_group_name=example.name,
    virtual_network_name=main.name,
    address_prefixes=["10.0.2.0/24"])
main_network_interface = azure.network.NetworkInterface("main",
    name=f"{prefix}-nic",
    location=example.location,
    resource_group_name=example.name,
    ip_configurations=[{
        "name": "internal",
        "subnet_id": internal.id,
        "private_ip_address_allocation": "Dynamic",
    }])
example_virtual_machine = azure.compute.VirtualMachine("example",
    name=vm_name,
    location=example.location,
    resource_group_name=example.name,
    network_interface_ids=[main_network_interface.id],
    vm_size="Standard_F2",
    storage_image_reference={
        "publisher": "Canonical",
        "offer": "0001-com-ubuntu-server-jammy",
        "sku": "22_04-lts",
        "version": "latest",
    },
    storage_os_disk={
        "name": "myosdisk1",
        "caching": "ReadWrite",
        "create_option": "FromImage",
        "managed_disk_type": "Standard_LRS",
    },
    os_profile={
        "computer_name": vm_name,
        "admin_username": "testadmin",
        "admin_password": "Password1234!",
    },
    os_profile_linux_config={
        "disable_password_authentication": False,
    })
example_managed_disk = azure.compute.ManagedDisk("example",
    name=f"{vm_name}-disk1",
    location=example.location,
    resource_group_name=example.name,
    storage_account_type="Standard_LRS",
    create_option="Empty",
    disk_size_gb=10)
example_snapshot = azure.compute.Snapshot("example",
    name=f"{vm_name}-snapshot1",
    location=example.location,
    resource_group_name=example.name,
    create_option="Copy",
    source_uri=example_managed_disk.id)
example_implicit_data_disk_from_source = azure.compute.ImplicitDataDiskFromSource("example",
    name=f"{vm_name}-implicitdisk1",
    virtual_machine_id=test_azurerm_virtual_machine["id"],
    lun=0,
    caching="None",
    create_option="Copy",
    disk_size_gb=20,
    source_resource_id=test["id"])
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var config = new Config();
    var prefix = config.Get("prefix") ?? "example";
    var vmName = $"{prefix}-vm";

    var example = new Azure.Core.ResourceGroup("example", new()
    {
        Name = $"{prefix}-resources",
        Location = "West Europe",
    });

    var main = new Azure.Network.VirtualNetwork("main", new()
    {
        Name = $"{prefix}-network",
        AddressSpaces = new[]
        {
            "10.0.0.0/16",
        },
        Location = example.Location,
        ResourceGroupName = example.Name,
    });

    var @internal = new Azure.Network.Subnet("internal", new()
    {
        Name = "internal",
        ResourceGroupName = example.Name,
        VirtualNetworkName = main.Name,
        AddressPrefixes = new[]
        {
            "10.0.2.0/24",
        },
    });

    var mainNetworkInterface = new Azure.Network.NetworkInterface("main", new()
    {
        Name = $"{prefix}-nic",
        Location = example.Location,
        ResourceGroupName = example.Name,
        IpConfigurations = new[]
        {
            new Azure.Network.Inputs.NetworkInterfaceIpConfigurationArgs
            {
                Name = "internal",
                SubnetId = @internal.Id,
                PrivateIpAddressAllocation = "Dynamic",
            },
        },
    });

    var exampleVirtualMachine = new Azure.Compute.VirtualMachine("example", new()
    {
        Name = vmName,
        Location = example.Location,
        ResourceGroupName = example.Name,
        NetworkInterfaceIds = new[]
        {
            mainNetworkInterface.Id,
        },
        VmSize = "Standard_F2",
        StorageImageReference = new Azure.Compute.Inputs.VirtualMachineStorageImageReferenceArgs
        {
            Publisher = "Canonical",
            Offer = "0001-com-ubuntu-server-jammy",
            Sku = "22_04-lts",
            Version = "latest",
        },
        StorageOsDisk = new Azure.Compute.Inputs.VirtualMachineStorageOsDiskArgs
        {
            Name = "myosdisk1",
            Caching = "ReadWrite",
            CreateOption = "FromImage",
            ManagedDiskType = "Standard_LRS",
        },
        OsProfile = new Azure.Compute.Inputs.VirtualMachineOsProfileArgs
        {
            ComputerName = vmName,
            AdminUsername = "testadmin",
            AdminPassword = "Password1234!",
        },
        OsProfileLinuxConfig = new Azure.Compute.Inputs.VirtualMachineOsProfileLinuxConfigArgs
        {
            DisablePasswordAuthentication = false,
        },
    });

    var exampleManagedDisk = new Azure.Compute.ManagedDisk("example", new()
    {
        Name = $"{vmName}-disk1",
        Location = example.Location,
        ResourceGroupName = example.Name,
        StorageAccountType = "Standard_LRS",
        CreateOption = "Empty",
        DiskSizeGb = 10,
    });

    var exampleSnapshot = new Azure.Compute.Snapshot("example", new()
    {
        Name = $"{vmName}-snapshot1",
        Location = example.Location,
        ResourceGroupName = example.Name,
        CreateOption = "Copy",
        SourceUri = exampleManagedDisk.Id,
    });

    var exampleImplicitDataDiskFromSource = new Azure.Compute.ImplicitDataDiskFromSource("example", new()
    {
        Name = $"{vmName}-implicitdisk1",
        VirtualMachineId = testAzurermVirtualMachine.Id,
        Lun = 0,
        Caching = "None",
        CreateOption = "Copy",
        DiskSizeGb = 20,
        SourceResourceId = test.Id,
    });

});
```
```go
package main

import (
	"fmt"

	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/compute"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/network"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		cfg := config.New(ctx, "")
		prefix := "example"
		if param := cfg.Get("prefix"); param != "" {
			prefix = param
		}
		vmName := fmt.Sprintf("%v-vm", prefix)
		example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
			Name:     pulumi.Sprintf("%v-resources", prefix),
			Location: pulumi.String("West Europe"),
		})
		if err != nil {
			return err
		}
		main, err := network.NewVirtualNetwork(ctx, "main", &network.VirtualNetworkArgs{
			Name: pulumi.Sprintf("%v-network", prefix),
			AddressSpaces: pulumi.StringArray{
				pulumi.String("10.0.0.0/16"),
			},
			Location:          example.Location,
			ResourceGroupName: example.Name,
		})
		if err != nil {
			return err
		}
		internal, err := network.NewSubnet(ctx, "internal", &network.SubnetArgs{
			Name:               pulumi.String("internal"),
			ResourceGroupName:  example.Name,
			VirtualNetworkName: main.Name,
			AddressPrefixes: pulumi.StringArray{
				pulumi.String("10.0.2.0/24"),
			},
		})
		if err != nil {
			return err
		}
		mainNetworkInterface, err := network.NewNetworkInterface(ctx, "main", &network.NetworkInterfaceArgs{
			Name:              pulumi.Sprintf("%v-nic", prefix),
			Location:          example.Location,
			ResourceGroupName: example.Name,
			IpConfigurations: network.NetworkInterfaceIpConfigurationArray{
				&network.NetworkInterfaceIpConfigurationArgs{
					Name:                       pulumi.String("internal"),
					SubnetId:                   internal.ID(),
					PrivateIpAddressAllocation: pulumi.String("Dynamic"),
				},
			},
		})
		if err != nil {
			return err
		}
		_, err = compute.NewVirtualMachine(ctx, "example", &compute.VirtualMachineArgs{
			Name:              pulumi.String(vmName),
			Location:          example.Location,
			ResourceGroupName: example.Name,
			NetworkInterfaceIds: pulumi.StringArray{
				mainNetworkInterface.ID(),
			},
			VmSize: pulumi.String("Standard_F2"),
			StorageImageReference: &compute.VirtualMachineStorageImageReferenceArgs{
				Publisher: pulumi.String("Canonical"),
				Offer:     pulumi.String("0001-com-ubuntu-server-jammy"),
				Sku:       pulumi.String("22_04-lts"),
				Version:   pulumi.String("latest"),
			},
			StorageOsDisk: &compute.VirtualMachineStorageOsDiskArgs{
				Name:            pulumi.String("myosdisk1"),
				Caching:         pulumi.String("ReadWrite"),
				CreateOption:    pulumi.String("FromImage"),
				ManagedDiskType: pulumi.String("Standard_LRS"),
			},
			OsProfile: &compute.VirtualMachineOsProfileArgs{
				ComputerName:  pulumi.String(vmName),
				AdminUsername: pulumi.String("testadmin"),
				AdminPassword: pulumi.String("Password1234!"),
			},
			OsProfileLinuxConfig: &compute.VirtualMachineOsProfileLinuxConfigArgs{
				DisablePasswordAuthentication: pulumi.Bool(false),
			},
		})
		if err != nil {
			return err
		}
		exampleManagedDisk, err := compute.NewManagedDisk(ctx, "example", &compute.ManagedDiskArgs{
			Name:               pulumi.Sprintf("%v-disk1", vmName),
			Location:           example.Location,
			ResourceGroupName:  example.Name,
			StorageAccountType: pulumi.String("Standard_LRS"),
			CreateOption:       pulumi.String("Empty"),
			DiskSizeGb:         pulumi.Int(10),
		})
		if err != nil {
			return err
		}
		_, err = compute.NewSnapshot(ctx, "example", &compute.SnapshotArgs{
			Name:              pulumi.Sprintf("%v-snapshot1", vmName),
			Location:          example.Location,
			ResourceGroupName: example.Name,
			CreateOption:      pulumi.String("Copy"),
			SourceUri:         exampleManagedDisk.ID(),
		})
		if err != nil {
			return err
		}
		_, err = compute.NewImplicitDataDiskFromSource(ctx, "example", &compute.ImplicitDataDiskFromSourceArgs{
			Name:             pulumi.Sprintf("%v-implicitdisk1", vmName),
			VirtualMachineId: pulumi.Any(testAzurermVirtualMachine.Id),
			Lun:              pulumi.Int(0),
			Caching:          pulumi.String("None"),
			CreateOption:     pulumi.String("Copy"),
			DiskSizeGb:       pulumi.Int(20),
			SourceResourceId: pulumi.Any(test.Id),
		})
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.core.ResourceGroup;
import com.pulumi.azure.core.ResourceGroupArgs;
import com.pulumi.azure.network.VirtualNetwork;
import com.pulumi.azure.network.VirtualNetworkArgs;
import com.pulumi.azure.network.Subnet;
import com.pulumi.azure.network.SubnetArgs;
import com.pulumi.azure.network.NetworkInterface;
import com.pulumi.azure.network.NetworkInterfaceArgs;
import com.pulumi.azure.network.inputs.NetworkInterfaceIpConfigurationArgs;
import com.pulumi.azure.compute.VirtualMachine;
import com.pulumi.azure.compute.VirtualMachineArgs;
import com.pulumi.azure.compute.inputs.VirtualMachineStorageImageReferenceArgs;
import com.pulumi.azure.compute.inputs.VirtualMachineStorageOsDiskArgs;
import com.pulumi.azure.compute.inputs.VirtualMachineOsProfileArgs;
import com.pulumi.azure.compute.inputs.VirtualMachineOsProfileLinuxConfigArgs;
import com.pulumi.azure.compute.ManagedDisk;
import com.pulumi.azure.compute.ManagedDiskArgs;
import com.pulumi.azure.compute.Snapshot;
import com.pulumi.azure.compute.SnapshotArgs;
import com.pulumi.azure.compute.ImplicitDataDiskFromSource;
import com.pulumi.azure.compute.ImplicitDataDiskFromSourceArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        final var config = ctx.config();
        final var prefix = config.get("prefix").orElse("example");
        final var vmName = String.format("%s-vm", prefix);

        var example = new ResourceGroup("example", ResourceGroupArgs.builder()
            .name(String.format("%s-resources", prefix))
            .location("West Europe")
            .build());

        var main = new VirtualNetwork("main", VirtualNetworkArgs.builder()
            .name(String.format("%s-network", prefix))
            .addressSpaces("10.0.0.0/16")
            .location(example.location())
            .resourceGroupName(example.name())
            .build());

        var internal = new Subnet("internal", SubnetArgs.builder()
            .name("internal")
            .resourceGroupName(example.name())
            .virtualNetworkName(main.name())
            .addressPrefixes("10.0.2.0/24")
            .build());

        var mainNetworkInterface = new NetworkInterface("mainNetworkInterface", NetworkInterfaceArgs.builder()
            .name(String.format("%s-nic", prefix))
            .location(example.location())
            .resourceGroupName(example.name())
            .ipConfigurations(NetworkInterfaceIpConfigurationArgs.builder()
                .name("internal")
                .subnetId(internal.id())
                .privateIpAddressAllocation("Dynamic")
                .build())
            .build());

        var exampleVirtualMachine = new VirtualMachine("exampleVirtualMachine", VirtualMachineArgs.builder()
            .name(vmName)
            .location(example.location())
            .resourceGroupName(example.name())
            .networkInterfaceIds(mainNetworkInterface.id())
            .vmSize("Standard_F2")
            .storageImageReference(VirtualMachineStorageImageReferenceArgs.builder()
                .publisher("Canonical")
                .offer("0001-com-ubuntu-server-jammy")
                .sku("22_04-lts")
                .version("latest")
                .build())
            .storageOsDisk(VirtualMachineStorageOsDiskArgs.builder()
                .name("myosdisk1")
                .caching("ReadWrite")
                .createOption("FromImage")
                .managedDiskType("Standard_LRS")
                .build())
            .osProfile(VirtualMachineOsProfileArgs.builder()
                .computerName(vmName)
                .adminUsername("testadmin")
                .adminPassword("Password1234!")
                .build())
            .osProfileLinuxConfig(VirtualMachineOsProfileLinuxConfigArgs.builder()
                .disablePasswordAuthentication(false)
                .build())
            .build());

        var exampleManagedDisk = new ManagedDisk("exampleManagedDisk", ManagedDiskArgs.builder()
            .name(String.format("%s-disk1", vmName))
            .location(example.location())
            .resourceGroupName(example.name())
            .storageAccountType("Standard_LRS")
            .createOption("Empty")
            .diskSizeGb(10)
            .build());

        var exampleSnapshot = new Snapshot("exampleSnapshot", SnapshotArgs.builder()
            .name(String.format("%s-snapshot1", vmName))
            .location(example.location())
            .resourceGroupName(example.name())
            .createOption("Copy")
            .sourceUri(exampleManagedDisk.id())
            .build());

        var exampleImplicitDataDiskFromSource = new ImplicitDataDiskFromSource("exampleImplicitDataDiskFromSource", ImplicitDataDiskFromSourceArgs.builder()
            .name(String.format("%s-implicitdisk1", vmName))
            .virtualMachineId(testAzurermVirtualMachine.id())
            .lun("0")
            .caching("None")
            .createOption("Copy")
            .diskSizeGb(20)
            .sourceResourceId(test.id())
            .build());

    }
}
```
```yaml
configuration:
  prefix:
    type: string
    default: example
resources:
  example:
    type: azure:core:ResourceGroup
    properties:
      name: ${prefix}-resources
      location: West Europe
  main:
    type: azure:network:VirtualNetwork
    properties:
      name: ${prefix}-network
      addressSpaces:
        - 10.0.0.0/16
      location: ${example.location}
      resourceGroupName: ${example.name}
  internal:
    type: azure:network:Subnet
    properties:
      name: internal
      resourceGroupName: ${example.name}
      virtualNetworkName: ${main.name}
      addressPrefixes:
        - 10.0.2.0/24
  mainNetworkInterface:
    type: azure:network:NetworkInterface
    name: main
    properties:
      name: ${prefix}-nic
      location: ${example.location}
      resourceGroupName: ${example.name}
      ipConfigurations:
        - name: internal
          subnetId: ${internal.id}
          privateIpAddressAllocation: Dynamic
  exampleVirtualMachine:
    type: azure:compute:VirtualMachine
    name: example
    properties:
      name: ${vmName}
      location: ${example.location}
      resourceGroupName: ${example.name}
      networkInterfaceIds:
        - ${mainNetworkInterface.id}
      vmSize: Standard_F2
      storageImageReference:
        publisher: Canonical
        offer: 0001-com-ubuntu-server-jammy
        sku: 22_04-lts
        version: latest
      storageOsDisk:
        name: myosdisk1
        caching: ReadWrite
        createOption: FromImage
        managedDiskType: Standard_LRS
      osProfile:
        computerName: ${vmName}
        adminUsername: testadmin
        adminPassword: Password1234!
      osProfileLinuxConfig:
        disablePasswordAuthentication: false
  exampleManagedDisk:
    type: azure:compute:ManagedDisk
    name: example
    properties:
      name: ${vmName}-disk1
      location: ${example.location}
      resourceGroupName: ${example.name}
      storageAccountType: Standard_LRS
      createOption: Empty
      diskSizeGb: 10
  exampleSnapshot:
    type: azure:compute:Snapshot
    name: example
    properties:
      name: ${vmName}-snapshot1
      location: ${example.location}
      resourceGroupName: ${example.name}
      createOption: Copy
      sourceUri: ${exampleManagedDisk.id}
  exampleImplicitDataDiskFromSource:
    type: azure:compute:ImplicitDataDiskFromSource
    name: example
    properties:
      name: ${vmName}-implicitdisk1
      virtualMachineId: ${testAzurermVirtualMachine.id}
      lun: '0'
      caching: None
      createOption: Copy
      diskSizeGb: 20
      sourceResourceId: ${test.id}
variables:
  vmName: ${prefix}-vm
```
<!--End PulumiCodeChooser -->

## Import

The implicit Data Disk of the Virtual Machine can be imported using the `resource id`, e.g.

```sh
$ pulumi import azure:compute/implicitDataDiskFromSource:ImplicitDataDiskFromSource example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Compute/virtualMachines/machine1/dataDisks/disk1
```

x
cachingB" gSpecifies the caching requirements for this Data Disk. Possible values are `ReadOnly` and `ReadWrite`.

createOption" Specifies the Create Option of the Data Disk. The only possible value is `Copy`. Changing this forces a new resource to be created.
w

diskSizeGb eSpecifies the size of the Data Disk in gigabytes. Changing this forces a new resource to be created.

lun The Logical Unit Number of the Data Disk, which needs to be unique within the Virtual Machine. Changing this forces a new resource to be created.
g
nameB" YSpecifies the name of this Data Disk. Changing this forces a new resource to be created.

sourceResourceId" xThe ID of the source resource which this Data Disk was created from. Changing this forces a new resource to be created.

virtualMachineId" |The ID of the Virtual Machine to which the Data Disk should be attached. Changing this forces a new resource to be created.
«
writeAcceleratorEnabledB
 Specifies if Write Accelerator is enabled on the disk. This can only be enabled on `Premium_LRS` managed disks with no caching and [M-Series VMs](https://docs.microsoft.com/azure/virtual-machines/workloads/sap/how-to-enable-write-accelerator). Defaults to `false`.
"x
cachingB" gSpecifies the caching requirements for this Data Disk. Possible values are `ReadOnly` and `ReadWrite`.
"
createOption" Specifies the Create Option of the Data Disk. The only possible value is `Copy`. Changing this forces a new resource to be created.
"w

diskSizeGb eSpecifies the size of the Data Disk in gigabytes. Changing this forces a new resource to be created.
"
lun The Logical Unit Number of the Data Disk, which needs to be unique within the Virtual Machine. Changing this forces a new resource to be created.
"e
name" YSpecifies the name of this Data Disk. Changing this forces a new resource to be created.
"
sourceResourceId" xThe ID of the source resource which this Data Disk was created from. Changing this forces a new resource to be created.
"
virtualMachineId" |The ID of the Virtual Machine to which the Data Disk should be attached. Changing this forces a new resource to be created.
"«
writeAcceleratorEnabledB
 Specifies if Write Accelerator is enabled on the disk. This can only be enabled on `Premium_LRS` managed disks with no caching and [M-Series VMs](https://docs.microsoft.com/azure/virtual-machines/workloads/sap/how-to-enable-write-accelerator). Defaults to `false`.
*¡Ä
U
computeLinuxVirtualMachine5azure:compute/linuxVirtualMachine:LinuxVirtualMachine{Manages a Linux Virtual Machine.

## Disclaimers

> **Note** This provider will automatically remove the OS Disk by default - this behaviour can be configured using the `features` configuration within the Provider configuration block.

> **Note** All arguments including the administrator login and password will be stored in the raw state as plain-text.

> **Note** This resource does not support Unmanaged Disks. If you need to use Unmanaged Disks you can continue to use the `azure.compute.VirtualMachine` resource instead.

> **Note** This resource does not support attaching existing OS Disks. You can instead capture an image of the OS Disk or continue to use the `azure.compute.VirtualMachine` resource instead.

> In this release there's a known issue where the `public_ip_address` and `public_ip_addresses` fields may not be fully populated for Dynamic Public IP's.

## Example Usage

This example provisions a basic Linux Virtual Machine on an internal network.

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";
import * as std from "@pulumi/std";

const example = new azure.core.ResourceGroup("example", {
    name: "example-resources",
    location: "West Europe",
});
const exampleVirtualNetwork = new azure.network.VirtualNetwork("example", {
    name: "example-network",
    addressSpaces: ["10.0.0.0/16"],
    location: example.location,
    resourceGroupName: example.name,
});
const exampleSubnet = new azure.network.Subnet("example", {
    name: "internal",
    resourceGroupName: example.name,
    virtualNetworkName: exampleVirtualNetwork.name,
    addressPrefixes: ["10.0.2.0/24"],
});
const exampleNetworkInterface = new azure.network.NetworkInterface("example", {
    name: "example-nic",
    location: example.location,
    resourceGroupName: example.name,
    ipConfigurations: [{
        name: "internal",
        subnetId: exampleSubnet.id,
        privateIpAddressAllocation: "Dynamic",
    }],
});
const exampleLinuxVirtualMachine = new azure.compute.LinuxVirtualMachine("example", {
    name: "example-machine",
    resourceGroupName: example.name,
    location: example.location,
    size: "Standard_F2",
    adminUsername: "adminuser",
    networkInterfaceIds: [exampleNetworkInterface.id],
    adminSshKeys: [{
        username: "adminuser",
        publicKey: std.file({
            input: "~/.ssh/id_rsa.pub",
        }).then(invoke => invoke.result),
    }],
    osDisk: {
        caching: "ReadWrite",
        storageAccountType: "Standard_LRS",
    },
    sourceImageReference: {
        publisher: "Canonical",
        offer: "0001-com-ubuntu-server-jammy",
        sku: "22_04-lts",
        version: "latest",
    },
});
```
```python
import pulumi
import pulumi_azure as azure
import pulumi_std as std

example = azure.core.ResourceGroup("example",
    name="example-resources",
    location="West Europe")
example_virtual_network = azure.network.VirtualNetwork("example",
    name="example-network",
    address_spaces=["10.0.0.0/16"],
    location=example.location,
    resource_group_name=example.name)
example_subnet = azure.network.Subnet("example",
    name="internal",
    resource_group_name=example.name,
    virtual_network_name=example_virtual_network.name,
    address_prefixes=["10.0.2.0/24"])
example_network_interface = azure.network.NetworkInterface("example",
    name="example-nic",
    location=example.location,
    resource_group_name=example.name,
    ip_configurations=[{
        "name": "internal",
        "subnet_id": example_subnet.id,
        "private_ip_address_allocation": "Dynamic",
    }])
example_linux_virtual_machine = azure.compute.LinuxVirtualMachine("example",
    name="example-machine",
    resource_group_name=example.name,
    location=example.location,
    size="Standard_F2",
    admin_username="adminuser",
    network_interface_ids=[example_network_interface.id],
    admin_ssh_keys=[{
        "username": "adminuser",
        "public_key": std.file(input="~/.ssh/id_rsa.pub").result,
    }],
    os_disk={
        "caching": "ReadWrite",
        "storage_account_type": "Standard_LRS",
    },
    source_image_reference={
        "publisher": "Canonical",
        "offer": "0001-com-ubuntu-server-jammy",
        "sku": "22_04-lts",
        "version": "latest",
    })
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;
using Std = Pulumi.Std;

return await Deployment.RunAsync(() => 
{
    var example = new Azure.Core.ResourceGroup("example", new()
    {
        Name = "example-resources",
        Location = "West Europe",
    });

    var exampleVirtualNetwork = new Azure.Network.VirtualNetwork("example", new()
    {
        Name = "example-network",
        AddressSpaces = new[]
        {
            "10.0.0.0/16",
        },
        Location = example.Location,
        ResourceGroupName = example.Name,
    });

    var exampleSubnet = new Azure.Network.Subnet("example", new()
    {
        Name = "internal",
        ResourceGroupName = example.Name,
        VirtualNetworkName = exampleVirtualNetwork.Name,
        AddressPrefixes = new[]
        {
            "10.0.2.0/24",
        },
    });

    var exampleNetworkInterface = new Azure.Network.NetworkInterface("example", new()
    {
        Name = "example-nic",
        Location = example.Location,
        ResourceGroupName = example.Name,
        IpConfigurations = new[]
        {
            new Azure.Network.Inputs.NetworkInterfaceIpConfigurationArgs
            {
                Name = "internal",
                SubnetId = exampleSubnet.Id,
                PrivateIpAddressAllocation = "Dynamic",
            },
        },
    });

    var exampleLinuxVirtualMachine = new Azure.Compute.LinuxVirtualMachine("example", new()
    {
        Name = "example-machine",
        ResourceGroupName = example.Name,
        Location = example.Location,
        Size = "Standard_F2",
        AdminUsername = "adminuser",
        NetworkInterfaceIds = new[]
        {
            exampleNetworkInterface.Id,
        },
        AdminSshKeys = new[]
        {
            new Azure.Compute.Inputs.LinuxVirtualMachineAdminSshKeyArgs
            {
                Username = "adminuser",
                PublicKey = Std.File.Invoke(new()
                {
                    Input = "~/.ssh/id_rsa.pub",
                }).Apply(invoke => invoke.Result),
            },
        },
        OsDisk = new Azure.Compute.Inputs.LinuxVirtualMachineOsDiskArgs
        {
            Caching = "ReadWrite",
            StorageAccountType = "Standard_LRS",
        },
        SourceImageReference = new Azure.Compute.Inputs.LinuxVirtualMachineSourceImageReferenceArgs
        {
            Publisher = "Canonical",
            Offer = "0001-com-ubuntu-server-jammy",
            Sku = "22_04-lts",
            Version = "latest",
        },
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/compute"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/network"
	"github.com/pulumi/pulumi-std/sdk/go/std"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
			Name:     pulumi.String("example-resources"),
			Location: pulumi.String("West Europe"),
		})
		if err != nil {
			return err
		}
		exampleVirtualNetwork, err := network.NewVirtualNetwork(ctx, "example", &network.VirtualNetworkArgs{
			Name: pulumi.String("example-network"),
			AddressSpaces: pulumi.StringArray{
				pulumi.String("10.0.0.0/16"),
			},
			Location:          example.Location,
			ResourceGroupName: example.Name,
		})
		if err != nil {
			return err
		}
		exampleSubnet, err := network.NewSubnet(ctx, "example", &network.SubnetArgs{
			Name:               pulumi.String("internal"),
			ResourceGroupName:  example.Name,
			VirtualNetworkName: exampleVirtualNetwork.Name,
			AddressPrefixes: pulumi.StringArray{
				pulumi.String("10.0.2.0/24"),
			},
		})
		if err != nil {
			return err
		}
		exampleNetworkInterface, err := network.NewNetworkInterface(ctx, "example", &network.NetworkInterfaceArgs{
			Name:              pulumi.String("example-nic"),
			Location:          example.Location,
			ResourceGroupName: example.Name,
			IpConfigurations: network.NetworkInterfaceIpConfigurationArray{
				&network.NetworkInterfaceIpConfigurationArgs{
					Name:                       pulumi.String("internal"),
					SubnetId:                   exampleSubnet.ID(),
					PrivateIpAddressAllocation: pulumi.String("Dynamic"),
				},
			},
		})
		if err != nil {
			return err
		}
		invokeFile, err := std.File(ctx, &std.FileArgs{
			Input: "~/.ssh/id_rsa.pub",
		}, nil)
		if err != nil {
			return err
		}
		_, err = compute.NewLinuxVirtualMachine(ctx, "example", &compute.LinuxVirtualMachineArgs{
			Name:              pulumi.String("example-machine"),
			ResourceGroupName: example.Name,
			Location:          example.Location,
			Size:              pulumi.String("Standard_F2"),
			AdminUsername:     pulumi.String("adminuser"),
			NetworkInterfaceIds: pulumi.StringArray{
				exampleNetworkInterface.ID(),
			},
			AdminSshKeys: compute.LinuxVirtualMachineAdminSshKeyArray{
				&compute.LinuxVirtualMachineAdminSshKeyArgs{
					Username:  pulumi.String("adminuser"),
					PublicKey: pulumi.String(invokeFile.Result),
				},
			},
			OsDisk: &compute.LinuxVirtualMachineOsDiskArgs{
				Caching:            pulumi.String("ReadWrite"),
				StorageAccountType: pulumi.String("Standard_LRS"),
			},
			SourceImageReference: &compute.LinuxVirtualMachineSourceImageReferenceArgs{
				Publisher: pulumi.String("Canonical"),
				Offer:     pulumi.String("0001-com-ubuntu-server-jammy"),
				Sku:       pulumi.String("22_04-lts"),
				Version:   pulumi.String("latest"),
			},
		})
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.core.ResourceGroup;
import com.pulumi.azure.core.ResourceGroupArgs;
import com.pulumi.azure.network.VirtualNetwork;
import com.pulumi.azure.network.VirtualNetworkArgs;
import com.pulumi.azure.network.Subnet;
import com.pulumi.azure.network.SubnetArgs;
import com.pulumi.azure.network.NetworkInterface;
import com.pulumi.azure.network.NetworkInterfaceArgs;
import com.pulumi.azure.network.inputs.NetworkInterfaceIpConfigurationArgs;
import com.pulumi.azure.compute.LinuxVirtualMachine;
import com.pulumi.azure.compute.LinuxVirtualMachineArgs;
import com.pulumi.azure.compute.inputs.LinuxVirtualMachineAdminSshKeyArgs;
import com.pulumi.azure.compute.inputs.LinuxVirtualMachineOsDiskArgs;
import com.pulumi.azure.compute.inputs.LinuxVirtualMachineSourceImageReferenceArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        var example = new ResourceGroup("example", ResourceGroupArgs.builder()
            .name("example-resources")
            .location("West Europe")
            .build());

        var exampleVirtualNetwork = new VirtualNetwork("exampleVirtualNetwork", VirtualNetworkArgs.builder()
            .name("example-network")
            .addressSpaces("10.0.0.0/16")
            .location(example.location())
            .resourceGroupName(example.name())
            .build());

        var exampleSubnet = new Subnet("exampleSubnet", SubnetArgs.builder()
            .name("internal")
            .resourceGroupName(example.name())
            .virtualNetworkName(exampleVirtualNetwork.name())
            .addressPrefixes("10.0.2.0/24")
            .build());

        var exampleNetworkInterface = new NetworkInterface("exampleNetworkInterface", NetworkInterfaceArgs.builder()
            .name("example-nic")
            .location(example.location())
            .resourceGroupName(example.name())
            .ipConfigurations(NetworkInterfaceIpConfigurationArgs.builder()
                .name("internal")
                .subnetId(exampleSubnet.id())
                .privateIpAddressAllocation("Dynamic")
                .build())
            .build());

        var exampleLinuxVirtualMachine = new LinuxVirtualMachine("exampleLinuxVirtualMachine", LinuxVirtualMachineArgs.builder()
            .name("example-machine")
            .resourceGroupName(example.name())
            .location(example.location())
            .size("Standard_F2")
            .adminUsername("adminuser")
            .networkInterfaceIds(exampleNetworkInterface.id())
            .adminSshKeys(LinuxVirtualMachineAdminSshKeyArgs.builder()
                .username("adminuser")
                .publicKey(StdFunctions.file(FileArgs.builder()
                    .input("~/.ssh/id_rsa.pub")
                    .build()).result())
                .build())
            .osDisk(LinuxVirtualMachineOsDiskArgs.builder()
                .caching("ReadWrite")
                .storageAccountType("Standard_LRS")
                .build())
            .sourceImageReference(LinuxVirtualMachineSourceImageReferenceArgs.builder()
                .publisher("Canonical")
                .offer("0001-com-ubuntu-server-jammy")
                .sku("22_04-lts")
                .version("latest")
                .build())
            .build());

    }
}
```
```yaml
resources:
  example:
    type: azure:core:ResourceGroup
    properties:
      name: example-resources
      location: West Europe
  exampleVirtualNetwork:
    type: azure:network:VirtualNetwork
    name: example
    properties:
      name: example-network
      addressSpaces:
        - 10.0.0.0/16
      location: ${example.location}
      resourceGroupName: ${example.name}
  exampleSubnet:
    type: azure:network:Subnet
    name: example
    properties:
      name: internal
      resourceGroupName: ${example.name}
      virtualNetworkName: ${exampleVirtualNetwork.name}
      addressPrefixes:
        - 10.0.2.0/24
  exampleNetworkInterface:
    type: azure:network:NetworkInterface
    name: example
    properties:
      name: example-nic
      location: ${example.location}
      resourceGroupName: ${example.name}
      ipConfigurations:
        - name: internal
          subnetId: ${exampleSubnet.id}
          privateIpAddressAllocation: Dynamic
  exampleLinuxVirtualMachine:
    type: azure:compute:LinuxVirtualMachine
    name: example
    properties:
      name: example-machine
      resourceGroupName: ${example.name}
      location: ${example.location}
      size: Standard_F2
      adminUsername: adminuser
      networkInterfaceIds:
        - ${exampleNetworkInterface.id}
      adminSshKeys:
        - username: adminuser
          publicKey:
            fn::invoke:
              function: std:file
              arguments:
                input: ~/.ssh/id_rsa.pub
              return: result
      osDisk:
        caching: ReadWrite
        storageAccountType: Standard_LRS
      sourceImageReference:
        publisher: Canonical
        offer: 0001-com-ubuntu-server-jammy
        sku: 22_04-lts
        version: latest
```
<!--End PulumiCodeChooser -->

## Import

Linux Virtual Machines can be imported using the `resource id`, e.g.

```sh
$ pulumi import azure:compute/linuxVirtualMachine:LinuxVirtualMachine example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Compute/virtualMachines/machine1
```

ñ
additionalCapabilities B:

compute)LinuxVirtualMachineAdditionalCapabilitiesaazure:compute/LinuxVirtualMachineAdditionalCapabilities:LinuxVirtualMachineAdditionalCapabilities4A `additional_capabilities` block as defined below.
à
adminPasswordB" ÈThe Password which should be used for the local-administrator on this Virtual Machine. Changing this forces a new resource to be created.

> **NOTE:** When an `admin_password` is specified `disable_password_authentication` must be set to `false`.
> **NOTE:** One of either `admin_password` or `admin_ssh_key` must be specified.
Ë
adminSshKeys~B|*z:x
v
computeLinuxVirtualMachineAdminSshKeyKazure:compute/LinuxVirtualMachineAdminSshKey:LinuxVirtualMachineAdminSshKeyºOne or more `admin_ssh_key` blocks as defined below. Changing this forces a new resource to be created.

> **NOTE:** One of either `admin_password` or `admin_ssh_key` must be specified.

adminUsername" yThe username of the local administrator used for the Virtual Machine. Changing this forces a new resource to be created.
v
allowExtensionOperationsB
 TShould Extension Operations be allowed on this Virtual Machine? Defaults to `true`.
£
availabilitySetIdB" Specifies the ID of the Availability Set in which the Virtual Machine should exist. Changing this forces a new resource to be created.
Î
bootDiagnosticsB:

compute"LinuxVirtualMachineBootDiagnosticsSazure:compute/LinuxVirtualMachineBootDiagnostics:LinuxVirtualMachineBootDiagnostics-A `boot_diagnostics` block as defined below.
È
/bypassPlatformSafetyChecksOnUserScheduleEnabledB
 Specifies whether to skip platform scheduled patching when a user schedule is associated with the VM. Defaults to `false`.

> **NOTE:** `bypass_platform_safety_checks_on_user_schedule_enabled` can only be set to `true` when `patch_mode` is set to `AutomaticByPlatform`.

capacityReservationGroupIdB" ÞSpecifies the ID of the Capacity Reservation Group which the Virtual Machine should be allocated to.

> **NOTE:** `capacity_reservation_group_id` cannot be used with `availability_set_id` or `proximity_placement_group_id`
¸
computerNameB" ¡Specifies the Hostname which should be used for this Virtual Machine. If unspecified this defaults to the value for the `name` field. If the value of the `name` field is not a valid `computer_name`, then you must specify `computer_name`. Changing this forces a new resource to be created.


customDataB" The Base64-Encoded Custom Data which should be used for this Virtual Machine. Changing this forces a new resource to be created.

dedicatedHostGroupIdB" {The ID of a Dedicated Host Group that this Linux Virtual Machine should be run within. Conflicts with `dedicated_host_id`.

dedicatedHostIdB" jThe ID of a Dedicated Host where this machine should be run on. Conflicts with `dedicated_host_group_id`.
´
disablePasswordAuthenticationB
 Should Password Authentication be disabled on this Virtual Machine? Defaults to `true`. Changing this forces a new resource to be created.

> In general we'd recommend using SSH Keys for authentication rather than Passwords - but there's tradeoff's to each - please [see this thread for more information](https://security.stackexchange.com/questions/69407/why-is-using-an-ssh-key-more-secure-than-using-passwords).

> **NOTE:** When an `admin_password` is specified `disable_password_authentication` must be set to `false`.

diskControllerTypeB" iSpecifies the Disk Controller Type used for this Virtual Machine. Possible values are `SCSI` and `NVMe`.
²
edgeZoneB" Specifies the Edge Zone within the Azure Region where this Linux Virtual Machine should exist. Changing this forces a new Linux Virtual Machine to be created.
¢
encryptionAtHostEnabledB
 Should all of the disks (including the temp disk) attached to this Virtual Machine be encrypted by enabling Encryption at Host?
µ
evictionPolicyB" Specifies what should happen when the Virtual Machine is evicted for price reasons when using a Spot instance. Possible values are `Deallocate` and `Delete`. Changing this forces a new resource to be created.

> **NOTE:** This can only be configured when `priority` is set to `Spot`.
ë
extensionsTimeBudgetB" ÌSpecifies the duration allocated for all extensions to start. The time duration should be between 15 minutes and 120 minutes (inclusive) and should be specified in ISO 8601 format. Defaults to `PT1H30M`.
©
galleryApplicationsB*:

compute%LinuxVirtualMachineGalleryApplicationYazure:compute/LinuxVirtualMachineGalleryApplication:LinuxVirtualMachineGalleryApplication÷One or more `gallery_application` blocks as defined below.

> **Note** Gallery Application Assignments can be defined either directly on `azure.compute.LinuxVirtualMachine` resource, or using the `azure.compute.GalleryApplicationAssignment` resource - but the two approaches cannot be used together. If both are used with the same Virtual Machine, spurious changes will occur. If `azure.compute.GalleryApplicationAssignment` is used, it's recommended to use `ignore_changes` for the `gallery_application` block on the corresponding `azure.compute.LinuxVirtualMachine` resource, to avoid a persistent diff when using this resource.
§
identitysBq:o
m
computeLinuxVirtualMachineIdentityEazure:compute/LinuxVirtualMachineIdentity:LinuxVirtualMachineIdentity&An `identity` block as defined below.
ü
licenseTypeB" æSpecifies the License Type for this Virtual Machine. Possible values are `RHEL_BYOS`, `RHEL_BASE`, `RHEL_EUS`, `RHEL_SAPAPPS`, `RHEL_SAPHA`, `RHEL_BASESAPAPPS`, `RHEL_BASESAPHA`, `SLES_BYOS`, `SLES_SAP`, `SLES_HPC`, `UBUNTU_PRO`.

locationB" tThe Azure location where the Linux Virtual Machine should exist. Changing this forces a new resource to be created.
»
maxBidPriceB ¥The maximum price you're willing to pay for this Virtual Machine, in US Dollars; which must be greater than the current spot price. If this bid price falls below the current spot price the Virtual Machine will be evicted using the `eviction_policy`. Defaults to `-1`, which means that the Virtual Machine should not be evicted for price reasons.

> **NOTE:** This can only be configured when `priority` is set to `Spot`.
h
nameB" ZThe name of the Linux Virtual Machine. Changing this forces a new resource to be created.
Ü
networkInterfaceIds*" ¾. A list of Network Interface IDs which should be attached to this Virtual Machine. The first Network Interface ID in this list will be the Primary Network Interface on the Virtual Machine.

osDiskk:i
g
computeLinuxVirtualMachineOsDiskAazure:compute/LinuxVirtualMachineOsDisk:LinuxVirtualMachineOsDisk$A `os_disk` block as defined below.
ã
osImageNotificationB:

compute&LinuxVirtualMachineOsImageNotification[azure:compute/LinuxVirtualMachineOsImageNotification:LinuxVirtualMachineOsImageNotification2A `os_image_notification` block as defined below.
¿
patchAssessmentModeB" ¡Specifies the mode of VM Guest Patching for the Virtual Machine. Possible values are `AutomaticByPlatform` or `ImageDefault`. Defaults to `ImageDefault`.

> **NOTE:** If the `patch_assessment_mode` is set to `AutomaticByPlatform` then the `provision_vm_agent` field must be set to `true`.
Ý
	patchModeB" ÉSpecifies the mode of in-guest patching to this Linux Virtual Machine. Possible values are `AutomaticByPlatform` and `ImageDefault`. Defaults to `ImageDefault`. For more information on patch modes please see the [product documentation](https://docs.microsoft.com/azure/virtual-machines/automatic-vm-guest-patching#patch-orchestration-modes).

> **NOTE:** If `patch_mode` is set to `AutomaticByPlatform` then `provision_vm_agent` must also be set to `true`.
Å
plangBe:c
a
computeLinuxVirtualMachinePlan=azure:compute/LinuxVirtualMachinePlan:LinuxVirtualMachinePlanTA `plan` block as defined below. Changing this forces a new resource to be created.
Í
platformFaultDomainB ¯Specifies the Platform Fault Domain in which this Linux Virtual Machine should be created. Defaults to `-1`, which means this will be automatically assigned to a fault domain that best maintains balance across the available fault domains. Changing this forces a new Linux Virtual Machine to be created.
·
priorityB" ¤Specifies the priority of this Virtual Machine. Possible values are `Regular` and `Spot`. Defaults to `Regular`. Changing this forces a new resource to be created.

provisionVmAgentB
 ÿShould the Azure VM Agent be provisioned on this Virtual Machine? Defaults to `true`. Changing this forces a new resource to be created.

> **NOTE:** If `provision_vm_agent` is set to `false` then `allow_extension_operations` must also be set to `false`.
|
proximityPlacementGroupIdB" YThe ID of the Proximity Placement Group which the Virtual Machine should be assigned to.
ï
rebootSettingB" ×Specifies the reboot setting for platform scheduled patching. Possible values are `Always`, `IfRequired` and `Never`.

> **NOTE:** `reboot_setting` can only be set when `patch_mode` is set to `AutomaticByPlatform`.
 
resourceGroupName" The name of the Resource Group in which the Linux Virtual Machine should be exist. Changing this forces a new resource to be created.
ª
secretsoBm*k:i
g
computeLinuxVirtualMachineSecretAazure:compute/LinuxVirtualMachineSecret:LinuxVirtualMachineSecret.One or more `secret` blocks as defined below.

secureBootEnabledB
 {Specifies whether secure boot should be enabled on the virtual machine. Changing this forces a new resource to be created.
Z
size" NThe SKU which should be used for this Virtual Machine, such as `Standard_F2`.
Î
sourceImageIdB" ¶The ID of the Image which this Virtual Machine should be created from. Changing this forces a new resource to be created. Possible Image ID types include `Image ID`s, `Shared Image ID`s, `Shared Image Version ID`s, `Community Gallery Image ID`s, `Community Gallery Image Version ID`s, `Shared Gallery Image ID`s and `Shared Gallery Image Version ID`s.

> **NOTE:** One of either `source_image_id` or `source_image_reference` must be set.
ò
sourceImageReferenceB:

compute'LinuxVirtualMachineSourceImageReference]azure:compute/LinuxVirtualMachineSourceImageReference:LinuxVirtualMachineSourceImageReference¼A `source_image_reference` block as defined below. Changing this forces a new resource to be created.

> **NOTE:** One of either `source_image_id` or `source_image_reference` must be set.
T
tagsB2" DA mapping of tags which should be assigned to this Virtual Machine.
ö
terminationNotification£B :

compute*LinuxVirtualMachineTerminationNotificationcazure:compute/LinuxVirtualMachineTerminationNotification:LinuxVirtualMachineTerminationNotification5A `termination_notification` block as defined below.
^
userDataB" LThe Base64-Encoded User Data which should be used for this Virtual Machine.
¼
virtualMachineScaleSetIdB" Specifies the Orchestrated Virtual Machine Scale Set that this Virtual Machine should be created within.

> **NOTE:** To update `virtual_machine_scale_set_id` the Preview Feature `Microsoft.Compute/SingleFDAttachDetachVMToVmss` needs to be enabled, see [the documentation](https://review.learn.microsoft.com/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-attach-detach-vm#enroll-in-the-preview) for more information.

> **NOTE:** Orchestrated Virtual Machine Scale Sets can be provisioned using [the `azure.compute.OrchestratedVirtualMachineScaleSet` resource](https://www.terraform.io/docs/providers/azurerm/r/orchestrated_virtual_machine_scale_set.html).

> **NOTE:** To attach an existing VM to a Virtual Machine Scale Set, the scale set must have `single_placement_group` set to `false`, see [the documentation](https://learn.microsoft.com/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-attach-detach-vm?tabs=portal-1%2Cportal-2%2Cportal-3#limitations-for-attaching-an-existing-vm-to-a-scale-set) for more information.
s
vmAgentPlatformUpdatesEnabledB
 LSpecifies whether VMAgent Platform Updates is enabled. Defaults to `false`.

vtpmEnabledB
 tSpecifies whether vTPM should be enabled on the virtual machine. Changing this forces a new resource to be created.
§
zoneB" Specifies the Availability Zones in which this Linux Virtual Machine should be located. Changing this forces a new Linux Virtual Machine to be created.
"ñ
additionalCapabilities B:

compute)LinuxVirtualMachineAdditionalCapabilitiesaazure:compute/LinuxVirtualMachineAdditionalCapabilities:LinuxVirtualMachineAdditionalCapabilities4A `additional_capabilities` block as defined below.
"à
adminPasswordB" ÈThe Password which should be used for the local-administrator on this Virtual Machine. Changing this forces a new resource to be created.

> **NOTE:** When an `admin_password` is specified `disable_password_authentication` must be set to `false`.
> **NOTE:** One of either `admin_password` or `admin_ssh_key` must be specified.
"Ë
adminSshKeys~B|*z:x
v
computeLinuxVirtualMachineAdminSshKeyKazure:compute/LinuxVirtualMachineAdminSshKey:LinuxVirtualMachineAdminSshKeyºOne or more `admin_ssh_key` blocks as defined below. Changing this forces a new resource to be created.

> **NOTE:** One of either `admin_password` or `admin_ssh_key` must be specified.
"
adminUsername" yThe username of the local administrator used for the Virtual Machine. Changing this forces a new resource to be created.
"v
allowExtensionOperationsB
 TShould Extension Operations be allowed on this Virtual Machine? Defaults to `true`.
"£
availabilitySetIdB" Specifies the ID of the Availability Set in which the Virtual Machine should exist. Changing this forces a new resource to be created.
"Î
bootDiagnosticsB:

compute"LinuxVirtualMachineBootDiagnosticsSazure:compute/LinuxVirtualMachineBootDiagnostics:LinuxVirtualMachineBootDiagnostics-A `boot_diagnostics` block as defined below.
"È
/bypassPlatformSafetyChecksOnUserScheduleEnabledB
 Specifies whether to skip platform scheduled patching when a user schedule is associated with the VM. Defaults to `false`.

> **NOTE:** `bypass_platform_safety_checks_on_user_schedule_enabled` can only be set to `true` when `patch_mode` is set to `AutomaticByPlatform`.
"
capacityReservationGroupIdB" ÞSpecifies the ID of the Capacity Reservation Group which the Virtual Machine should be allocated to.

> **NOTE:** `capacity_reservation_group_id` cannot be used with `availability_set_id` or `proximity_placement_group_id`
"¶
computerName" ¡Specifies the Hostname which should be used for this Virtual Machine. If unspecified this defaults to the value for the `name` field. If the value of the `name` field is not a valid `computer_name`, then you must specify `computer_name`. Changing this forces a new resource to be created.
"

customDataB" The Base64-Encoded Custom Data which should be used for this Virtual Machine. Changing this forces a new resource to be created.
"
dedicatedHostGroupIdB" {The ID of a Dedicated Host Group that this Linux Virtual Machine should be run within. Conflicts with `dedicated_host_id`.
"
dedicatedHostIdB" jThe ID of a Dedicated Host where this machine should be run on. Conflicts with `dedicated_host_group_id`.
"´
disablePasswordAuthenticationB
 Should Password Authentication be disabled on this Virtual Machine? Defaults to `true`. Changing this forces a new resource to be created.

> In general we'd recommend using SSH Keys for authentication rather than Passwords - but there's tradeoff's to each - please [see this thread for more information](https://security.stackexchange.com/questions/69407/why-is-using-an-ssh-key-more-secure-than-using-passwords).

> **NOTE:** When an `admin_password` is specified `disable_password_authentication` must be set to `false`.
"
diskControllerType" iSpecifies the Disk Controller Type used for this Virtual Machine. Possible values are `SCSI` and `NVMe`.
"²
edgeZoneB" Specifies the Edge Zone within the Azure Region where this Linux Virtual Machine should exist. Changing this forces a new Linux Virtual Machine to be created.
"¢
encryptionAtHostEnabledB
 Should all of the disks (including the temp disk) attached to this Virtual Machine be encrypted by enabling Encryption at Host?
"µ
evictionPolicyB" Specifies what should happen when the Virtual Machine is evicted for price reasons when using a Spot instance. Possible values are `Deallocate` and `Delete`. Changing this forces a new resource to be created.

> **NOTE:** This can only be configured when `priority` is set to `Spot`.
"ë
extensionsTimeBudgetB" ÌSpecifies the duration allocated for all extensions to start. The time duration should be between 15 minutes and 120 minutes (inclusive) and should be specified in ISO 8601 format. Defaults to `PT1H30M`.
"©
galleryApplicationsB*:

compute%LinuxVirtualMachineGalleryApplicationYazure:compute/LinuxVirtualMachineGalleryApplication:LinuxVirtualMachineGalleryApplication÷One or more `gallery_application` blocks as defined below.

> **Note** Gallery Application Assignments can be defined either directly on `azure.compute.LinuxVirtualMachine` resource, or using the `azure.compute.GalleryApplicationAssignment` resource - but the two approaches cannot be used together. If both are used with the same Virtual Machine, spurious changes will occur. If `azure.compute.GalleryApplicationAssignment` is used, it's recommended to use `ignore_changes` for the `gallery_application` block on the corresponding `azure.compute.LinuxVirtualMachine` resource, to avoid a persistent diff when using this resource.
"§
identitysBq:o
m
computeLinuxVirtualMachineIdentityEazure:compute/LinuxVirtualMachineIdentity:LinuxVirtualMachineIdentity&An `identity` block as defined below.
"ü
licenseTypeB" æSpecifies the License Type for this Virtual Machine. Possible values are `RHEL_BYOS`, `RHEL_BASE`, `RHEL_EUS`, `RHEL_SAPAPPS`, `RHEL_SAPHA`, `RHEL_BASESAPAPPS`, `RHEL_BASESAPHA`, `SLES_BYOS`, `SLES_SAP`, `SLES_HPC`, `UBUNTU_PRO`.
"
location" tThe Azure location where the Linux Virtual Machine should exist. Changing this forces a new resource to be created.
"»
maxBidPriceB ¥The maximum price you're willing to pay for this Virtual Machine, in US Dollars; which must be greater than the current spot price. If this bid price falls below the current spot price the Virtual Machine will be evicted using the `eviction_policy`. Defaults to `-1`, which means that the Virtual Machine should not be evicted for price reasons.

> **NOTE:** This can only be configured when `priority` is set to `Spot`.
"f
name" ZThe name of the Linux Virtual Machine. Changing this forces a new resource to be created.
"Ü
networkInterfaceIds*" ¾. A list of Network Interface IDs which should be attached to this Virtual Machine. The first Network Interface ID in this list will be the Primary Network Interface on the Virtual Machine.
"
osDiskk:i
g
computeLinuxVirtualMachineOsDiskAazure:compute/LinuxVirtualMachineOsDisk:LinuxVirtualMachineOsDisk$A `os_disk` block as defined below.
"ã
osImageNotificationB:

compute&LinuxVirtualMachineOsImageNotification[azure:compute/LinuxVirtualMachineOsImageNotification:LinuxVirtualMachineOsImageNotification2A `os_image_notification` block as defined below.
"¿
patchAssessmentModeB" ¡Specifies the mode of VM Guest Patching for the Virtual Machine. Possible values are `AutomaticByPlatform` or `ImageDefault`. Defaults to `ImageDefault`.

> **NOTE:** If the `patch_assessment_mode` is set to `AutomaticByPlatform` then the `provision_vm_agent` field must be set to `true`.
"Ý
	patchModeB" ÉSpecifies the mode of in-guest patching to this Linux Virtual Machine. Possible values are `AutomaticByPlatform` and `ImageDefault`. Defaults to `ImageDefault`. For more information on patch modes please see the [product documentation](https://docs.microsoft.com/azure/virtual-machines/automatic-vm-guest-patching#patch-orchestration-modes).

> **NOTE:** If `patch_mode` is set to `AutomaticByPlatform` then `provision_vm_agent` must also be set to `true`.
"Å
plangBe:c
a
computeLinuxVirtualMachinePlan=azure:compute/LinuxVirtualMachinePlan:LinuxVirtualMachinePlanTA `plan` block as defined below. Changing this forces a new resource to be created.
"Í
platformFaultDomainB ¯Specifies the Platform Fault Domain in which this Linux Virtual Machine should be created. Defaults to `-1`, which means this will be automatically assigned to a fault domain that best maintains balance across the available fault domains. Changing this forces a new Linux Virtual Machine to be created.
"·
priorityB" ¤Specifies the priority of this Virtual Machine. Possible values are `Regular` and `Spot`. Defaults to `Regular`. Changing this forces a new resource to be created.
"Y
privateIpAddress" AThe Primary Private IP Address assigned to this Virtual Machine.
"]
privateIpAddresses*" AA list of Private IP Addresses assigned to this Virtual Machine.
"
provisionVmAgentB
 ÿShould the Azure VM Agent be provisioned on this Virtual Machine? Defaults to `true`. Changing this forces a new resource to be created.

> **NOTE:** If `provision_vm_agent` is set to `false` then `allow_extension_operations` must also be set to `false`.
"|
proximityPlacementGroupIdB" YThe ID of the Proximity Placement Group which the Virtual Machine should be assigned to.
"W
publicIpAddress" @The Primary Public IP Address assigned to this Virtual Machine.
"_
publicIpAddresses*" DA list of the Public IP Addresses assigned to this Virtual Machine.
"ï
rebootSettingB" ×Specifies the reboot setting for platform scheduled patching. Possible values are `Always`, `IfRequired` and `Never`.

> **NOTE:** `reboot_setting` can only be set when `patch_mode` is set to `AutomaticByPlatform`.
" 
resourceGroupName" The name of the Resource Group in which the Linux Virtual Machine should be exist. Changing this forces a new resource to be created.
"ª
secretsoBm*k:i
g
computeLinuxVirtualMachineSecretAazure:compute/LinuxVirtualMachineSecret:LinuxVirtualMachineSecret.One or more `secret` blocks as defined below.
"
secureBootEnabledB
 {Specifies whether secure boot should be enabled on the virtual machine. Changing this forces a new resource to be created.
"Z
size" NThe SKU which should be used for this Virtual Machine, such as `Standard_F2`.
"Î
sourceImageIdB" ¶The ID of the Image which this Virtual Machine should be created from. Changing this forces a new resource to be created. Possible Image ID types include `Image ID`s, `Shared Image ID`s, `Shared Image Version ID`s, `Community Gallery Image ID`s, `Community Gallery Image Version ID`s, `Shared Gallery Image ID`s and `Shared Gallery Image Version ID`s.

> **NOTE:** One of either `source_image_id` or `source_image_reference` must be set.
"ò
sourceImageReferenceB:

compute'LinuxVirtualMachineSourceImageReference]azure:compute/LinuxVirtualMachineSourceImageReference:LinuxVirtualMachineSourceImageReference¼A `source_image_reference` block as defined below. Changing this forces a new resource to be created.

> **NOTE:** One of either `source_image_id` or `source_image_reference` must be set.
"T
tagsB2" DA mapping of tags which should be assigned to this Virtual Machine.
"ó
terminationNotification :

compute*LinuxVirtualMachineTerminationNotificationcazure:compute/LinuxVirtualMachineTerminationNotification:LinuxVirtualMachineTerminationNotification5A `termination_notification` block as defined below.
"^
userDataB" LThe Base64-Encoded User Data which should be used for this Virtual Machine.
"]
virtualMachineId" EA 128-bit identifier which uniquely identifies this Virtual Machine.
"¼
virtualMachineScaleSetIdB" Specifies the Orchestrated Virtual Machine Scale Set that this Virtual Machine should be created within.

> **NOTE:** To update `virtual_machine_scale_set_id` the Preview Feature `Microsoft.Compute/SingleFDAttachDetachVMToVmss` needs to be enabled, see [the documentation](https://review.learn.microsoft.com/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-attach-detach-vm#enroll-in-the-preview) for more information.

> **NOTE:** Orchestrated Virtual Machine Scale Sets can be provisioned using [the `azure.compute.OrchestratedVirtualMachineScaleSet` resource](https://www.terraform.io/docs/providers/azurerm/r/orchestrated_virtual_machine_scale_set.html).

> **NOTE:** To attach an existing VM to a Virtual Machine Scale Set, the scale set must have `single_placement_group` set to `false`, see [the documentation](https://learn.microsoft.com/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-attach-detach-vm?tabs=portal-1%2Cportal-2%2Cportal-3#limitations-for-attaching-an-existing-vm-to-a-scale-set) for more information.
"s
vmAgentPlatformUpdatesEnabledB
 LSpecifies whether VMAgent Platform Updates is enabled. Defaults to `false`.
"
vtpmEnabledB
 tSpecifies whether vTPM should be enabled on the virtual machine. Changing this forces a new resource to be created.
"§
zoneB" Specifies the Availability Zones in which this Linux Virtual Machine should be located. Changing this forces a new Linux Virtual Machine to be created.
*ÚÔ
m
computeLinuxVirtualMachineScaleSetEazure:compute/linuxVirtualMachineScaleSet:LinuxVirtualMachineScaleSetManages a Linux Virtual Machine Scale Set.

## Disclaimers

> **Note:** As of the **v2.86.0** (November 19, 2021) release of the provider this resource will only create Virtual Machine Scale Sets with the **Uniform** Orchestration Mode. For Virtual Machine Scale Sets with **Flexible** orchestration mode, use `azure.compute.OrchestratedVirtualMachineScaleSet`. Flexible orchestration mode is recommended for workloads on Azure.
rraform will automatically update & reimage the nodes in the Scale Set (if Required) during an Update - this behaviour can be configured using the `features` setting within the Provider block.

## Example Usage

This example provisions a basic Linux Virtual Machine Scale Set on an internal network.

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const firstPublicKey = "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC+wWK73dCr+jgQOAxNsHAnNNNMEMWOHYEccp6wJm2gotpr9katuF/ZAdou5AaW1C61slRkHRkpRRX9FA9CYBiitZgvCCz+3nWNN7l/Up54Zps/pHWGZLHNJZRYyAB6j5yVLMVHIHriY49d/GZTZVNB8GoJv9Gakwc/fuEZYYl4YDFiGMBP///TzlI4jhiJzjKnEvqPFki5p2ZRJqcbCiF4pJrxUQR/RXqVFQdbRLZgYfJ8xGB878RENq3yQ39d8dVOkq4edbkzwcUmwwwkYVPIoDGsYLaRHnG+To7FvMeyO7xDVQkMKzopTQV8AuKpyvpqu0a9pWOMaiCyDytO7GGN you@me.com";
const example = new azure.core.ResourceGroup("example", {
    name: "example-resources",
    location: "West Europe",
});
const exampleVirtualNetwork = new azure.network.VirtualNetwork("example", {
    name: "example-network",
    resourceGroupName: example.name,
    location: example.location,
    addressSpaces: ["10.0.0.0/16"],
});
const internal = new azure.network.Subnet("internal", {
    name: "internal",
    resourceGroupName: example.name,
    virtualNetworkName: exampleVirtualNetwork.name,
    addressPrefixes: ["10.0.2.0/24"],
});
const exampleLinuxVirtualMachineScaleSet = new azure.compute.LinuxVirtualMachineScaleSet("example", {
    name: "example-vmss",
    resourceGroupName: example.name,
    location: example.location,
    sku: "Standard_F2",
    instances: 1,
    adminUsername: "adminuser",
    adminSshKeys: [{
        username: "adminuser",
        publicKey: firstPublicKey,
    }],
    sourceImageReference: {
        publisher: "Canonical",
        offer: "0001-com-ubuntu-server-jammy",
        sku: "22_04-lts",
        version: "latest",
    },
    osDisk: {
        storageAccountType: "Standard_LRS",
        caching: "ReadWrite",
    },
    networkInterfaces: [{
        name: "example",
        primary: true,
        ipConfigurations: [{
            name: "internal",
            primary: true,
            subnetId: internal.id,
        }],
    }],
});
```
```python
import pulumi
import pulumi_azure as azure

first_public_key = "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC+wWK73dCr+jgQOAxNsHAnNNNMEMWOHYEccp6wJm2gotpr9katuF/ZAdou5AaW1C61slRkHRkpRRX9FA9CYBiitZgvCCz+3nWNN7l/Up54Zps/pHWGZLHNJZRYyAB6j5yVLMVHIHriY49d/GZTZVNB8GoJv9Gakwc/fuEZYYl4YDFiGMBP///TzlI4jhiJzjKnEvqPFki5p2ZRJqcbCiF4pJrxUQR/RXqVFQdbRLZgYfJ8xGB878RENq3yQ39d8dVOkq4edbkzwcUmwwwkYVPIoDGsYLaRHnG+To7FvMeyO7xDVQkMKzopTQV8AuKpyvpqu0a9pWOMaiCyDytO7GGN you@me.com"
example = azure.core.ResourceGroup("example",
    name="example-resources",
    location="West Europe")
example_virtual_network = azure.network.VirtualNetwork("example",
    name="example-network",
    resource_group_name=example.name,
    location=example.location,
    address_spaces=["10.0.0.0/16"])
internal = azure.network.Subnet("internal",
    name="internal",
    resource_group_name=example.name,
    virtual_network_name=example_virtual_network.name,
    address_prefixes=["10.0.2.0/24"])
example_linux_virtual_machine_scale_set = azure.compute.LinuxVirtualMachineScaleSet("example",
    name="example-vmss",
    resource_group_name=example.name,
    location=example.location,
    sku="Standard_F2",
    instances=1,
    admin_username="adminuser",
    admin_ssh_keys=[{
        "username": "adminuser",
        "public_key": first_public_key,
    }],
    source_image_reference={
        "publisher": "Canonical",
        "offer": "0001-com-ubuntu-server-jammy",
        "sku": "22_04-lts",
        "version": "latest",
    },
    os_disk={
        "storage_account_type": "Standard_LRS",
        "caching": "ReadWrite",
    },
    network_interfaces=[{
        "name": "example",
        "primary": True,
        "ip_configurations": [{
            "name": "internal",
            "primary": True,
            "subnet_id": internal.id,
        }],
    }])
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var firstPublicKey = "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC+wWK73dCr+jgQOAxNsHAnNNNMEMWOHYEccp6wJm2gotpr9katuF/ZAdou5AaW1C61slRkHRkpRRX9FA9CYBiitZgvCCz+3nWNN7l/Up54Zps/pHWGZLHNJZRYyAB6j5yVLMVHIHriY49d/GZTZVNB8GoJv9Gakwc/fuEZYYl4YDFiGMBP///TzlI4jhiJzjKnEvqPFki5p2ZRJqcbCiF4pJrxUQR/RXqVFQdbRLZgYfJ8xGB878RENq3yQ39d8dVOkq4edbkzwcUmwwwkYVPIoDGsYLaRHnG+To7FvMeyO7xDVQkMKzopTQV8AuKpyvpqu0a9pWOMaiCyDytO7GGN you@me.com";

    var example = new Azure.Core.ResourceGroup("example", new()
    {
        Name = "example-resources",
        Location = "West Europe",
    });

    var exampleVirtualNetwork = new Azure.Network.VirtualNetwork("example", new()
    {
        Name = "example-network",
        ResourceGroupName = example.Name,
        Location = example.Location,
        AddressSpaces = new[]
        {
            "10.0.0.0/16",
        },
    });

    var @internal = new Azure.Network.Subnet("internal", new()
    {
        Name = "internal",
        ResourceGroupName = example.Name,
        VirtualNetworkName = exampleVirtualNetwork.Name,
        AddressPrefixes = new[]
        {
            "10.0.2.0/24",
        },
    });

    var exampleLinuxVirtualMachineScaleSet = new Azure.Compute.LinuxVirtualMachineScaleSet("example", new()
    {
        Name = "example-vmss",
        ResourceGroupName = example.Name,
        Location = example.Location,
        Sku = "Standard_F2",
        Instances = 1,
        AdminUsername = "adminuser",
        AdminSshKeys = new[]
        {
            new Azure.Compute.Inputs.LinuxVirtualMachineScaleSetAdminSshKeyArgs
            {
                Username = "adminuser",
                PublicKey = firstPublicKey,
            },
        },
        SourceImageReference = new Azure.Compute.Inputs.LinuxVirtualMachineScaleSetSourceImageReferenceArgs
        {
            Publisher = "Canonical",
            Offer = "0001-com-ubuntu-server-jammy",
            Sku = "22_04-lts",
            Version = "latest",
        },
        OsDisk = new Azure.Compute.Inputs.LinuxVirtualMachineScaleSetOsDiskArgs
        {
            StorageAccountType = "Standard_LRS",
            Caching = "ReadWrite",
        },
        NetworkInterfaces = new[]
        {
            new Azure.Compute.Inputs.LinuxVirtualMachineScaleSetNetworkInterfaceArgs
            {
                Name = "example",
                Primary = true,
                IpConfigurations = new[]
                {
                    new Azure.Compute.Inputs.LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationArgs
                    {
                        Name = "internal",
                        Primary = true,
                        SubnetId = @internal.Id,
                    },
                },
            },
        },
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/compute"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/network"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		firstPublicKey := "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC+wWK73dCr+jgQOAxNsHAnNNNMEMWOHYEccp6wJm2gotpr9katuF/ZAdou5AaW1C61slRkHRkpRRX9FA9CYBiitZgvCCz+3nWNN7l/Up54Zps/pHWGZLHNJZRYyAB6j5yVLMVHIHriY49d/GZTZVNB8GoJv9Gakwc/fuEZYYl4YDFiGMBP///TzlI4jhiJzjKnEvqPFki5p2ZRJqcbCiF4pJrxUQR/RXqVFQdbRLZgYfJ8xGB878RENq3yQ39d8dVOkq4edbkzwcUmwwwkYVPIoDGsYLaRHnG+To7FvMeyO7xDVQkMKzopTQV8AuKpyvpqu0a9pWOMaiCyDytO7GGN you@me.com"
		example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
			Name:     pulumi.String("example-resources"),
			Location: pulumi.String("West Europe"),
		})
		if err != nil {
			return err
		}
		exampleVirtualNetwork, err := network.NewVirtualNetwork(ctx, "example", &network.VirtualNetworkArgs{
			Name:              pulumi.String("example-network"),
			ResourceGroupName: example.Name,
			Location:          example.Location,
			AddressSpaces: pulumi.StringArray{
				pulumi.String("10.0.0.0/16"),
			},
		})
		if err != nil {
			return err
		}
		internal, err := network.NewSubnet(ctx, "internal", &network.SubnetArgs{
			Name:               pulumi.String("internal"),
			ResourceGroupName:  example.Name,
			VirtualNetworkName: exampleVirtualNetwork.Name,
			AddressPrefixes: pulumi.StringArray{
				pulumi.String("10.0.2.0/24"),
			},
		})
		if err != nil {
			return err
		}
		_, err = compute.NewLinuxVirtualMachineScaleSet(ctx, "example", &compute.LinuxVirtualMachineScaleSetArgs{
			Name:              pulumi.String("example-vmss"),
			ResourceGroupName: example.Name,
			Location:          example.Location,
			Sku:               pulumi.String("Standard_F2"),
			Instances:         pulumi.Int(1),
			AdminUsername:     pulumi.String("adminuser"),
			AdminSshKeys: compute.LinuxVirtualMachineScaleSetAdminSshKeyArray{
				&compute.LinuxVirtualMachineScaleSetAdminSshKeyArgs{
					Username:  pulumi.String("adminuser"),
					PublicKey: pulumi.String(firstPublicKey),
				},
			},
			SourceImageReference: &compute.LinuxVirtualMachineScaleSetSourceImageReferenceArgs{
				Publisher: pulumi.String("Canonical"),
				Offer:     pulumi.String("0001-com-ubuntu-server-jammy"),
				Sku:       pulumi.String("22_04-lts"),
				Version:   pulumi.String("latest"),
			},
			OsDisk: &compute.LinuxVirtualMachineScaleSetOsDiskArgs{
				StorageAccountType: pulumi.String("Standard_LRS"),
				Caching:            pulumi.String("ReadWrite"),
			},
			NetworkInterfaces: compute.LinuxVirtualMachineScaleSetNetworkInterfaceArray{
				&compute.LinuxVirtualMachineScaleSetNetworkInterfaceArgs{
					Name:    pulumi.String("example"),
					Primary: pulumi.Bool(true),
					IpConfigurations: compute.LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationArray{
						&compute.LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationArgs{
							Name:     pulumi.String("internal"),
							Primary:  pulumi.Bool(true),
							SubnetId: internal.ID(),
						},
					},
				},
			},
		})
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.core.ResourceGroup;
import com.pulumi.azure.core.ResourceGroupArgs;
import com.pulumi.azure.network.VirtualNetwork;
import com.pulumi.azure.network.VirtualNetworkArgs;
import com.pulumi.azure.network.Subnet;
import com.pulumi.azure.network.SubnetArgs;
import com.pulumi.azure.compute.LinuxVirtualMachineScaleSet;
import com.pulumi.azure.compute.LinuxVirtualMachineScaleSetArgs;
import com.pulumi.azure.compute.inputs.LinuxVirtualMachineScaleSetAdminSshKeyArgs;
import com.pulumi.azure.compute.inputs.LinuxVirtualMachineScaleSetSourceImageReferenceArgs;
import com.pulumi.azure.compute.inputs.LinuxVirtualMachineScaleSetOsDiskArgs;
import com.pulumi.azure.compute.inputs.LinuxVirtualMachineScaleSetNetworkInterfaceArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        final var firstPublicKey = "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC+wWK73dCr+jgQOAxNsHAnNNNMEMWOHYEccp6wJm2gotpr9katuF/ZAdou5AaW1C61slRkHRkpRRX9FA9CYBiitZgvCCz+3nWNN7l/Up54Zps/pHWGZLHNJZRYyAB6j5yVLMVHIHriY49d/GZTZVNB8GoJv9Gakwc/fuEZYYl4YDFiGMBP///TzlI4jhiJzjKnEvqPFki5p2ZRJqcbCiF4pJrxUQR/RXqVFQdbRLZgYfJ8xGB878RENq3yQ39d8dVOkq4edbkzwcUmwwwkYVPIoDGsYLaRHnG+To7FvMeyO7xDVQkMKzopTQV8AuKpyvpqu0a9pWOMaiCyDytO7GGN you@me.com";

        var example = new ResourceGroup("example", ResourceGroupArgs.builder()
            .name("example-resources")
            .location("West Europe")
            .build());

        var exampleVirtualNetwork = new VirtualNetwork("exampleVirtualNetwork", VirtualNetworkArgs.builder()
            .name("example-network")
            .resourceGroupName(example.name())
            .location(example.location())
            .addressSpaces("10.0.0.0/16")
            .build());

        var internal = new Subnet("internal", SubnetArgs.builder()
            .name("internal")
            .resourceGroupName(example.name())
            .virtualNetworkName(exampleVirtualNetwork.name())
            .addressPrefixes("10.0.2.0/24")
            .build());

        var exampleLinuxVirtualMachineScaleSet = new LinuxVirtualMachineScaleSet("exampleLinuxVirtualMachineScaleSet", LinuxVirtualMachineScaleSetArgs.builder()
            .name("example-vmss")
            .resourceGroupName(example.name())
            .location(example.location())
            .sku("Standard_F2")
            .instances(1)
            .adminUsername("adminuser")
            .adminSshKeys(LinuxVirtualMachineScaleSetAdminSshKeyArgs.builder()
                .username("adminuser")
                .publicKey(firstPublicKey)
                .build())
            .sourceImageReference(LinuxVirtualMachineScaleSetSourceImageReferenceArgs.builder()
                .publisher("Canonical")
                .offer("0001-com-ubuntu-server-jammy")
                .sku("22_04-lts")
                .version("latest")
                .build())
            .osDisk(LinuxVirtualMachineScaleSetOsDiskArgs.builder()
                .storageAccountType("Standard_LRS")
                .caching("ReadWrite")
                .build())
            .networkInterfaces(LinuxVirtualMachineScaleSetNetworkInterfaceArgs.builder()
                .name("example")
                .primary(true)
                .ipConfigurations(LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationArgs.builder()
                    .name("internal")
                    .primary(true)
                    .subnetId(internal.id())
                    .build())
                .build())
            .build());

    }
}
```
```yaml
resources:
  example:
    type: azure:core:ResourceGroup
    properties:
      name: example-resources
      location: West Europe
  exampleVirtualNetwork:
    type: azure:network:VirtualNetwork
    name: example
    properties:
      name: example-network
      resourceGroupName: ${example.name}
      location: ${example.location}
      addressSpaces:
        - 10.0.0.0/16
  internal:
    type: azure:network:Subnet
    properties:
      name: internal
      resourceGroupName: ${example.name}
      virtualNetworkName: ${exampleVirtualNetwork.name}
      addressPrefixes:
        - 10.0.2.0/24
  exampleLinuxVirtualMachineScaleSet:
    type: azure:compute:LinuxVirtualMachineScaleSet
    name: example
    properties:
      name: example-vmss
      resourceGroupName: ${example.name}
      location: ${example.location}
      sku: Standard_F2
      instances: 1
      adminUsername: adminuser
      adminSshKeys:
        - username: adminuser
          publicKey: ${firstPublicKey}
      sourceImageReference:
        publisher: Canonical
        offer: 0001-com-ubuntu-server-jammy
        sku: 22_04-lts
        version: latest
      osDisk:
        storageAccountType: Standard_LRS
        caching: ReadWrite
      networkInterfaces:
        - name: example
          primary: true
          ipConfigurations:
            - name: internal
              primary: true
              subnetId: ${internal.id}
variables:
  firstPublicKey: ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC+wWK73dCr+jgQOAxNsHAnNNNMEMWOHYEccp6wJm2gotpr9katuF/ZAdou5AaW1C61slRkHRkpRRX9FA9CYBiitZgvCCz+3nWNN7l/Up54Zps/pHWGZLHNJZRYyAB6j5yVLMVHIHriY49d/GZTZVNB8GoJv9Gakwc/fuEZYYl4YDFiGMBP///TzlI4jhiJzjKnEvqPFki5p2ZRJqcbCiF4pJrxUQR/RXqVFQdbRLZgYfJ8xGB878RENq3yQ39d8dVOkq4edbkzwcUmwwwkYVPIoDGsYLaRHnG+To7FvMeyO7xDVQkMKzopTQV8AuKpyvpqu0a9pWOMaiCyDytO7GGN you@me.com
```
<!--End PulumiCodeChooser -->

## Import

Linux Virtual Machine Scale Sets can be imported using the `resource id`, e.g.

```sh
$ pulumi import azure:compute/linuxVirtualMachineScaleSet:LinuxVirtualMachineScaleSet example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Compute/virtualMachineScaleSets/scaleset1
```


additionalCapabilities¸Bµ:²
¯
compute1LinuxVirtualMachineScaleSetAdditionalCapabilitiesqazure:compute/LinuxVirtualMachineScaleSetAdditionalCapabilities:LinuxVirtualMachineScaleSetAdditionalCapabilities5An `additional_capabilities` block as defined below.
á
adminPasswordB" ÉThe Password which should be used for the local-administrator on this Virtual Machine. Changing this forces a new resource to be created.

> **Note:** When an `admin_password` is specified `disable_password_authentication` must be set to `false`.

> **Note:** One of either `admin_password` or `admin_ssh_key` must be specified.
µ
adminSshKeysB*:

compute&LinuxVirtualMachineScaleSetAdminSshKey[azure:compute/LinuxVirtualMachineScaleSetAdminSshKey:LinuxVirtualMachineScaleSetAdminSshKeyOne or more `admin_ssh_key` blocks as defined below.

> **Note:** One of either `admin_password` or `admin_ssh_key` must be specified.

adminUsername" The username of the local administrator on each Virtual Machine Scale Set instance. Changing this forces a new resource to be created.
ï
automaticInstanceRepair»B¸:µ
²
compute2LinuxVirtualMachineScaleSetAutomaticInstanceRepairsazure:compute/LinuxVirtualMachineScaleSetAutomaticInstanceRepair:LinuxVirtualMachineScaleSetAutomaticInstanceRepairAn `automatic_instance_repair` block as defined below. To enable the automatic instance repair, this Virtual Machine Scale Set must have a valid `health_probe_id` or an [Application Health Extension](https://docs.microsoft.com/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-health-extension).

> **Note:** For more information about Automatic Instance Repair, please refer to the [product documentation](https://docs.microsoft.com/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-automatic-instance-repairs).
ñ
automaticOsUpgradePolicy¾B»:¸
µ
compute3LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyuazure:compute/LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicy:LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyAn `automatic_os_upgrade_policy` block as defined below. This can only be specified when `upgrade_mode` is set to either `Automatic` or `Rolling`.
æ
bootDiagnostics£B :

compute*LinuxVirtualMachineScaleSetBootDiagnosticscazure:compute/LinuxVirtualMachineScaleSetBootDiagnostics:LinuxVirtualMachineScaleSetBootDiagnostics-A `boot_diagnostics` block as defined below.

capacityReservationGroupIdB" òSpecifies the ID of the Capacity Reservation Group which the Virtual Machine Scale Set should be allocated to. Changing this forces a new resource to be created.

> **Note:** `capacity_reservation_group_id` cannot be used with `proximity_placement_group_id`

> **Note:** `single_placement_group` must be set to `false` when `capacity_reservation_group_id` is specified.
Þ
computerNamePrefixB" ÁThe prefix which should be used for the name of the Virtual Machines in this Scale Set. If unspecified this defaults to the value for the `name` field. If the value of the `name` field is not a valid `computer_name_prefix`, then you must specify `computer_name_prefix`. Changing this forces a new resource to be created.


customDataB" The Base64-Encoded Custom Data which should be used for this Virtual Machine Scale Set.

> **Note:** When Custom Data has been configured, it's not possible to remove it without tainting the Virtual Machine Scale Set, due to a limitation of the Azure API.
Ò
	dataDisksB*:

compute#LinuxVirtualMachineScaleSetDataDiskUazure:compute/LinuxVirtualMachineScaleSetDataDisk:LinuxVirtualMachineScaleSetDataDisk1One or more `data_disk` blocks as defined below.

disablePasswordAuthenticationB
 âShould Password Authentication be disabled on this Virtual Machine Scale Set? Defaults to `true`.

> In general we'd recommend using SSH Keys for authentication rather than Passwords - but there's tradeoff's to each - please [see this thread for more information](https://security.stackexchange.com/questions/69407/why-is-using-an-ssh-key-more-secure-than-using-passwords).

> **Note:** When a `admin_password` is specified `disable_password_authentication` must be set to `false`.
©
+doNotRunExtensionsOnOverprovisionedMachinesB
 tShould Virtual Machine Extensions be run on Overprovisioned Virtual Machines in the Scale Set? Defaults to `false`.
Æ
edgeZoneB" ³Specifies the Edge Zone within the Azure Region where this Linux Virtual Machine Scale Set should exist. Changing this forces a new Linux Virtual Machine Scale Set to be created.
¢
encryptionAtHostEnabledB
 Should all of the disks (including the temp disk) attached to this Virtual Machine be encrypted by enabling Encryption at Host?

evictionPolicyB" óSpecifies the eviction policy for Virtual Machines in this Scale Set. Possible values are `Deallocate` and `Delete`. Changing this forces a new resource to be created.

> **Note:** This can only be configured when `priority` is set to `Spot`.
÷
extensionOperationsEnabledB
 ÒShould extension operations be allowed on the Virtual Machine Scale Set? Possible values are `true` or `false`. Defaults to `true`. Changing this forces a new Linux Virtual Machine Scale Set to be created.

> **Note:** `extension_operations_enabled` may only be set to `false` if there are no extensions defined in the `extension` field.
Õ

extensionsB*:

compute$LinuxVirtualMachineScaleSetExtensionWazure:compute/LinuxVirtualMachineScaleSetExtension:LinuxVirtualMachineScaleSetExtension0One or more `extension` blocks as defined below
ï
extensionsTimeBudgetB" ÐSpecifies the duration allocated for all extensions to start. The time duration should be between `15` minutes and `120` minutes (inclusive) and should be specified in ISO 8601 format. Defaults to `PT1H30M`.

galleryApplications¯B¬*©:¦
£
compute-LinuxVirtualMachineScaleSetGalleryApplicationiazure:compute/LinuxVirtualMachineScaleSetGalleryApplication:LinuxVirtualMachineScaleSetGalleryApplication;One or more `gallery_application` blocks as defined below.
Ø
healthProbeIdB" ÀThe ID of a Load Balancer Probe which should be used to determine the health of an instance. This is Required and can only be specified when `upgrade_mode` is set to `Automatic` or `Rolling`.
¥
hostGroupIdB" Specifies the ID of the dedicated host group that the virtual machine scale set resides in. Changing this forces a new resource to be created.
Ã
identityB:

compute#LinuxVirtualMachineScaleSetIdentityUazure:compute/LinuxVirtualMachineScaleSetIdentity:LinuxVirtualMachineScaleSetIdentity&An `identity` block as defined below.
£
	instancesB The number of Virtual Machines in the Scale Set. Defaults to `0`.

> **NOTE:** If you're using AutoScaling, you may wish to use [`Ignore Changes` functionality](https://www.pulumi.com/docs/intro/concepts/programming-model/#ignorechanges) to ignore changes to this field.

locationB" ~The Azure location where the Linux Virtual Machine Scale Set should exist. Changing this forces a new resource to be created.
ò
maxBidPriceB ÜThe maximum price you're willing to pay for each Virtual Machine in this Scale Set, in US Dollars; which must be greater than the current spot price. If this bid price falls below the current spot price the Virtual Machines in the Scale Set will be evicted using the `eviction_policy`. Defaults to `-1`, which means that each Virtual Machine in this Scale Set should not be evicted for price reasons.

> **Note:** This can only be configured when `priority` is set to `Spot`.
r
nameB" dThe name of the Linux Virtual Machine Scale Set. Changing this forces a new resource to be created.
÷
networkInterfaces¦*£: 

compute+LinuxVirtualMachineScaleSetNetworkInterfaceeazure:compute/LinuxVirtualMachineScaleSetNetworkInterface:LinuxVirtualMachineScaleSetNetworkInterface9One or more `network_interface` blocks as defined below.
¶
osDisk:

compute!LinuxVirtualMachineScaleSetOsDiskQazure:compute/LinuxVirtualMachineScaleSetOsDisk:LinuxVirtualMachineScaleSetOsDisk%An `os_disk` block as defined below.

overprovisionB
 Should Azure over-provision Virtual Machines in this Scale Set? This means that multiple Virtual Machines will be provisioned and Azure will keep the instances which become available first - which improves provisioning success rates and improves deployment time. You're not billed for these over-provisioned VM's and they don't count towards the Subscription Quota. Defaults to `true`.
²
planB}:{
y
computeLinuxVirtualMachineScaleSetPlanMazure:compute/LinuxVirtualMachineScaleSetPlan:LinuxVirtualMachineScaleSetPlan¨A `plan` block as defined below. Changing this forces a new resource to be created.

> **Note:** When using an image from Azure Marketplace a `plan` must be specified.
³
platformFaultDomainCountB Specifies the number of fault domains that are used by this Linux Virtual Machine Scale Set. Changing this forces a new resource to be created.

priorityB" òThe Priority of this Virtual Machine Scale Set. Possible values are `Regular` and `Spot`. Defaults to `Regular`. Changing this value forces a new resource.

> **Note:** When `priority` is set to `Spot` an `eviction_policy` must be specified.
»
provisionVmAgentB
  Should the Azure VM Agent be provisioned on each Virtual Machine in the Scale Set? Defaults to `true`. Changing this value forces a new resource to be created.
½
proximityPlacementGroupIdB" The ID of the Proximity Placement Group in which the Virtual Machine Scale Set should be assigned to. Changing this forces a new resource to be created.
ª
resourceGroupName" The name of the Resource Group in which the Linux Virtual Machine Scale Set should be exist. Changing this forces a new resource to be created.

rollingUpgradePolicy²B¯:¬
©
compute/LinuxVirtualMachineScaleSetRollingUpgradePolicymazure:compute/LinuxVirtualMachineScaleSetRollingUpgradePolicy:LinuxVirtualMachineScaleSetRollingUpgradePolicyÉA `rolling_upgrade_policy` block as defined below. This is Required and can only be specified when `upgrade_mode` is set to `Automatic` or `Rolling`. Changing this forces a new resource to be created.
¾
scaleInB:

compute"LinuxVirtualMachineScaleSetScaleInSazure:compute/LinuxVirtualMachineScaleSetScaleIn:LinuxVirtualMachineScaleSetScaleIn%A `scale_in` block as defined below.
Æ
secretsB*:

compute!LinuxVirtualMachineScaleSetSecretQazure:compute/LinuxVirtualMachineScaleSetSecret:LinuxVirtualMachineScaleSetSecret.One or more `secret` blocks as defined below.

secureBootEnabledB
 {Specifies whether secure boot should be enabled on the virtual machine. Changing this forces a new resource to be created.
Í
singlePlacementGroupB
 ®Should this Virtual Machine Scale Set be limited to a Single Placement Group, which means the number of instances will be capped at 100 Virtual Machines. Defaults to `true`.
M
sku" BThe Virtual Machine SKU for the Scale Set, such as `Standard_F2`.
¡
sourceImageIdB" The ID of an Image which each Virtual Machine in this Scale Set should be based on. Possible Image ID types include `Image ID`, `Shared Image ID`, `Shared Image Version ID`, `Community Gallery Image ID`, `Community Gallery Image Version ID`, `Shared Gallery Image ID` and `Shared Gallery Image Version ID`.

> **Note:** One of either `source_image_id` or `source_image_reference` must be set.
×
sourceImageReference²B¯:¬
©
compute/LinuxVirtualMachineScaleSetSourceImageReferencemazure:compute/LinuxVirtualMachineScaleSetSourceImageReference:LinuxVirtualMachineScaleSetSourceImageReferenceA `source_image_reference` block as defined below.

> **Note:** One of either `source_image_id` or `source_image_reference` must be set.
Ò
spotRestoreB:

compute&LinuxVirtualMachineScaleSetSpotRestore[azure:compute/LinuxVirtualMachineScaleSetSpotRestore:LinuxVirtualMachineScaleSetSpotRestore)A `spot_restore` block as defined below.
^
tagsB2" NA mapping of tags which should be assigned to this Virtual Machine Scale Set.

terminationNotification»B¸:µ
²
compute2LinuxVirtualMachineScaleSetTerminationNotificationsazure:compute/LinuxVirtualMachineScaleSetTerminationNotification:LinuxVirtualMachineScaleSetTerminationNotification5A `termination_notification` block as defined below.

upgradeModeB" h
userDataB" VThe Base64-Encoded User Data which should be used for this Virtual Machine Scale Set.

vtpmEnabledB
 tSpecifies whether vTPM should be enabled on the virtual machine. Changing this forces a new resource to be created.

zoneBalanceB
 Should the Virtual Machines in this Scale Set be strictly evenly distributed across Availability Zones? Defaults to `false`. Changing this forces a new resource to be created.

> **Note:** This can only be set to `true` when one or more `zones` are configured.
é
zonesB*" ×Specifies a list of Availability Zones in which this Linux Virtual Machine Scale Set should be located.

> **Note:** Updating `zones` to remove an existing zone forces a new Virtual Machine Scale Set to be created.
"
additionalCapabilities¸Bµ:²
¯
compute1LinuxVirtualMachineScaleSetAdditionalCapabilitiesqazure:compute/LinuxVirtualMachineScaleSetAdditionalCapabilities:LinuxVirtualMachineScaleSetAdditionalCapabilities5An `additional_capabilities` block as defined below.
"á
adminPasswordB" ÉThe Password which should be used for the local-administrator on this Virtual Machine. Changing this forces a new resource to be created.

> **Note:** When an `admin_password` is specified `disable_password_authentication` must be set to `false`.

> **Note:** One of either `admin_password` or `admin_ssh_key` must be specified.
"µ
adminSshKeysB*:

compute&LinuxVirtualMachineScaleSetAdminSshKey[azure:compute/LinuxVirtualMachineScaleSetAdminSshKey:LinuxVirtualMachineScaleSetAdminSshKeyOne or more `admin_ssh_key` blocks as defined below.

> **Note:** One of either `admin_password` or `admin_ssh_key` must be specified.
"
adminUsername" The username of the local administrator on each Virtual Machine Scale Set instance. Changing this forces a new resource to be created.
"ì
automaticInstanceRepair¸:µ
²
compute2LinuxVirtualMachineScaleSetAutomaticInstanceRepairsazure:compute/LinuxVirtualMachineScaleSetAutomaticInstanceRepair:LinuxVirtualMachineScaleSetAutomaticInstanceRepairAn `automatic_instance_repair` block as defined below. To enable the automatic instance repair, this Virtual Machine Scale Set must have a valid `health_probe_id` or an [Application Health Extension](https://docs.microsoft.com/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-health-extension).

> **Note:** For more information about Automatic Instance Repair, please refer to the [product documentation](https://docs.microsoft.com/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-automatic-instance-repairs).
"ñ
automaticOsUpgradePolicy¾B»:¸
µ
compute3LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyuazure:compute/LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicy:LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyAn `automatic_os_upgrade_policy` block as defined below. This can only be specified when `upgrade_mode` is set to either `Automatic` or `Rolling`.
"æ
bootDiagnostics£B :

compute*LinuxVirtualMachineScaleSetBootDiagnosticscazure:compute/LinuxVirtualMachineScaleSetBootDiagnostics:LinuxVirtualMachineScaleSetBootDiagnostics-A `boot_diagnostics` block as defined below.
"
capacityReservationGroupIdB" òSpecifies the ID of the Capacity Reservation Group which the Virtual Machine Scale Set should be allocated to. Changing this forces a new resource to be created.

> **Note:** `capacity_reservation_group_id` cannot be used with `proximity_placement_group_id`

> **Note:** `single_placement_group` must be set to `false` when `capacity_reservation_group_id` is specified.
"Ü
computerNamePrefix" ÁThe prefix which should be used for the name of the Virtual Machines in this Scale Set. If unspecified this defaults to the value for the `name` field. If the value of the `name` field is not a valid `computer_name_prefix`, then you must specify `computer_name_prefix`. Changing this forces a new resource to be created.
"

customDataB" The Base64-Encoded Custom Data which should be used for this Virtual Machine Scale Set.

> **Note:** When Custom Data has been configured, it's not possible to remove it without tainting the Virtual Machine Scale Set, due to a limitation of the Azure API.
"Ò
	dataDisksB*:

compute#LinuxVirtualMachineScaleSetDataDiskUazure:compute/LinuxVirtualMachineScaleSetDataDisk:LinuxVirtualMachineScaleSetDataDisk1One or more `data_disk` blocks as defined below.
"
disablePasswordAuthenticationB
 âShould Password Authentication be disabled on this Virtual Machine Scale Set? Defaults to `true`.

> In general we'd recommend using SSH Keys for authentication rather than Passwords - but there's tradeoff's to each - please [see this thread for more information](https://security.stackexchange.com/questions/69407/why-is-using-an-ssh-key-more-secure-than-using-passwords).

> **Note:** When a `admin_password` is specified `disable_password_authentication` must be set to `false`.
"©
+doNotRunExtensionsOnOverprovisionedMachinesB
 tShould Virtual Machine Extensions be run on Overprovisioned Virtual Machines in the Scale Set? Defaults to `false`.
"Æ
edgeZoneB" ³Specifies the Edge Zone within the Azure Region where this Linux Virtual Machine Scale Set should exist. Changing this forces a new Linux Virtual Machine Scale Set to be created.
"¢
encryptionAtHostEnabledB
 Should all of the disks (including the temp disk) attached to this Virtual Machine be encrypted by enabling Encryption at Host?
"
evictionPolicyB" óSpecifies the eviction policy for Virtual Machines in this Scale Set. Possible values are `Deallocate` and `Delete`. Changing this forces a new resource to be created.

> **Note:** This can only be configured when `priority` is set to `Spot`.
"÷
extensionOperationsEnabledB
 ÒShould extension operations be allowed on the Virtual Machine Scale Set? Possible values are `true` or `false`. Defaults to `true`. Changing this forces a new Linux Virtual Machine Scale Set to be created.

> **Note:** `extension_operations_enabled` may only be set to `false` if there are no extensions defined in the `extension` field.
"Ò

extensions*:

compute$LinuxVirtualMachineScaleSetExtensionWazure:compute/LinuxVirtualMachineScaleSetExtension:LinuxVirtualMachineScaleSetExtension0One or more `extension` blocks as defined below
"ï
extensionsTimeBudgetB" ÐSpecifies the duration allocated for all extensions to start. The time duration should be between `15` minutes and `120` minutes (inclusive) and should be specified in ISO 8601 format. Defaults to `PT1H30M`.
"
galleryApplications¯B¬*©:¦
£
compute-LinuxVirtualMachineScaleSetGalleryApplicationiazure:compute/LinuxVirtualMachineScaleSetGalleryApplication:LinuxVirtualMachineScaleSetGalleryApplication;One or more `gallery_application` blocks as defined below.
"Ø
healthProbeIdB" ÀThe ID of a Load Balancer Probe which should be used to determine the health of an instance. This is Required and can only be specified when `upgrade_mode` is set to `Automatic` or `Rolling`.
"¥
hostGroupIdB" Specifies the ID of the dedicated host group that the virtual machine scale set resides in. Changing this forces a new resource to be created.
"Ã
identityB:

compute#LinuxVirtualMachineScaleSetIdentityUazure:compute/LinuxVirtualMachineScaleSetIdentity:LinuxVirtualMachineScaleSetIdentity&An `identity` block as defined below.
"£
	instancesB The number of Virtual Machines in the Scale Set. Defaults to `0`.

> **NOTE:** If you're using AutoScaling, you may wish to use [`Ignore Changes` functionality](https://www.pulumi.com/docs/intro/concepts/programming-model/#ignorechanges) to ignore changes to this field.
"
location" ~The Azure location where the Linux Virtual Machine Scale Set should exist. Changing this forces a new resource to be created.
"ò
maxBidPriceB ÜThe maximum price you're willing to pay for each Virtual Machine in this Scale Set, in US Dollars; which must be greater than the current spot price. If this bid price falls below the current spot price the Virtual Machines in the Scale Set will be evicted using the `eviction_policy`. Defaults to `-1`, which means that each Virtual Machine in this Scale Set should not be evicted for price reasons.

> **Note:** This can only be configured when `priority` is set to `Spot`.
"p
name" dThe name of the Linux Virtual Machine Scale Set. Changing this forces a new resource to be created.
"÷
networkInterfaces¦*£: 

compute+LinuxVirtualMachineScaleSetNetworkInterfaceeazure:compute/LinuxVirtualMachineScaleSetNetworkInterface:LinuxVirtualMachineScaleSetNetworkInterface9One or more `network_interface` blocks as defined below.
"¶
osDisk:

compute!LinuxVirtualMachineScaleSetOsDiskQazure:compute/LinuxVirtualMachineScaleSetOsDisk:LinuxVirtualMachineScaleSetOsDisk%An `os_disk` block as defined below.
"
overprovisionB
 Should Azure over-provision Virtual Machines in this Scale Set? This means that multiple Virtual Machines will be provisioned and Azure will keep the instances which become available first - which improves provisioning success rates and improves deployment time. You're not billed for these over-provisioned VM's and they don't count towards the Subscription Quota. Defaults to `true`.
"²
planB}:{
y
computeLinuxVirtualMachineScaleSetPlanMazure:compute/LinuxVirtualMachineScaleSetPlan:LinuxVirtualMachineScaleSetPlan¨A `plan` block as defined below. Changing this forces a new resource to be created.

> **Note:** When using an image from Azure Marketplace a `plan` must be specified.
"±
platformFaultDomainCount Specifies the number of fault domains that are used by this Linux Virtual Machine Scale Set. Changing this forces a new resource to be created.
"
priorityB" òThe Priority of this Virtual Machine Scale Set. Possible values are `Regular` and `Spot`. Defaults to `Regular`. Changing this value forces a new resource.

> **Note:** When `priority` is set to `Spot` an `eviction_policy` must be specified.
"»
provisionVmAgentB
  Should the Azure VM Agent be provisioned on each Virtual Machine in the Scale Set? Defaults to `true`. Changing this value forces a new resource to be created.
"½
proximityPlacementGroupIdB" The ID of the Proximity Placement Group in which the Virtual Machine Scale Set should be assigned to. Changing this forces a new resource to be created.
"ª
resourceGroupName" The name of the Resource Group in which the Linux Virtual Machine Scale Set should be exist. Changing this forces a new resource to be created.
"
rollingUpgradePolicy²B¯:¬
©
compute/LinuxVirtualMachineScaleSetRollingUpgradePolicymazure:compute/LinuxVirtualMachineScaleSetRollingUpgradePolicy:LinuxVirtualMachineScaleSetRollingUpgradePolicyÉA `rolling_upgrade_policy` block as defined below. This is Required and can only be specified when `upgrade_mode` is set to `Automatic` or `Rolling`. Changing this forces a new resource to be created.
"¾
scaleInB:

compute"LinuxVirtualMachineScaleSetScaleInSazure:compute/LinuxVirtualMachineScaleSetScaleIn:LinuxVirtualMachineScaleSetScaleIn%A `scale_in` block as defined below.
"Æ
secretsB*:

compute!LinuxVirtualMachineScaleSetSecretQazure:compute/LinuxVirtualMachineScaleSetSecret:LinuxVirtualMachineScaleSetSecret.One or more `secret` blocks as defined below.
"
secureBootEnabledB
 {Specifies whether secure boot should be enabled on the virtual machine. Changing this forces a new resource to be created.
"Í
singlePlacementGroupB
 ®Should this Virtual Machine Scale Set be limited to a Single Placement Group, which means the number of instances will be capped at 100 Virtual Machines. Defaults to `true`.
"M
sku" BThe Virtual Machine SKU for the Scale Set, such as `Standard_F2`.
"¡
sourceImageIdB" The ID of an Image which each Virtual Machine in this Scale Set should be based on. Possible Image ID types include `Image ID`, `Shared Image ID`, `Shared Image Version ID`, `Community Gallery Image ID`, `Community Gallery Image Version ID`, `Shared Gallery Image ID` and `Shared Gallery Image Version ID`.

> **Note:** One of either `source_image_id` or `source_image_reference` must be set.
"×
sourceImageReference²B¯:¬
©
compute/LinuxVirtualMachineScaleSetSourceImageReferencemazure:compute/LinuxVirtualMachineScaleSetSourceImageReference:LinuxVirtualMachineScaleSetSourceImageReferenceA `source_image_reference` block as defined below.

> **Note:** One of either `source_image_id` or `source_image_reference` must be set.
"Ï
spotRestore:

compute&LinuxVirtualMachineScaleSetSpotRestore[azure:compute/LinuxVirtualMachineScaleSetSpotRestore:LinuxVirtualMachineScaleSetSpotRestore)A `spot_restore` block as defined below.
"^
tagsB2" NA mapping of tags which should be assigned to this Virtual Machine Scale Set.
"
terminationNotification¸:µ
²
compute2LinuxVirtualMachineScaleSetTerminationNotificationsazure:compute/LinuxVirtualMachineScaleSetTerminationNotification:LinuxVirtualMachineScaleSetTerminationNotification5A `termination_notification` block as defined below.
"H
uniqueId" 8The Unique ID for this Linux Virtual Machine Scale Set.
"
upgradeModeB" "h
userDataB" VThe Base64-Encoded User Data which should be used for this Virtual Machine Scale Set.
"
vtpmEnabledB
 tSpecifies whether vTPM should be enabled on the virtual machine. Changing this forces a new resource to be created.
"
zoneBalanceB
 Should the Virtual Machines in this Scale Set be strictly evenly distributed across Availability Zones? Defaults to `false`. Changing this forces a new resource to be created.

> **Note:** This can only be set to `true` when one or more `zones` are configured.
"é
zonesB*" ×Specifies a list of Availability Zones in which this Linux Virtual Machine Scale Set should be located.

> **Note:** Updating `zones` to remove an existing zone forces a new Virtual Machine Scale Set to be created.
*ì
=
computeManagedDisk%azure:compute/managedDisk:ManagedDiskËWManages a managed disk.

## Example Usage

### With Create Empty

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const example = new azure.core.ResourceGroup("example", {
    name: "example-resources",
    location: "West Europe",
});
const exampleManagedDisk = new azure.compute.ManagedDisk("example", {
    name: "acctestmd",
    location: example.location,
    resourceGroupName: example.name,
    storageAccountType: "Standard_LRS",
    createOption: "Empty",
    diskSizeGb: 1,
    tags: {
        environment: "staging",
    },
});
```
```python
import pulumi
import pulumi_azure as azure

example = azure.core.ResourceGroup("example",
    name="example-resources",
    location="West Europe")
example_managed_disk = azure.compute.ManagedDisk("example",
    name="acctestmd",
    location=example.location,
    resource_group_name=example.name,
    storage_account_type="Standard_LRS",
    create_option="Empty",
    disk_size_gb=1,
    tags={
        "environment": "staging",
    })
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var example = new Azure.Core.ResourceGroup("example", new()
    {
        Name = "example-resources",
        Location = "West Europe",
    });

    var exampleManagedDisk = new Azure.Compute.ManagedDisk("example", new()
    {
        Name = "acctestmd",
        Location = example.Location,
        ResourceGroupName = example.Name,
        StorageAccountType = "Standard_LRS",
        CreateOption = "Empty",
        DiskSizeGb = 1,
        Tags = 
        {
            { "environment", "staging" },
        },
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/compute"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
			Name:     pulumi.String("example-resources"),
			Location: pulumi.String("West Europe"),
		})
		if err != nil {
			return err
		}
		_, err = compute.NewManagedDisk(ctx, "example", &compute.ManagedDiskArgs{
			Name:               pulumi.String("acctestmd"),
			Location:           example.Location,
			ResourceGroupName:  example.Name,
			StorageAccountType: pulumi.String("Standard_LRS"),
			CreateOption:       pulumi.String("Empty"),
			DiskSizeGb:         pulumi.Int(1),
			Tags: pulumi.StringMap{
				"environment": pulumi.String("staging"),
			},
		})
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.core.ResourceGroup;
import com.pulumi.azure.core.ResourceGroupArgs;
import com.pulumi.azure.compute.ManagedDisk;
import com.pulumi.azure.compute.ManagedDiskArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        var example = new ResourceGroup("example", ResourceGroupArgs.builder()
            .name("example-resources")
            .location("West Europe")
            .build());

        var exampleManagedDisk = new ManagedDisk("exampleManagedDisk", ManagedDiskArgs.builder()
            .name("acctestmd")
            .location(example.location())
            .resourceGroupName(example.name())
            .storageAccountType("Standard_LRS")
            .createOption("Empty")
            .diskSizeGb("1")
            .tags(Map.of("environment", "staging"))
            .build());

    }
}
```
```yaml
resources:
  example:
    type: azure:core:ResourceGroup
    properties:
      name: example-resources
      location: West Europe
  exampleManagedDisk:
    type: azure:compute:ManagedDisk
    name: example
    properties:
      name: acctestmd
      location: ${example.location}
      resourceGroupName: ${example.name}
      storageAccountType: Standard_LRS
      createOption: Empty
      diskSizeGb: '1'
      tags:
        environment: staging
```
<!--End PulumiCodeChooser -->


### With Create Copy

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const example = new azure.core.ResourceGroup("example", {
    name: "example-resources",
    location: "West Europe",
});
const source = new azure.compute.ManagedDisk("source", {
    name: "acctestmd1",
    location: example.location,
    resourceGroupName: example.name,
    storageAccountType: "Standard_LRS",
    createOption: "Empty",
    diskSizeGb: 1,
    tags: {
        environment: "staging",
    },
});
const copy = new azure.compute.ManagedDisk("copy", {
    name: "acctestmd2",
    location: example.location,
    resourceGroupName: example.name,
    storageAccountType: "Standard_LRS",
    createOption: "Copy",
    sourceResourceId: source.id,
    diskSizeGb: 1,
    tags: {
        environment: "staging",
    },
});
```
```python
import pulumi
import pulumi_azure as azure

example = azure.core.ResourceGroup("example",
    name="example-resources",
    location="West Europe")
source = azure.compute.ManagedDisk("source",
    name="acctestmd1",
    location=example.location,
    resource_group_name=example.name,
    storage_account_type="Standard_LRS",
    create_option="Empty",
    disk_size_gb=1,
    tags={
        "environment": "staging",
    })
copy = azure.compute.ManagedDisk("copy",
    name="acctestmd2",
    location=example.location,
    resource_group_name=example.name,
    storage_account_type="Standard_LRS",
    create_option="Copy",
    source_resource_id=source.id,
    disk_size_gb=1,
    tags={
        "environment": "staging",
    })
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var example = new Azure.Core.ResourceGroup("example", new()
    {
        Name = "example-resources",
        Location = "West Europe",
    });

    var source = new Azure.Compute.ManagedDisk("source", new()
    {
        Name = "acctestmd1",
        Location = example.Location,
        ResourceGroupName = example.Name,
        StorageAccountType = "Standard_LRS",
        CreateOption = "Empty",
        DiskSizeGb = 1,
        Tags = 
        {
            { "environment", "staging" },
        },
    });

    var copy = new Azure.Compute.ManagedDisk("copy", new()
    {
        Name = "acctestmd2",
        Location = example.Location,
        ResourceGroupName = example.Name,
        StorageAccountType = "Standard_LRS",
        CreateOption = "Copy",
        SourceResourceId = source.Id,
        DiskSizeGb = 1,
        Tags = 
        {
            { "environment", "staging" },
        },
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/compute"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
			Name:     pulumi.String("example-resources"),
			Location: pulumi.String("West Europe"),
		})
		if err != nil {
			return err
		}
		source, err := compute.NewManagedDisk(ctx, "source", &compute.ManagedDiskArgs{
			Name:               pulumi.String("acctestmd1"),
			Location:           example.Location,
			ResourceGroupName:  example.Name,
			StorageAccountType: pulumi.String("Standard_LRS"),
			CreateOption:       pulumi.String("Empty"),
			DiskSizeGb:         pulumi.Int(1),
			Tags: pulumi.StringMap{
				"environment": pulumi.String("staging"),
			},
		})
		if err != nil {
			return err
		}
		_, err = compute.NewManagedDisk(ctx, "copy", &compute.ManagedDiskArgs{
			Name:               pulumi.String("acctestmd2"),
			Location:           example.Location,
			ResourceGroupName:  example.Name,
			StorageAccountType: pulumi.String("Standard_LRS"),
			CreateOption:       pulumi.String("Copy"),
			SourceResourceId:   source.ID(),
			DiskSizeGb:         pulumi.Int(1),
			Tags: pulumi.StringMap{
				"environment": pulumi.String("staging"),
			},
		})
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.core.ResourceGroup;
import com.pulumi.azure.core.ResourceGroupArgs;
import com.pulumi.azure.compute.ManagedDisk;
import com.pulumi.azure.compute.ManagedDiskArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        var example = new ResourceGroup("example", ResourceGroupArgs.builder()
            .name("example-resources")
            .location("West Europe")
            .build());

        var source = new ManagedDisk("source", ManagedDiskArgs.builder()
            .name("acctestmd1")
            .location(example.location())
            .resourceGroupName(example.name())
            .storageAccountType("Standard_LRS")
            .createOption("Empty")
            .diskSizeGb("1")
            .tags(Map.of("environment", "staging"))
            .build());

        var copy = new ManagedDisk("copy", ManagedDiskArgs.builder()
            .name("acctestmd2")
            .location(example.location())
            .resourceGroupName(example.name())
            .storageAccountType("Standard_LRS")
            .createOption("Copy")
            .sourceResourceId(source.id())
            .diskSizeGb("1")
            .tags(Map.of("environment", "staging"))
            .build());

    }
}
```
```yaml
resources:
  example:
    type: azure:core:ResourceGroup
    properties:
      name: example-resources
      location: West Europe
  source:
    type: azure:compute:ManagedDisk
    properties:
      name: acctestmd1
      location: ${example.location}
      resourceGroupName: ${example.name}
      storageAccountType: Standard_LRS
      createOption: Empty
      diskSizeGb: '1'
      tags:
        environment: staging
  copy:
    type: azure:compute:ManagedDisk
    properties:
      name: acctestmd2
      location: ${example.location}
      resourceGroupName: ${example.name}
      storageAccountType: Standard_LRS
      createOption: Copy
      sourceResourceId: ${source.id}
      diskSizeGb: '1'
      tags:
        environment: staging
```
<!--End PulumiCodeChooser -->

## Import

Managed Disks can be imported using the `resource id`, e.g.

```sh
$ pulumi import azure:compute/managedDisk:ManagedDisk example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Compute/disks/manageddisk1
```

ò
createOption" ÝThe method to use when creating the managed disk. Changing this forces a new resource to be created. Possible values include:
* `Import` - Import a VHD file in to the managed disk (VHD specified with `source_uri`).
* `ImportSecure` - Securely import a VHD file in to the managed disk (VHD specified with `source_uri`).
* `Empty` - Create an empty managed disk.
* `Copy` - Copy an existing managed disk or snapshot (specified with `source_resource_id`).
* `FromImage` - Copy a Platform Image (specified with `image_reference_id`)
* `Restore` - Set by Azure Backup or Site Recovery on a restored disk (specified with `source_resource_id`).
* `Upload` - Upload a VHD disk with the help of SAS URL (to be used with `upload_size_bytes`).
Ç
diskAccessIdB" °The ID of the disk access resource for using private endpoints on disks.

> **Note:** `disk_access_id` is only supported when `network_access_policy` is set to `AllowPrivate`.

diskEncryptionSetIdB" ñThe ID of a Disk Encryption Set which should be used to encrypt this Managed Disk. Conflicts with `secure_vm_disk_encryption_set_id`.

> **NOTE:** The Disk Encryption Set must have the `Reader` Role Assignment scoped on the Key Vault - in addition to an Access Policy to the Key Vault

> **NOTE:** Disk Encryption Sets are in Public Preview in a limited set of regions
ñ
diskIopsReadOnlyB ÖThe number of IOPS allowed across all VMs mounting the shared disk as read-only; only settable for UltraSSD disks and PremiumV2 disks with shared disk enabled. One operation can transfer between 4k and 256k bytes.
²
diskIopsReadWriteB The number of IOPS allowed for this disk; only settable for UltraSSD disks and PremiumV2 disks. One operation can transfer between 4k and 256k bytes.
ß
diskMbpsReadOnlyB ÄThe bandwidth allowed across all VMs mounting the shared disk as read-only; only settable for UltraSSD disks and PremiumV2 disks with shared disk enabled. MBps means millions of bytes per second.
 
diskMbpsReadWriteB The bandwidth allowed for this disk; only settable for UltraSSD disks and PremiumV2 disks. MBps means millions of bytes per second.


diskSizeGbB  
edgeZoneB" Specifies the Edge Zone within the Azure Region where this Managed Disk should exist. Changing this forces a new Managed Disk to be created.

encryptionSettingsyBw:u
s
computeManagedDiskEncryptionSettingsIazure:compute/ManagedDiskEncryptionSettings:ManagedDiskEncryptionSettingsA `encryption_settings` block as defined below.

> **NOTE:** Removing `encryption_settings` forces a new resource to be created.
ã
galleryImageReferenceIdB" ÁID of a Gallery Image Version to copy when `create_option` is `FromImage`. This field cannot be specified if image_reference_id is specified. Changing this forces a new resource to be created.
¥
hyperVGenerationB" The HyperV Generation of the Disk when the source of an `Import` or `Copy` operation targets a source that contains an operating system. Possible values are `V1` and `V2`. For `ImportSecure` it must be set to `V2`. Changing this forces a new resource to be created.
ø
imageReferenceIdB" ÝID of an existing platform/marketplace disk image to copy when `create_option` is `FromImage`. This field cannot be specified if gallery_image_reference_id is specified. Changing this forces a new resource to be created.

locationB" uSpecified the supported Azure location where the resource exists. Changing this forces a new resource to be created.

logicalSectorSizeB óLogical Sector Size. Possible values are: `512` and `4096`. Defaults to `4096`. Changing this forces a new resource to be created.

> **NOTE:** Setting logical sector size is supported only with `UltraSSD_LRS` disks and `PremiumV2_LRS` disks.

	maxSharesB íThe maximum number of VMs that can attach to the disk at the same time. Value greater than one indicates a disk that can be mounted on multiple VMs at the same time.

> **Note:** Premium SSD maxShares limit: `P15` and `P20` disks: 2. `P30`,`P40`,`P50` disks: 5. `P60`,`P70`,`P80` disks: 10. For ultra disks the `max_shares` minimum value is 1 and the maximum is 5.
i
nameB" [Specifies the name of the Managed Disk. Changing this forces a new resource to be created.

networkAccessPolicyB" iPolicy for accessing the disk via network. Allowed values are `AllowAll`, `AllowPrivate`, and `DenyAll`.
å
onDemandBurstingEnabledB
 ÃSpecifies if On-Demand Bursting is enabled for the Managed Disk.

> **Note:** Credit-Based Bursting is enabled by default on all eligible disks. More information on [Credit-Based and On-Demand Bursting can be found in the documentation](https://docs.microsoft.com/azure/virtual-machines/disk-bursting#disk-level-bursting).

optimizedFrequentAttachEnabledB
 ãSpecifies whether this Managed Disk should be optimized for frequent disk attachments (where a disk is attached/detached more than 5 times in a day). Defaults to `false`.

> **Note:** Setting `optimized_frequent_attach_enabled` to `true` causes the disks to not align with the fault domain of the Virtual Machine, which can have operational implications.
¿
osTypeB" ®Specify a value when the source of an `Import`, `ImportSecure` or `Copy` operation targets a source that contains an operating system. Valid values are `Linux` or `Windows`.
®
performancePlusEnabledB
 Specifies whether Performance Plus is enabled for this Managed Disk. Defaults to `false`. Changing this forces a new resource to be created.
·
publicNetworkAccessEnabledB
 Whether it is allowed to access the disk via public network. Defaults to `true`.

For more information on managed disks, such as sizing options and pricing, please check out the [Azure Documentation](https://docs.microsoft.com/azure/storage/storage-managed-disks-overview).

resourceGroupName" wThe name of the Resource Group where the Managed Disk should exist. Changing this forces a new resource to be created.

secureVmDiskEncryptionSetIdB" îThe ID of the Disk Encryption Set which should be used to Encrypt this OS Disk when the Virtual Machine is a Confidential VM. Conflicts with `disk_encryption_set_id`. Changing this forces a new resource to be created.

> **NOTE:** `secure_vm_disk_encryption_set_id` can only be specified when `security_type` is set to `ConfidentialVM_DiskEncryptedWithCustomerKey`.
Ø
securityTypeB" ÁSecurity Type of the Managed Disk when it is used for a Confidential VM. Possible values are `ConfidentialVM_VMGuestStateOnlyEncryptedWithPlatformKey`, `ConfidentialVM_DiskEncryptedWithPlatformKey` and `ConfidentialVM_DiskEncryptedWithCustomerKey`. Changing this forces a new resource to be created.

> **NOTE:** When `security_type` is set to `ConfidentialVM_DiskEncryptedWithCustomerKey` the value of `create_option` must be one of `FromImage` or `ImportSecure`.


> **NOTE:** `security_type` cannot be specified when `trusted_launch_enabled` is set to true.

> **NOTE:** `secure_vm_disk_encryption_set_id` must be specified when `security_type` is set to `ConfidentialVM_DiskEncryptedWithCustomerKey`.
è
sourceResourceIdB" ÍThe ID of an existing Managed Disk or Snapshot to copy when `create_option` is `Copy` or the recovery point to restore when `create_option` is `Restore`. Changing this forces a new resource to be created.

	sourceUriB" URI to a valid VHD file to be used when `create_option` is `Import` or `ImportSecure`. Changing this forces a new resource to be created.
Ó
storageAccountIdB" ¸The ID of the Storage Account where the `source_uri` is located. Required when `create_option` is set to `Import` or `ImportSecure`. Changing this forces a new resource to be created.
¾
storageAccountType" £The type of storage to use for the managed disk. Possible values are `Standard_LRS`, `StandardSSD_ZRS`, `Premium_LRS`, `PremiumV2_LRS`, `Premium_ZRS`, `StandardSSD_LRS` or `UltraSSD_LRS`.

> **Note:** Azure Ultra Disk Storage is only available in a region that support availability zones and can only enabled on the following VM series: `ESv3`, `DSv3`, `FSv3`, `LSv2`, `M` and `Mv2`. For more information see the `Azure Ultra Disk Storage` [product documentation](https://docs.microsoft.com/azure/virtual-machines/windows/disks-enable-ultra-ssd).
=
tagsB2" -A mapping of tags to assign to the resource.

tierB" ð
trustedLaunchEnabledB
 ÑSpecifies if Trusted Launch is enabled for the Managed Disk. Changing this forces a new resource to be created.

> **Note:** Trusted Launch can only be enabled when `create_option` is `FromImage` or `Import`.
ä
uploadSizeBytesB ÊSpecifies the size of the managed disk to create in bytes. Required when `create_option` is `Upload`. The value must be equal to the source disk to be copied in bytes. Source disk size could be calculated with `ls -l` or `wc -c`. More information can be found at [Copy a managed disk](https://learn.microsoft.com/en-us/azure/virtual-machines/linux/disks-upload-vhd-to-managed-disk-cli#copy-a-managed-disk). Changing this forces a new resource to be created.
¯
zoneB"  Specifies the Availability Zone in which this Managed Disk should be located. Changing this property forces a new resource to be created.

> **Note:** Availability Zones are [only supported in select regions at this time](https://docs.microsoft.com/azure/availability-zones/az-overview).
"ò
createOption" ÝThe method to use when creating the managed disk. Changing this forces a new resource to be created. Possible values include:
* `Import` - Import a VHD file in to the managed disk (VHD specified with `source_uri`).
* `ImportSecure` - Securely import a VHD file in to the managed disk (VHD specified with `source_uri`).
* `Empty` - Create an empty managed disk.
* `Copy` - Copy an existing managed disk or snapshot (specified with `source_resource_id`).
* `FromImage` - Copy a Platform Image (specified with `image_reference_id`)
* `Restore` - Set by Azure Backup or Site Recovery on a restored disk (specified with `source_resource_id`).
* `Upload` - Upload a VHD disk with the help of SAS URL (to be used with `upload_size_bytes`).
"Ç
diskAccessIdB" °The ID of the disk access resource for using private endpoints on disks.

> **Note:** `disk_access_id` is only supported when `network_access_policy` is set to `AllowPrivate`.
"
diskEncryptionSetIdB" ñThe ID of a Disk Encryption Set which should be used to encrypt this Managed Disk. Conflicts with `secure_vm_disk_encryption_set_id`.

> **NOTE:** The Disk Encryption Set must have the `Reader` Role Assignment scoped on the Key Vault - in addition to an Access Policy to the Key Vault

> **NOTE:** Disk Encryption Sets are in Public Preview in a limited set of regions
"ï
diskIopsReadOnly ÖThe number of IOPS allowed across all VMs mounting the shared disk as read-only; only settable for UltraSSD disks and PremiumV2 disks with shared disk enabled. One operation can transfer between 4k and 256k bytes.
"°
diskIopsReadWrite The number of IOPS allowed for this disk; only settable for UltraSSD disks and PremiumV2 disks. One operation can transfer between 4k and 256k bytes.
"Ý
diskMbpsReadOnly ÄThe bandwidth allowed across all VMs mounting the shared disk as read-only; only settable for UltraSSD disks and PremiumV2 disks with shared disk enabled. MBps means millions of bytes per second.
"
diskMbpsReadWrite The bandwidth allowed for this disk; only settable for UltraSSD disks and PremiumV2 disks. MBps means millions of bytes per second.
"

diskSizeGb " 
edgeZoneB" Specifies the Edge Zone within the Azure Region where this Managed Disk should exist. Changing this forces a new Managed Disk to be created.
"
encryptionSettingsyBw:u
s
computeManagedDiskEncryptionSettingsIazure:compute/ManagedDiskEncryptionSettings:ManagedDiskEncryptionSettingsA `encryption_settings` block as defined below.

> **NOTE:** Removing `encryption_settings` forces a new resource to be created.
"ã
galleryImageReferenceIdB" ÁID of a Gallery Image Version to copy when `create_option` is `FromImage`. This field cannot be specified if image_reference_id is specified. Changing this forces a new resource to be created.
"¥
hyperVGenerationB" The HyperV Generation of the Disk when the source of an `Import` or `Copy` operation targets a source that contains an operating system. Possible values are `V1` and `V2`. For `ImportSecure` it must be set to `V2`. Changing this forces a new resource to be created.
"ø
imageReferenceIdB" ÝID of an existing platform/marketplace disk image to copy when `create_option` is `FromImage`. This field cannot be specified if gallery_image_reference_id is specified. Changing this forces a new resource to be created.
"
location" uSpecified the supported Azure location where the resource exists. Changing this forces a new resource to be created.
"
logicalSectorSize óLogical Sector Size. Possible values are: `512` and `4096`. Defaults to `4096`. Changing this forces a new resource to be created.

> **NOTE:** Setting logical sector size is supported only with `UltraSSD_LRS` disks and `PremiumV2_LRS` disks.
"ÿ
	maxShares íThe maximum number of VMs that can attach to the disk at the same time. Value greater than one indicates a disk that can be mounted on multiple VMs at the same time.

> **Note:** Premium SSD maxShares limit: `P15` and `P20` disks: 2. `P30`,`P40`,`P50` disks: 5. `P60`,`P70`,`P80` disks: 10. For ultra disks the `max_shares` minimum value is 1 and the maximum is 5.
"g
name" [Specifies the name of the Managed Disk. Changing this forces a new resource to be created.
"
networkAccessPolicyB" iPolicy for accessing the disk via network. Allowed values are `AllowAll`, `AllowPrivate`, and `DenyAll`.
"å
onDemandBurstingEnabledB
 ÃSpecifies if On-Demand Bursting is enabled for the Managed Disk.

> **Note:** Credit-Based Bursting is enabled by default on all eligible disks. More information on [Credit-Based and On-Demand Bursting can be found in the documentation](https://docs.microsoft.com/azure/virtual-machines/disk-bursting#disk-level-bursting).
"
optimizedFrequentAttachEnabledB
 ãSpecifies whether this Managed Disk should be optimized for frequent disk attachments (where a disk is attached/detached more than 5 times in a day). Defaults to `false`.

> **Note:** Setting `optimized_frequent_attach_enabled` to `true` causes the disks to not align with the fault domain of the Virtual Machine, which can have operational implications.
"¿
osTypeB" ®Specify a value when the source of an `Import`, `ImportSecure` or `Copy` operation targets a source that contains an operating system. Valid values are `Linux` or `Windows`.
"®
performancePlusEnabledB
 Specifies whether Performance Plus is enabled for this Managed Disk. Defaults to `false`. Changing this forces a new resource to be created.
"·
publicNetworkAccessEnabledB
 Whether it is allowed to access the disk via public network. Defaults to `true`.

For more information on managed disks, such as sizing options and pricing, please check out the [Azure Documentation](https://docs.microsoft.com/azure/storage/storage-managed-disks-overview).
"
resourceGroupName" wThe name of the Resource Group where the Managed Disk should exist. Changing this forces a new resource to be created.
"
secureVmDiskEncryptionSetIdB" îThe ID of the Disk Encryption Set which should be used to Encrypt this OS Disk when the Virtual Machine is a Confidential VM. Conflicts with `disk_encryption_set_id`. Changing this forces a new resource to be created.

> **NOTE:** `secure_vm_disk_encryption_set_id` can only be specified when `security_type` is set to `ConfidentialVM_DiskEncryptedWithCustomerKey`.
"Ø
securityTypeB" ÁSecurity Type of the Managed Disk when it is used for a Confidential VM. Possible values are `ConfidentialVM_VMGuestStateOnlyEncryptedWithPlatformKey`, `ConfidentialVM_DiskEncryptedWithPlatformKey` and `ConfidentialVM_DiskEncryptedWithCustomerKey`. Changing this forces a new resource to be created.

> **NOTE:** When `security_type` is set to `ConfidentialVM_DiskEncryptedWithCustomerKey` the value of `create_option` must be one of `FromImage` or `ImportSecure`.


> **NOTE:** `security_type` cannot be specified when `trusted_launch_enabled` is set to true.

> **NOTE:** `secure_vm_disk_encryption_set_id` must be specified when `security_type` is set to `ConfidentialVM_DiskEncryptedWithCustomerKey`.
"è
sourceResourceIdB" ÍThe ID of an existing Managed Disk or Snapshot to copy when `create_option` is `Copy` or the recovery point to restore when `create_option` is `Restore`. Changing this forces a new resource to be created.
"
	sourceUri" URI to a valid VHD file to be used when `create_option` is `Import` or `ImportSecure`. Changing this forces a new resource to be created.
"Ó
storageAccountIdB" ¸The ID of the Storage Account where the `source_uri` is located. Required when `create_option` is set to `Import` or `ImportSecure`. Changing this forces a new resource to be created.
"¾
storageAccountType" £The type of storage to use for the managed disk. Possible values are `Standard_LRS`, `StandardSSD_ZRS`, `Premium_LRS`, `PremiumV2_LRS`, `Premium_ZRS`, `StandardSSD_LRS` or `UltraSSD_LRS`.

> **Note:** Azure Ultra Disk Storage is only available in a region that support availability zones and can only enabled on the following VM series: `ESv3`, `DSv3`, `FSv3`, `LSv2`, `M` and `Mv2`. For more information see the `Azure Ultra Disk Storage` [product documentation](https://docs.microsoft.com/azure/virtual-machines/windows/disks-enable-ultra-ssd).
"=
tagsB2" -A mapping of tags to assign to the resource.
"

tier" "ð
trustedLaunchEnabledB
 ÑSpecifies if Trusted Launch is enabled for the Managed Disk. Changing this forces a new resource to be created.

> **Note:** Trusted Launch can only be enabled when `create_option` is `FromImage` or `Import`.
"ä
uploadSizeBytesB ÊSpecifies the size of the managed disk to create in bytes. Required when `create_option` is `Upload`. The value must be equal to the source disk to be copied in bytes. Source disk size could be calculated with `ls -l` or `wc -c`. More information can be found at [Copy a managed disk](https://learn.microsoft.com/en-us/azure/virtual-machines/linux/disks-upload-vhd-to-managed-disk-cli#copy-a-managed-disk). Changing this forces a new resource to be created.
"¯
zoneB"  Specifies the Availability Zone in which this Managed Disk should be located. Changing this property forces a new resource to be created.

> **Note:** Availability Zones are [only supported in select regions at this time](https://docs.microsoft.com/azure/availability-zones/az-overview).
*Ð9
U
computeManagedDiskSasToken5azure:compute/managedDiskSasToken:ManagedDiskSasTokenÜ.Manages a Disk SAS Token.

Use this resource to obtain a Shared Access Signature (SAS Token) for an existing Managed Disk.

Shared access signatures allow fine-grained, ephemeral access control to various aspects of Managed Disk similar to blob/storage account container.

With the help of this resource, data from the disk can be copied from managed disk to a storage blob or to some other system without the need of azcopy.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const test = new azure.core.ResourceGroup("test", {
    name: "testrg",
    location: "West Europe",
});
const testManagedDisk = new azure.compute.ManagedDisk("test", {
    name: "tst-disk-export",
    location: test.location,
    resourceGroupName: test.name,
    storageAccountType: "Standard_LRS",
    createOption: "Empty",
    diskSizeGb: 1,
});
const testManagedDiskSasToken = new azure.compute.ManagedDiskSasToken("test", {
    managedDiskId: testManagedDisk.id,
    durationInSeconds: 300,
    accessLevel: "Read",
});
```
```python
import pulumi
import pulumi_azure as azure

test = azure.core.ResourceGroup("test",
    name="testrg",
    location="West Europe")
test_managed_disk = azure.compute.ManagedDisk("test",
    name="tst-disk-export",
    location=test.location,
    resource_group_name=test.name,
    storage_account_type="Standard_LRS",
    create_option="Empty",
    disk_size_gb=1)
test_managed_disk_sas_token = azure.compute.ManagedDiskSasToken("test",
    managed_disk_id=test_managed_disk.id,
    duration_in_seconds=300,
    access_level="Read")
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var test = new Azure.Core.ResourceGroup("test", new()
    {
        Name = "testrg",
        Location = "West Europe",
    });

    var testManagedDisk = new Azure.Compute.ManagedDisk("test", new()
    {
        Name = "tst-disk-export",
        Location = test.Location,
        ResourceGroupName = test.Name,
        StorageAccountType = "Standard_LRS",
        CreateOption = "Empty",
        DiskSizeGb = 1,
    });

    var testManagedDiskSasToken = new Azure.Compute.ManagedDiskSasToken("test", new()
    {
        ManagedDiskId = testManagedDisk.Id,
        DurationInSeconds = 300,
        AccessLevel = "Read",
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/compute"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		test, err := core.NewResourceGroup(ctx, "test", &core.ResourceGroupArgs{
			Name:     pulumi.String("testrg"),
			Location: pulumi.String("West Europe"),
		})
		if err != nil {
			return err
		}
		testManagedDisk, err := compute.NewManagedDisk(ctx, "test", &compute.ManagedDiskArgs{
			Name:               pulumi.String("tst-disk-export"),
			Location:           test.Location,
			ResourceGroupName:  test.Name,
			StorageAccountType: pulumi.String("Standard_LRS"),
			CreateOption:       pulumi.String("Empty"),
			DiskSizeGb:         pulumi.Int(1),
		})
		if err != nil {
			return err
		}
		_, err = compute.NewManagedDiskSasToken(ctx, "test", &compute.ManagedDiskSasTokenArgs{
			ManagedDiskId:     testManagedDisk.ID(),
			DurationInSeconds: pulumi.Int(300),
			AccessLevel:       pulumi.String("Read"),
		})
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.core.ResourceGroup;
import com.pulumi.azure.core.ResourceGroupArgs;
import com.pulumi.azure.compute.ManagedDisk;
import com.pulumi.azure.compute.ManagedDiskArgs;
import com.pulumi.azure.compute.ManagedDiskSasToken;
import com.pulumi.azure.compute.ManagedDiskSasTokenArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        var test = new ResourceGroup("test", ResourceGroupArgs.builder()
            .name("testrg")
            .location("West Europe")
            .build());

        var testManagedDisk = new ManagedDisk("testManagedDisk", ManagedDiskArgs.builder()
            .name("tst-disk-export")
            .location(test.location())
            .resourceGroupName(test.name())
            .storageAccountType("Standard_LRS")
            .createOption("Empty")
            .diskSizeGb("1")
            .build());

        var testManagedDiskSasToken = new ManagedDiskSasToken("testManagedDiskSasToken", ManagedDiskSasTokenArgs.builder()
            .managedDiskId(testManagedDisk.id())
            .durationInSeconds(300)
            .accessLevel("Read")
            .build());

    }
}
```
```yaml
resources:
  test:
    type: azure:core:ResourceGroup
    properties:
      name: testrg
      location: West Europe
  testManagedDisk:
    type: azure:compute:ManagedDisk
    name: test
    properties:
      name: tst-disk-export
      location: ${test.location}
      resourceGroupName: ${test.name}
      storageAccountType: Standard_LRS
      createOption: Empty
      diskSizeGb: '1'
  testManagedDiskSasToken:
    type: azure:compute:ManagedDiskSasToken
    name: test
    properties:
      managedDiskId: ${testManagedDisk.id}
      durationInSeconds: 300
      accessLevel: Read
```
<!--End PulumiCodeChooser -->

## Import

Disk SAS Token can be imported using the `resource id`, e.g.

```sh
$ pulumi import azure:compute/managedDiskSasToken:ManagedDiskSasToken example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Compute/disks/manageddisk1
```

ª
accessLevel" The level of access required on the disk. Supported are Read, Write. Changing this forces a new resource to be created.

Refer to the [SAS creation reference from Azure](https://docs.microsoft.com/rest/api/compute/disks/grant-access)
for additional details on the fields above.
­
durationInSeconds The duration for which the export should be allowed. Should be between 30 & 4294967295 seconds. Changing this forces a new resource to be created.

managedDiskId" pThe ID of an existing Managed Disk which should be exported. Changing this forces a new resource to be created.
"ª
accessLevel" The level of access required on the disk. Supported are Read, Write. Changing this forces a new resource to be created.

Refer to the [SAS creation reference from Azure](https://docs.microsoft.com/rest/api/compute/disks/grant-access)
for additional details on the fields above.
"­
durationInSeconds The duration for which the export should be allowed. Should be between 30 & 4294967295 seconds. Changing this forces a new resource to be created.
"
managedDiskId" pThe ID of an existing Managed Disk which should be exported. Changing this forces a new resource to be created.
"N
sasUrl" @The computed Shared Access Signature (SAS) of the Managed Disk.
*õÆ

compute"OrchestratedVirtualMachineScaleSetSazure:compute/orchestratedVirtualMachineScaleSet:OrchestratedVirtualMachineScaleSet¿'Manages an Virtual Machine Scale Set in Flexible Orchestration Mode.

## Disclaimers

> **Note:** As of the **v2.86.0** (November 19, 2021) release of the provider this resource will only create Virtual Machine Scale Sets with the **Flexible** Orchestration Mode.

> **Note:** All arguments including the administrator login and password will be stored in the raw state as plain-text. [Read more about sensitive data in state](https://www.terraform.io/docs/state/sensitive-data.html).

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const example = new azure.core.ResourceGroup("example", {
    name: "example-resources",
    location: "West Europe",
});
const exampleOrchestratedVirtualMachineScaleSet = new azure.compute.OrchestratedVirtualMachineScaleSet("example", {
    name: "example-VMSS",
    location: example.location,
    resourceGroupName: example.name,
    platformFaultDomainCount: 1,
    zones: ["1"],
});
```
```python
import pulumi
import pulumi_azure as azure

example = azure.core.ResourceGroup("example",
    name="example-resources",
    location="West Europe")
example_orchestrated_virtual_machine_scale_set = azure.compute.OrchestratedVirtualMachineScaleSet("example",
    name="example-VMSS",
    location=example.location,
    resource_group_name=example.name,
    platform_fault_domain_count=1,
    zones=["1"])
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var example = new Azure.Core.ResourceGroup("example", new()
    {
        Name = "example-resources",
        Location = "West Europe",
    });

    var exampleOrchestratedVirtualMachineScaleSet = new Azure.Compute.OrchestratedVirtualMachineScaleSet("example", new()
    {
        Name = "example-VMSS",
        Location = example.Location,
        ResourceGroupName = example.Name,
        PlatformFaultDomainCount = 1,
        Zones = new[]
        {
            "1",
        },
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/compute"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
			Name:     pulumi.String("example-resources"),
			Location: pulumi.String("West Europe"),
		})
		if err != nil {
			return err
		}
		_, err = compute.NewOrchestratedVirtualMachineScaleSet(ctx, "example", &compute.OrchestratedVirtualMachineScaleSetArgs{
			Name:                     pulumi.String("example-VMSS"),
			Location:                 example.Location,
			ResourceGroupName:        example.Name,
			PlatformFaultDomainCount: pulumi.Int(1),
			Zones: pulumi.StringArray{
				pulumi.String("1"),
			},
		})
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.core.ResourceGroup;
import com.pulumi.azure.core.ResourceGroupArgs;
import com.pulumi.azure.compute.OrchestratedVirtualMachineScaleSet;
import com.pulumi.azure.compute.OrchestratedVirtualMachineScaleSetArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        var example = new ResourceGroup("example", ResourceGroupArgs.builder()
            .name("example-resources")
            .location("West Europe")
            .build());

        var exampleOrchestratedVirtualMachineScaleSet = new OrchestratedVirtualMachineScaleSet("exampleOrchestratedVirtualMachineScaleSet", OrchestratedVirtualMachineScaleSetArgs.builder()
            .name("example-VMSS")
            .location(example.location())
            .resourceGroupName(example.name())
            .platformFaultDomainCount(1)
            .zones("1")
            .build());

    }
}
```
```yaml
resources:
  example:
    type: azure:core:ResourceGroup
    properties:
      name: example-resources
      location: West Europe
  exampleOrchestratedVirtualMachineScaleSet:
    type: azure:compute:OrchestratedVirtualMachineScaleSet
    name: example
    properties:
      name: example-VMSS
      location: ${example.location}
      resourceGroupName: ${example.name}
      platformFaultDomainCount: 1
      zones:
        - '1'
```
<!--End PulumiCodeChooser -->

## Import

An Virtual Machine Scale Set can be imported using the `resource id`, e.g.

```sh
$ pulumi import azure:compute/orchestratedVirtualMachineScaleSet:OrchestratedVirtualMachineScaleSet example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Compute/virtualMachineScaleSets/scaleset1
```


additionalCapabilitiesÍBÊ:Ç
Ä
compute8OrchestratedVirtualMachineScaleSetAdditionalCapabilitiesazure:compute/OrchestratedVirtualMachineScaleSetAdditionalCapabilities:OrchestratedVirtualMachineScaleSetAdditionalCapabilities5An `additional_capabilities` block as defined below.
¥
automaticInstanceRepairÑBÎ:Ë
È
compute9OrchestratedVirtualMachineScaleSetAutomaticInstanceRepairazure:compute/OrchestratedVirtualMachineScaleSetAutomaticInstanceRepair:OrchestratedVirtualMachineScaleSetAutomaticInstanceRepairµAn `automatic_instance_repair` block as defined below.

> **Note:** To enable the `automatic_instance_repair`, the Orchestrated Virtual Machine Scale Set must have a valid [Application Health Extension](https://docs.microsoft.com/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-health-extension).
û
bootDiagnostics¸Bµ:²
¯
compute1OrchestratedVirtualMachineScaleSetBootDiagnosticsqazure:compute/OrchestratedVirtualMachineScaleSetBootDiagnostics:OrchestratedVirtualMachineScaleSetBootDiagnostics-A `boot_diagnostics` block as defined below.

capacityReservationGroupIdB" ùSpecifies the ID of the Capacity Reservation Group which the Virtual Machine Scale Set should be allocated to. Changing this forces a new resource to be created.

> **Note:** `capacity_reservation_group_id` cannot be specified with `proximity_placement_group_id`

> **Note:** If `capacity_reservation_group_id` is specified the `single_placement_group` must be set to `false`.
ç
	dataDisks¦B£* :

compute*OrchestratedVirtualMachineScaleSetDataDiskcazure:compute/OrchestratedVirtualMachineScaleSetDataDisk:OrchestratedVirtualMachineScaleSetDataDisk1One or more `data_disk` blocks as defined below.

encryptionAtHostEnabledB
 eShould disks attached to this Virtual Machine Scale Set be encrypted by enabling Encryption at Host?
Ù
evictionPolicyB" ÀThe Policy which should be used by Spot Virtual Machines that are Evicted from the Scale Set. Possible values are `Deallocate` and `Delete`. Changing this forces a new resource to be created.
ñ
extensionOperationsEnabledB
 ÌShould extension operations be allowed on the Virtual Machine Scale Set? Possible values are `true` or `false`. Defaults to `true`. Changing this forces a new Virtual Machine Scale Set to be created.

> **Note:** `extension_operations_enabled` may only be set to `false` if there are no extensions defined in the `extension` field.
ê

extensions©B¦*£: 

compute+OrchestratedVirtualMachineScaleSetExtensioneazure:compute/OrchestratedVirtualMachineScaleSetExtension:OrchestratedVirtualMachineScaleSetExtension0One or more `extension` blocks as defined below
å
extensionsTimeBudgetB" ÆSpecifies the time alloted for all extensions to start. The time duration should be between 15 minutes and 120 minutes (inclusive) and should be specified in ISO 8601 format. Defaults to `PT1H30M`.
Ø
identity£B :

compute*OrchestratedVirtualMachineScaleSetIdentitycazure:compute/OrchestratedVirtualMachineScaleSetIdentity:OrchestratedVirtualMachineScaleSetIdentity&An `identity` block as defined below.
T
	instancesB AThe number of Virtual Machines in the Virtual Machine Scale Set.
ä
licenseTypeB" ÎSpecifies the type of on-premise license (also known as Azure Hybrid Use Benefit) which should be used for this Virtual Machine Scale Set. Possible values are `None`, `Windows_Client` and `Windows_Server`.

locationB" xThe Azure location where the Virtual Machine Scale Set should exist. Changing this forces a new resource to be created.
¤
maxBidPriceB The maximum price you're willing to pay for each Virtual Machine in this Scale Set, in US Dollars; which must be greater than the current spot price. If this bid price falls below the current spot price the Virtual Machines in the Scale Set will be evicted using the eviction_policy. Defaults to `-1`, which means that each Virtual Machine in the Scale Set should not be evicted for price reasons.
l
nameB" ^The name of the Virtual Machine Scale Set. Changing this forces a new resource to be created.

networkInterfaces¾B»*¸:µ
²
compute2OrchestratedVirtualMachineScaleSetNetworkInterfacesazure:compute/OrchestratedVirtualMachineScaleSetNetworkInterface:OrchestratedVirtualMachineScaleSetNetworkInterface9One or more `network_interface` blocks as defined below.
Ï
osDiskB:

compute(OrchestratedVirtualMachineScaleSetOsDisk_azure:compute/OrchestratedVirtualMachineScaleSetOsDisk:OrchestratedVirtualMachineScaleSetOsDisk%An `os_disk` block as defined below.
Þ
	osProfile¦B£: 

compute+OrchestratedVirtualMachineScaleSetOsProfileeazure:compute/OrchestratedVirtualMachineScaleSetOsProfile:OrchestratedVirtualMachineScaleSetOsProfile(An `os_profile` block as defined below.
ù
planB:

compute&OrchestratedVirtualMachineScaleSetPlan[azure:compute/OrchestratedVirtualMachineScaleSetPlan:OrchestratedVirtualMachineScaleSetPlanWA `plan` block as documented below. Changing this forces a new resource to be created.
´
platformFaultDomainCount Specifies the number of fault domains that are used by this Virtual Machine Scale Set. Changing this forces a new resource to be created.

> **Note:** The number of Fault Domains varies depending on which Azure Region you're using. More information about update and fault domains and how they work can be found [here](https://learn.microsoft.com/en-us/azure/virtual-machines/availability-set-overview).
¯
priorityB" The Priority of this Virtual Machine Scale Set. Possible values are `Regular` and `Spot`. Defaults to `Regular`. Changing this value forces a new resource.
æ
priorityMix¬B©:¦
£
compute-OrchestratedVirtualMachineScaleSetPriorityMixiazure:compute/OrchestratedVirtualMachineScaleSetPriorityMix:OrchestratedVirtualMachineScaleSetPriorityMix(a `priority_mix` block as defined below
°
proximityPlacementGroupIdB" The ID of the Proximity Placement Group which the Virtual Machine should be assigned to. Changing this forces a new resource to be created.
¡
resourceGroupName" The name of the Resource Group in which the Virtual Machine Scale Set should exist. Changing this forces a new resource to be created.

singlePlacementGroupB
 ûShould this Virtual Machine Scale Set be limited to a Single Placement Group, which means the number of instances will be capped at 100 Virtual Machines. Possible values are `true` or `false`.

> **Note:** `single_placement_group` behaves differently for Flexible orchestration Virtual Machine Scale Sets than it does for Uniform orchestration Virtual Machine Scale Sets. It is recommended that you do not define the `single_placement_group` field in your configuration file as the service will determine what this value should be based off of the value contained within the `sku_name` field of your configuration file. You may set the `single_placement_group` field to `true`, however once you set it to `false` you will not be able to revert it back to `true`.
É
skuNameB" ·The `name` of the SKU to be used by this Virtual Machine Scale Set. Valid values include: any of the [General purpose](https://docs.microsoft.com/azure/virtual-machines/sizes-general), [Compute optimized](https://docs.microsoft.com/azure/virtual-machines/sizes-compute), [Memory optimized](https://docs.microsoft.com/azure/virtual-machines/sizes-memory), [Storage optimized](https://docs.microsoft.com/azure/virtual-machines/sizes-storage), [GPU optimized](https://docs.microsoft.com/azure/virtual-machines/sizes-gpu), [FPGA optimized](https://docs.microsoft.com/azure/virtual-machines/sizes-field-programmable-gate-arrays), [High performance](https://docs.microsoft.com/azure/virtual-machines/sizes-hpc), or [Previous generation](https://docs.microsoft.com/azure/virtual-machines/sizes-previous-gen) virtual machine SKUs.
ç

skuProfile©B¦:£
 
compute,OrchestratedVirtualMachineScaleSetSkuProfilegazure:compute/OrchestratedVirtualMachineScaleSetSkuProfile:OrchestratedVirtualMachineScaleSetSkuProfile¬An `sku_profile` block as defined below. Changing this forces a new resource to be created.

> **Note:** If `sku_profile` is specified the `sku_name` must be set to `Mix`.
Ò
sourceImageIdB" ºThe ID of an Image which each Virtual Machine in this Scale Set should be based on. Possible Image ID types include `Image ID`s, `Shared Image ID`s, `Shared Image Version ID`s, `Community Gallery Image ID`s, `Community Gallery Image Version ID`s, `Shared Gallery Image ID`s and `Shared Gallery Image Version ID`s.

sourceImageReferenceÇBÄ:Á
¾
compute6OrchestratedVirtualMachineScaleSetSourceImageReference{azure:compute/OrchestratedVirtualMachineScaleSetSourceImageReference:OrchestratedVirtualMachineScaleSetSourceImageReference3A `source_image_reference` block as defined below.
^
tagsB2" NA mapping of tags which should be assigned to this Virtual Machine Scale Set.
¤
terminationNotificationÑBÎ:Ë
È
compute9OrchestratedVirtualMachineScaleSetTerminationNotificationazure:compute/OrchestratedVirtualMachineScaleSetTerminationNotification:OrchestratedVirtualMachineScaleSetTerminationNotification5A `termination_notification` block as defined below.
n
userDataBase64B" VThe Base64-Encoded User Data which should be used for this Virtual Machine Scale Set.

zoneBalanceB
 Should the Virtual Machines in this Scale Set be strictly evenly distributed across Availability Zones? Defaults to `false`. Changing this forces a new resource to be created.

> **Note:** This can only be set to `true` when one or more `zones` are configured.

zonesB*" ïSpecifies a list of Availability Zones across which the Virtual Machine Scale Set will create instances.

> **Note:** Updating `zones` to remove an existing zone forces a new Virtual Machine Scale Set to be created.

> **Note:** Availability Zones are [only supported in several regions at this time](https://docs.microsoft.com/azure/availability-zones/az-overview).
"
additionalCapabilitiesÍBÊ:Ç
Ä
compute8OrchestratedVirtualMachineScaleSetAdditionalCapabilitiesazure:compute/OrchestratedVirtualMachineScaleSetAdditionalCapabilities:OrchestratedVirtualMachineScaleSetAdditionalCapabilities5An `additional_capabilities` block as defined below.
"¢
automaticInstanceRepairÎ:Ë
È
compute9OrchestratedVirtualMachineScaleSetAutomaticInstanceRepairazure:compute/OrchestratedVirtualMachineScaleSetAutomaticInstanceRepair:OrchestratedVirtualMachineScaleSetAutomaticInstanceRepairµAn `automatic_instance_repair` block as defined below.

> **Note:** To enable the `automatic_instance_repair`, the Orchestrated Virtual Machine Scale Set must have a valid [Application Health Extension](https://docs.microsoft.com/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-health-extension).
"û
bootDiagnostics¸Bµ:²
¯
compute1OrchestratedVirtualMachineScaleSetBootDiagnosticsqazure:compute/OrchestratedVirtualMachineScaleSetBootDiagnostics:OrchestratedVirtualMachineScaleSetBootDiagnostics-A `boot_diagnostics` block as defined below.
"
capacityReservationGroupIdB" ùSpecifies the ID of the Capacity Reservation Group which the Virtual Machine Scale Set should be allocated to. Changing this forces a new resource to be created.

> **Note:** `capacity_reservation_group_id` cannot be specified with `proximity_placement_group_id`

> **Note:** If `capacity_reservation_group_id` is specified the `single_placement_group` must be set to `false`.
"ç
	dataDisks¦B£* :

compute*OrchestratedVirtualMachineScaleSetDataDiskcazure:compute/OrchestratedVirtualMachineScaleSetDataDisk:OrchestratedVirtualMachineScaleSetDataDisk1One or more `data_disk` blocks as defined below.
"
encryptionAtHostEnabledB
 eShould disks attached to this Virtual Machine Scale Set be encrypted by enabling Encryption at Host?
"Ù
evictionPolicyB" ÀThe Policy which should be used by Spot Virtual Machines that are Evicted from the Scale Set. Possible values are `Deallocate` and `Delete`. Changing this forces a new resource to be created.
"ñ
extensionOperationsEnabledB
 ÌShould extension operations be allowed on the Virtual Machine Scale Set? Possible values are `true` or `false`. Defaults to `true`. Changing this forces a new Virtual Machine Scale Set to be created.

> **Note:** `extension_operations_enabled` may only be set to `false` if there are no extensions defined in the `extension` field.
"ç

extensions¦*£: 

compute+OrchestratedVirtualMachineScaleSetExtensioneazure:compute/OrchestratedVirtualMachineScaleSetExtension:OrchestratedVirtualMachineScaleSetExtension0One or more `extension` blocks as defined below
"å
extensionsTimeBudgetB" ÆSpecifies the time alloted for all extensions to start. The time duration should be between 15 minutes and 120 minutes (inclusive) and should be specified in ISO 8601 format. Defaults to `PT1H30M`.
"Ø
identity£B :

compute*OrchestratedVirtualMachineScaleSetIdentitycazure:compute/OrchestratedVirtualMachineScaleSetIdentity:OrchestratedVirtualMachineScaleSetIdentity&An `identity` block as defined below.
"R
	instances AThe number of Virtual Machines in the Virtual Machine Scale Set.
"ä
licenseTypeB" ÎSpecifies the type of on-premise license (also known as Azure Hybrid Use Benefit) which should be used for this Virtual Machine Scale Set. Possible values are `None`, `Windows_Client` and `Windows_Server`.
"
location" xThe Azure location where the Virtual Machine Scale Set should exist. Changing this forces a new resource to be created.
"¤
maxBidPriceB The maximum price you're willing to pay for each Virtual Machine in this Scale Set, in US Dollars; which must be greater than the current spot price. If this bid price falls below the current spot price the Virtual Machines in the Scale Set will be evicted using the eviction_policy. Defaults to `-1`, which means that each Virtual Machine in the Scale Set should not be evicted for price reasons.
"j
name" ^The name of the Virtual Machine Scale Set. Changing this forces a new resource to be created.
"
networkInterfaces¾B»*¸:µ
²
compute2OrchestratedVirtualMachineScaleSetNetworkInterfacesazure:compute/OrchestratedVirtualMachineScaleSetNetworkInterface:OrchestratedVirtualMachineScaleSetNetworkInterface9One or more `network_interface` blocks as defined below.
"Ï
osDiskB:

compute(OrchestratedVirtualMachineScaleSetOsDisk_azure:compute/OrchestratedVirtualMachineScaleSetOsDisk:OrchestratedVirtualMachineScaleSetOsDisk%An `os_disk` block as defined below.
"Þ
	osProfile¦B£: 

compute+OrchestratedVirtualMachineScaleSetOsProfileeazure:compute/OrchestratedVirtualMachineScaleSetOsProfile:OrchestratedVirtualMachineScaleSetOsProfile(An `os_profile` block as defined below.
"ù
planB:

compute&OrchestratedVirtualMachineScaleSetPlan[azure:compute/OrchestratedVirtualMachineScaleSetPlan:OrchestratedVirtualMachineScaleSetPlanWA `plan` block as documented below. Changing this forces a new resource to be created.
"´
platformFaultDomainCount Specifies the number of fault domains that are used by this Virtual Machine Scale Set. Changing this forces a new resource to be created.

> **Note:** The number of Fault Domains varies depending on which Azure Region you're using. More information about update and fault domains and how they work can be found [here](https://learn.microsoft.com/en-us/azure/virtual-machines/availability-set-overview).
"¯
priorityB" The Priority of this Virtual Machine Scale Set. Possible values are `Regular` and `Spot`. Defaults to `Regular`. Changing this value forces a new resource.
"æ
priorityMix¬B©:¦
£
compute-OrchestratedVirtualMachineScaleSetPriorityMixiazure:compute/OrchestratedVirtualMachineScaleSetPriorityMix:OrchestratedVirtualMachineScaleSetPriorityMix(a `priority_mix` block as defined below
"°
proximityPlacementGroupIdB" The ID of the Proximity Placement Group which the Virtual Machine should be assigned to. Changing this forces a new resource to be created.
"¡
resourceGroupName" The name of the Resource Group in which the Virtual Machine Scale Set should exist. Changing this forces a new resource to be created.
"
singlePlacementGroup
 ûShould this Virtual Machine Scale Set be limited to a Single Placement Group, which means the number of instances will be capped at 100 Virtual Machines. Possible values are `true` or `false`.

> **Note:** `single_placement_group` behaves differently for Flexible orchestration Virtual Machine Scale Sets than it does for Uniform orchestration Virtual Machine Scale Sets. It is recommended that you do not define the `single_placement_group` field in your configuration file as the service will determine what this value should be based off of the value contained within the `sku_name` field of your configuration file. You may set the `single_placement_group` field to `true`, however once you set it to `false` you will not be able to revert it back to `true`.
"É
skuNameB" ·The `name` of the SKU to be used by this Virtual Machine Scale Set. Valid values include: any of the [General purpose](https://docs.microsoft.com/azure/virtual-machines/sizes-general), [Compute optimized](https://docs.microsoft.com/azure/virtual-machines/sizes-compute), [Memory optimized](https://docs.microsoft.com/azure/virtual-machines/sizes-memory), [Storage optimized](https://docs.microsoft.com/azure/virtual-machines/sizes-storage), [GPU optimized](https://docs.microsoft.com/azure/virtual-machines/sizes-gpu), [FPGA optimized](https://docs.microsoft.com/azure/virtual-machines/sizes-field-programmable-gate-arrays), [High performance](https://docs.microsoft.com/azure/virtual-machines/sizes-hpc), or [Previous generation](https://docs.microsoft.com/azure/virtual-machines/sizes-previous-gen) virtual machine SKUs.
"ç

skuProfile©B¦:£
 
compute,OrchestratedVirtualMachineScaleSetSkuProfilegazure:compute/OrchestratedVirtualMachineScaleSetSkuProfile:OrchestratedVirtualMachineScaleSetSkuProfile¬An `sku_profile` block as defined below. Changing this forces a new resource to be created.

> **Note:** If `sku_profile` is specified the `sku_name` must be set to `Mix`.
"Ò
sourceImageIdB" ºThe ID of an Image which each Virtual Machine in this Scale Set should be based on. Possible Image ID types include `Image ID`s, `Shared Image ID`s, `Shared Image Version ID`s, `Community Gallery Image ID`s, `Community Gallery Image Version ID`s, `Shared Gallery Image ID`s and `Shared Gallery Image Version ID`s.
"
sourceImageReferenceÇBÄ:Á
¾
compute6OrchestratedVirtualMachineScaleSetSourceImageReference{azure:compute/OrchestratedVirtualMachineScaleSetSourceImageReference:OrchestratedVirtualMachineScaleSetSourceImageReference3A `source_image_reference` block as defined below.
"^
tagsB2" NA mapping of tags which should be assigned to this Virtual Machine Scale Set.
"¡
terminationNotificationÎ:Ë
È
compute9OrchestratedVirtualMachineScaleSetTerminationNotificationazure:compute/OrchestratedVirtualMachineScaleSetTerminationNotification:OrchestratedVirtualMachineScaleSetTerminationNotification5A `termination_notification` block as defined below.
"A
uniqueId" 1The Unique ID for the Virtual Machine Scale Set.
"n
userDataBase64B" VThe Base64-Encoded User Data which should be used for this Virtual Machine Scale Set.
"
zoneBalanceB
 Should the Virtual Machines in this Scale Set be strictly evenly distributed across Availability Zones? Defaults to `false`. Changing this forces a new resource to be created.

> **Note:** This can only be set to `true` when one or more `zones` are configured.
"
zonesB*" ïSpecifies a list of Availability Zones across which the Virtual Machine Scale Set will create instances.

> **Note:** Updating `zones` to remove an existing zone forces a new Virtual Machine Scale Set to be created.

> **Note:** Availability Zones are [only supported in several regions at this time](https://docs.microsoft.com/azure/availability-zones/az-overview).
*ÕÎ
C
computePacketCapture)azure:compute/packetCapture:PacketCaptureà¸Configures Network Packet Capturing against a Virtual Machine using a Network Watcher.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const example = new azure.core.ResourceGroup("example", {
    name: "example-resources",
    location: "West Europe",
});
const exampleNetworkWatcher = new azure.network.NetworkWatcher("example", {
    name: "example-nw",
    location: example.location,
    resourceGroupName: example.name,
});
const exampleVirtualNetwork = new azure.network.VirtualNetwork("example", {
    name: "example-network",
    addressSpaces: ["10.0.0.0/16"],
    location: example.location,
    resourceGroupName: example.name,
});
const exampleSubnet = new azure.network.Subnet("example", {
    name: "internal",
    resourceGroupName: example.name,
    virtualNetworkName: exampleVirtualNetwork.name,
    addressPrefixes: ["10.0.2.0/24"],
});
const exampleNetworkInterface = new azure.network.NetworkInterface("example", {
    name: "example-nic",
    location: example.location,
    resourceGroupName: example.name,
    ipConfigurations: [{
        name: "testconfiguration1",
        subnetId: exampleSubnet.id,
        privateIpAddressAllocation: "Dynamic",
    }],
});
const exampleVirtualMachine = new azure.compute.VirtualMachine("example", {
    name: "example-vm",
    location: example.location,
    resourceGroupName: example.name,
    networkInterfaceIds: [exampleNetworkInterface.id],
    vmSize: "Standard_F2",
    storageImageReference: {
        publisher: "Canonical",
        offer: "0001-com-ubuntu-server-jammy",
        sku: "22_04-lts",
        version: "latest",
    },
    storageOsDisk: {
        name: "osdisk",
        caching: "ReadWrite",
        createOption: "FromImage",
        managedDiskType: "Standard_LRS",
    },
    osProfile: {
        computerName: "pctest-vm",
        adminUsername: "testadmin",
        adminPassword: "Password1234!",
    },
    osProfileLinuxConfig: {
        disablePasswordAuthentication: false,
    },
});
const exampleExtension = new azure.compute.Extension("example", {
    name: "network-watcher",
    virtualMachineId: exampleVirtualMachine.id,
    publisher: "Microsoft.Azure.NetworkWatcher",
    type: "NetworkWatcherAgentLinux",
    typeHandlerVersion: "1.4",
    autoUpgradeMinorVersion: true,
});
const exampleAccount = new azure.storage.Account("example", {
    name: "examplesa",
    resourceGroupName: example.name,
    location: example.location,
    accountTier: "Standard",
    accountReplicationType: "LRS",
});
const examplePacketCapture = new azure.compute.PacketCapture("example", {
    name: "example-pc",
    networkWatcherId: exampleNetworkWatcher.id,
    virtualMachineId: exampleVirtualMachine.id,
    storageLocation: {
        storageAccountId: exampleAccount.id,
    },
}, {
    dependsOn: [exampleExtension],
});
```
```python
import pulumi
import pulumi_azure as azure

example = azure.core.ResourceGroup("example",
    name="example-resources",
    location="West Europe")
example_network_watcher = azure.network.NetworkWatcher("example",
    name="example-nw",
    location=example.location,
    resource_group_name=example.name)
example_virtual_network = azure.network.VirtualNetwork("example",
    name="example-network",
    address_spaces=["10.0.0.0/16"],
    location=example.location,
    resource_group_name=example.name)
example_subnet = azure.network.Subnet("example",
    name="internal",
    resource_group_name=example.name,
    virtual_network_name=example_virtual_network.name,
    address_prefixes=["10.0.2.0/24"])
example_network_interface = azure.network.NetworkInterface("example",
    name="example-nic",
    location=example.location,
    resource_group_name=example.name,
    ip_configurations=[{
        "name": "testconfiguration1",
        "subnet_id": example_subnet.id,
        "private_ip_address_allocation": "Dynamic",
    }])
example_virtual_machine = azure.compute.VirtualMachine("example",
    name="example-vm",
    location=example.location,
    resource_group_name=example.name,
    network_interface_ids=[example_network_interface.id],
    vm_size="Standard_F2",
    storage_image_reference={
        "publisher": "Canonical",
        "offer": "0001-com-ubuntu-server-jammy",
        "sku": "22_04-lts",
        "version": "latest",
    },
    storage_os_disk={
        "name": "osdisk",
        "caching": "ReadWrite",
        "create_option": "FromImage",
        "managed_disk_type": "Standard_LRS",
    },
    os_profile={
        "computer_name": "pctest-vm",
        "admin_username": "testadmin",
        "admin_password": "Password1234!",
    },
    os_profile_linux_config={
        "disable_password_authentication": False,
    })
example_extension = azure.compute.Extension("example",
    name="network-watcher",
    virtual_machine_id=example_virtual_machine.id,
    publisher="Microsoft.Azure.NetworkWatcher",
    type="NetworkWatcherAgentLinux",
    type_handler_version="1.4",
    auto_upgrade_minor_version=True)
example_account = azure.storage.Account("example",
    name="examplesa",
    resource_group_name=example.name,
    location=example.location,
    account_tier="Standard",
    account_replication_type="LRS")
example_packet_capture = azure.compute.PacketCapture("example",
    name="example-pc",
    network_watcher_id=example_network_watcher.id,
    virtual_machine_id=example_virtual_machine.id,
    storage_location={
        "storage_account_id": example_account.id,
    },
    opts = pulumi.ResourceOptions(depends_on=[example_extension]))
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var example = new Azure.Core.ResourceGroup("example", new()
    {
        Name = "example-resources",
        Location = "West Europe",
    });

    var exampleNetworkWatcher = new Azure.Network.NetworkWatcher("example", new()
    {
        Name = "example-nw",
        Location = example.Location,
        ResourceGroupName = example.Name,
    });

    var exampleVirtualNetwork = new Azure.Network.VirtualNetwork("example", new()
    {
        Name = "example-network",
        AddressSpaces = new[]
        {
            "10.0.0.0/16",
        },
        Location = example.Location,
        ResourceGroupName = example.Name,
    });

    var exampleSubnet = new Azure.Network.Subnet("example", new()
    {
        Name = "internal",
        ResourceGroupName = example.Name,
        VirtualNetworkName = exampleVirtualNetwork.Name,
        AddressPrefixes = new[]
        {
            "10.0.2.0/24",
        },
    });

    var exampleNetworkInterface = new Azure.Network.NetworkInterface("example", new()
    {
        Name = "example-nic",
        Location = example.Location,
        ResourceGroupName = example.Name,
        IpConfigurations = new[]
        {
            new Azure.Network.Inputs.NetworkInterfaceIpConfigurationArgs
            {
                Name = "testconfiguration1",
                SubnetId = exampleSubnet.Id,
                PrivateIpAddressAllocation = "Dynamic",
            },
        },
    });

    var exampleVirtualMachine = new Azure.Compute.VirtualMachine("example", new()
    {
        Name = "example-vm",
        Location = example.Location,
        ResourceGroupName = example.Name,
        NetworkInterfaceIds = new[]
        {
            exampleNetworkInterface.Id,
        },
        VmSize = "Standard_F2",
        StorageImageReference = new Azure.Compute.Inputs.VirtualMachineStorageImageReferenceArgs
        {
            Publisher = "Canonical",
            Offer = "0001-com-ubuntu-server-jammy",
            Sku = "22_04-lts",
            Version = "latest",
        },
        StorageOsDisk = new Azure.Compute.Inputs.VirtualMachineStorageOsDiskArgs
        {
            Name = "osdisk",
            Caching = "ReadWrite",
            CreateOption = "FromImage",
            ManagedDiskType = "Standard_LRS",
        },
        OsProfile = new Azure.Compute.Inputs.VirtualMachineOsProfileArgs
        {
            ComputerName = "pctest-vm",
            AdminUsername = "testadmin",
            AdminPassword = "Password1234!",
        },
        OsProfileLinuxConfig = new Azure.Compute.Inputs.VirtualMachineOsProfileLinuxConfigArgs
        {
            DisablePasswordAuthentication = false,
        },
    });

    var exampleExtension = new Azure.Compute.Extension("example", new()
    {
        Name = "network-watcher",
        VirtualMachineId = exampleVirtualMachine.Id,
        Publisher = "Microsoft.Azure.NetworkWatcher",
        Type = "NetworkWatcherAgentLinux",
        TypeHandlerVersion = "1.4",
        AutoUpgradeMinorVersion = true,
    });

    var exampleAccount = new Azure.Storage.Account("example", new()
    {
        Name = "examplesa",
        ResourceGroupName = example.Name,
        Location = example.Location,
        AccountTier = "Standard",
        AccountReplicationType = "LRS",
    });

    var examplePacketCapture = new Azure.Compute.PacketCapture("example", new()
    {
        Name = "example-pc",
        NetworkWatcherId = exampleNetworkWatcher.Id,
        VirtualMachineId = exampleVirtualMachine.Id,
        StorageLocation = new Azure.Compute.Inputs.PacketCaptureStorageLocationArgs
        {
            StorageAccountId = exampleAccount.Id,
        },
    }, new CustomResourceOptions
    {
        DependsOn =
        {
            exampleExtension,
        },
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/compute"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/network"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/storage"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
			Name:     pulumi.String("example-resources"),
			Location: pulumi.String("West Europe"),
		})
		if err != nil {
			return err
		}
		exampleNetworkWatcher, err := network.NewNetworkWatcher(ctx, "example", &network.NetworkWatcherArgs{
			Name:              pulumi.String("example-nw"),
			Location:          example.Location,
			ResourceGroupName: example.Name,
		})
		if err != nil {
			return err
		}
		exampleVirtualNetwork, err := network.NewVirtualNetwork(ctx, "example", &network.VirtualNetworkArgs{
			Name: pulumi.String("example-network"),
			AddressSpaces: pulumi.StringArray{
				pulumi.String("10.0.0.0/16"),
			},
			Location:          example.Location,
			ResourceGroupName: example.Name,
		})
		if err != nil {
			return err
		}
		exampleSubnet, err := network.NewSubnet(ctx, "example", &network.SubnetArgs{
			Name:               pulumi.String("internal"),
			ResourceGroupName:  example.Name,
			VirtualNetworkName: exampleVirtualNetwork.Name,
			AddressPrefixes: pulumi.StringArray{
				pulumi.String("10.0.2.0/24"),
			},
		})
		if err != nil {
			return err
		}
		exampleNetworkInterface, err := network.NewNetworkInterface(ctx, "example", &network.NetworkInterfaceArgs{
			Name:              pulumi.String("example-nic"),
			Location:          example.Location,
			ResourceGroupName: example.Name,
			IpConfigurations: network.NetworkInterfaceIpConfigurationArray{
				&network.NetworkInterfaceIpConfigurationArgs{
					Name:                       pulumi.String("testconfiguration1"),
					SubnetId:                   exampleSubnet.ID(),
					PrivateIpAddressAllocation: pulumi.String("Dynamic"),
				},
			},
		})
		if err != nil {
			return err
		}
		exampleVirtualMachine, err := compute.NewVirtualMachine(ctx, "example", &compute.VirtualMachineArgs{
			Name:              pulumi.String("example-vm"),
			Location:          example.Location,
			ResourceGroupName: example.Name,
			NetworkInterfaceIds: pulumi.StringArray{
				exampleNetworkInterface.ID(),
			},
			VmSize: pulumi.String("Standard_F2"),
			StorageImageReference: &compute.VirtualMachineStorageImageReferenceArgs{
				Publisher: pulumi.String("Canonical"),
				Offer:     pulumi.String("0001-com-ubuntu-server-jammy"),
				Sku:       pulumi.String("22_04-lts"),
				Version:   pulumi.String("latest"),
			},
			StorageOsDisk: &compute.VirtualMachineStorageOsDiskArgs{
				Name:            pulumi.String("osdisk"),
				Caching:         pulumi.String("ReadWrite"),
				CreateOption:    pulumi.String("FromImage"),
				ManagedDiskType: pulumi.String("Standard_LRS"),
			},
			OsProfile: &compute.VirtualMachineOsProfileArgs{
				ComputerName:  pulumi.String("pctest-vm"),
				AdminUsername: pulumi.String("testadmin"),
				AdminPassword: pulumi.String("Password1234!"),
			},
			OsProfileLinuxConfig: &compute.VirtualMachineOsProfileLinuxConfigArgs{
				DisablePasswordAuthentication: pulumi.Bool(false),
			},
		})
		if err != nil {
			return err
		}
		exampleExtension, err := compute.NewExtension(ctx, "example", &compute.ExtensionArgs{
			Name:                    pulumi.String("network-watcher"),
			VirtualMachineId:        exampleVirtualMachine.ID(),
			Publisher:               pulumi.String("Microsoft.Azure.NetworkWatcher"),
			Type:                    pulumi.String("NetworkWatcherAgentLinux"),
			TypeHandlerVersion:      pulumi.String("1.4"),
			AutoUpgradeMinorVersion: pulumi.Bool(true),
		})
		if err != nil {
			return err
		}
		exampleAccount, err := storage.NewAccount(ctx, "example", &storage.AccountArgs{
			Name:                   pulumi.String("examplesa"),
			ResourceGroupName:      example.Name,
			Location:               example.Location,
			AccountTier:            pulumi.String("Standard"),
			AccountReplicationType: pulumi.String("LRS"),
		})
		if err != nil {
			return err
		}
		_, err = compute.NewPacketCapture(ctx, "example", &compute.PacketCaptureArgs{
			Name:             pulumi.String("example-pc"),
			NetworkWatcherId: exampleNetworkWatcher.ID(),
			VirtualMachineId: exampleVirtualMachine.ID(),
			StorageLocation: &compute.PacketCaptureStorageLocationArgs{
				StorageAccountId: exampleAccount.ID(),
			},
		}, pulumi.DependsOn([]pulumi.Resource{
			exampleExtension,
		}))
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.core.ResourceGroup;
import com.pulumi.azure.core.ResourceGroupArgs;
import com.pulumi.azure.network.NetworkWatcher;
import com.pulumi.azure.network.NetworkWatcherArgs;
import com.pulumi.azure.network.VirtualNetwork;
import com.pulumi.azure.network.VirtualNetworkArgs;
import com.pulumi.azure.network.Subnet;
import com.pulumi.azure.network.SubnetArgs;
import com.pulumi.azure.network.NetworkInterface;
import com.pulumi.azure.network.NetworkInterfaceArgs;
import com.pulumi.azure.network.inputs.NetworkInterfaceIpConfigurationArgs;
import com.pulumi.azure.compute.VirtualMachine;
import com.pulumi.azure.compute.VirtualMachineArgs;
import com.pulumi.azure.compute.inputs.VirtualMachineStorageImageReferenceArgs;
import com.pulumi.azure.compute.inputs.VirtualMachineStorageOsDiskArgs;
import com.pulumi.azure.compute.inputs.VirtualMachineOsProfileArgs;
import com.pulumi.azure.compute.inputs.VirtualMachineOsProfileLinuxConfigArgs;
import com.pulumi.azure.compute.Extension;
import com.pulumi.azure.compute.ExtensionArgs;
import com.pulumi.azure.storage.Account;
import com.pulumi.azure.storage.AccountArgs;
import com.pulumi.azure.compute.PacketCapture;
import com.pulumi.azure.compute.PacketCaptureArgs;
import com.pulumi.azure.compute.inputs.PacketCaptureStorageLocationArgs;
import com.pulumi.resources.CustomResourceOptions;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        var example = new ResourceGroup("example", ResourceGroupArgs.builder()
            .name("example-resources")
            .location("West Europe")
            .build());

        var exampleNetworkWatcher = new NetworkWatcher("exampleNetworkWatcher", NetworkWatcherArgs.builder()
            .name("example-nw")
            .location(example.location())
            .resourceGroupName(example.name())
            .build());

        var exampleVirtualNetwork = new VirtualNetwork("exampleVirtualNetwork", VirtualNetworkArgs.builder()
            .name("example-network")
            .addressSpaces("10.0.0.0/16")
            .location(example.location())
            .resourceGroupName(example.name())
            .build());

        var exampleSubnet = new Subnet("exampleSubnet", SubnetArgs.builder()
            .name("internal")
            .resourceGroupName(example.name())
            .virtualNetworkName(exampleVirtualNetwork.name())
            .addressPrefixes("10.0.2.0/24")
            .build());

        var exampleNetworkInterface = new NetworkInterface("exampleNetworkInterface", NetworkInterfaceArgs.builder()
            .name("example-nic")
            .location(example.location())
            .resourceGroupName(example.name())
            .ipConfigurations(NetworkInterfaceIpConfigurationArgs.builder()
                .name("testconfiguration1")
                .subnetId(exampleSubnet.id())
                .privateIpAddressAllocation("Dynamic")
                .build())
            .build());

        var exampleVirtualMachine = new VirtualMachine("exampleVirtualMachine", VirtualMachineArgs.builder()
            .name("example-vm")
            .location(example.location())
            .resourceGroupName(example.name())
            .networkInterfaceIds(exampleNetworkInterface.id())
            .vmSize("Standard_F2")
            .storageImageReference(VirtualMachineStorageImageReferenceArgs.builder()
                .publisher("Canonical")
                .offer("0001-com-ubuntu-server-jammy")
                .sku("22_04-lts")
                .version("latest")
                .build())
            .storageOsDisk(VirtualMachineStorageOsDiskArgs.builder()
                .name("osdisk")
                .caching("ReadWrite")
                .createOption("FromImage")
                .managedDiskType("Standard_LRS")
                .build())
            .osProfile(VirtualMachineOsProfileArgs.builder()
                .computerName("pctest-vm")
                .adminUsername("testadmin")
                .adminPassword("Password1234!")
                .build())
            .osProfileLinuxConfig(VirtualMachineOsProfileLinuxConfigArgs.builder()
                .disablePasswordAuthentication(false)
                .build())
            .build());

        var exampleExtension = new Extension("exampleExtension", ExtensionArgs.builder()
            .name("network-watcher")
            .virtualMachineId(exampleVirtualMachine.id())
            .publisher("Microsoft.Azure.NetworkWatcher")
            .type("NetworkWatcherAgentLinux")
            .typeHandlerVersion("1.4")
            .autoUpgradeMinorVersion(true)
            .build());

        var exampleAccount = new Account("exampleAccount", AccountArgs.builder()
            .name("examplesa")
            .resourceGroupName(example.name())
            .location(example.location())
            .accountTier("Standard")
            .accountReplicationType("LRS")
            .build());

        var examplePacketCapture = new PacketCapture("examplePacketCapture", PacketCaptureArgs.builder()
            .name("example-pc")
            .networkWatcherId(exampleNetworkWatcher.id())
            .virtualMachineId(exampleVirtualMachine.id())
            .storageLocation(PacketCaptureStorageLocationArgs.builder()
                .storageAccountId(exampleAccount.id())
                .build())
            .build(), CustomResourceOptions.builder()
                .dependsOn(exampleExtension)
                .build());

    }
}
```
```yaml
resources:
  example:
    type: azure:core:ResourceGroup
    properties:
      name: example-resources
      location: West Europe
  exampleNetworkWatcher:
    type: azure:network:NetworkWatcher
    name: example
    properties:
      name: example-nw
      location: ${example.location}
      resourceGroupName: ${example.name}
  exampleVirtualNetwork:
    type: azure:network:VirtualNetwork
    name: example
    properties:
      name: example-network
      addressSpaces:
        - 10.0.0.0/16
      location: ${example.location}
      resourceGroupName: ${example.name}
  exampleSubnet:
    type: azure:network:Subnet
    name: example
    properties:
      name: internal
      resourceGroupName: ${example.name}
      virtualNetworkName: ${exampleVirtualNetwork.name}
      addressPrefixes:
        - 10.0.2.0/24
  exampleNetworkInterface:
    type: azure:network:NetworkInterface
    name: example
    properties:
      name: example-nic
      location: ${example.location}
      resourceGroupName: ${example.name}
      ipConfigurations:
        - name: testconfiguration1
          subnetId: ${exampleSubnet.id}
          privateIpAddressAllocation: Dynamic
  exampleVirtualMachine:
    type: azure:compute:VirtualMachine
    name: example
    properties:
      name: example-vm
      location: ${example.location}
      resourceGroupName: ${example.name}
      networkInterfaceIds:
        - ${exampleNetworkInterface.id}
      vmSize: Standard_F2
      storageImageReference:
        publisher: Canonical
        offer: 0001-com-ubuntu-server-jammy
        sku: 22_04-lts
        version: latest
      storageOsDisk:
        name: osdisk
        caching: ReadWrite
        createOption: FromImage
        managedDiskType: Standard_LRS
      osProfile:
        computerName: pctest-vm
        adminUsername: testadmin
        adminPassword: Password1234!
      osProfileLinuxConfig:
        disablePasswordAuthentication: false
  exampleExtension:
    type: azure:compute:Extension
    name: example
    properties:
      name: network-watcher
      virtualMachineId: ${exampleVirtualMachine.id}
      publisher: Microsoft.Azure.NetworkWatcher
      type: NetworkWatcherAgentLinux
      typeHandlerVersion: '1.4'
      autoUpgradeMinorVersion: true
  exampleAccount:
    type: azure:storage:Account
    name: example
    properties:
      name: examplesa
      resourceGroupName: ${example.name}
      location: ${example.location}
      accountTier: Standard
      accountReplicationType: LRS
  examplePacketCapture:
    type: azure:compute:PacketCapture
    name: example
    properties:
      name: example-pc
      networkWatcherId: ${exampleNetworkWatcher.id}
      virtualMachineId: ${exampleVirtualMachine.id}
      storageLocation:
        storageAccountId: ${exampleAccount.id}
    options:
      dependsOn:
        - ${exampleExtension}
```
<!--End PulumiCodeChooser -->

> **NOTE:** This Resource requires that [the Network Watcher Virtual Machine Extension](https://docs.microsoft.com/azure/network-watcher/network-watcher-packet-capture-manage-portal#before-you-begin) is installed on the Virtual Machine before capturing can be enabled which can be installed via the `azure.compute.Extension` resource.

## Import

Virtual Machine Packet Captures can be imported using the `resource id`, e.g.

```sh
$ pulumi import azure:compute/packetCapture:PacketCapture capture1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Network/networkWatchers/watcher1/packetCaptures/capture1
```

Ë
filters]B[*Y:W
U
computePacketCaptureFilter5azure:compute/PacketCaptureFilter:PacketCaptureFilteraOne or more `filter` blocks as defined below. Changing this forces a new resource to be created.
É
maximumBytesPerPacketB ©The number of bytes captured per packet. The remaining bytes are truncated. Defaults to `0` (Entire Packet Captured). Changing this forces a new resource to be created.

maximumBytesPerSessionB yMaximum size of the capture in Bytes. Defaults to `1073741824` (1GB). Changing this forces a new resource to be created.
´
maximumCaptureDurationInSecondsB The maximum duration of the capture session in seconds. Defaults to `18000` (5 hours). Changing this forces a new resource to be created.
r
nameB" dThe name to use for this Network Packet Capture. Changing this forces a new resource to be created.
s
networkWatcherId" [The resource ID of the Network Watcher. Changing this forces a new resource to be created.
é
storageLocationt:r
p
computePacketCaptureStorageLocationGazure:compute/PacketCaptureStorageLocation:PacketCaptureStorageLocation`A `storage_location` block as defined below. Changing this forces a new resource to be created.

virtualMachineId" zThe resource ID of the target Virtual Machine to capture packets from. Changing this forces a new resource to be created.
"Ë
filters]B[*Y:W
U
computePacketCaptureFilter5azure:compute/PacketCaptureFilter:PacketCaptureFilteraOne or more `filter` blocks as defined below. Changing this forces a new resource to be created.
"É
maximumBytesPerPacketB ©The number of bytes captured per packet. The remaining bytes are truncated. Defaults to `0` (Entire Packet Captured). Changing this forces a new resource to be created.
"
maximumBytesPerSessionB yMaximum size of the capture in Bytes. Defaults to `1073741824` (1GB). Changing this forces a new resource to be created.
"´
maximumCaptureDurationInSecondsB The maximum duration of the capture session in seconds. Defaults to `18000` (5 hours). Changing this forces a new resource to be created.
"p
name" dThe name to use for this Network Packet Capture. Changing this forces a new resource to be created.
"s
networkWatcherId" [The resource ID of the Network Watcher. Changing this forces a new resource to be created.
"é
storageLocationt:r
p
computePacketCaptureStorageLocationGazure:compute/PacketCaptureStorageLocation:PacketCaptureStorageLocation`A `storage_location` block as defined below. Changing this forces a new resource to be created.
"
virtualMachineId" zThe resource ID of the target Virtual Machine to capture packets from. Changing this forces a new resource to be created.
*Ô
@
computeRestorePoint'azure:compute/restorePoint:RestorePointManages a Virtual Machine Restore Point.

## Example Usage

<!--Start PulumiCodeChooser -->
```yaml
resources:
  example:
    type: azure:core:ResourceGroup
    properties:
      name: example-resources
      location: West Europe
  exampleVirtualNetwork:
    type: azure:network:VirtualNetwork
    name: example
    properties:
      name: example-network
      addressSpaces:
        - 10.0.0.0/16
      location: ${example.location}
      resourceGroupName: ${example.name}
  exampleSubnet:
    type: azure:network:Subnet
    name: example
    properties:
      name: internal
      resourceGroupName: ${example.name}
      virtualNetworkName: ${exampleVirtualNetwork.name}
      addressPrefixes:
        - 10.0.2.0/24
  exampleNetworkInterface:
    type: azure:network:NetworkInterface
    name: example
    properties:
      name: example-nic
      location: ${example.location}
      resourceGroupName: ${example.name}
      ipConfigurations:
        - name: internal
          subnetId: ${exampleSubnet.id}
          privateIpAddressAllocation: Dynamic
  exampleLinuxVirtualMachine:
    type: azure:compute:LinuxVirtualMachine
    name: example
    properties:
      name: example-machine
      resourceGroupName: ${example.name}
      location: ${example.location}
      size: Standard_F2
      adminUsername: adminuser
      networkInterfaceIds:
        - ${exampleNetworkInterface.id}
      adminSshKeys:
        - username: adminuser
          publicKey:
            fn::invoke:
              function: std:file
              arguments:
                input: ~/.ssh/id_rsa.pub
              return: result
      osDisk:
        caching: ReadWrite
        storageAccountType: Standard_LRS
      sourceImageReference:
        publisher: Canonical
        offer: 0001-com-ubuntu-server-jammy
        sku: 22_04-lts
        version: latest
  exampleRestorePointCollection:
    type: azure:compute:RestorePointCollection
    name: example
    properties:
      name: example-collection
      resourceGroupName: ${example.name}
      location: ${exampleLinuxVirtualMachine.location}
      sourceVirtualMachineId: ${exampleLinuxVirtualMachine.id}
  exampleRestorePoint:
    type: azure:compute:RestorePoint
    name: example
    properties:
      name: example-restore-point
      restorePointCollectionId: ${test.id}
```
<!--End PulumiCodeChooser -->

## Import

Virtual Machine Restore Point can be imported using the `resource id`, e.g.

```sh
$ pulumi import azure:compute/restorePoint:RestorePoint example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Compute/restorePointCollections/collection1/restorePoints/restorePoint1
```

½
crashConsistencyModeEnabledB
 Is Crash Consistent the Consistency Mode of the Virtual Machine Restore Point. Defaults to `false`. Changing this forces a new resource to be created.

excludedDisksB*" A list of disks that will be excluded from the Virtual Machine Restore Point. Changing this forces a new resource to be created.
z
nameB" lSpecifies the name of the Virtual Machine Restore Point. Changing this forces a new resource to be created.
,
&virtualMachineRestorePointCollectionId" "½
crashConsistencyModeEnabledB
 Is Crash Consistent the Consistency Mode of the Virtual Machine Restore Point. Defaults to `false`. Changing this forces a new resource to be created.
"
excludedDisksB*" A list of disks that will be excluded from the Virtual Machine Restore Point. Changing this forces a new resource to be created.
"x
name" lSpecifies the name of the Virtual Machine Restore Point. Changing this forces a new resource to be created.
",
&virtualMachineRestorePointCollectionId" *
^
computeRestorePointCollection;azure:compute/restorePointCollection:RestorePointCollection¯Manages a Virtual Machine Restore Point Collection.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";
import * as std from "@pulumi/std";

const example = new azure.core.ResourceGroup("example", {
    name: "example-resources",
    location: "West Europe",
});
const exampleVirtualNetwork = new azure.network.VirtualNetwork("example", {
    name: "example-network",
    addressSpaces: ["10.0.0.0/16"],
    location: example.location,
    resourceGroupName: example.name,
});
const exampleSubnet = new azure.network.Subnet("example", {
    name: "internal",
    resourceGroupName: example.name,
    virtualNetworkName: exampleVirtualNetwork.name,
    addressPrefixes: ["10.0.2.0/24"],
});
const exampleNetworkInterface = new azure.network.NetworkInterface("example", {
    name: "example-nic",
    location: example.location,
    resourceGroupName: example.name,
    ipConfigurations: [{
        name: "internal",
        subnetId: exampleSubnet.id,
        privateIpAddressAllocation: "Dynamic",
    }],
});
const exampleLinuxVirtualMachine = new azure.compute.LinuxVirtualMachine("example", {
    name: "example-machine",
    resourceGroupName: example.name,
    location: example.location,
    size: "Standard_F2",
    adminUsername: "adminuser",
    networkInterfaceIds: [exampleNetworkInterface.id],
    adminSshKeys: [{
        username: "adminuser",
        publicKey: std.file({
            input: "~/.ssh/id_rsa.pub",
        }).then(invoke => invoke.result),
    }],
    osDisk: {
        caching: "ReadWrite",
        storageAccountType: "Standard_LRS",
    },
    sourceImageReference: {
        publisher: "Canonical",
        offer: "0001-com-ubuntu-server-jammy",
        sku: "22_04-lts",
        version: "latest",
    },
});
const exampleRestorePointCollection = new azure.compute.RestorePointCollection("example", {
    name: "example-collection",
    resourceGroupName: example.name,
    location: exampleLinuxVirtualMachine.location,
    sourceVirtualMachineId: exampleLinuxVirtualMachine.id,
});
```
```python
import pulumi
import pulumi_azure as azure
import pulumi_std as std

example = azure.core.ResourceGroup("example",
    name="example-resources",
    location="West Europe")
example_virtual_network = azure.network.VirtualNetwork("example",
    name="example-network",
    address_spaces=["10.0.0.0/16"],
    location=example.location,
    resource_group_name=example.name)
example_subnet = azure.network.Subnet("example",
    name="internal",
    resource_group_name=example.name,
    virtual_network_name=example_virtual_network.name,
    address_prefixes=["10.0.2.0/24"])
example_network_interface = azure.network.NetworkInterface("example",
    name="example-nic",
    location=example.location,
    resource_group_name=example.name,
    ip_configurations=[{
        "name": "internal",
        "subnet_id": example_subnet.id,
        "private_ip_address_allocation": "Dynamic",
    }])
example_linux_virtual_machine = azure.compute.LinuxVirtualMachine("example",
    name="example-machine",
    resource_group_name=example.name,
    location=example.location,
    size="Standard_F2",
    admin_username="adminuser",
    network_interface_ids=[example_network_interface.id],
    admin_ssh_keys=[{
        "username": "adminuser",
        "public_key": std.file(input="~/.ssh/id_rsa.pub").result,
    }],
    os_disk={
        "caching": "ReadWrite",
        "storage_account_type": "Standard_LRS",
    },
    source_image_reference={
        "publisher": "Canonical",
        "offer": "0001-com-ubuntu-server-jammy",
        "sku": "22_04-lts",
        "version": "latest",
    })
example_restore_point_collection = azure.compute.RestorePointCollection("example",
    name="example-collection",
    resource_group_name=example.name,
    location=example_linux_virtual_machine.location,
    source_virtual_machine_id=example_linux_virtual_machine.id)
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;
using Std = Pulumi.Std;

return await Deployment.RunAsync(() => 
{
    var example = new Azure.Core.ResourceGroup("example", new()
    {
        Name = "example-resources",
        Location = "West Europe",
    });

    var exampleVirtualNetwork = new Azure.Network.VirtualNetwork("example", new()
    {
        Name = "example-network",
        AddressSpaces = new[]
        {
            "10.0.0.0/16",
        },
        Location = example.Location,
        ResourceGroupName = example.Name,
    });

    var exampleSubnet = new Azure.Network.Subnet("example", new()
    {
        Name = "internal",
        ResourceGroupName = example.Name,
        VirtualNetworkName = exampleVirtualNetwork.Name,
        AddressPrefixes = new[]
        {
            "10.0.2.0/24",
        },
    });

    var exampleNetworkInterface = new Azure.Network.NetworkInterface("example", new()
    {
        Name = "example-nic",
        Location = example.Location,
        ResourceGroupName = example.Name,
        IpConfigurations = new[]
        {
            new Azure.Network.Inputs.NetworkInterfaceIpConfigurationArgs
            {
                Name = "internal",
                SubnetId = exampleSubnet.Id,
                PrivateIpAddressAllocation = "Dynamic",
            },
        },
    });

    var exampleLinuxVirtualMachine = new Azure.Compute.LinuxVirtualMachine("example", new()
    {
        Name = "example-machine",
        ResourceGroupName = example.Name,
        Location = example.Location,
        Size = "Standard_F2",
        AdminUsername = "adminuser",
        NetworkInterfaceIds = new[]
        {
            exampleNetworkInterface.Id,
        },
        AdminSshKeys = new[]
        {
            new Azure.Compute.Inputs.LinuxVirtualMachineAdminSshKeyArgs
            {
                Username = "adminuser",
                PublicKey = Std.File.Invoke(new()
                {
                    Input = "~/.ssh/id_rsa.pub",
                }).Apply(invoke => invoke.Result),
            },
        },
        OsDisk = new Azure.Compute.Inputs.LinuxVirtualMachineOsDiskArgs
        {
            Caching = "ReadWrite",
            StorageAccountType = "Standard_LRS",
        },
        SourceImageReference = new Azure.Compute.Inputs.LinuxVirtualMachineSourceImageReferenceArgs
        {
            Publisher = "Canonical",
            Offer = "0001-com-ubuntu-server-jammy",
            Sku = "22_04-lts",
            Version = "latest",
        },
    });

    var exampleRestorePointCollection = new Azure.Compute.RestorePointCollection("example", new()
    {
        Name = "example-collection",
        ResourceGroupName = example.Name,
        Location = exampleLinuxVirtualMachine.Location,
        SourceVirtualMachineId = exampleLinuxVirtualMachine.Id,
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/compute"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/network"
	"github.com/pulumi/pulumi-std/sdk/go/std"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
			Name:     pulumi.String("example-resources"),
			Location: pulumi.String("West Europe"),
		})
		if err != nil {
			return err
		}
		exampleVirtualNetwork, err := network.NewVirtualNetwork(ctx, "example", &network.VirtualNetworkArgs{
			Name: pulumi.String("example-network"),
			AddressSpaces: pulumi.StringArray{
				pulumi.String("10.0.0.0/16"),
			},
			Location:          example.Location,
			ResourceGroupName: example.Name,
		})
		if err != nil {
			return err
		}
		exampleSubnet, err := network.NewSubnet(ctx, "example", &network.SubnetArgs{
			Name:               pulumi.String("internal"),
			ResourceGroupName:  example.Name,
			VirtualNetworkName: exampleVirtualNetwork.Name,
			AddressPrefixes: pulumi.StringArray{
				pulumi.String("10.0.2.0/24"),
			},
		})
		if err != nil {
			return err
		}
		exampleNetworkInterface, err := network.NewNetworkInterface(ctx, "example", &network.NetworkInterfaceArgs{
			Name:              pulumi.String("example-nic"),
			Location:          example.Location,
			ResourceGroupName: example.Name,
			IpConfigurations: network.NetworkInterfaceIpConfigurationArray{
				&network.NetworkInterfaceIpConfigurationArgs{
					Name:                       pulumi.String("internal"),
					SubnetId:                   exampleSubnet.ID(),
					PrivateIpAddressAllocation: pulumi.String("Dynamic"),
				},
			},
		})
		if err != nil {
			return err
		}
		invokeFile, err := std.File(ctx, &std.FileArgs{
			Input: "~/.ssh/id_rsa.pub",
		}, nil)
		if err != nil {
			return err
		}
		exampleLinuxVirtualMachine, err := compute.NewLinuxVirtualMachine(ctx, "example", &compute.LinuxVirtualMachineArgs{
			Name:              pulumi.String("example-machine"),
			ResourceGroupName: example.Name,
			Location:          example.Location,
			Size:              pulumi.String("Standard_F2"),
			AdminUsername:     pulumi.String("adminuser"),
			NetworkInterfaceIds: pulumi.StringArray{
				exampleNetworkInterface.ID(),
			},
			AdminSshKeys: compute.LinuxVirtualMachineAdminSshKeyArray{
				&compute.LinuxVirtualMachineAdminSshKeyArgs{
					Username:  pulumi.String("adminuser"),
					PublicKey: pulumi.String(invokeFile.Result),
				},
			},
			OsDisk: &compute.LinuxVirtualMachineOsDiskArgs{
				Caching:            pulumi.String("ReadWrite"),
				StorageAccountType: pulumi.String("Standard_LRS"),
			},
			SourceImageReference: &compute.LinuxVirtualMachineSourceImageReferenceArgs{
				Publisher: pulumi.String("Canonical"),
				Offer:     pulumi.String("0001-com-ubuntu-server-jammy"),
				Sku:       pulumi.String("22_04-lts"),
				Version:   pulumi.String("latest"),
			},
		})
		if err != nil {
			return err
		}
		_, err = compute.NewRestorePointCollection(ctx, "example", &compute.RestorePointCollectionArgs{
			Name:                   pulumi.String("example-collection"),
			ResourceGroupName:      example.Name,
			Location:               exampleLinuxVirtualMachine.Location,
			SourceVirtualMachineId: exampleLinuxVirtualMachine.ID(),
		})
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.core.ResourceGroup;
import com.pulumi.azure.core.ResourceGroupArgs;
import com.pulumi.azure.network.VirtualNetwork;
import com.pulumi.azure.network.VirtualNetworkArgs;
import com.pulumi.azure.network.Subnet;
import com.pulumi.azure.network.SubnetArgs;
import com.pulumi.azure.network.NetworkInterface;
import com.pulumi.azure.network.NetworkInterfaceArgs;
import com.pulumi.azure.network.inputs.NetworkInterfaceIpConfigurationArgs;
import com.pulumi.azure.compute.LinuxVirtualMachine;
import com.pulumi.azure.compute.LinuxVirtualMachineArgs;
import com.pulumi.azure.compute.inputs.LinuxVirtualMachineAdminSshKeyArgs;
import com.pulumi.azure.compute.inputs.LinuxVirtualMachineOsDiskArgs;
import com.pulumi.azure.compute.inputs.LinuxVirtualMachineSourceImageReferenceArgs;
import com.pulumi.azure.compute.RestorePointCollection;
import com.pulumi.azure.compute.RestorePointCollectionArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        var example = new ResourceGroup("example", ResourceGroupArgs.builder()
            .name("example-resources")
            .location("West Europe")
            .build());

        var exampleVirtualNetwork = new VirtualNetwork("exampleVirtualNetwork", VirtualNetworkArgs.builder()
            .name("example-network")
            .addressSpaces("10.0.0.0/16")
            .location(example.location())
            .resourceGroupName(example.name())
            .build());

        var exampleSubnet = new Subnet("exampleSubnet", SubnetArgs.builder()
            .name("internal")
            .resourceGroupName(example.name())
            .virtualNetworkName(exampleVirtualNetwork.name())
            .addressPrefixes("10.0.2.0/24")
            .build());

        var exampleNetworkInterface = new NetworkInterface("exampleNetworkInterface", NetworkInterfaceArgs.builder()
            .name("example-nic")
            .location(example.location())
            .resourceGroupName(example.name())
            .ipConfigurations(NetworkInterfaceIpConfigurationArgs.builder()
                .name("internal")
                .subnetId(exampleSubnet.id())
                .privateIpAddressAllocation("Dynamic")
                .build())
            .build());

        var exampleLinuxVirtualMachine = new LinuxVirtualMachine("exampleLinuxVirtualMachine", LinuxVirtualMachineArgs.builder()
            .name("example-machine")
            .resourceGroupName(example.name())
            .location(example.location())
            .size("Standard_F2")
            .adminUsername("adminuser")
            .networkInterfaceIds(exampleNetworkInterface.id())
            .adminSshKeys(LinuxVirtualMachineAdminSshKeyArgs.builder()
                .username("adminuser")
                .publicKey(StdFunctions.file(FileArgs.builder()
                    .input("~/.ssh/id_rsa.pub")
                    .build()).result())
                .build())
            .osDisk(LinuxVirtualMachineOsDiskArgs.builder()
                .caching("ReadWrite")
                .storageAccountType("Standard_LRS")
                .build())
            .sourceImageReference(LinuxVirtualMachineSourceImageReferenceArgs.builder()
                .publisher("Canonical")
                .offer("0001-com-ubuntu-server-jammy")
                .sku("22_04-lts")
                .version("latest")
                .build())
            .build());

        var exampleRestorePointCollection = new RestorePointCollection("exampleRestorePointCollection", RestorePointCollectionArgs.builder()
            .name("example-collection")
            .resourceGroupName(example.name())
            .location(exampleLinuxVirtualMachine.location())
            .sourceVirtualMachineId(exampleLinuxVirtualMachine.id())
            .build());

    }
}
```
```yaml
resources:
  example:
    type: azure:core:ResourceGroup
    properties:
      name: example-resources
      location: West Europe
  exampleVirtualNetwork:
    type: azure:network:VirtualNetwork
    name: example
    properties:
      name: example-network
      addressSpaces:
        - 10.0.0.0/16
      location: ${example.location}
      resourceGroupName: ${example.name}
  exampleSubnet:
    type: azure:network:Subnet
    name: example
    properties:
      name: internal
      resourceGroupName: ${example.name}
      virtualNetworkName: ${exampleVirtualNetwork.name}
      addressPrefixes:
        - 10.0.2.0/24
  exampleNetworkInterface:
    type: azure:network:NetworkInterface
    name: example
    properties:
      name: example-nic
      location: ${example.location}
      resourceGroupName: ${example.name}
      ipConfigurations:
        - name: internal
          subnetId: ${exampleSubnet.id}
          privateIpAddressAllocation: Dynamic
  exampleLinuxVirtualMachine:
    type: azure:compute:LinuxVirtualMachine
    name: example
    properties:
      name: example-machine
      resourceGroupName: ${example.name}
      location: ${example.location}
      size: Standard_F2
      adminUsername: adminuser
      networkInterfaceIds:
        - ${exampleNetworkInterface.id}
      adminSshKeys:
        - username: adminuser
          publicKey:
            fn::invoke:
              function: std:file
              arguments:
                input: ~/.ssh/id_rsa.pub
              return: result
      osDisk:
        caching: ReadWrite
        storageAccountType: Standard_LRS
      sourceImageReference:
        publisher: Canonical
        offer: 0001-com-ubuntu-server-jammy
        sku: 22_04-lts
        version: latest
  exampleRestorePointCollection:
    type: azure:compute:RestorePointCollection
    name: example
    properties:
      name: example-collection
      resourceGroupName: ${example.name}
      location: ${exampleLinuxVirtualMachine.location}
      sourceVirtualMachineId: ${exampleLinuxVirtualMachine.id}
```
<!--End PulumiCodeChooser -->

## Import

Virtual Machine Restore Point Collections can be imported using the `resource id`, e.g.

```sh
$ pulumi import azure:compute/restorePointCollection:RestorePointCollection example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Compute/restorePointCollections/collection1
```


locationB" The Azure location where the Virtual Machine Restore Point Collection should exist. Changing this forces a new resource to be created.

nameB" wSpecifies the name of the Virtual Machine Restore Point Collection. Changing this forces a new resource to be created.
°
resourceGroupName" The name of the Resource Group in which the Virtual Machine Restore Point Collection should exist. Changing this forces a new resource to be created.
¼
sourceVirtualMachineId" The ID of the virtual machine that will be associated with this Virtual Machine Restore Point Collection. Changing this forces a new resource to be created.
m
tagsB2" ]A mapping of tags which should be assigned to this Virtual Machine Restore Point Collection.
"
location" The Azure location where the Virtual Machine Restore Point Collection should exist. Changing this forces a new resource to be created.
"
name" wSpecifies the name of the Virtual Machine Restore Point Collection. Changing this forces a new resource to be created.
"°
resourceGroupName" The name of the Resource Group in which the Virtual Machine Restore Point Collection should exist. Changing this forces a new resource to be created.
"¼
sourceVirtualMachineId" The ID of the virtual machine that will be associated with this Virtual Machine Restore Point Collection. Changing this forces a new resource to be created.
"m
tagsB2" ]A mapping of tags which should be assigned to this Virtual Machine Restore Point Collection.
*Þ±
:
compute
RunCommand#azure:compute/runCommand:RunCommand¹Manages a Virtual Machine Run Command.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const exampleResourceGroup = new azure.core.ResourceGroup("example", {
    name: "example-resources",
    location: "West Europe",
});
const exampleVirtualNetwork = new azure.network.VirtualNetwork("example", {
    name: "example-vnet",
    addressSpaces: ["10.0.0.0/16"],
    location: exampleResourceGroup.location,
    resourceGroupName: exampleResourceGroup.name,
});
const exampleSubnet = new azure.network.Subnet("example", {
    name: "internal",
    resourceGroupName: exampleResourceGroup.name,
    virtualNetworkName: exampleVirtualNetwork.name,
    addressPrefixes: ["10.0.2.0/24"],
});
const exampleNetworkInterface = new azure.network.NetworkInterface("example", {
    name: "example-nic",
    location: exampleResourceGroup.location,
    resourceGroupName: exampleResourceGroup.name,
    ipConfigurations: [{
        name: "internal",
        subnetId: exampleSubnet.id,
        privateIpAddressAllocation: "Dynamic",
    }],
});
const exampleUserAssignedIdentity = new azure.authorization.UserAssignedIdentity("example", {
    name: "example-uai",
    resourceGroupName: exampleResourceGroup.name,
    location: exampleResourceGroup.location,
});
const exampleLinuxVirtualMachine = new azure.compute.LinuxVirtualMachine("example", {
    name: "example-VM",
    resourceGroupName: exampleResourceGroup.name,
    location: exampleResourceGroup.location,
    size: "Standard_B2s",
    adminUsername: "adminuser",
    adminPassword: "P@$$w0rd1234!",
    disablePasswordAuthentication: false,
    networkInterfaceIds: [exampleNetworkInterface.id],
    osDisk: {
        caching: "ReadWrite",
        storageAccountType: "Premium_LRS",
    },
    sourceImageReference: {
        publisher: "Canonical",
        offer: "0001-com-ubuntu-server-jammy",
        sku: "22_04-lts",
        version: "latest",
    },
    identity: {
        type: "SystemAssigned, UserAssigned",
        identityIds: [exampleUserAssignedIdentity.id],
    },
});
const exampleAccount = new azure.storage.Account("example", {
    name: "exampleaccount",
    resourceGroupName: exampleResourceGroup.name,
    location: exampleResourceGroup.location,
    accountTier: "Standard",
    accountReplicationType: "LRS",
});
const exampleAssignment = new azure.authorization.Assignment("example", {
    scope: exampleAccount.id,
    roleDefinitionName: "Storage Blob Data Contributor",
    principalId: exampleUserAssignedIdentity.principalId,
});
const exampleContainer = new azure.storage.Container("example", {
    name: "example-sc",
    storageAccountName: exampleAccount.name,
    containerAccessType: "blob",
});
const example1 = new azure.storage.Blob("example1", {
    name: "script1",
    storageAccountName: exampleAccount.name,
    storageContainerName: exampleContainer.name,
    type: "Block",
    sourceContent: "echo 'hello world'",
});
const example2 = new azure.storage.Blob("example2", {
    name: "output",
    storageAccountName: exampleAccount.name,
    storageContainerName: exampleContainer.name,
    type: "Append",
});
const example3 = new azure.storage.Blob("example3", {
    name: "error",
    storageAccountName: exampleAccount.name,
    storageContainerName: exampleContainer.name,
    type: "Append",
});
const example = azure.storage.getAccountSASOutput({
    connectionString: exampleAccount.primaryConnectionString,
    httpsOnly: true,
    signedVersion: "2019-10-10",
    start: "2023-04-01T00:00:00Z",
    expiry: "2024-04-01T00:00:00Z",
    resourceTypes: {
        service: false,
        container: false,
        object: true,
    },
    services: {
        blob: true,
        queue: false,
        table: false,
        file: false,
    },
    permissions: {
        read: true,
        write: true,
        "delete": false,
        list: false,
        add: true,
        create: true,
        update: false,
        process: false,
        tag: false,
        filter: false,
    },
});
// basic example
const exampleRunCommand = new azure.compute.RunCommand("example", {
    name: "example-vmrc",
    location: exampleResourceGroup.location,
    virtualMachineId: exampleLinuxVirtualMachine.id,
    source: {
        script: "echo 'hello world'",
    },
});
// authorize to storage blob using user assigned identity
const example2RunCommand = new azure.compute.RunCommand("example2", {
    location: exampleResourceGroup.location,
    name: "example2-vmrc",
    virtualMachineId: exampleLinuxVirtualMachine.id,
    outputBlobUri: example2.id,
    errorBlobUri: example3.id,
    runAsPassword: "P@$$w0rd1234!",
    runAsUser: "adminuser",
    source: {
        scriptUri: example1.id,
        scriptUriManagedIdentity: {
            clientId: exampleUserAssignedIdentity.clientId,
        },
    },
    errorBlobManagedIdentity: {
        clientId: exampleUserAssignedIdentity.clientId,
    },
    outputBlobManagedIdentity: {
        clientId: exampleUserAssignedIdentity.clientId,
    },
    parameters: [{
        name: "examplev1",
        value: "val1",
    }],
    protectedParameters: [{
        name: "examplev2",
        value: "val2",
    }],
    tags: {
        environment: "terraform-examples",
        some_key: "some-value",
    },
}, {
    dependsOn: [exampleAssignment],
});
// authorize to storage blob using SAS token
const example3RunCommand = new azure.compute.RunCommand("example3", {
    location: exampleResourceGroup.location,
    name: "example3-vmrc",
    virtualMachineId: exampleLinuxVirtualMachine.id,
    runAsPassword: "P@$$w0rd1234!",
    runAsUser: "adminuser",
    errorBlobUri: pulumi.all([example3.id, example]).apply(([id, example]) => `${id}${example.sas}`),
    outputBlobUri: pulumi.all([example2.id, example]).apply(([id, example]) => `${id}${example.sas}`),
    source: {
        scriptUri: pulumi.all([example1.id, example]).apply(([id, example]) => `${id}${example.sas}`),
    },
    parameters: [{
        name: "example-vm1",
        value: "val1",
    }],
    tags: {
        environment: "terraform-example-s",
        some_key: "some-value",
    },
});
```
```python
import pulumi
import pulumi_azure as azure

example_resource_group = azure.core.ResourceGroup("example",
    name="example-resources",
    location="West Europe")
example_virtual_network = azure.network.VirtualNetwork("example",
    name="example-vnet",
    address_spaces=["10.0.0.0/16"],
    location=example_resource_group.location,
    resource_group_name=example_resource_group.name)
example_subnet = azure.network.Subnet("example",
    name="internal",
    resource_group_name=example_resource_group.name,
    virtual_network_name=example_virtual_network.name,
    address_prefixes=["10.0.2.0/24"])
example_network_interface = azure.network.NetworkInterface("example",
    name="example-nic",
    location=example_resource_group.location,
    resource_group_name=example_resource_group.name,
    ip_configurations=[{
        "name": "internal",
        "subnet_id": example_subnet.id,
        "private_ip_address_allocation": "Dynamic",
    }])
example_user_assigned_identity = azure.authorization.UserAssignedIdentity("example",
    name="example-uai",
    resource_group_name=example_resource_group.name,
    location=example_resource_group.location)
example_linux_virtual_machine = azure.compute.LinuxVirtualMachine("example",
    name="example-VM",
    resource_group_name=example_resource_group.name,
    location=example_resource_group.location,
    size="Standard_B2s",
    admin_username="adminuser",
    admin_password="P@$$w0rd1234!",
    disable_password_authentication=False,
    network_interface_ids=[example_network_interface.id],
    os_disk={
        "caching": "ReadWrite",
        "storage_account_type": "Premium_LRS",
    },
    source_image_reference={
        "publisher": "Canonical",
        "offer": "0001-com-ubuntu-server-jammy",
        "sku": "22_04-lts",
        "version": "latest",
    },
    identity={
        "type": "SystemAssigned, UserAssigned",
        "identity_ids": [example_user_assigned_identity.id],
    })
example_account = azure.storage.Account("example",
    name="exampleaccount",
    resource_group_name=example_resource_group.name,
    location=example_resource_group.location,
    account_tier="Standard",
    account_replication_type="LRS")
example_assignment = azure.authorization.Assignment("example",
    scope=example_account.id,
    role_definition_name="Storage Blob Data Contributor",
    principal_id=example_user_assigned_identity.principal_id)
example_container = azure.storage.Container("example",
    name="example-sc",
    storage_account_name=example_account.name,
    container_access_type="blob")
example1 = azure.storage.Blob("example1",
    name="script1",
    storage_account_name=example_account.name,
    storage_container_name=example_container.name,
    type="Block",
    source_content="echo 'hello world'")
example2 = azure.storage.Blob("example2",
    name="output",
    storage_account_name=example_account.name,
    storage_container_name=example_container.name,
    type="Append")
example3 = azure.storage.Blob("example3",
    name="error",
    storage_account_name=example_account.name,
    storage_container_name=example_container.name,
    type="Append")
example = azure.storage.get_account_sas_output(connection_string=example_account.primary_connection_string,
    https_only=True,
    signed_version="2019-10-10",
    start="2023-04-01T00:00:00Z",
    expiry="2024-04-01T00:00:00Z",
    resource_types={
        "service": False,
        "container": False,
        "object": True,
    },
    services={
        "blob": True,
        "queue": False,
        "table": False,
        "file": False,
    },
    permissions={
        "read": True,
        "write": True,
        "delete": False,
        "list": False,
        "add": True,
        "create": True,
        "update": False,
        "process": False,
        "tag": False,
        "filter": False,
    })
# basic example
example_run_command = azure.compute.RunCommand("example",
    name="example-vmrc",
    location=example_resource_group.location,
    virtual_machine_id=example_linux_virtual_machine.id,
    source={
        "script": "echo 'hello world'",
    })
# authorize to storage blob using user assigned identity
example2_run_command = azure.compute.RunCommand("example2",
    location=example_resource_group.location,
    name="example2-vmrc",
    virtual_machine_id=example_linux_virtual_machine.id,
    output_blob_uri=example2.id,
    error_blob_uri=example3.id,
    run_as_password="P@$$w0rd1234!",
    run_as_user="adminuser",
    source={
        "script_uri": example1.id,
        "script_uri_managed_identity": {
            "client_id": example_user_assigned_identity.client_id,
        },
    },
    error_blob_managed_identity={
        "client_id": example_user_assigned_identity.client_id,
    },
    output_blob_managed_identity={
        "client_id": example_user_assigned_identity.client_id,
    },
    parameters=[{
        "name": "examplev1",
        "value": "val1",
    }],
    protected_parameters=[{
        "name": "examplev2",
        "value": "val2",
    }],
    tags={
        "environment": "terraform-examples",
        "some_key": "some-value",
    },
    opts = pulumi.ResourceOptions(depends_on=[example_assignment]))
# authorize to storage blob using SAS token
example3_run_command = azure.compute.RunCommand("example3",
    location=example_resource_group.location,
    name="example3-vmrc",
    virtual_machine_id=example_linux_virtual_machine.id,
    run_as_password="P@$$w0rd1234!",
    run_as_user="adminuser",
    error_blob_uri=pulumi.Output.all(
        id=example3.id,
        example=example
).apply(lambda resolved_outputs: f"{resolved_outputs['id']}{example.sas}")
,
    output_blob_uri=pulumi.Output.all(
        id=example2.id,
        example=example
).apply(lambda resolved_outputs: f"{resolved_outputs['id']}{example.sas}")
,
    source={
        "script_uri": pulumi.Output.all(
            id=example1.id,
            example=example
).apply(lambda resolved_outputs: f"{resolved_outputs['id']}{example.sas}")
,
    },
    parameters=[{
        "name": "example-vm1",
        "value": "val1",
    }],
    tags={
        "environment": "terraform-example-s",
        "some_key": "some-value",
    })
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var exampleResourceGroup = new Azure.Core.ResourceGroup("example", new()
    {
        Name = "example-resources",
        Location = "West Europe",
    });

    var exampleVirtualNetwork = new Azure.Network.VirtualNetwork("example", new()
    {
        Name = "example-vnet",
        AddressSpaces = new[]
        {
            "10.0.0.0/16",
        },
        Location = exampleResourceGroup.Location,
        ResourceGroupName = exampleResourceGroup.Name,
    });

    var exampleSubnet = new Azure.Network.Subnet("example", new()
    {
        Name = "internal",
        ResourceGroupName = exampleResourceGroup.Name,
        VirtualNetworkName = exampleVirtualNetwork.Name,
        AddressPrefixes = new[]
        {
            "10.0.2.0/24",
        },
    });

    var exampleNetworkInterface = new Azure.Network.NetworkInterface("example", new()
    {
        Name = "example-nic",
        Location = exampleResourceGroup.Location,
        ResourceGroupName = exampleResourceGroup.Name,
        IpConfigurations = new[]
        {
            new Azure.Network.Inputs.NetworkInterfaceIpConfigurationArgs
            {
                Name = "internal",
                SubnetId = exampleSubnet.Id,
                PrivateIpAddressAllocation = "Dynamic",
            },
        },
    });

    var exampleUserAssignedIdentity = new Azure.Authorization.UserAssignedIdentity("example", new()
    {
        Name = "example-uai",
        ResourceGroupName = exampleResourceGroup.Name,
        Location = exampleResourceGroup.Location,
    });

    var exampleLinuxVirtualMachine = new Azure.Compute.LinuxVirtualMachine("example", new()
    {
        Name = "example-VM",
        ResourceGroupName = exampleResourceGroup.Name,
        Location = exampleResourceGroup.Location,
        Size = "Standard_B2s",
        AdminUsername = "adminuser",
        AdminPassword = "P@$$w0rd1234!",
        DisablePasswordAuthentication = false,
        NetworkInterfaceIds = new[]
        {
            exampleNetworkInterface.Id,
        },
        OsDisk = new Azure.Compute.Inputs.LinuxVirtualMachineOsDiskArgs
        {
            Caching = "ReadWrite",
            StorageAccountType = "Premium_LRS",
        },
        SourceImageReference = new Azure.Compute.Inputs.LinuxVirtualMachineSourceImageReferenceArgs
        {
            Publisher = "Canonical",
            Offer = "0001-com-ubuntu-server-jammy",
            Sku = "22_04-lts",
            Version = "latest",
        },
        Identity = new Azure.Compute.Inputs.LinuxVirtualMachineIdentityArgs
        {
            Type = "SystemAssigned, UserAssigned",
            IdentityIds = new[]
            {
                exampleUserAssignedIdentity.Id,
            },
        },
    });

    var exampleAccount = new Azure.Storage.Account("example", new()
    {
        Name = "exampleaccount",
        ResourceGroupName = exampleResourceGroup.Name,
        Location = exampleResourceGroup.Location,
        AccountTier = "Standard",
        AccountReplicationType = "LRS",
    });

    var exampleAssignment = new Azure.Authorization.Assignment("example", new()
    {
        Scope = exampleAccount.Id,
        RoleDefinitionName = "Storage Blob Data Contributor",
        PrincipalId = exampleUserAssignedIdentity.PrincipalId,
    });

    var exampleContainer = new Azure.Storage.Container("example", new()
    {
        Name = "example-sc",
        StorageAccountName = exampleAccount.Name,
        ContainerAccessType = "blob",
    });

    var example1 = new Azure.Storage.Blob("example1", new()
    {
        Name = "script1",
        StorageAccountName = exampleAccount.Name,
        StorageContainerName = exampleContainer.Name,
        Type = "Block",
        SourceContent = "echo 'hello world'",
    });

    var example2 = new Azure.Storage.Blob("example2", new()
    {
        Name = "output",
        StorageAccountName = exampleAccount.Name,
        StorageContainerName = exampleContainer.Name,
        Type = "Append",
    });

    var example3 = new Azure.Storage.Blob("example3", new()
    {
        Name = "error",
        StorageAccountName = exampleAccount.Name,
        StorageContainerName = exampleContainer.Name,
        Type = "Append",
    });

    var example = Azure.Storage.GetAccountSAS.Invoke(new()
    {
        ConnectionString = exampleAccount.PrimaryConnectionString,
        HttpsOnly = true,
        SignedVersion = "2019-10-10",
        Start = "2023-04-01T00:00:00Z",
        Expiry = "2024-04-01T00:00:00Z",
        ResourceTypes = new Azure.Storage.Inputs.GetAccountSASResourceTypesInputArgs
        {
            Service = false,
            Container = false,
            Object = true,
        },
        Services = new Azure.Storage.Inputs.GetAccountSASServicesInputArgs
        {
            Blob = true,
            Queue = false,
            Table = false,
            File = false,
        },
        Permissions = new Azure.Storage.Inputs.GetAccountSASPermissionsInputArgs
        {
            Read = true,
            Write = true,
            Delete = false,
            List = false,
            Add = true,
            Create = true,
            Update = false,
            Process = false,
            Tag = false,
            Filter = false,
        },
    });

    // basic example
    var exampleRunCommand = new Azure.Compute.RunCommand("example", new()
    {
        Name = "example-vmrc",
        Location = exampleResourceGroup.Location,
        VirtualMachineId = exampleLinuxVirtualMachine.Id,
        Source = new Azure.Compute.Inputs.RunCommandSourceArgs
        {
            Script = "echo 'hello world'",
        },
    });

    // authorize to storage blob using user assigned identity
    var example2RunCommand = new Azure.Compute.RunCommand("example2", new()
    {
        Location = exampleResourceGroup.Location,
        Name = "example2-vmrc",
        VirtualMachineId = exampleLinuxVirtualMachine.Id,
        OutputBlobUri = example2.Id,
        ErrorBlobUri = example3.Id,
        RunAsPassword = "P@$$w0rd1234!",
        RunAsUser = "adminuser",
        Source = new Azure.Compute.Inputs.RunCommandSourceArgs
        {
            ScriptUri = example1.Id,
            ScriptUriManagedIdentity = new Azure.Compute.Inputs.RunCommandSourceScriptUriManagedIdentityArgs
            {
                ClientId = exampleUserAssignedIdentity.ClientId,
            },
        },
        ErrorBlobManagedIdentity = new Azure.Compute.Inputs.RunCommandErrorBlobManagedIdentityArgs
        {
            ClientId = exampleUserAssignedIdentity.ClientId,
        },
        OutputBlobManagedIdentity = new Azure.Compute.Inputs.RunCommandOutputBlobManagedIdentityArgs
        {
            ClientId = exampleUserAssignedIdentity.ClientId,
        },
        Parameters = new[]
        {
            new Azure.Compute.Inputs.RunCommandParameterArgs
            {
                Name = "examplev1",
                Value = "val1",
            },
        },
        ProtectedParameters = new[]
        {
            new Azure.Compute.Inputs.RunCommandProtectedParameterArgs
            {
                Name = "examplev2",
                Value = "val2",
            },
        },
        Tags = 
        {
            { "environment", "terraform-examples" },
            { "some_key", "some-value" },
        },
    }, new CustomResourceOptions
    {
        DependsOn =
        {
            exampleAssignment,
        },
    });

    // authorize to storage blob using SAS token
    var example3RunCommand = new Azure.Compute.RunCommand("example3", new()
    {
        Location = exampleResourceGroup.Location,
        Name = "example3-vmrc",
        VirtualMachineId = exampleLinuxVirtualMachine.Id,
        RunAsPassword = "P@$$w0rd1234!",
        RunAsUser = "adminuser",
        ErrorBlobUri = Output.Tuple(example3.Id, example).Apply(values =>
        {
            var id = values.Item1;
            var example = values.Item2;
            return $"{id}{example.Apply(getAccountSASResult => getAccountSASResult.Sas)}";
        }),
        OutputBlobUri = Output.Tuple(example2.Id, example).Apply(values =>
        {
            var id = values.Item1;
            var example = values.Item2;
            return $"{id}{example.Apply(getAccountSASResult => getAccountSASResult.Sas)}";
        }),
        Source = new Azure.Compute.Inputs.RunCommandSourceArgs
        {
            ScriptUri = Output.Tuple(example1.Id, example).Apply(values =>
            {
                var id = values.Item1;
                var example = values.Item2;
                return $"{id}{example.Apply(getAccountSASResult => getAccountSASResult.Sas)}";
            }),
        },
        Parameters = new[]
        {
            new Azure.Compute.Inputs.RunCommandParameterArgs
            {
                Name = "example-vm1",
                Value = "val1",
            },
        },
        Tags = 
        {
            { "environment", "terraform-example-s" },
            { "some_key", "some-value" },
        },
    });

});
```
```go
package main

import (
	"fmt"

	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/authorization"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/compute"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/network"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/storage"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		exampleResourceGroup, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
			Name:     pulumi.String("example-resources"),
			Location: pulumi.String("West Europe"),
		})
		if err != nil {
			return err
		}
		exampleVirtualNetwork, err := network.NewVirtualNetwork(ctx, "example", &network.VirtualNetworkArgs{
			Name: pulumi.String("example-vnet"),
			AddressSpaces: pulumi.StringArray{
				pulumi.String("10.0.0.0/16"),
			},
			Location:          exampleResourceGroup.Location,
			ResourceGroupName: exampleResourceGroup.Name,
		})
		if err != nil {
			return err
		}
		exampleSubnet, err := network.NewSubnet(ctx, "example", &network.SubnetArgs{
			Name:               pulumi.String("internal"),
			ResourceGroupName:  exampleResourceGroup.Name,
			VirtualNetworkName: exampleVirtualNetwork.Name,
			AddressPrefixes: pulumi.StringArray{
				pulumi.String("10.0.2.0/24"),
			},
		})
		if err != nil {
			return err
		}
		exampleNetworkInterface, err := network.NewNetworkInterface(ctx, "example", &network.NetworkInterfaceArgs{
			Name:              pulumi.String("example-nic"),
			Location:          exampleResourceGroup.Location,
			ResourceGroupName: exampleResourceGroup.Name,
			IpConfigurations: network.NetworkInterfaceIpConfigurationArray{
				&network.NetworkInterfaceIpConfigurationArgs{
					Name:                       pulumi.String("internal"),
					SubnetId:                   exampleSubnet.ID(),
					PrivateIpAddressAllocation: pulumi.String("Dynamic"),
				},
			},
		})
		if err != nil {
			return err
		}
		exampleUserAssignedIdentity, err := authorization.NewUserAssignedIdentity(ctx, "example", &authorization.UserAssignedIdentityArgs{
			Name:              pulumi.String("example-uai"),
			ResourceGroupName: exampleResourceGroup.Name,
			Location:          exampleResourceGroup.Location,
		})
		if err != nil {
			return err
		}
		exampleLinuxVirtualMachine, err := compute.NewLinuxVirtualMachine(ctx, "example", &compute.LinuxVirtualMachineArgs{
			Name:                          pulumi.String("example-VM"),
			ResourceGroupName:             exampleResourceGroup.Name,
			Location:                      exampleResourceGroup.Location,
			Size:                          pulumi.String("Standard_B2s"),
			AdminUsername:                 pulumi.String("adminuser"),
			AdminPassword:                 pulumi.String("P@$$w0rd1234!"),
			DisablePasswordAuthentication: pulumi.Bool(false),
			NetworkInterfaceIds: pulumi.StringArray{
				exampleNetworkInterface.ID(),
			},
			OsDisk: &compute.LinuxVirtualMachineOsDiskArgs{
				Caching:            pulumi.String("ReadWrite"),
				StorageAccountType: pulumi.String("Premium_LRS"),
			},
			SourceImageReference: &compute.LinuxVirtualMachineSourceImageReferenceArgs{
				Publisher: pulumi.String("Canonical"),
				Offer:     pulumi.String("0001-com-ubuntu-server-jammy"),
				Sku:       pulumi.String("22_04-lts"),
				Version:   pulumi.String("latest"),
			},
			Identity: &compute.LinuxVirtualMachineIdentityArgs{
				Type: pulumi.String("SystemAssigned, UserAssigned"),
				IdentityIds: pulumi.StringArray{
					exampleUserAssignedIdentity.ID(),
				},
			},
		})
		if err != nil {
			return err
		}
		exampleAccount, err := storage.NewAccount(ctx, "example", &storage.AccountArgs{
			Name:                   pulumi.String("exampleaccount"),
			ResourceGroupName:      exampleResourceGroup.Name,
			Location:               exampleResourceGroup.Location,
			AccountTier:            pulumi.String("Standard"),
			AccountReplicationType: pulumi.String("LRS"),
		})
		if err != nil {
			return err
		}
		exampleAssignment, err := authorization.NewAssignment(ctx, "example", &authorization.AssignmentArgs{
			Scope:              exampleAccount.ID(),
			RoleDefinitionName: pulumi.String("Storage Blob Data Contributor"),
			PrincipalId:        exampleUserAssignedIdentity.PrincipalId,
		})
		if err != nil {
			return err
		}
		exampleContainer, err := storage.NewContainer(ctx, "example", &storage.ContainerArgs{
			Name:                pulumi.String("example-sc"),
			StorageAccountName:  exampleAccount.Name,
			ContainerAccessType: pulumi.String("blob"),
		})
		if err != nil {
			return err
		}
		example1, err := storage.NewBlob(ctx, "example1", &storage.BlobArgs{
			Name:                 pulumi.String("script1"),
			StorageAccountName:   exampleAccount.Name,
			StorageContainerName: exampleContainer.Name,
			Type:                 pulumi.String("Block"),
			SourceContent:        pulumi.String("echo 'hello world'"),
		})
		if err != nil {
			return err
		}
		example2, err := storage.NewBlob(ctx, "example2", &storage.BlobArgs{
			Name:                 pulumi.String("output"),
			StorageAccountName:   exampleAccount.Name,
			StorageContainerName: exampleContainer.Name,
			Type:                 pulumi.String("Append"),
		})
		if err != nil {
			return err
		}
		example3, err := storage.NewBlob(ctx, "example3", &storage.BlobArgs{
			Name:                 pulumi.String("error"),
			StorageAccountName:   exampleAccount.Name,
			StorageContainerName: exampleContainer.Name,
			Type:                 pulumi.String("Append"),
		})
		if err != nil {
			return err
		}
		example := storage.GetAccountSASOutput(ctx, storage.GetAccountSASOutputArgs{
			ConnectionString: exampleAccount.PrimaryConnectionString,
			HttpsOnly:        pulumi.Bool(true),
			SignedVersion:    pulumi.String("2019-10-10"),
			Start:            pulumi.String("2023-04-01T00:00:00Z"),
			Expiry:           pulumi.String("2024-04-01T00:00:00Z"),
			ResourceTypes: &storage.GetAccountSASResourceTypesArgs{
				Service:   pulumi.Bool(false),
				Container: pulumi.Bool(false),
				Object:    pulumi.Bool(true),
			},
			Services: &storage.GetAccountSASServicesArgs{
				Blob:  pulumi.Bool(true),
				Queue: pulumi.Bool(false),
				Table: pulumi.Bool(false),
				File:  pulumi.Bool(false),
			},
			Permissions: &storage.GetAccountSASPermissionsArgs{
				Read:    pulumi.Bool(true),
				Write:   pulumi.Bool(true),
				Delete:  pulumi.Bool(false),
				List:    pulumi.Bool(false),
				Add:     pulumi.Bool(true),
				Create:  pulumi.Bool(true),
				Update:  pulumi.Bool(false),
				Process: pulumi.Bool(false),
				Tag:     pulumi.Bool(false),
				Filter:  pulumi.Bool(false),
			},
		}, nil)
		// basic example
		_, err = compute.NewRunCommand(ctx, "example", &compute.RunCommandArgs{
			Name:             pulumi.String("example-vmrc"),
			Location:         exampleResourceGroup.Location,
			VirtualMachineId: exampleLinuxVirtualMachine.ID(),
			Source: &compute.RunCommandSourceArgs{
				Script: pulumi.String("echo 'hello world'"),
			},
		})
		if err != nil {
			return err
		}
		// authorize to storage blob using user assigned identity
		_, err = compute.NewRunCommand(ctx, "example2", &compute.RunCommandArgs{
			Location:         exampleResourceGroup.Location,
			Name:             pulumi.String("example2-vmrc"),
			VirtualMachineId: exampleLinuxVirtualMachine.ID(),
			OutputBlobUri:    example2.ID(),
			ErrorBlobUri:     example3.ID(),
			RunAsPassword:    pulumi.String("P@$$w0rd1234!"),
			RunAsUser:        pulumi.String("adminuser"),
			Source: &compute.RunCommandSourceArgs{
				ScriptUri: example1.ID(),
				ScriptUriManagedIdentity: &compute.RunCommandSourceScriptUriManagedIdentityArgs{
					ClientId: exampleUserAssignedIdentity.ClientId,
				},
			},
			ErrorBlobManagedIdentity: &compute.RunCommandErrorBlobManagedIdentityArgs{
				ClientId: exampleUserAssignedIdentity.ClientId,
			},
			OutputBlobManagedIdentity: &compute.RunCommandOutputBlobManagedIdentityArgs{
				ClientId: exampleUserAssignedIdentity.ClientId,
			},
			Parameters: compute.RunCommandParameterArray{
				&compute.RunCommandParameterArgs{
					Name:  pulumi.String("examplev1"),
					Value: pulumi.String("val1"),
				},
			},
			ProtectedParameters: compute.RunCommandProtectedParameterArray{
				&compute.RunCommandProtectedParameterArgs{
					Name:  pulumi.String("examplev2"),
					Value: pulumi.String("val2"),
				},
			},
			Tags: pulumi.StringMap{
				"environment": pulumi.String("terraform-examples"),
				"some_key":    pulumi.String("some-value"),
			},
		}, pulumi.DependsOn([]pulumi.Resource{
			exampleAssignment,
		}))
		if err != nil {
			return err
		}
		// authorize to storage blob using SAS token
		_, err = compute.NewRunCommand(ctx, "example3", &compute.RunCommandArgs{
			Location:         exampleResourceGroup.Location,
			Name:             pulumi.String("example3-vmrc"),
			VirtualMachineId: exampleLinuxVirtualMachine.ID(),
			RunAsPassword:    pulumi.String("P@$$w0rd1234!"),
			RunAsUser:        pulumi.String("adminuser"),
			ErrorBlobUri: pulumi.All(example3.ID(), example).ApplyT(func(_args []interface{}) (string, error) {
				id := _args[0].(string)
				example := _args[1].(storage.GetAccountSASResult)
				return fmt.Sprintf("%v%v", id, example.Sas), nil
			}).(pulumi.StringOutput),
			OutputBlobUri: pulumi.All(example2.ID(), example).ApplyT(func(_args []interface{}) (string, error) {
				id := _args[0].(string)
				example := _args[1].(storage.GetAccountSASResult)
				return fmt.Sprintf("%v%v", id, example.Sas), nil
			}).(pulumi.StringOutput),
			Source: &compute.RunCommandSourceArgs{
				ScriptUri: pulumi.All(example1.ID(), example).ApplyT(func(_args []interface{}) (string, error) {
					id := _args[0].(string)
					example := _args[1].(storage.GetAccountSASResult)
					return fmt.Sprintf("%v%v", id, example.Sas), nil
				}).(pulumi.StringOutput),
			},
			Parameters: compute.RunCommandParameterArray{
				&compute.RunCommandParameterArgs{
					Name:  pulumi.String("example-vm1"),
					Value: pulumi.String("val1"),
				},
			},
			Tags: pulumi.StringMap{
				"environment": pulumi.String("terraform-example-s"),
				"some_key":    pulumi.String("some-value"),
			},
		})
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.core.ResourceGroup;
import com.pulumi.azure.core.ResourceGroupArgs;
import com.pulumi.azure.network.VirtualNetwork;
import com.pulumi.azure.network.VirtualNetworkArgs;
import com.pulumi.azure.network.Subnet;
import com.pulumi.azure.network.SubnetArgs;
import com.pulumi.azure.network.NetworkInterface;
import com.pulumi.azure.network.NetworkInterfaceArgs;
import com.pulumi.azure.network.inputs.NetworkInterfaceIpConfigurationArgs;
import com.pulumi.azure.authorization.UserAssignedIdentity;
import com.pulumi.azure.authorization.UserAssignedIdentityArgs;
import com.pulumi.azure.compute.LinuxVirtualMachine;
import com.pulumi.azure.compute.LinuxVirtualMachineArgs;
import com.pulumi.azure.compute.inputs.LinuxVirtualMachineOsDiskArgs;
import com.pulumi.azure.compute.inputs.LinuxVirtualMachineSourceImageReferenceArgs;
import com.pulumi.azure.compute.inputs.LinuxVirtualMachineIdentityArgs;
import com.pulumi.azure.storage.Account;
import com.pulumi.azure.storage.AccountArgs;
import com.pulumi.azure.authorization.Assignment;
import com.pulumi.azure.authorization.AssignmentArgs;
import com.pulumi.azure.storage.Container;
import com.pulumi.azure.storage.ContainerArgs;
import com.pulumi.azure.storage.Blob;
import com.pulumi.azure.storage.BlobArgs;
import com.pulumi.azure.storage.StorageFunctions;
import com.pulumi.azure.storage.inputs.GetAccountSASArgs;
import com.pulumi.azure.storage.inputs.GetAccountSASResourceTypesArgs;
import com.pulumi.azure.storage.inputs.GetAccountSASServicesArgs;
import com.pulumi.azure.storage.inputs.GetAccountSASPermissionsArgs;
import com.pulumi.azure.compute.RunCommand;
import com.pulumi.azure.compute.RunCommandArgs;
import com.pulumi.azure.compute.inputs.RunCommandSourceArgs;
import com.pulumi.azure.compute.inputs.RunCommandSourceScriptUriManagedIdentityArgs;
import com.pulumi.azure.compute.inputs.RunCommandErrorBlobManagedIdentityArgs;
import com.pulumi.azure.compute.inputs.RunCommandOutputBlobManagedIdentityArgs;
import com.pulumi.azure.compute.inputs.RunCommandParameterArgs;
import com.pulumi.azure.compute.inputs.RunCommandProtectedParameterArgs;
import com.pulumi.resources.CustomResourceOptions;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        var exampleResourceGroup = new ResourceGroup("exampleResourceGroup", ResourceGroupArgs.builder()
            .name("example-resources")
            .location("West Europe")
            .build());

        var exampleVirtualNetwork = new VirtualNetwork("exampleVirtualNetwork", VirtualNetworkArgs.builder()
            .name("example-vnet")
            .addressSpaces("10.0.0.0/16")
            .location(exampleResourceGroup.location())
            .resourceGroupName(exampleResourceGroup.name())
            .build());

        var exampleSubnet = new Subnet("exampleSubnet", SubnetArgs.builder()
            .name("internal")
            .resourceGroupName(exampleResourceGroup.name())
            .virtualNetworkName(exampleVirtualNetwork.name())
            .addressPrefixes("10.0.2.0/24")
            .build());

        var exampleNetworkInterface = new NetworkInterface("exampleNetworkInterface", NetworkInterfaceArgs.builder()
            .name("example-nic")
            .location(exampleResourceGroup.location())
            .resourceGroupName(exampleResourceGroup.name())
            .ipConfigurations(NetworkInterfaceIpConfigurationArgs.builder()
                .name("internal")
                .subnetId(exampleSubnet.id())
                .privateIpAddressAllocation("Dynamic")
                .build())
            .build());

        var exampleUserAssignedIdentity = new UserAssignedIdentity("exampleUserAssignedIdentity", UserAssignedIdentityArgs.builder()
            .name("example-uai")
            .resourceGroupName(exampleResourceGroup.name())
            .location(exampleResourceGroup.location())
            .build());

        var exampleLinuxVirtualMachine = new LinuxVirtualMachine("exampleLinuxVirtualMachine", LinuxVirtualMachineArgs.builder()
            .name("example-VM")
            .resourceGroupName(exampleResourceGroup.name())
            .location(exampleResourceGroup.location())
            .size("Standard_B2s")
            .adminUsername("adminuser")
            .adminPassword("P@$$w0rd1234!")
            .disablePasswordAuthentication(false)
            .networkInterfaceIds(exampleNetworkInterface.id())
            .osDisk(LinuxVirtualMachineOsDiskArgs.builder()
                .caching("ReadWrite")
                .storageAccountType("Premium_LRS")
                .build())
            .sourceImageReference(LinuxVirtualMachineSourceImageReferenceArgs.builder()
                .publisher("Canonical")
                .offer("0001-com-ubuntu-server-jammy")
                .sku("22_04-lts")
                .version("latest")
                .build())
            .identity(LinuxVirtualMachineIdentityArgs.builder()
                .type("SystemAssigned, UserAssigned")
                .identityIds(exampleUserAssignedIdentity.id())
                .build())
            .build());

        var exampleAccount = new Account("exampleAccount", AccountArgs.builder()
            .name("exampleaccount")
            .resourceGroupName(exampleResourceGroup.name())
            .location(exampleResourceGroup.location())
            .accountTier("Standard")
            .accountReplicationType("LRS")
            .build());

        var exampleAssignment = new Assignment("exampleAssignment", AssignmentArgs.builder()
            .scope(exampleAccount.id())
            .roleDefinitionName("Storage Blob Data Contributor")
            .principalId(exampleUserAssignedIdentity.principalId())
            .build());

        var exampleContainer = new Container("exampleContainer", ContainerArgs.builder()
            .name("example-sc")
            .storageAccountName(exampleAccount.name())
            .containerAccessType("blob")
            .build());

        var example1 = new Blob("example1", BlobArgs.builder()
            .name("script1")
            .storageAccountName(exampleAccount.name())
            .storageContainerName(exampleContainer.name())
            .type("Block")
            .sourceContent("echo 'hello world'")
            .build());

        var example2 = new Blob("example2", BlobArgs.builder()
            .name("output")
            .storageAccountName(exampleAccount.name())
            .storageContainerName(exampleContainer.name())
            .type("Append")
            .build());

        var example3 = new Blob("example3", BlobArgs.builder()
            .name("error")
            .storageAccountName(exampleAccount.name())
            .storageContainerName(exampleContainer.name())
            .type("Append")
            .build());

        final var example = StorageFunctions.getAccountSAS(GetAccountSASArgs.builder()
            .connectionString(exampleAccount.primaryConnectionString())
            .httpsOnly(true)
            .signedVersion("2019-10-10")
            .start("2023-04-01T00:00:00Z")
            .expiry("2024-04-01T00:00:00Z")
            .resourceTypes(GetAccountSASResourceTypesArgs.builder()
                .service(false)
                .container(false)
                .object(true)
                .build())
            .services(GetAccountSASServicesArgs.builder()
                .blob(true)
                .queue(false)
                .table(false)
                .file(false)
                .build())
            .permissions(GetAccountSASPermissionsArgs.builder()
                .read(true)
                .write(true)
                .delete(false)
                .list(false)
                .add(true)
                .create(true)
                .update(false)
                .process(false)
                .tag(false)
                .filter(false)
                .build())
            .build());

        // basic example
        var exampleRunCommand = new RunCommand("exampleRunCommand", RunCommandArgs.builder()
            .name("example-vmrc")
            .location(exampleResourceGroup.location())
            .virtualMachineId(exampleLinuxVirtualMachine.id())
            .source(RunCommandSourceArgs.builder()
                .script("echo 'hello world'")
                .build())
            .build());

        // authorize to storage blob using user assigned identity
        var example2RunCommand = new RunCommand("example2RunCommand", RunCommandArgs.builder()
            .location(exampleResourceGroup.location())
            .name("example2-vmrc")
            .virtualMachineId(exampleLinuxVirtualMachine.id())
            .outputBlobUri(example2.id())
            .errorBlobUri(example3.id())
            .runAsPassword("P@$$w0rd1234!")
            .runAsUser("adminuser")
            .source(RunCommandSourceArgs.builder()
                .scriptUri(example1.id())
                .scriptUriManagedIdentity(RunCommandSourceScriptUriManagedIdentityArgs.builder()
                    .clientId(exampleUserAssignedIdentity.clientId())
                    .build())
                .build())
            .errorBlobManagedIdentity(RunCommandErrorBlobManagedIdentityArgs.builder()
                .clientId(exampleUserAssignedIdentity.clientId())
                .build())
            .outputBlobManagedIdentity(RunCommandOutputBlobManagedIdentityArgs.builder()
                .clientId(exampleUserAssignedIdentity.clientId())
                .build())
            .parameters(RunCommandParameterArgs.builder()
                .name("examplev1")
                .value("val1")
                .build())
            .protectedParameters(RunCommandProtectedParameterArgs.builder()
                .name("examplev2")
                .value("val2")
                .build())
            .tags(Map.ofEntries(
                Map.entry("environment", "terraform-examples"),
                Map.entry("some_key", "some-value")
            ))
            .build(), CustomResourceOptions.builder()
                .dependsOn(exampleAssignment)
                .build());

        // authorize to storage blob using SAS token
        var example3RunCommand = new RunCommand("example3RunCommand", RunCommandArgs.builder()
            .location(exampleResourceGroup.location())
            .name("example3-vmrc")
            .virtualMachineId(exampleLinuxVirtualMachine.id())
            .runAsPassword("P@$$w0rd1234!")
            .runAsUser("adminuser")
            .errorBlobUri(Output.tuple(example3.id(), example.applyValue(getAccountSASResult -> getAccountSASResult)).applyValue(values -> {
                var id = values.t1;
                var example = values.t2;
                return String.format("%s%s", id,example.applyValue(getAccountSASResult -> getAccountSASResult.sas()));
            }))
            .outputBlobUri(Output.tuple(example2.id(), example.applyValue(getAccountSASResult -> getAccountSASResult)).applyValue(values -> {
                var id = values.t1;
                var example = values.t2;
                return String.format("%s%s", id,example.applyValue(getAccountSASResult -> getAccountSASResult.sas()));
            }))
            .source(RunCommandSourceArgs.builder()
                .scriptUri(Output.tuple(example1.id(), example.applyValue(getAccountSASResult -> getAccountSASResult)).applyValue(values -> {
                    var id = values.t1;
                    var example = values.t2;
                    return String.format("%s%s", id,example.applyValue(getAccountSASResult -> getAccountSASResult.sas()));
                }))
                .build())
            .parameters(RunCommandParameterArgs.builder()
                .name("example-vm1")
                .value("val1")
                .build())
            .tags(Map.ofEntries(
                Map.entry("environment", "terraform-example-s"),
                Map.entry("some_key", "some-value")
            ))
            .build());

    }
}
```
```yaml
resources:
  exampleResourceGroup:
    type: azure:core:ResourceGroup
    name: example
    properties:
      name: example-resources
      location: West Europe
  exampleVirtualNetwork:
    type: azure:network:VirtualNetwork
    name: example
    properties:
      name: example-vnet
      addressSpaces:
        - 10.0.0.0/16
      location: ${exampleResourceGroup.location}
      resourceGroupName: ${exampleResourceGroup.name}
  exampleSubnet:
    type: azure:network:Subnet
    name: example
    properties:
      name: internal
      resourceGroupName: ${exampleResourceGroup.name}
      virtualNetworkName: ${exampleVirtualNetwork.name}
      addressPrefixes:
        - 10.0.2.0/24
  exampleNetworkInterface:
    type: azure:network:NetworkInterface
    name: example
    properties:
      name: example-nic
      location: ${exampleResourceGroup.location}
      resourceGroupName: ${exampleResourceGroup.name}
      ipConfigurations:
        - name: internal
          subnetId: ${exampleSubnet.id}
          privateIpAddressAllocation: Dynamic
  exampleUserAssignedIdentity:
    type: azure:authorization:UserAssignedIdentity
    name: example
    properties:
      name: example-uai
      resourceGroupName: ${exampleResourceGroup.name}
      location: ${exampleResourceGroup.location}
  exampleLinuxVirtualMachine:
    type: azure:compute:LinuxVirtualMachine
    name: example
    properties:
      name: example-VM
      resourceGroupName: ${exampleResourceGroup.name}
      location: ${exampleResourceGroup.location}
      size: Standard_B2s
      adminUsername: adminuser
      adminPassword: P@$$w0rd1234!
      disablePasswordAuthentication: false
      networkInterfaceIds:
        - ${exampleNetworkInterface.id}
      osDisk:
        caching: ReadWrite
        storageAccountType: Premium_LRS
      sourceImageReference:
        publisher: Canonical
        offer: 0001-com-ubuntu-server-jammy
        sku: 22_04-lts
        version: latest
      identity:
        type: SystemAssigned, UserAssigned
        identityIds:
          - ${exampleUserAssignedIdentity.id}
  exampleAssignment:
    type: azure:authorization:Assignment
    name: example
    properties:
      scope: ${exampleAccount.id}
      roleDefinitionName: Storage Blob Data Contributor
      principalId: ${exampleUserAssignedIdentity.principalId}
  exampleAccount:
    type: azure:storage:Account
    name: example
    properties:
      name: exampleaccount
      resourceGroupName: ${exampleResourceGroup.name}
      location: ${exampleResourceGroup.location}
      accountTier: Standard
      accountReplicationType: LRS
  exampleContainer:
    type: azure:storage:Container
    name: example
    properties:
      name: example-sc
      storageAccountName: ${exampleAccount.name}
      containerAccessType: blob
  example1:
    type: azure:storage:Blob
    properties:
      name: script1
      storageAccountName: ${exampleAccount.name}
      storageContainerName: ${exampleContainer.name}
      type: Block
      sourceContent: echo 'hello world'
  example2:
    type: azure:storage:Blob
    properties:
      name: output
      storageAccountName: ${exampleAccount.name}
      storageContainerName: ${exampleContainer.name}
      type: Append
  example3:
    type: azure:storage:Blob
    properties:
      name: error
      storageAccountName: ${exampleAccount.name}
      storageContainerName: ${exampleContainer.name}
      type: Append
  # basic example
  exampleRunCommand:
    type: azure:compute:RunCommand
    name: example
    properties:
      name: example-vmrc
      location: ${exampleResourceGroup.location}
      virtualMachineId: ${exampleLinuxVirtualMachine.id}
      source:
        script: echo 'hello world'
  # authorize to storage blob using user assigned identity
  example2RunCommand:
    type: azure:compute:RunCommand
    name: example2
    properties:
      location: ${exampleResourceGroup.location}
      name: example2-vmrc
      virtualMachineId: ${exampleLinuxVirtualMachine.id}
      outputBlobUri: ${example2.id}
      errorBlobUri: ${example3.id}
      runAsPassword: P@$$w0rd1234!
      runAsUser: adminuser
      source:
        scriptUri: ${example1.id}
        scriptUriManagedIdentity:
          clientId: ${exampleUserAssignedIdentity.clientId}
      errorBlobManagedIdentity:
        clientId: ${exampleUserAssignedIdentity.clientId}
      outputBlobManagedIdentity:
        clientId: ${exampleUserAssignedIdentity.clientId}
      parameters:
        - name: examplev1
          value: val1
      protectedParameters:
        - name: examplev2
          value: val2
      tags:
        environment: terraform-examples
        some_key: some-value
    options:
      dependsOn:
        - ${exampleAssignment}
  # authorize to storage blob using SAS token
  example3RunCommand:
    type: azure:compute:RunCommand
    name: example3
    properties:
      location: ${exampleResourceGroup.location}
      name: example3-vmrc
      virtualMachineId: ${exampleLinuxVirtualMachine.id}
      runAsPassword: P@$$w0rd1234!
      runAsUser: adminuser
      errorBlobUri: ${example3.id}${example.sas}
      outputBlobUri: ${example2.id}${example.sas}
      source:
        scriptUri: ${example1.id}${example.sas}
      parameters:
        - name: example-vm1
          value: val1
      tags:
        environment: terraform-example-s
        some_key: some-value
variables:
  example:
    fn::invoke:
      function: azure:storage:getAccountSAS
      arguments:
        connectionString: ${exampleAccount.primaryConnectionString}
        httpsOnly: true
        signedVersion: 2019-10-10
        start: 2023-04-01T00:00:00Z
        expiry: 2024-04-01T00:00:00Z
        resourceTypes:
          service: false
          container: false
          object: true
        services:
          blob: true
          queue: false
          table: false
          file: false
        permissions:
          read: true
          write: true
          delete: false
          list: false
          add: true
          create: true
          update: false
          process: false
          tag: false
          filter: false
```
<!--End PulumiCodeChooser -->

## Import

An existing Virtual Machine Run Command can be imported into Pulumi using the `resource id`, e.g.

```sh
$ pulumi import azure:compute/runCommand:RunCommand example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Compute/virtualMachines/vm1/runCommands/rc1
```

±
errorBlobManagedIdentityB:

compute"RunCommandErrorBlobManagedIdentitySazure:compute/RunCommandErrorBlobManagedIdentity:RunCommandErrorBlobManagedIdentityAn `error_blob_managed_identity` block as defined below. User-assigned managed Identity that has access to errorBlobUri storage blob.
c
errorBlobUriB" MSpecifies the Azure storage blob where script error stream will be uploaded.

locationB" The Azure Region where the Virtual Machine Run Command should exist. Changing this forces a new Virtual Machine Run Command to be created.

nameB" ~Specifies the name of this Virtual Machine Run Command. Changing this forces a new Virtual Machine Run Command to be created.
·
outputBlobManagedIdentityB:

compute#RunCommandOutputBlobManagedIdentityUazure:compute/RunCommandOutputBlobManagedIdentity:RunCommandOutputBlobManagedIdentityAn `output_blob_managed_identity` block as defined below. User-assigned managed Identity that has access to outputBlobUri storage blob.

outputBlobUriB" wSpecifies the Azure storage blob where script output stream will be uploaded. It can be basic blob URI with SAS token.
¿

parameters]B[*Y:W
U
computeRunCommandParameter5azure:compute/RunCommandParameter:RunCommandParameterRA list of `parameter` blocks as defined below. The parameters used by the script.
÷
protectedParametersxBv*t:r
p
computeRunCommandProtectedParameterGazure:compute/RunCommandProtectedParameter:RunCommandProtectedParameterfA list of `protected_parameter` blocks as defined below. The protected parameters used by the script.
u
runAsPasswordB" ^Specifies the user account password on the VM when executing the Virtual Machine Run Command.
h
	runAsUserB" USpecifies the user account on the VM when executing the Virtual Machine Run Command.
¥
sourceP:N
L
computeRunCommandSource/azure:compute/RunCommandSource:RunCommandSourceIA `source` block as defined below. The source of the run command script.
_
tagsB2" OA mapping of tags which should be assigned to the Virtual Machine Run Command.
¼
virtualMachineId" £Specifies the Virtual Machine ID within which this Virtual Machine Run Command should exist. Changing this forces a new Virtual Machine Run Command to be created.
"±
errorBlobManagedIdentityB:

compute"RunCommandErrorBlobManagedIdentitySazure:compute/RunCommandErrorBlobManagedIdentity:RunCommandErrorBlobManagedIdentityAn `error_blob_managed_identity` block as defined below. User-assigned managed Identity that has access to errorBlobUri storage blob.
"c
errorBlobUriB" MSpecifies the Azure storage blob where script error stream will be uploaded.
"u
instanceViewsd*b:`
^
computeRunCommandInstanceView;azure:compute/RunCommandInstanceView:RunCommandInstanceView"
location" The Azure Region where the Virtual Machine Run Command should exist. Changing this forces a new Virtual Machine Run Command to be created.
"
name" ~Specifies the name of this Virtual Machine Run Command. Changing this forces a new Virtual Machine Run Command to be created.
"·
outputBlobManagedIdentityB:

compute#RunCommandOutputBlobManagedIdentityUazure:compute/RunCommandOutputBlobManagedIdentity:RunCommandOutputBlobManagedIdentityAn `output_blob_managed_identity` block as defined below. User-assigned managed Identity that has access to outputBlobUri storage blob.
"
outputBlobUriB" wSpecifies the Azure storage blob where script output stream will be uploaded. It can be basic blob URI with SAS token.
"¿

parameters]B[*Y:W
U
computeRunCommandParameter5azure:compute/RunCommandParameter:RunCommandParameterRA list of `parameter` blocks as defined below. The parameters used by the script.
"÷
protectedParametersxBv*t:r
p
computeRunCommandProtectedParameterGazure:compute/RunCommandProtectedParameter:RunCommandProtectedParameterfA list of `protected_parameter` blocks as defined below. The protected parameters used by the script.
"u
runAsPasswordB" ^Specifies the user account password on the VM when executing the Virtual Machine Run Command.
"h
	runAsUserB" USpecifies the user account on the VM when executing the Virtual Machine Run Command.
"¥
sourceP:N
L
computeRunCommandSource/azure:compute/RunCommandSource:RunCommandSourceIA `source` block as defined below. The source of the run command script.
"_
tagsB2" OA mapping of tags which should be assigned to the Virtual Machine Run Command.
"¼
virtualMachineId" £Specifies the Virtual Machine ID within which this Virtual Machine Run Command should exist. Changing this forces a new Virtual Machine Run Command to be created.
*
4
computeScaleSetazure:compute/scaleSet:ScaleSet­Manages a virtual machine scale set.

## Example Usage

### With Managed Disks (Recommended)

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";
import * as std from "@pulumi/std";

const example = new azure.core.ResourceGroup("example", {
    name: "example-resources",
    location: "West Europe",
});
const exampleVirtualNetwork = new azure.network.VirtualNetwork("example", {
    name: "acctvn",
    addressSpaces: ["10.0.0.0/16"],
    location: example.location,
    resourceGroupName: example.name,
});
const exampleSubnet = new azure.network.Subnet("example", {
    name: "acctsub",
    resourceGroupName: example.name,
    virtualNetworkName: exampleVirtualNetwork.name,
    addressPrefixes: ["10.0.2.0/24"],
});
const examplePublicIp = new azure.network.PublicIp("example", {
    name: "test",
    location: example.location,
    resourceGroupName: example.name,
    allocationMethod: "Static",
    domainNameLabel: example.name,
    tags: {
        environment: "staging",
    },
});
const exampleLoadBalancer = new azure.lb.LoadBalancer("example", {
    name: "test",
    location: example.location,
    resourceGroupName: example.name,
    frontendIpConfigurations: [{
        name: "PublicIPAddress",
        publicIpAddressId: examplePublicIp.id,
    }],
});
const bpepool = new azure.lb.BackendAddressPool("bpepool", {
    loadbalancerId: exampleLoadBalancer.id,
    name: "BackEndAddressPool",
});
const lbnatpool = new azure.lb.NatPool("lbnatpool", {
    resourceGroupName: example.name,
    name: "ssh",
    loadbalancerId: exampleLoadBalancer.id,
    protocol: "Tcp",
    frontendPortStart: 50000,
    frontendPortEnd: 50119,
    backendPort: 22,
    frontendIpConfigurationName: "PublicIPAddress",
});
const exampleProbe = new azure.lb.Probe("example", {
    loadbalancerId: exampleLoadBalancer.id,
    name: "http-probe",
    protocol: "Http",
    requestPath: "/health",
    port: 8080,
});
const exampleScaleSet = new azure.compute.ScaleSet("example", {
    name: "mytestscaleset-1",
    location: example.location,
    resourceGroupName: example.name,
    automaticOsUpgrade: true,
    upgradePolicyMode: "Rolling",
    rollingUpgradePolicy: {
        maxBatchInstancePercent: 20,
        maxUnhealthyInstancePercent: 20,
        maxUnhealthyUpgradedInstancePercent: 5,
        pauseTimeBetweenBatches: "PT0S",
    },
    healthProbeId: exampleProbe.id,
    sku: {
        name: "Standard_F2",
        tier: "Standard",
        capacity: 2,
    },
    storageProfileImageReference: {
        publisher: "Canonical",
        offer: "0001-com-ubuntu-server-jammy",
        sku: "22_04-lts",
        version: "latest",
    },
    storageProfileOsDisk: {
        name: "",
        caching: "ReadWrite",
        createOption: "FromImage",
        managedDiskType: "Standard_LRS",
    },
    storageProfileDataDisks: [{
        lun: 0,
        caching: "ReadWrite",
        createOption: "Empty",
        diskSizeGb: 10,
    }],
    osProfile: {
        computerNamePrefix: "testvm",
        adminUsername: "myadmin",
    },
    osProfileLinuxConfig: {
        disablePasswordAuthentication: true,
        sshKeys: [{
            path: "/home/myadmin/.ssh/authorized_keys",
            keyData: std.file({
                input: "~/.ssh/demo_key.pub",
            }).then(invoke => invoke.result),
        }],
    },
    networkProfiles: [{
        name: "mynetworkprofile",
        primary: true,
        ipConfigurations: [{
            name: "TestIPConfiguration",
            primary: true,
            subnetId: exampleSubnet.id,
            loadBalancerBackendAddressPoolIds: [bpepool.id],
            loadBalancerInboundNatRulesIds: [lbnatpool.id],
        }],
    }],
    tags: {
        environment: "staging",
    },
});
```
```python
import pulumi
import pulumi_azure as azure
import pulumi_std as std

example = azure.core.ResourceGroup("example",
    name="example-resources",
    location="West Europe")
example_virtual_network = azure.network.VirtualNetwork("example",
    name="acctvn",
    address_spaces=["10.0.0.0/16"],
    location=example.location,
    resource_group_name=example.name)
example_subnet = azure.network.Subnet("example",
    name="acctsub",
    resource_group_name=example.name,
    virtual_network_name=example_virtual_network.name,
    address_prefixes=["10.0.2.0/24"])
example_public_ip = azure.network.PublicIp("example",
    name="test",
    location=example.location,
    resource_group_name=example.name,
    allocation_method="Static",
    domain_name_label=example.name,
    tags={
        "environment": "staging",
    })
example_load_balancer = azure.lb.LoadBalancer("example",
    name="test",
    location=example.location,
    resource_group_name=example.name,
    frontend_ip_configurations=[{
        "name": "PublicIPAddress",
        "public_ip_address_id": example_public_ip.id,
    }])
bpepool = azure.lb.BackendAddressPool("bpepool",
    loadbalancer_id=example_load_balancer.id,
    name="BackEndAddressPool")
lbnatpool = azure.lb.NatPool("lbnatpool",
    resource_group_name=example.name,
    name="ssh",
    loadbalancer_id=example_load_balancer.id,
    protocol="Tcp",
    frontend_port_start=50000,
    frontend_port_end=50119,
    backend_port=22,
    frontend_ip_configuration_name="PublicIPAddress")
example_probe = azure.lb.Probe("example",
    loadbalancer_id=example_load_balancer.id,
    name="http-probe",
    protocol="Http",
    request_path="/health",
    port=8080)
example_scale_set = azure.compute.ScaleSet("example",
    name="mytestscaleset-1",
    location=example.location,
    resource_group_name=example.name,
    automatic_os_upgrade=True,
    upgrade_policy_mode="Rolling",
    rolling_upgrade_policy={
        "max_batch_instance_percent": 20,
        "max_unhealthy_instance_percent": 20,
        "max_unhealthy_upgraded_instance_percent": 5,
        "pause_time_between_batches": "PT0S",
    },
    health_probe_id=example_probe.id,
    sku={
        "name": "Standard_F2",
        "tier": "Standard",
        "capacity": 2,
    },
    storage_profile_image_reference={
        "publisher": "Canonical",
        "offer": "0001-com-ubuntu-server-jammy",
        "sku": "22_04-lts",
        "version": "latest",
    },
    storage_profile_os_disk={
        "name": "",
        "caching": "ReadWrite",
        "create_option": "FromImage",
        "managed_disk_type": "Standard_LRS",
    },
    storage_profile_data_disks=[{
        "lun": 0,
        "caching": "ReadWrite",
        "create_option": "Empty",
        "disk_size_gb": 10,
    }],
    os_profile={
        "computer_name_prefix": "testvm",
        "admin_username": "myadmin",
    },
    os_profile_linux_config={
        "disable_password_authentication": True,
        "ssh_keys": [{
            "path": "/home/myadmin/.ssh/authorized_keys",
            "key_data": std.file(input="~/.ssh/demo_key.pub").result,
        }],
    },
    network_profiles=[{
        "name": "mynetworkprofile",
        "primary": True,
        "ip_configurations": [{
            "name": "TestIPConfiguration",
            "primary": True,
            "subnet_id": example_subnet.id,
            "load_balancer_backend_address_pool_ids": [bpepool.id],
            "load_balancer_inbound_nat_rules_ids": [lbnatpool.id],
        }],
    }],
    tags={
        "environment": "staging",
    })
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;
using Std = Pulumi.Std;

return await Deployment.RunAsync(() => 
{
    var example = new Azure.Core.ResourceGroup("example", new()
    {
        Name = "example-resources",
        Location = "West Europe",
    });

    var exampleVirtualNetwork = new Azure.Network.VirtualNetwork("example", new()
    {
        Name = "acctvn",
        AddressSpaces = new[]
        {
            "10.0.0.0/16",
        },
        Location = example.Location,
        ResourceGroupName = example.Name,
    });

    var exampleSubnet = new Azure.Network.Subnet("example", new()
    {
        Name = "acctsub",
        ResourceGroupName = example.Name,
        VirtualNetworkName = exampleVirtualNetwork.Name,
        AddressPrefixes = new[]
        {
            "10.0.2.0/24",
        },
    });

    var examplePublicIp = new Azure.Network.PublicIp("example", new()
    {
        Name = "test",
        Location = example.Location,
        ResourceGroupName = example.Name,
        AllocationMethod = "Static",
        DomainNameLabel = example.Name,
        Tags = 
        {
            { "environment", "staging" },
        },
    });

    var exampleLoadBalancer = new Azure.Lb.LoadBalancer("example", new()
    {
        Name = "test",
        Location = example.Location,
        ResourceGroupName = example.Name,
        FrontendIpConfigurations = new[]
        {
            new Azure.Lb.Inputs.LoadBalancerFrontendIpConfigurationArgs
            {
                Name = "PublicIPAddress",
                PublicIpAddressId = examplePublicIp.Id,
            },
        },
    });

    var bpepool = new Azure.Lb.BackendAddressPool("bpepool", new()
    {
        LoadbalancerId = exampleLoadBalancer.Id,
        Name = "BackEndAddressPool",
    });

    var lbnatpool = new Azure.Lb.NatPool("lbnatpool", new()
    {
        ResourceGroupName = example.Name,
        Name = "ssh",
        LoadbalancerId = exampleLoadBalancer.Id,
        Protocol = "Tcp",
        FrontendPortStart = 50000,
        FrontendPortEnd = 50119,
        BackendPort = 22,
        FrontendIpConfigurationName = "PublicIPAddress",
    });

    var exampleProbe = new Azure.Lb.Probe("example", new()
    {
        LoadbalancerId = exampleLoadBalancer.Id,
        Name = "http-probe",
        Protocol = "Http",
        RequestPath = "/health",
        Port = 8080,
    });

    var exampleScaleSet = new Azure.Compute.ScaleSet("example", new()
    {
        Name = "mytestscaleset-1",
        Location = example.Location,
        ResourceGroupName = example.Name,
        AutomaticOsUpgrade = true,
        UpgradePolicyMode = "Rolling",
        RollingUpgradePolicy = new Azure.Compute.Inputs.ScaleSetRollingUpgradePolicyArgs
        {
            MaxBatchInstancePercent = 20,
            MaxUnhealthyInstancePercent = 20,
            MaxUnhealthyUpgradedInstancePercent = 5,
            PauseTimeBetweenBatches = "PT0S",
        },
        HealthProbeId = exampleProbe.Id,
        Sku = new Azure.Compute.Inputs.ScaleSetSkuArgs
        {
            Name = "Standard_F2",
            Tier = "Standard",
            Capacity = 2,
        },
        StorageProfileImageReference = new Azure.Compute.Inputs.ScaleSetStorageProfileImageReferenceArgs
        {
            Publisher = "Canonical",
            Offer = "0001-com-ubuntu-server-jammy",
            Sku = "22_04-lts",
            Version = "latest",
        },
        StorageProfileOsDisk = new Azure.Compute.Inputs.ScaleSetStorageProfileOsDiskArgs
        {
            Name = "",
            Caching = "ReadWrite",
            CreateOption = "FromImage",
            ManagedDiskType = "Standard_LRS",
        },
        StorageProfileDataDisks = new[]
        {
            new Azure.Compute.Inputs.ScaleSetStorageProfileDataDiskArgs
            {
                Lun = 0,
                Caching = "ReadWrite",
                CreateOption = "Empty",
                DiskSizeGb = 10,
            },
        },
        OsProfile = new Azure.Compute.Inputs.ScaleSetOsProfileArgs
        {
            ComputerNamePrefix = "testvm",
            AdminUsername = "myadmin",
        },
        OsProfileLinuxConfig = new Azure.Compute.Inputs.ScaleSetOsProfileLinuxConfigArgs
        {
            DisablePasswordAuthentication = true,
            SshKeys = new[]
            {
                new Azure.Compute.Inputs.ScaleSetOsProfileLinuxConfigSshKeyArgs
                {
                    Path = "/home/myadmin/.ssh/authorized_keys",
                    KeyData = Std.File.Invoke(new()
                    {
                        Input = "~/.ssh/demo_key.pub",
                    }).Apply(invoke => invoke.Result),
                },
            },
        },
        NetworkProfiles = new[]
        {
            new Azure.Compute.Inputs.ScaleSetNetworkProfileArgs
            {
                Name = "mynetworkprofile",
                Primary = true,
                IpConfigurations = new[]
                {
                    new Azure.Compute.Inputs.ScaleSetNetworkProfileIpConfigurationArgs
                    {
                        Name = "TestIPConfiguration",
                        Primary = true,
                        SubnetId = exampleSubnet.Id,
                        LoadBalancerBackendAddressPoolIds = new[]
                        {
                            bpepool.Id,
                        },
                        LoadBalancerInboundNatRulesIds = new[]
                        {
                            lbnatpool.Id,
                        },
                    },
                },
            },
        },
        Tags = 
        {
            { "environment", "staging" },
        },
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/compute"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/lb"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/network"
	"github.com/pulumi/pulumi-std/sdk/go/std"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
			Name:     pulumi.String("example-resources"),
			Location: pulumi.String("West Europe"),
		})
		if err != nil {
			return err
		}
		exampleVirtualNetwork, err := network.NewVirtualNetwork(ctx, "example", &network.VirtualNetworkArgs{
			Name: pulumi.String("acctvn"),
			AddressSpaces: pulumi.StringArray{
				pulumi.String("10.0.0.0/16"),
			},
			Location:          example.Location,
			ResourceGroupName: example.Name,
		})
		if err != nil {
			return err
		}
		exampleSubnet, err := network.NewSubnet(ctx, "example", &network.SubnetArgs{
			Name:               pulumi.String("acctsub"),
			ResourceGroupName:  example.Name,
			VirtualNetworkName: exampleVirtualNetwork.Name,
			AddressPrefixes: pulumi.StringArray{
				pulumi.String("10.0.2.0/24"),
			},
		})
		if err != nil {
			return err
		}
		examplePublicIp, err := network.NewPublicIp(ctx, "example", &network.PublicIpArgs{
			Name:              pulumi.String("test"),
			Location:          example.Location,
			ResourceGroupName: example.Name,
			AllocationMethod:  pulumi.String("Static"),
			DomainNameLabel:   example.Name,
			Tags: pulumi.StringMap{
				"environment": pulumi.String("staging"),
			},
		})
		if err != nil {
			return err
		}
		exampleLoadBalancer, err := lb.NewLoadBalancer(ctx, "example", &lb.LoadBalancerArgs{
			Name:              pulumi.String("test"),
			Location:          example.Location,
			ResourceGroupName: example.Name,
			FrontendIpConfigurations: lb.LoadBalancerFrontendIpConfigurationArray{
				&lb.LoadBalancerFrontendIpConfigurationArgs{
					Name:              pulumi.String("PublicIPAddress"),
					PublicIpAddressId: examplePublicIp.ID(),
				},
			},
		})
		if err != nil {
			return err
		}
		bpepool, err := lb.NewBackendAddressPool(ctx, "bpepool", &lb.BackendAddressPoolArgs{
			LoadbalancerId: exampleLoadBalancer.ID(),
			Name:           pulumi.String("BackEndAddressPool"),
		})
		if err != nil {
			return err
		}
		lbnatpool, err := lb.NewNatPool(ctx, "lbnatpool", &lb.NatPoolArgs{
			ResourceGroupName:           example.Name,
			Name:                        pulumi.String("ssh"),
			LoadbalancerId:              exampleLoadBalancer.ID(),
			Protocol:                    pulumi.String("Tcp"),
			FrontendPortStart:           pulumi.Int(50000),
			FrontendPortEnd:             pulumi.Int(50119),
			BackendPort:                 pulumi.Int(22),
			FrontendIpConfigurationName: pulumi.String("PublicIPAddress"),
		})
		if err != nil {
			return err
		}
		exampleProbe, err := lb.NewProbe(ctx, "example", &lb.ProbeArgs{
			LoadbalancerId: exampleLoadBalancer.ID(),
			Name:           pulumi.String("http-probe"),
			Protocol:       pulumi.String("Http"),
			RequestPath:    pulumi.String("/health"),
			Port:           pulumi.Int(8080),
		})
		if err != nil {
			return err
		}
		invokeFile, err := std.File(ctx, &std.FileArgs{
			Input: "~/.ssh/demo_key.pub",
		}, nil)
		if err != nil {
			return err
		}
		_, err = compute.NewScaleSet(ctx, "example", &compute.ScaleSetArgs{
			Name:               pulumi.String("mytestscaleset-1"),
			Location:           example.Location,
			ResourceGroupName:  example.Name,
			AutomaticOsUpgrade: pulumi.Bool(true),
			UpgradePolicyMode:  pulumi.String("Rolling"),
			RollingUpgradePolicy: &compute.ScaleSetRollingUpgradePolicyArgs{
				MaxBatchInstancePercent:             pulumi.Int(20),
				MaxUnhealthyInstancePercent:         pulumi.Int(20),
				MaxUnhealthyUpgradedInstancePercent: pulumi.Int(5),
				PauseTimeBetweenBatches:             pulumi.String("PT0S"),
			},
			HealthProbeId: exampleProbe.ID(),
			Sku: &compute.ScaleSetSkuArgs{
				Name:     pulumi.String("Standard_F2"),
				Tier:     pulumi.String("Standard"),
				Capacity: pulumi.Int(2),
			},
			StorageProfileImageReference: &compute.ScaleSetStorageProfileImageReferenceArgs{
				Publisher: pulumi.String("Canonical"),
				Offer:     pulumi.String("0001-com-ubuntu-server-jammy"),
				Sku:       pulumi.String("22_04-lts"),
				Version:   pulumi.String("latest"),
			},
			StorageProfileOsDisk: &compute.ScaleSetStorageProfileOsDiskArgs{
				Name:            pulumi.String(""),
				Caching:         pulumi.String("ReadWrite"),
				CreateOption:    pulumi.String("FromImage"),
				ManagedDiskType: pulumi.String("Standard_LRS"),
			},
			StorageProfileDataDisks: compute.ScaleSetStorageProfileDataDiskArray{
				&compute.ScaleSetStorageProfileDataDiskArgs{
					Lun:          pulumi.Int(0),
					Caching:      pulumi.String("ReadWrite"),
					CreateOption: pulumi.String("Empty"),
					DiskSizeGb:   pulumi.Int(10),
				},
			},
			OsProfile: &compute.ScaleSetOsProfileArgs{
				ComputerNamePrefix: pulumi.String("testvm"),
				AdminUsername:      pulumi.String("myadmin"),
			},
			OsProfileLinuxConfig: &compute.ScaleSetOsProfileLinuxConfigArgs{
				DisablePasswordAuthentication: pulumi.Bool(true),
				SshKeys: compute.ScaleSetOsProfileLinuxConfigSshKeyArray{
					&compute.ScaleSetOsProfileLinuxConfigSshKeyArgs{
						Path:    pulumi.String("/home/myadmin/.ssh/authorized_keys"),
						KeyData: pulumi.String(invokeFile.Result),
					},
				},
			},
			NetworkProfiles: compute.ScaleSetNetworkProfileArray{
				&compute.ScaleSetNetworkProfileArgs{
					Name:    pulumi.String("mynetworkprofile"),
					Primary: pulumi.Bool(true),
					IpConfigurations: compute.ScaleSetNetworkProfileIpConfigurationArray{
						&compute.ScaleSetNetworkProfileIpConfigurationArgs{
							Name:     pulumi.String("TestIPConfiguration"),
							Primary:  pulumi.Bool(true),
							SubnetId: exampleSubnet.ID(),
							LoadBalancerBackendAddressPoolIds: pulumi.StringArray{
								bpepool.ID(),
							},
							LoadBalancerInboundNatRulesIds: pulumi.StringArray{
								lbnatpool.ID(),
							},
						},
					},
				},
			},
			Tags: pulumi.StringMap{
				"environment": pulumi.String("staging"),
			},
		})
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.core.ResourceGroup;
import com.pulumi.azure.core.ResourceGroupArgs;
import com.pulumi.azure.network.VirtualNetwork;
import com.pulumi.azure.network.VirtualNetworkArgs;
import com.pulumi.azure.network.Subnet;
import com.pulumi.azure.network.SubnetArgs;
import com.pulumi.azure.network.PublicIp;
import com.pulumi.azure.network.PublicIpArgs;
import com.pulumi.azure.lb.LoadBalancer;
import com.pulumi.azure.lb.LoadBalancerArgs;
import com.pulumi.azure.lb.inputs.LoadBalancerFrontendIpConfigurationArgs;
import com.pulumi.azure.lb.BackendAddressPool;
import com.pulumi.azure.lb.BackendAddressPoolArgs;
import com.pulumi.azure.lb.NatPool;
import com.pulumi.azure.lb.NatPoolArgs;
import com.pulumi.azure.lb.Probe;
import com.pulumi.azure.lb.ProbeArgs;
import com.pulumi.azure.compute.ScaleSet;
import com.pulumi.azure.compute.ScaleSetArgs;
import com.pulumi.azure.compute.inputs.ScaleSetRollingUpgradePolicyArgs;
import com.pulumi.azure.compute.inputs.ScaleSetSkuArgs;
import com.pulumi.azure.compute.inputs.ScaleSetStorageProfileImageReferenceArgs;
import com.pulumi.azure.compute.inputs.ScaleSetStorageProfileOsDiskArgs;
import com.pulumi.azure.compute.inputs.ScaleSetStorageProfileDataDiskArgs;
import com.pulumi.azure.compute.inputs.ScaleSetOsProfileArgs;
import com.pulumi.azure.compute.inputs.ScaleSetOsProfileLinuxConfigArgs;
import com.pulumi.azure.compute.inputs.ScaleSetNetworkProfileArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        var example = new ResourceGroup("example", ResourceGroupArgs.builder()
            .name("example-resources")
            .location("West Europe")
            .build());

        var exampleVirtualNetwork = new VirtualNetwork("exampleVirtualNetwork", VirtualNetworkArgs.builder()
            .name("acctvn")
            .addressSpaces("10.0.0.0/16")
            .location(example.location())
            .resourceGroupName(example.name())
            .build());

        var exampleSubnet = new Subnet("exampleSubnet", SubnetArgs.builder()
            .name("acctsub")
            .resourceGroupName(example.name())
            .virtualNetworkName(exampleVirtualNetwork.name())
            .addressPrefixes("10.0.2.0/24")
            .build());

        var examplePublicIp = new PublicIp("examplePublicIp", PublicIpArgs.builder()
            .name("test")
            .location(example.location())
            .resourceGroupName(example.name())
            .allocationMethod("Static")
            .domainNameLabel(example.name())
            .tags(Map.of("environment", "staging"))
            .build());

        var exampleLoadBalancer = new LoadBalancer("exampleLoadBalancer", LoadBalancerArgs.builder()
            .name("test")
            .location(example.location())
            .resourceGroupName(example.name())
            .frontendIpConfigurations(LoadBalancerFrontendIpConfigurationArgs.builder()
                .name("PublicIPAddress")
                .publicIpAddressId(examplePublicIp.id())
                .build())
            .build());

        var bpepool = new BackendAddressPool("bpepool", BackendAddressPoolArgs.builder()
            .loadbalancerId(exampleLoadBalancer.id())
            .name("BackEndAddressPool")
            .build());

        var lbnatpool = new NatPool("lbnatpool", NatPoolArgs.builder()
            .resourceGroupName(example.name())
            .name("ssh")
            .loadbalancerId(exampleLoadBalancer.id())
            .protocol("Tcp")
            .frontendPortStart(50000)
            .frontendPortEnd(50119)
            .backendPort(22)
            .frontendIpConfigurationName("PublicIPAddress")
            .build());

        var exampleProbe = new Probe("exampleProbe", ProbeArgs.builder()
            .loadbalancerId(exampleLoadBalancer.id())
            .name("http-probe")
            .protocol("Http")
            .requestPath("/health")
            .port(8080)
            .build());

        var exampleScaleSet = new ScaleSet("exampleScaleSet", ScaleSetArgs.builder()
            .name("mytestscaleset-1")
            .location(example.location())
            .resourceGroupName(example.name())
            .automaticOsUpgrade(true)
            .upgradePolicyMode("Rolling")
            .rollingUpgradePolicy(ScaleSetRollingUpgradePolicyArgs.builder()
                .maxBatchInstancePercent(20)
                .maxUnhealthyInstancePercent(20)
                .maxUnhealthyUpgradedInstancePercent(5)
                .pauseTimeBetweenBatches("PT0S")
                .build())
            .healthProbeId(exampleProbe.id())
            .sku(ScaleSetSkuArgs.builder()
                .name("Standard_F2")
                .tier("Standard")
                .capacity(2)
                .build())
            .storageProfileImageReference(ScaleSetStorageProfileImageReferenceArgs.builder()
                .publisher("Canonical")
                .offer("0001-com-ubuntu-server-jammy")
                .sku("22_04-lts")
                .version("latest")
                .build())
            .storageProfileOsDisk(ScaleSetStorageProfileOsDiskArgs.builder()
                .name("")
                .caching("ReadWrite")
                .createOption("FromImage")
                .managedDiskType("Standard_LRS")
                .build())
            .storageProfileDataDisks(ScaleSetStorageProfileDataDiskArgs.builder()
                .lun(0)
                .caching("ReadWrite")
                .createOption("Empty")
                .diskSizeGb(10)
                .build())
            .osProfile(ScaleSetOsProfileArgs.builder()
                .computerNamePrefix("testvm")
                .adminUsername("myadmin")
                .build())
            .osProfileLinuxConfig(ScaleSetOsProfileLinuxConfigArgs.builder()
                .disablePasswordAuthentication(true)
                .sshKeys(ScaleSetOsProfileLinuxConfigSshKeyArgs.builder()
                    .path("/home/myadmin/.ssh/authorized_keys")
                    .keyData(StdFunctions.file(FileArgs.builder()
                        .input("~/.ssh/demo_key.pub")
                        .build()).result())
                    .build())
                .build())
            .networkProfiles(ScaleSetNetworkProfileArgs.builder()
                .name("mynetworkprofile")
                .primary(true)
                .ipConfigurations(ScaleSetNetworkProfileIpConfigurationArgs.builder()
                    .name("TestIPConfiguration")
                    .primary(true)
                    .subnetId(exampleSubnet.id())
                    .loadBalancerBackendAddressPoolIds(bpepool.id())
                    .loadBalancerInboundNatRulesIds(lbnatpool.id())
                    .build())
                .build())
            .tags(Map.of("environment", "staging"))
            .build());

    }
}
```
```yaml
resources:
  example:
    type: azure:core:ResourceGroup
    properties:
      name: example-resources
      location: West Europe
  exampleVirtualNetwork:
    type: azure:network:VirtualNetwork
    name: example
    properties:
      name: acctvn
      addressSpaces:
        - 10.0.0.0/16
      location: ${example.location}
      resourceGroupName: ${example.name}
  exampleSubnet:
    type: azure:network:Subnet
    name: example
    properties:
      name: acctsub
      resourceGroupName: ${example.name}
      virtualNetworkName: ${exampleVirtualNetwork.name}
      addressPrefixes:
        - 10.0.2.0/24
  examplePublicIp:
    type: azure:network:PublicIp
    name: example
    properties:
      name: test
      location: ${example.location}
      resourceGroupName: ${example.name}
      allocationMethod: Static
      domainNameLabel: ${example.name}
      tags:
        environment: staging
  exampleLoadBalancer:
    type: azure:lb:LoadBalancer
    name: example
    properties:
      name: test
      location: ${example.location}
      resourceGroupName: ${example.name}
      frontendIpConfigurations:
        - name: PublicIPAddress
          publicIpAddressId: ${examplePublicIp.id}
  bpepool:
    type: azure:lb:BackendAddressPool
    properties:
      loadbalancerId: ${exampleLoadBalancer.id}
      name: BackEndAddressPool
  lbnatpool:
    type: azure:lb:NatPool
    properties:
      resourceGroupName: ${example.name}
      name: ssh
      loadbalancerId: ${exampleLoadBalancer.id}
      protocol: Tcp
      frontendPortStart: 50000
      frontendPortEnd: 50119
      backendPort: 22
      frontendIpConfigurationName: PublicIPAddress
  exampleProbe:
    type: azure:lb:Probe
    name: example
    properties:
      loadbalancerId: ${exampleLoadBalancer.id}
      name: http-probe
      protocol: Http
      requestPath: /health
      port: 8080
  exampleScaleSet:
    type: azure:compute:ScaleSet
    name: example
    properties:
      name: mytestscaleset-1
      location: ${example.location}
      resourceGroupName: ${example.name}
      automaticOsUpgrade: true
      upgradePolicyMode: Rolling
      rollingUpgradePolicy:
        maxBatchInstancePercent: 20
        maxUnhealthyInstancePercent: 20
        maxUnhealthyUpgradedInstancePercent: 5
        pauseTimeBetweenBatches: PT0S
      healthProbeId: ${exampleProbe.id}
      sku:
        name: Standard_F2
        tier: Standard
        capacity: 2
      storageProfileImageReference:
        publisher: Canonical
        offer: 0001-com-ubuntu-server-jammy
        sku: 22_04-lts
        version: latest
      storageProfileOsDisk:
        name: ""
        caching: ReadWrite
        createOption: FromImage
        managedDiskType: Standard_LRS
      storageProfileDataDisks:
        - lun: 0
          caching: ReadWrite
          createOption: Empty
          diskSizeGb: 10
      osProfile:
        computerNamePrefix: testvm
        adminUsername: myadmin
      osProfileLinuxConfig:
        disablePasswordAuthentication: true
        sshKeys:
          - path: /home/myadmin/.ssh/authorized_keys
            keyData:
              fn::invoke:
                function: std:file
                arguments:
                  input: ~/.ssh/demo_key.pub
                return: result
      networkProfiles:
        - name: mynetworkprofile
          primary: true
          ipConfigurations:
            - name: TestIPConfiguration
              primary: true
              subnetId: ${exampleSubnet.id}
              loadBalancerBackendAddressPoolIds:
                - ${bpepool.id}
              loadBalancerInboundNatRulesIds:
                - ${lbnatpool.id}
      tags:
        environment: staging
```
<!--End PulumiCodeChooser -->


### With Unmanaged Disks

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";
import * as std from "@pulumi/std";

const example = new azure.core.ResourceGroup("example", {
    name: "example-resources",
    location: "West Europe",
});
const exampleVirtualNetwork = new azure.network.VirtualNetwork("example", {
    name: "acctvn",
    addressSpaces: ["10.0.0.0/16"],
    location: example.location,
    resourceGroupName: example.name,
});
const exampleSubnet = new azure.network.Subnet("example", {
    name: "acctsub",
    resourceGroupName: example.name,
    virtualNetworkName: exampleVirtualNetwork.name,
    addressPrefixes: ["10.0.2.0/24"],
});
const exampleAccount = new azure.storage.Account("example", {
    name: "accsa",
    resourceGroupName: example.name,
    location: example.location,
    accountTier: "Standard",
    accountReplicationType: "LRS",
    tags: {
        environment: "staging",
    },
});
const exampleContainer = new azure.storage.Container("example", {
    name: "vhds",
    storageAccountName: exampleAccount.name,
    containerAccessType: "private",
});
const exampleScaleSet = new azure.compute.ScaleSet("example", {
    name: "mytestscaleset-1",
    location: example.location,
    resourceGroupName: example.name,
    upgradePolicyMode: "Manual",
    sku: {
        name: "Standard_F2",
        tier: "Standard",
        capacity: 2,
    },
    osProfile: {
        computerNamePrefix: "testvm",
        adminUsername: "myadmin",
    },
    osProfileLinuxConfig: {
        disablePasswordAuthentication: true,
        sshKeys: [{
            path: "/home/myadmin/.ssh/authorized_keys",
            keyData: std.file({
                input: "~/.ssh/demo_key.pub",
            }).then(invoke => invoke.result),
        }],
    },
    networkProfiles: [{
        name: "TestNetworkProfile",
        primary: true,
        ipConfigurations: [{
            name: "TestIPConfiguration",
            primary: true,
            subnetId: exampleSubnet.id,
        }],
    }],
    storageProfileOsDisk: {
        name: "osDiskProfile",
        caching: "ReadWrite",
        createOption: "FromImage",
        vhdContainers: [pulumi.interpolate`${exampleAccount.primaryBlobEndpoint}${exampleContainer.name}`],
    },
    storageProfileImageReference: {
        publisher: "Canonical",
        offer: "0001-com-ubuntu-server-jammy",
        sku: "22_04-lts",
        version: "latest",
    },
});
```
```python
import pulumi
import pulumi_azure as azure
import pulumi_std as std

example = azure.core.ResourceGroup("example",
    name="example-resources",
    location="West Europe")
example_virtual_network = azure.network.VirtualNetwork("example",
    name="acctvn",
    address_spaces=["10.0.0.0/16"],
    location=example.location,
    resource_group_name=example.name)
example_subnet = azure.network.Subnet("example",
    name="acctsub",
    resource_group_name=example.name,
    virtual_network_name=example_virtual_network.name,
    address_prefixes=["10.0.2.0/24"])
example_account = azure.storage.Account("example",
    name="accsa",
    resource_group_name=example.name,
    location=example.location,
    account_tier="Standard",
    account_replication_type="LRS",
    tags={
        "environment": "staging",
    })
example_container = azure.storage.Container("example",
    name="vhds",
    storage_account_name=example_account.name,
    container_access_type="private")
example_scale_set = azure.compute.ScaleSet("example",
    name="mytestscaleset-1",
    location=example.location,
    resource_group_name=example.name,
    upgrade_policy_mode="Manual",
    sku={
        "name": "Standard_F2",
        "tier": "Standard",
        "capacity": 2,
    },
    os_profile={
        "computer_name_prefix": "testvm",
        "admin_username": "myadmin",
    },
    os_profile_linux_config={
        "disable_password_authentication": True,
        "ssh_keys": [{
            "path": "/home/myadmin/.ssh/authorized_keys",
            "key_data": std.file(input="~/.ssh/demo_key.pub").result,
        }],
    },
    network_profiles=[{
        "name": "TestNetworkProfile",
        "primary": True,
        "ip_configurations": [{
            "name": "TestIPConfiguration",
            "primary": True,
            "subnet_id": example_subnet.id,
        }],
    }],
    storage_profile_os_disk={
        "name": "osDiskProfile",
        "caching": "ReadWrite",
        "create_option": "FromImage",
        "vhd_containers": [pulumi.Output.all(
            primary_blob_endpoint=example_account.primary_blob_endpoint,
            name=example_container.name
).apply(lambda resolved_outputs: f"{resolved_outputs['primary_blob_endpoint']}{resolved_outputs['name']}")
],
    },
    storage_profile_image_reference={
        "publisher": "Canonical",
        "offer": "0001-com-ubuntu-server-jammy",
        "sku": "22_04-lts",
        "version": "latest",
    })
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;
using Std = Pulumi.Std;

return await Deployment.RunAsync(() => 
{
    var example = new Azure.Core.ResourceGroup("example", new()
    {
        Name = "example-resources",
        Location = "West Europe",
    });

    var exampleVirtualNetwork = new Azure.Network.VirtualNetwork("example", new()
    {
        Name = "acctvn",
        AddressSpaces = new[]
        {
            "10.0.0.0/16",
        },
        Location = example.Location,
        ResourceGroupName = example.Name,
    });

    var exampleSubnet = new Azure.Network.Subnet("example", new()
    {
        Name = "acctsub",
        ResourceGroupName = example.Name,
        VirtualNetworkName = exampleVirtualNetwork.Name,
        AddressPrefixes = new[]
        {
            "10.0.2.0/24",
        },
    });

    var exampleAccount = new Azure.Storage.Account("example", new()
    {
        Name = "accsa",
        ResourceGroupName = example.Name,
        Location = example.Location,
        AccountTier = "Standard",
        AccountReplicationType = "LRS",
        Tags = 
        {
            { "environment", "staging" },
        },
    });

    var exampleContainer = new Azure.Storage.Container("example", new()
    {
        Name = "vhds",
        StorageAccountName = exampleAccount.Name,
        ContainerAccessType = "private",
    });

    var exampleScaleSet = new Azure.Compute.ScaleSet("example", new()
    {
        Name = "mytestscaleset-1",
        Location = example.Location,
        ResourceGroupName = example.Name,
        UpgradePolicyMode = "Manual",
        Sku = new Azure.Compute.Inputs.ScaleSetSkuArgs
        {
            Name = "Standard_F2",
            Tier = "Standard",
            Capacity = 2,
        },
        OsProfile = new Azure.Compute.Inputs.ScaleSetOsProfileArgs
        {
            ComputerNamePrefix = "testvm",
            AdminUsername = "myadmin",
        },
        OsProfileLinuxConfig = new Azure.Compute.Inputs.ScaleSetOsProfileLinuxConfigArgs
        {
            DisablePasswordAuthentication = true,
            SshKeys = new[]
            {
                new Azure.Compute.Inputs.ScaleSetOsProfileLinuxConfigSshKeyArgs
                {
                    Path = "/home/myadmin/.ssh/authorized_keys",
                    KeyData = Std.File.Invoke(new()
                    {
                        Input = "~/.ssh/demo_key.pub",
                    }).Apply(invoke => invoke.Result),
                },
            },
        },
        NetworkProfiles = new[]
        {
            new Azure.Compute.Inputs.ScaleSetNetworkProfileArgs
            {
                Name = "TestNetworkProfile",
                Primary = true,
                IpConfigurations = new[]
                {
                    new Azure.Compute.Inputs.ScaleSetNetworkProfileIpConfigurationArgs
                    {
                        Name = "TestIPConfiguration",
                        Primary = true,
                        SubnetId = exampleSubnet.Id,
                    },
                },
            },
        },
        StorageProfileOsDisk = new Azure.Compute.Inputs.ScaleSetStorageProfileOsDiskArgs
        {
            Name = "osDiskProfile",
            Caching = "ReadWrite",
            CreateOption = "FromImage",
            VhdContainers = new[]
            {
                Output.Tuple(exampleAccount.PrimaryBlobEndpoint, exampleContainer.Name).Apply(values =>
                {
                    var primaryBlobEndpoint = values.Item1;
                    var name = values.Item2;
                    return $"{primaryBlobEndpoint}{name}";
                }),
            },
        },
        StorageProfileImageReference = new Azure.Compute.Inputs.ScaleSetStorageProfileImageReferenceArgs
        {
            Publisher = "Canonical",
            Offer = "0001-com-ubuntu-server-jammy",
            Sku = "22_04-lts",
            Version = "latest",
        },
    });

});
```
```go
package main

import (
	"fmt"

	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/compute"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/network"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/storage"
	"github.com/pulumi/pulumi-std/sdk/go/std"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
			Name:     pulumi.String("example-resources"),
			Location: pulumi.String("West Europe"),
		})
		if err != nil {
			return err
		}
		exampleVirtualNetwork, err := network.NewVirtualNetwork(ctx, "example", &network.VirtualNetworkArgs{
			Name: pulumi.String("acctvn"),
			AddressSpaces: pulumi.StringArray{
				pulumi.String("10.0.0.0/16"),
			},
			Location:          example.Location,
			ResourceGroupName: example.Name,
		})
		if err != nil {
			return err
		}
		exampleSubnet, err := network.NewSubnet(ctx, "example", &network.SubnetArgs{
			Name:               pulumi.String("acctsub"),
			ResourceGroupName:  example.Name,
			VirtualNetworkName: exampleVirtualNetwork.Name,
			AddressPrefixes: pulumi.StringArray{
				pulumi.String("10.0.2.0/24"),
			},
		})
		if err != nil {
			return err
		}
		exampleAccount, err := storage.NewAccount(ctx, "example", &storage.AccountArgs{
			Name:                   pulumi.String("accsa"),
			ResourceGroupName:      example.Name,
			Location:               example.Location,
			AccountTier:            pulumi.String("Standard"),
			AccountReplicationType: pulumi.String("LRS"),
			Tags: pulumi.StringMap{
				"environment": pulumi.String("staging"),
			},
		})
		if err != nil {
			return err
		}
		exampleContainer, err := storage.NewContainer(ctx, "example", &storage.ContainerArgs{
			Name:                pulumi.String("vhds"),
			StorageAccountName:  exampleAccount.Name,
			ContainerAccessType: pulumi.String("private"),
		})
		if err != nil {
			return err
		}
		invokeFile, err := std.File(ctx, &std.FileArgs{
			Input: "~/.ssh/demo_key.pub",
		}, nil)
		if err != nil {
			return err
		}
		_, err = compute.NewScaleSet(ctx, "example", &compute.ScaleSetArgs{
			Name:              pulumi.String("mytestscaleset-1"),
			Location:          example.Location,
			ResourceGroupName: example.Name,
			UpgradePolicyMode: pulumi.String("Manual"),
			Sku: &compute.ScaleSetSkuArgs{
				Name:     pulumi.String("Standard_F2"),
				Tier:     pulumi.String("Standard"),
				Capacity: pulumi.Int(2),
			},
			OsProfile: &compute.ScaleSetOsProfileArgs{
				ComputerNamePrefix: pulumi.String("testvm"),
				AdminUsername:      pulumi.String("myadmin"),
			},
			OsProfileLinuxConfig: &compute.ScaleSetOsProfileLinuxConfigArgs{
				DisablePasswordAuthentication: pulumi.Bool(true),
				SshKeys: compute.ScaleSetOsProfileLinuxConfigSshKeyArray{
					&compute.ScaleSetOsProfileLinuxConfigSshKeyArgs{
						Path:    pulumi.String("/home/myadmin/.ssh/authorized_keys"),
						KeyData: pulumi.String(invokeFile.Result),
					},
				},
			},
			NetworkProfiles: compute.ScaleSetNetworkProfileArray{
				&compute.ScaleSetNetworkProfileArgs{
					Name:    pulumi.String("TestNetworkProfile"),
					Primary: pulumi.Bool(true),
					IpConfigurations: compute.ScaleSetNetworkProfileIpConfigurationArray{
						&compute.ScaleSetNetworkProfileIpConfigurationArgs{
							Name:     pulumi.String("TestIPConfiguration"),
							Primary:  pulumi.Bool(true),
							SubnetId: exampleSubnet.ID(),
						},
					},
				},
			},
			StorageProfileOsDisk: &compute.ScaleSetStorageProfileOsDiskArgs{
				Name:         pulumi.String("osDiskProfile"),
				Caching:      pulumi.String("ReadWrite"),
				CreateOption: pulumi.String("FromImage"),
				VhdContainers: pulumi.StringArray{
					pulumi.All(exampleAccount.PrimaryBlobEndpoint, exampleContainer.Name).ApplyT(func(_args []interface{}) (string, error) {
						primaryBlobEndpoint := _args[0].(string)
						name := _args[1].(string)
						return fmt.Sprintf("%v%v", primaryBlobEndpoint, name), nil
					}).(pulumi.StringOutput),
				},
			},
			StorageProfileImageReference: &compute.ScaleSetStorageProfileImageReferenceArgs{
				Publisher: pulumi.String("Canonical"),
				Offer:     pulumi.String("0001-com-ubuntu-server-jammy"),
				Sku:       pulumi.String("22_04-lts"),
				Version:   pulumi.String("latest"),
			},
		})
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.core.ResourceGroup;
import com.pulumi.azure.core.ResourceGroupArgs;
import com.pulumi.azure.network.VirtualNetwork;
import com.pulumi.azure.network.VirtualNetworkArgs;
import com.pulumi.azure.network.Subnet;
import com.pulumi.azure.network.SubnetArgs;
import com.pulumi.azure.storage.Account;
import com.pulumi.azure.storage.AccountArgs;
import com.pulumi.azure.storage.Container;
import com.pulumi.azure.storage.ContainerArgs;
import com.pulumi.azure.compute.ScaleSet;
import com.pulumi.azure.compute.ScaleSetArgs;
import com.pulumi.azure.compute.inputs.ScaleSetSkuArgs;
import com.pulumi.azure.compute.inputs.ScaleSetOsProfileArgs;
import com.pulumi.azure.compute.inputs.ScaleSetOsProfileLinuxConfigArgs;
import com.pulumi.azure.compute.inputs.ScaleSetNetworkProfileArgs;
import com.pulumi.azure.compute.inputs.ScaleSetStorageProfileOsDiskArgs;
import com.pulumi.azure.compute.inputs.ScaleSetStorageProfileImageReferenceArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        var example = new ResourceGroup("example", ResourceGroupArgs.builder()
            .name("example-resources")
            .location("West Europe")
            .build());

        var exampleVirtualNetwork = new VirtualNetwork("exampleVirtualNetwork", VirtualNetworkArgs.builder()
            .name("acctvn")
            .addressSpaces("10.0.0.0/16")
            .location(example.location())
            .resourceGroupName(example.name())
            .build());

        var exampleSubnet = new Subnet("exampleSubnet", SubnetArgs.builder()
            .name("acctsub")
            .resourceGroupName(example.name())
            .virtualNetworkName(exampleVirtualNetwork.name())
            .addressPrefixes("10.0.2.0/24")
            .build());

        var exampleAccount = new Account("exampleAccount", AccountArgs.builder()
            .name("accsa")
            .resourceGroupName(example.name())
            .location(example.location())
            .accountTier("Standard")
            .accountReplicationType("LRS")
            .tags(Map.of("environment", "staging"))
            .build());

        var exampleContainer = new Container("exampleContainer", ContainerArgs.builder()
            .name("vhds")
            .storageAccountName(exampleAccount.name())
            .containerAccessType("private")
            .build());

        var exampleScaleSet = new ScaleSet("exampleScaleSet", ScaleSetArgs.builder()
            .name("mytestscaleset-1")
            .location(example.location())
            .resourceGroupName(example.name())
            .upgradePolicyMode("Manual")
            .sku(ScaleSetSkuArgs.builder()
                .name("Standard_F2")
                .tier("Standard")
                .capacity(2)
                .build())
            .osProfile(ScaleSetOsProfileArgs.builder()
                .computerNamePrefix("testvm")
                .adminUsername("myadmin")
                .build())
            .osProfileLinuxConfig(ScaleSetOsProfileLinuxConfigArgs.builder()
                .disablePasswordAuthentication(true)
                .sshKeys(ScaleSetOsProfileLinuxConfigSshKeyArgs.builder()
                    .path("/home/myadmin/.ssh/authorized_keys")
                    .keyData(StdFunctions.file(FileArgs.builder()
                        .input("~/.ssh/demo_key.pub")
                        .build()).result())
                    .build())
                .build())
            .networkProfiles(ScaleSetNetworkProfileArgs.builder()
                .name("TestNetworkProfile")
                .primary(true)
                .ipConfigurations(ScaleSetNetworkProfileIpConfigurationArgs.builder()
                    .name("TestIPConfiguration")
                    .primary(true)
                    .subnetId(exampleSubnet.id())
                    .build())
                .build())
            .storageProfileOsDisk(ScaleSetStorageProfileOsDiskArgs.builder()
                .name("osDiskProfile")
                .caching("ReadWrite")
                .createOption("FromImage")
                .vhdContainers(Output.tuple(exampleAccount.primaryBlobEndpoint(), exampleContainer.name()).applyValue(values -> {
                    var primaryBlobEndpoint = values.t1;
                    var name = values.t2;
                    return String.format("%s%s", primaryBlobEndpoint,name);
                }))
                .build())
            .storageProfileImageReference(ScaleSetStorageProfileImageReferenceArgs.builder()
                .publisher("Canonical")
                .offer("0001-com-ubuntu-server-jammy")
                .sku("22_04-lts")
                .version("latest")
                .build())
            .build());

    }
}
```
```yaml
resources:
  example:
    type: azure:core:ResourceGroup
    properties:
      name: example-resources
      location: West Europe
  exampleVirtualNetwork:
    type: azure:network:VirtualNetwork
    name: example
    properties:
      name: acctvn
      addressSpaces:
        - 10.0.0.0/16
      location: ${example.location}
      resourceGroupName: ${example.name}
  exampleSubnet:
    type: azure:network:Subnet
    name: example
    properties:
      name: acctsub
      resourceGroupName: ${example.name}
      virtualNetworkName: ${exampleVirtualNetwork.name}
      addressPrefixes:
        - 10.0.2.0/24
  exampleAccount:
    type: azure:storage:Account
    name: example
    properties:
      name: accsa
      resourceGroupName: ${example.name}
      location: ${example.location}
      accountTier: Standard
      accountReplicationType: LRS
      tags:
        environment: staging
  exampleContainer:
    type: azure:storage:Container
    name: example
    properties:
      name: vhds
      storageAccountName: ${exampleAccount.name}
      containerAccessType: private
  exampleScaleSet:
    type: azure:compute:ScaleSet
    name: example
    properties:
      name: mytestscaleset-1
      location: ${example.location}
      resourceGroupName: ${example.name}
      upgradePolicyMode: Manual
      sku:
        name: Standard_F2
        tier: Standard
        capacity: 2
      osProfile:
        computerNamePrefix: testvm
        adminUsername: myadmin
      osProfileLinuxConfig:
        disablePasswordAuthentication: true
        sshKeys:
          - path: /home/myadmin/.ssh/authorized_keys
            keyData:
              fn::invoke:
                function: std:file
                arguments:
                  input: ~/.ssh/demo_key.pub
                return: result
      networkProfiles:
        - name: TestNetworkProfile
          primary: true
          ipConfigurations:
            - name: TestIPConfiguration
              primary: true
              subnetId: ${exampleSubnet.id}
      storageProfileOsDisk:
        name: osDiskProfile
        caching: ReadWrite
        createOption: FromImage
        vhdContainers:
          - ${exampleAccount.primaryBlobEndpoint}${exampleContainer.name}
      storageProfileImageReference:
        publisher: Canonical
        offer: 0001-com-ubuntu-server-jammy
        sku: 22_04-lts
        version: latest
```
<!--End PulumiCodeChooser -->

## Example of storage_profile_image_reference with id

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const example = new azure.compute.Image("example", {name: "test"});
const exampleScaleSet = new azure.compute.ScaleSet("example", {
    name: "test",
    storageProfileImageReference: {
        id: example.id,
    },
});
```
```python
import pulumi
import pulumi_azure as azure

example = azure.compute.Image("example", name="test")
example_scale_set = azure.compute.ScaleSet("example",
    name="test",
    storage_profile_image_reference={
        "id": example.id,
    })
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var example = new Azure.Compute.Image("example", new()
    {
        Name = "test",
    });

    var exampleScaleSet = new Azure.Compute.ScaleSet("example", new()
    {
        Name = "test",
        StorageProfileImageReference = new Azure.Compute.Inputs.ScaleSetStorageProfileImageReferenceArgs
        {
            Id = example.Id,
        },
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/compute"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		example, err := compute.NewImage(ctx, "example", &compute.ImageArgs{
			Name: pulumi.String("test"),
		})
		if err != nil {
			return err
		}
		_, err = compute.NewScaleSet(ctx, "example", &compute.ScaleSetArgs{
			Name: pulumi.String("test"),
			StorageProfileImageReference: &compute.ScaleSetStorageProfileImageReferenceArgs{
				Id: example.ID(),
			},
		})
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.compute.Image;
import com.pulumi.azure.compute.ImageArgs;
import com.pulumi.azure.compute.ScaleSet;
import com.pulumi.azure.compute.ScaleSetArgs;
import com.pulumi.azure.compute.inputs.ScaleSetStorageProfileImageReferenceArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        var example = new Image("example", ImageArgs.builder()
            .name("test")
            .build());

        var exampleScaleSet = new ScaleSet("exampleScaleSet", ScaleSetArgs.builder()
            .name("test")
            .storageProfileImageReference(ScaleSetStorageProfileImageReferenceArgs.builder()
                .id(example.id())
                .build())
            .build());

    }
}
```
```yaml
resources:
  example:
    type: azure:compute:Image
    properties:
      name: test
  exampleScaleSet:
    type: azure:compute:ScaleSet
    name: example
    properties:
      name: test
      storageProfileImageReference:
        id: ${example.id}
```
<!--End PulumiCodeChooser -->

## Import

Virtual Machine Scale Sets can be imported using the `resource id`, e.g.

```sh
$ pulumi import azure:compute/scaleSet:ScaleSet scaleset1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Compute/virtualMachineScaleSets/scaleset1
```

½
automaticOsUpgradeB
  Automatic OS patches can be applied by Azure to your scaleset. This is particularly useful when `upgrade_policy_mode` is set to `Rolling`. Defaults to `false`.
¬
bootDiagnosticsgBe:c
a
computeScaleSetBootDiagnostics=azure:compute/ScaleSetBootDiagnostics:ScaleSetBootDiagnostics0A `boot_diagnostics` block as referenced below.

evictionPolicyB" øSpecifies the eviction policy for Virtual Machines in this Scale Set. Possible values are `Deallocate` and `Delete`. Changing this forces a new resource to be created.

> **NOTE:** `eviction_policy` can only be set when `priority` is set to `Low`.
ñ

extensionsWBU*S:Q
O
computeScaleSetExtension1azure:compute/ScaleSetExtension:ScaleSetExtensionCan be specified multiple times to add extension profiles to the scale set. Each `extension` block supports the fields documented below.

healthProbeIdB" zSpecifies the identifier for the load balancer health probe. Required when using `Rolling` as your `upgrade_policy_mode`.

identityRBP:N
L
computeScaleSetIdentity/azure:compute/ScaleSetIdentity:ScaleSetIdentity&An `identity` block as defined below.
°
licenseTypeB" (Optional, when a Windows machine) Specifies the Windows OS license type. If supplied, the only allowed values are `Windows_Client` and `Windows_Server`.

locationB" uSpecifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.

nameB" qSpecifies the name of the virtual machine scale set resource. Changing this forces a new resource to be created.
·
networkProfilesd*b:`
^
computeScaleSetNetworkProfile;azure:compute/ScaleSetNetworkProfile:ScaleSetNetworkProfile>A collection of `network_profile` blocks as documented below.

	osProfileS:Q
O
computeScaleSetOsProfile1azure:compute/ScaleSetOsProfile:ScaleSetOsProfile*A `os_profile` block as documented below.
Ç
osProfileLinuxConfigvBt:r
p
computeScaleSetOsProfileLinuxConfigGazure:compute/ScaleSetOsProfileLinuxConfig:ScaleSetOsProfileLinuxConfig7A `os_profile_linux_config` block as documented below.
À
osProfileSecretsiBg*e:c
a
computeScaleSetOsProfileSecret=azure:compute/ScaleSetOsProfileSecret:ScaleSetOsProfileSecretAA collection of `os_profile_secrets` blocks as documented below.
Ñ
osProfileWindowsConfig|Bz:x
v
computeScaleSetOsProfileWindowsConfigKazure:compute/ScaleSetOsProfileWindowsConfig:ScaleSetOsProfileWindowsConfig9A `os_profile_windows_config` block as documented below.
v
overprovisionB
 _Specifies whether the virtual machine scale set should be overprovisioned. Defaults to `true`.
t
planFBD:B
@
computeScaleSetPlan'azure:compute/ScaleSetPlan:ScaleSetPlan$A `plan` block as documented below.
±
priorityB" Specifies the priority for the Virtual Machines in the Scale Set. Possible values are `Low` and `Regular`. Changing this forces a new resource to be created.
°
proximityPlacementGroupIdB" The ID of the Proximity Placement Group to which this Virtual Machine should be assigned. Changing this forces a new resource to be created

resourceGroupName" The name of the resource group in which to create the virtual machine scale set. Changing this forces a new resource to be created.

rollingUpgradePolicyvBt:r
p
computeScaleSetRollingUpgradePolicyGazure:compute/ScaleSetRollingUpgradePolicy:ScaleSetRollingUpgradePolicyxA `rolling_upgrade_policy` block as defined below. This is only applicable when the `upgrade_policy_mode` is `Rolling`.

singlePlacementGroupB
 ûSpecifies whether the scale set is limited to a single placement group with a maximum size of 100 virtual machines. If set to false, managed disks must be used. Changing this forces a new resource to be created. See [documentation](https://docs.microsoft.com/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-placement-groups) for more information. Defaults to `true`.
m
skuA:?
=
computeScaleSetSku%azure:compute/ScaleSetSku:ScaleSetSku#A `sku` block as documented below.
Ô
storageProfileDataDisks~B|*z:x
v
computeScaleSetStorageProfileDataDiskKazure:compute/ScaleSetStorageProfileDataDisk:ScaleSetStorageProfileDataDisk9A `storage_profile_data_disk` block as documented below.
ó
storageProfileImageReferenceB:

compute$ScaleSetStorageProfileImageReferenceWazure:compute/ScaleSetStorageProfileImageReference:ScaleSetStorageProfileImageReference?A `storage_profile_image_reference` block as documented below.
Å
storageProfileOsDiskt:r
p
computeScaleSetStorageProfileOsDiskGazure:compute/ScaleSetStorageProfileOsDisk:ScaleSetStorageProfileOsDisk7A `storage_profile_os_disk` block as documented below.
=
tagsB2" -A mapping of tags to assign to the resource.
Õ
upgradePolicyMode" »Specifies the mode of an upgrade to virtual machines in the scale set. Possible values, `Rolling`, `Manual`, or `Automatic`. When choosing `Rolling`, you will need to set a health probe.
¤
zonesB*" A collection of availability zones to spread the Virtual Machines over. Changing this forces a new resource to be created.

> **NOTE:** Availability Zones are [only supported in several regions at this time](https://docs.microsoft.com/azure/availability-zones/az-overview).
"½
automaticOsUpgradeB
  Automatic OS patches can be applied by Azure to your scaleset. This is particularly useful when `upgrade_policy_mode` is set to `Rolling`. Defaults to `false`.
"¬
bootDiagnosticsgBe:c
a
computeScaleSetBootDiagnostics=azure:compute/ScaleSetBootDiagnostics:ScaleSetBootDiagnostics0A `boot_diagnostics` block as referenced below.
"
evictionPolicyB" øSpecifies the eviction policy for Virtual Machines in this Scale Set. Possible values are `Deallocate` and `Delete`. Changing this forces a new resource to be created.

> **NOTE:** `eviction_policy` can only be set when `priority` is set to `Low`.
"ñ

extensionsWBU*S:Q
O
computeScaleSetExtension1azure:compute/ScaleSetExtension:ScaleSetExtensionCan be specified multiple times to add extension profiles to the scale set. Each `extension` block supports the fields documented below.
"
healthProbeIdB" zSpecifies the identifier for the load balancer health probe. Required when using `Rolling` as your `upgrade_policy_mode`.
"
identityRBP:N
L
computeScaleSetIdentity/azure:compute/ScaleSetIdentity:ScaleSetIdentity&An `identity` block as defined below.
"®
licenseType" (Optional, when a Windows machine) Specifies the Windows OS license type. If supplied, the only allowed values are `Windows_Client` and `Windows_Server`.
"
location" uSpecifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
"}
name" qSpecifies the name of the virtual machine scale set resource. Changing this forces a new resource to be created.
"·
networkProfilesd*b:`
^
computeScaleSetNetworkProfile;azure:compute/ScaleSetNetworkProfile:ScaleSetNetworkProfile>A collection of `network_profile` blocks as documented below.
"
	osProfileS:Q
O
computeScaleSetOsProfile1azure:compute/ScaleSetOsProfile:ScaleSetOsProfile*A `os_profile` block as documented below.
"Å
osProfileLinuxConfigt:r
p
computeScaleSetOsProfileLinuxConfigGazure:compute/ScaleSetOsProfileLinuxConfig:ScaleSetOsProfileLinuxConfig7A `os_profile_linux_config` block as documented below.
"À
osProfileSecretsiBg*e:c
a
computeScaleSetOsProfileSecret=azure:compute/ScaleSetOsProfileSecret:ScaleSetOsProfileSecretAA collection of `os_profile_secrets` blocks as documented below.
"Ñ
osProfileWindowsConfig|Bz:x
v
computeScaleSetOsProfileWindowsConfigKazure:compute/ScaleSetOsProfileWindowsConfig:ScaleSetOsProfileWindowsConfig9A `os_profile_windows_config` block as documented below.
"v
overprovisionB
 _Specifies whether the virtual machine scale set should be overprovisioned. Defaults to `true`.
"t
planFBD:B
@
computeScaleSetPlan'azure:compute/ScaleSetPlan:ScaleSetPlan$A `plan` block as documented below.
"±
priorityB" Specifies the priority for the Virtual Machines in the Scale Set. Possible values are `Low` and `Regular`. Changing this forces a new resource to be created.
"°
proximityPlacementGroupIdB" The ID of the Proximity Placement Group to which this Virtual Machine should be assigned. Changing this forces a new resource to be created
"
resourceGroupName" The name of the resource group in which to create the virtual machine scale set. Changing this forces a new resource to be created.
"
rollingUpgradePolicyvBt:r
p
computeScaleSetRollingUpgradePolicyGazure:compute/ScaleSetRollingUpgradePolicy:ScaleSetRollingUpgradePolicyxA `rolling_upgrade_policy` block as defined below. This is only applicable when the `upgrade_policy_mode` is `Rolling`.
"
singlePlacementGroupB
 ûSpecifies whether the scale set is limited to a single placement group with a maximum size of 100 virtual machines. If set to false, managed disks must be used. Changing this forces a new resource to be created. See [documentation](https://docs.microsoft.com/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-placement-groups) for more information. Defaults to `true`.
"m
skuA:?
=
computeScaleSetSku%azure:compute/ScaleSetSku:ScaleSetSku#A `sku` block as documented below.
"Ô
storageProfileDataDisks~B|*z:x
v
computeScaleSetStorageProfileDataDiskKazure:compute/ScaleSetStorageProfileDataDisk:ScaleSetStorageProfileDataDisk9A `storage_profile_data_disk` block as documented below.
"ð
storageProfileImageReference:

compute$ScaleSetStorageProfileImageReferenceWazure:compute/ScaleSetStorageProfileImageReference:ScaleSetStorageProfileImageReference?A `storage_profile_image_reference` block as documented below.
"Å
storageProfileOsDiskt:r
p
computeScaleSetStorageProfileOsDiskGazure:compute/ScaleSetStorageProfileOsDisk:ScaleSetStorageProfileOsDisk7A `storage_profile_os_disk` block as documented below.
"=
tagsB2" -A mapping of tags to assign to the resource.
"Õ
upgradePolicyMode" »Specifies the mode of an upgrade to virtual machines in the scale set. Possible values, `Rolling`, `Manual`, or `Automatic`. When choosing `Rolling`, you will need to set a health probe.
"¤
zonesB*" A collection of availability zones to spread the Virtual Machines over. Changing this forces a new resource to be created.

> **NOTE:** Availability Zones are [only supported in several regions at this time](https://docs.microsoft.com/azure/availability-zones/az-overview).
*±Í
[
computeScaleSetPacketCapture9azure:compute/scaleSetPacketCapture:ScaleSetPacketCapture´²Configures Network Packet Capturing against a Virtual Machine Scale Set using a Network Watcher.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const example = new azure.core.ResourceGroup("example", {
    name: "example-resources",
    location: "West Europe",
});
const exampleNetworkWatcher = new azure.network.NetworkWatcher("example", {
    name: "example-nw",
    location: example.location,
    resourceGroupName: example.name,
});
const exampleVirtualNetwork = new azure.network.VirtualNetwork("example", {
    name: "example-vn",
    addressSpaces: ["10.0.0.0/16"],
    location: example.location,
    resourceGroupName: example.name,
});
const exampleSubnet = new azure.network.Subnet("example", {
    name: "internal",
    resourceGroupName: example.name,
    virtualNetworkName: exampleVirtualNetwork.name,
    addressPrefixes: ["10.0.2.0/24"],
});
const exampleLinuxVirtualMachineScaleSet = new azure.compute.LinuxVirtualMachineScaleSet("example", {
    name: "example-vmss",
    resourceGroupName: example.name,
    location: example.location,
    sku: "Standard_F2",
    instances: 4,
    adminUsername: "adminuser",
    adminPassword: "P@ssword1234!",
    computerNamePrefix: "my-linux-computer-name-prefix",
    upgradeMode: "Automatic",
    disablePasswordAuthentication: false,
    sourceImageReference: {
        publisher: "Canonical",
        offer: "0001-com-ubuntu-server-jammy",
        sku: "22_04-lts",
        version: "latest",
    },
    osDisk: {
        storageAccountType: "Standard_LRS",
        caching: "ReadWrite",
    },
    networkInterfaces: [{
        name: "example",
        primary: true,
        ipConfigurations: [{
            name: "internal",
            primary: true,
            subnetId: exampleSubnet.id,
        }],
    }],
});
const exampleVirtualMachineScaleSetExtension = new azure.compute.VirtualMachineScaleSetExtension("example", {
    name: "network-watcher",
    virtualMachineScaleSetId: exampleLinuxVirtualMachineScaleSet.id,
    publisher: "Microsoft.Azure.NetworkWatcher",
    type: "NetworkWatcherAgentLinux",
    typeHandlerVersion: "1.4",
    autoUpgradeMinorVersion: true,
    automaticUpgradeEnabled: true,
});
const exampleScaleSetPacketCapture = new azure.compute.ScaleSetPacketCapture("example", {
    name: "example-pc",
    networkWatcherId: exampleNetworkWatcher.id,
    virtualMachineScaleSetId: exampleLinuxVirtualMachineScaleSet.id,
    storageLocation: {
        filePath: "/var/captures/packet.cap",
    },
    machineScope: {
        includeInstanceIds: ["0"],
        excludeInstanceIds: ["1"],
    },
}, {
    dependsOn: [exampleVirtualMachineScaleSetExtension],
});
```
```python
import pulumi
import pulumi_azure as azure

example = azure.core.ResourceGroup("example",
    name="example-resources",
    location="West Europe")
example_network_watcher = azure.network.NetworkWatcher("example",
    name="example-nw",
    location=example.location,
    resource_group_name=example.name)
example_virtual_network = azure.network.VirtualNetwork("example",
    name="example-vn",
    address_spaces=["10.0.0.0/16"],
    location=example.location,
    resource_group_name=example.name)
example_subnet = azure.network.Subnet("example",
    name="internal",
    resource_group_name=example.name,
    virtual_network_name=example_virtual_network.name,
    address_prefixes=["10.0.2.0/24"])
example_linux_virtual_machine_scale_set = azure.compute.LinuxVirtualMachineScaleSet("example",
    name="example-vmss",
    resource_group_name=example.name,
    location=example.location,
    sku="Standard_F2",
    instances=4,
    admin_username="adminuser",
    admin_password="P@ssword1234!",
    computer_name_prefix="my-linux-computer-name-prefix",
    upgrade_mode="Automatic",
    disable_password_authentication=False,
    source_image_reference={
        "publisher": "Canonical",
        "offer": "0001-com-ubuntu-server-jammy",
        "sku": "22_04-lts",
        "version": "latest",
    },
    os_disk={
        "storage_account_type": "Standard_LRS",
        "caching": "ReadWrite",
    },
    network_interfaces=[{
        "name": "example",
        "primary": True,
        "ip_configurations": [{
            "name": "internal",
            "primary": True,
            "subnet_id": example_subnet.id,
        }],
    }])
example_virtual_machine_scale_set_extension = azure.compute.VirtualMachineScaleSetExtension("example",
    name="network-watcher",
    virtual_machine_scale_set_id=example_linux_virtual_machine_scale_set.id,
    publisher="Microsoft.Azure.NetworkWatcher",
    type="NetworkWatcherAgentLinux",
    type_handler_version="1.4",
    auto_upgrade_minor_version=True,
    automatic_upgrade_enabled=True)
example_scale_set_packet_capture = azure.compute.ScaleSetPacketCapture("example",
    name="example-pc",
    network_watcher_id=example_network_watcher.id,
    virtual_machine_scale_set_id=example_linux_virtual_machine_scale_set.id,
    storage_location={
        "file_path": "/var/captures/packet.cap",
    },
    machine_scope={
        "include_instance_ids": ["0"],
        "exclude_instance_ids": ["1"],
    },
    opts = pulumi.ResourceOptions(depends_on=[example_virtual_machine_scale_set_extension]))
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var example = new Azure.Core.ResourceGroup("example", new()
    {
        Name = "example-resources",
        Location = "West Europe",
    });

    var exampleNetworkWatcher = new Azure.Network.NetworkWatcher("example", new()
    {
        Name = "example-nw",
        Location = example.Location,
        ResourceGroupName = example.Name,
    });

    var exampleVirtualNetwork = new Azure.Network.VirtualNetwork("example", new()
    {
        Name = "example-vn",
        AddressSpaces = new[]
        {
            "10.0.0.0/16",
        },
        Location = example.Location,
        ResourceGroupName = example.Name,
    });

    var exampleSubnet = new Azure.Network.Subnet("example", new()
    {
        Name = "internal",
        ResourceGroupName = example.Name,
        VirtualNetworkName = exampleVirtualNetwork.Name,
        AddressPrefixes = new[]
        {
            "10.0.2.0/24",
        },
    });

    var exampleLinuxVirtualMachineScaleSet = new Azure.Compute.LinuxVirtualMachineScaleSet("example", new()
    {
        Name = "example-vmss",
        ResourceGroupName = example.Name,
        Location = example.Location,
        Sku = "Standard_F2",
        Instances = 4,
        AdminUsername = "adminuser",
        AdminPassword = "P@ssword1234!",
        ComputerNamePrefix = "my-linux-computer-name-prefix",
        UpgradeMode = "Automatic",
        DisablePasswordAuthentication = false,
        SourceImageReference = new Azure.Compute.Inputs.LinuxVirtualMachineScaleSetSourceImageReferenceArgs
        {
            Publisher = "Canonical",
            Offer = "0001-com-ubuntu-server-jammy",
            Sku = "22_04-lts",
            Version = "latest",
        },
        OsDisk = new Azure.Compute.Inputs.LinuxVirtualMachineScaleSetOsDiskArgs
        {
            StorageAccountType = "Standard_LRS",
            Caching = "ReadWrite",
        },
        NetworkInterfaces = new[]
        {
            new Azure.Compute.Inputs.LinuxVirtualMachineScaleSetNetworkInterfaceArgs
            {
                Name = "example",
                Primary = true,
                IpConfigurations = new[]
                {
                    new Azure.Compute.Inputs.LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationArgs
                    {
                        Name = "internal",
                        Primary = true,
                        SubnetId = exampleSubnet.Id,
                    },
                },
            },
        },
    });

    var exampleVirtualMachineScaleSetExtension = new Azure.Compute.VirtualMachineScaleSetExtension("example", new()
    {
        Name = "network-watcher",
        VirtualMachineScaleSetId = exampleLinuxVirtualMachineScaleSet.Id,
        Publisher = "Microsoft.Azure.NetworkWatcher",
        Type = "NetworkWatcherAgentLinux",
        TypeHandlerVersion = "1.4",
        AutoUpgradeMinorVersion = true,
        AutomaticUpgradeEnabled = true,
    });

    var exampleScaleSetPacketCapture = new Azure.Compute.ScaleSetPacketCapture("example", new()
    {
        Name = "example-pc",
        NetworkWatcherId = exampleNetworkWatcher.Id,
        VirtualMachineScaleSetId = exampleLinuxVirtualMachineScaleSet.Id,
        StorageLocation = new Azure.Compute.Inputs.ScaleSetPacketCaptureStorageLocationArgs
        {
            FilePath = "/var/captures/packet.cap",
        },
        MachineScope = new Azure.Compute.Inputs.ScaleSetPacketCaptureMachineScopeArgs
        {
            IncludeInstanceIds = new[]
            {
                "0",
            },
            ExcludeInstanceIds = new[]
            {
                "1",
            },
        },
    }, new CustomResourceOptions
    {
        DependsOn =
        {
            exampleVirtualMachineScaleSetExtension,
        },
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/compute"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/network"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
			Name:     pulumi.String("example-resources"),
			Location: pulumi.String("West Europe"),
		})
		if err != nil {
			return err
		}
		exampleNetworkWatcher, err := network.NewNetworkWatcher(ctx, "example", &network.NetworkWatcherArgs{
			Name:              pulumi.String("example-nw"),
			Location:          example.Location,
			ResourceGroupName: example.Name,
		})
		if err != nil {
			return err
		}
		exampleVirtualNetwork, err := network.NewVirtualNetwork(ctx, "example", &network.VirtualNetworkArgs{
			Name: pulumi.String("example-vn"),
			AddressSpaces: pulumi.StringArray{
				pulumi.String("10.0.0.0/16"),
			},
			Location:          example.Location,
			ResourceGroupName: example.Name,
		})
		if err != nil {
			return err
		}
		exampleSubnet, err := network.NewSubnet(ctx, "example", &network.SubnetArgs{
			Name:               pulumi.String("internal"),
			ResourceGroupName:  example.Name,
			VirtualNetworkName: exampleVirtualNetwork.Name,
			AddressPrefixes: pulumi.StringArray{
				pulumi.String("10.0.2.0/24"),
			},
		})
		if err != nil {
			return err
		}
		exampleLinuxVirtualMachineScaleSet, err := compute.NewLinuxVirtualMachineScaleSet(ctx, "example", &compute.LinuxVirtualMachineScaleSetArgs{
			Name:                          pulumi.String("example-vmss"),
			ResourceGroupName:             example.Name,
			Location:                      example.Location,
			Sku:                           pulumi.String("Standard_F2"),
			Instances:                     pulumi.Int(4),
			AdminUsername:                 pulumi.String("adminuser"),
			AdminPassword:                 pulumi.String("P@ssword1234!"),
			ComputerNamePrefix:            pulumi.String("my-linux-computer-name-prefix"),
			UpgradeMode:                   pulumi.String("Automatic"),
			DisablePasswordAuthentication: pulumi.Bool(false),
			SourceImageReference: &compute.LinuxVirtualMachineScaleSetSourceImageReferenceArgs{
				Publisher: pulumi.String("Canonical"),
				Offer:     pulumi.String("0001-com-ubuntu-server-jammy"),
				Sku:       pulumi.String("22_04-lts"),
				Version:   pulumi.String("latest"),
			},
			OsDisk: &compute.LinuxVirtualMachineScaleSetOsDiskArgs{
				StorageAccountType: pulumi.String("Standard_LRS"),
				Caching:            pulumi.String("ReadWrite"),
			},
			NetworkInterfaces: compute.LinuxVirtualMachineScaleSetNetworkInterfaceArray{
				&compute.LinuxVirtualMachineScaleSetNetworkInterfaceArgs{
					Name:    pulumi.String("example"),
					Primary: pulumi.Bool(true),
					IpConfigurations: compute.LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationArray{
						&compute.LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationArgs{
							Name:     pulumi.String("internal"),
							Primary:  pulumi.Bool(true),
							SubnetId: exampleSubnet.ID(),
						},
					},
				},
			},
		})
		if err != nil {
			return err
		}
		exampleVirtualMachineScaleSetExtension, err := compute.NewVirtualMachineScaleSetExtension(ctx, "example", &compute.VirtualMachineScaleSetExtensionArgs{
			Name:                     pulumi.String("network-watcher"),
			VirtualMachineScaleSetId: exampleLinuxVirtualMachineScaleSet.ID(),
			Publisher:                pulumi.String("Microsoft.Azure.NetworkWatcher"),
			Type:                     pulumi.String("NetworkWatcherAgentLinux"),
			TypeHandlerVersion:       pulumi.String("1.4"),
			AutoUpgradeMinorVersion:  pulumi.Bool(true),
			AutomaticUpgradeEnabled:  pulumi.Bool(true),
		})
		if err != nil {
			return err
		}
		_, err = compute.NewScaleSetPacketCapture(ctx, "example", &compute.ScaleSetPacketCaptureArgs{
			Name:                     pulumi.String("example-pc"),
			NetworkWatcherId:         exampleNetworkWatcher.ID(),
			VirtualMachineScaleSetId: exampleLinuxVirtualMachineScaleSet.ID(),
			StorageLocation: &compute.ScaleSetPacketCaptureStorageLocationArgs{
				FilePath: pulumi.String("/var/captures/packet.cap"),
			},
			MachineScope: &compute.ScaleSetPacketCaptureMachineScopeArgs{
				IncludeInstanceIds: pulumi.StringArray{
					pulumi.String("0"),
				},
				ExcludeInstanceIds: pulumi.StringArray{
					pulumi.String("1"),
				},
			},
		}, pulumi.DependsOn([]pulumi.Resource{
			exampleVirtualMachineScaleSetExtension,
		}))
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.core.ResourceGroup;
import com.pulumi.azure.core.ResourceGroupArgs;
import com.pulumi.azure.network.NetworkWatcher;
import com.pulumi.azure.network.NetworkWatcherArgs;
import com.pulumi.azure.network.VirtualNetwork;
import com.pulumi.azure.network.VirtualNetworkArgs;
import com.pulumi.azure.network.Subnet;
import com.pulumi.azure.network.SubnetArgs;
import com.pulumi.azure.compute.LinuxVirtualMachineScaleSet;
import com.pulumi.azure.compute.LinuxVirtualMachineScaleSetArgs;
import com.pulumi.azure.compute.inputs.LinuxVirtualMachineScaleSetSourceImageReferenceArgs;
import com.pulumi.azure.compute.inputs.LinuxVirtualMachineScaleSetOsDiskArgs;
import com.pulumi.azure.compute.inputs.LinuxVirtualMachineScaleSetNetworkInterfaceArgs;
import com.pulumi.azure.compute.VirtualMachineScaleSetExtension;
import com.pulumi.azure.compute.VirtualMachineScaleSetExtensionArgs;
import com.pulumi.azure.compute.ScaleSetPacketCapture;
import com.pulumi.azure.compute.ScaleSetPacketCaptureArgs;
import com.pulumi.azure.compute.inputs.ScaleSetPacketCaptureStorageLocationArgs;
import com.pulumi.azure.compute.inputs.ScaleSetPacketCaptureMachineScopeArgs;
import com.pulumi.resources.CustomResourceOptions;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        var example = new ResourceGroup("example", ResourceGroupArgs.builder()
            .name("example-resources")
            .location("West Europe")
            .build());

        var exampleNetworkWatcher = new NetworkWatcher("exampleNetworkWatcher", NetworkWatcherArgs.builder()
            .name("example-nw")
            .location(example.location())
            .resourceGroupName(example.name())
            .build());

        var exampleVirtualNetwork = new VirtualNetwork("exampleVirtualNetwork", VirtualNetworkArgs.builder()
            .name("example-vn")
            .addressSpaces("10.0.0.0/16")
            .location(example.location())
            .resourceGroupName(example.name())
            .build());

        var exampleSubnet = new Subnet("exampleSubnet", SubnetArgs.builder()
            .name("internal")
            .resourceGroupName(example.name())
            .virtualNetworkName(exampleVirtualNetwork.name())
            .addressPrefixes("10.0.2.0/24")
            .build());

        var exampleLinuxVirtualMachineScaleSet = new LinuxVirtualMachineScaleSet("exampleLinuxVirtualMachineScaleSet", LinuxVirtualMachineScaleSetArgs.builder()
            .name("example-vmss")
            .resourceGroupName(example.name())
            .location(example.location())
            .sku("Standard_F2")
            .instances(4)
            .adminUsername("adminuser")
            .adminPassword("P@ssword1234!")
            .computerNamePrefix("my-linux-computer-name-prefix")
            .upgradeMode("Automatic")
            .disablePasswordAuthentication(false)
            .sourceImageReference(LinuxVirtualMachineScaleSetSourceImageReferenceArgs.builder()
                .publisher("Canonical")
                .offer("0001-com-ubuntu-server-jammy")
                .sku("22_04-lts")
                .version("latest")
                .build())
            .osDisk(LinuxVirtualMachineScaleSetOsDiskArgs.builder()
                .storageAccountType("Standard_LRS")
                .caching("ReadWrite")
                .build())
            .networkInterfaces(LinuxVirtualMachineScaleSetNetworkInterfaceArgs.builder()
                .name("example")
                .primary(true)
                .ipConfigurations(LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationArgs.builder()
                    .name("internal")
                    .primary(true)
                    .subnetId(exampleSubnet.id())
                    .build())
                .build())
            .build());

        var exampleVirtualMachineScaleSetExtension = new VirtualMachineScaleSetExtension("exampleVirtualMachineScaleSetExtension", VirtualMachineScaleSetExtensionArgs.builder()
            .name("network-watcher")
            .virtualMachineScaleSetId(exampleLinuxVirtualMachineScaleSet.id())
            .publisher("Microsoft.Azure.NetworkWatcher")
            .type("NetworkWatcherAgentLinux")
            .typeHandlerVersion("1.4")
            .autoUpgradeMinorVersion(true)
            .automaticUpgradeEnabled(true)
            .build());

        var exampleScaleSetPacketCapture = new ScaleSetPacketCapture("exampleScaleSetPacketCapture", ScaleSetPacketCaptureArgs.builder()
            .name("example-pc")
            .networkWatcherId(exampleNetworkWatcher.id())
            .virtualMachineScaleSetId(exampleLinuxVirtualMachineScaleSet.id())
            .storageLocation(ScaleSetPacketCaptureStorageLocationArgs.builder()
                .filePath("/var/captures/packet.cap")
                .build())
            .machineScope(ScaleSetPacketCaptureMachineScopeArgs.builder()
                .includeInstanceIds("0")
                .excludeInstanceIds("1")
                .build())
            .build(), CustomResourceOptions.builder()
                .dependsOn(exampleVirtualMachineScaleSetExtension)
                .build());

    }
}
```
```yaml
resources:
  example:
    type: azure:core:ResourceGroup
    properties:
      name: example-resources
      location: West Europe
  exampleNetworkWatcher:
    type: azure:network:NetworkWatcher
    name: example
    properties:
      name: example-nw
      location: ${example.location}
      resourceGroupName: ${example.name}
  exampleVirtualNetwork:
    type: azure:network:VirtualNetwork
    name: example
    properties:
      name: example-vn
      addressSpaces:
        - 10.0.0.0/16
      location: ${example.location}
      resourceGroupName: ${example.name}
  exampleSubnet:
    type: azure:network:Subnet
    name: example
    properties:
      name: internal
      resourceGroupName: ${example.name}
      virtualNetworkName: ${exampleVirtualNetwork.name}
      addressPrefixes:
        - 10.0.2.0/24
  exampleLinuxVirtualMachineScaleSet:
    type: azure:compute:LinuxVirtualMachineScaleSet
    name: example
    properties:
      name: example-vmss
      resourceGroupName: ${example.name}
      location: ${example.location}
      sku: Standard_F2
      instances: 4
      adminUsername: adminuser
      adminPassword: P@ssword1234!
      computerNamePrefix: my-linux-computer-name-prefix
      upgradeMode: Automatic
      disablePasswordAuthentication: false
      sourceImageReference:
        publisher: Canonical
        offer: 0001-com-ubuntu-server-jammy
        sku: 22_04-lts
        version: latest
      osDisk:
        storageAccountType: Standard_LRS
        caching: ReadWrite
      networkInterfaces:
        - name: example
          primary: true
          ipConfigurations:
            - name: internal
              primary: true
              subnetId: ${exampleSubnet.id}
  exampleVirtualMachineScaleSetExtension:
    type: azure:compute:VirtualMachineScaleSetExtension
    name: example
    properties:
      name: network-watcher
      virtualMachineScaleSetId: ${exampleLinuxVirtualMachineScaleSet.id}
      publisher: Microsoft.Azure.NetworkWatcher
      type: NetworkWatcherAgentLinux
      typeHandlerVersion: '1.4'
      autoUpgradeMinorVersion: true
      automaticUpgradeEnabled: true
  exampleScaleSetPacketCapture:
    type: azure:compute:ScaleSetPacketCapture
    name: example
    properties:
      name: example-pc
      networkWatcherId: ${exampleNetworkWatcher.id}
      virtualMachineScaleSetId: ${exampleLinuxVirtualMachineScaleSet.id}
      storageLocation:
        filePath: /var/captures/packet.cap
      machineScope:
        includeInstanceIds:
          - '0'
        excludeInstanceIds:
          - '1'
    options:
      dependsOn:
        - ${exampleVirtualMachineScaleSetExtension}
```
<!--End PulumiCodeChooser -->

> **NOTE:** This Resource requires that [the Network Watcher Extension](https://docs.microsoft.com/azure/network-watcher/network-watcher-packet-capture-manage-portal#before-you-begin) is installed on the Virtual Machine Scale Set before capturing can be enabled which can be installed via the `azure.compute.VirtualMachineScaleSetExtension` resource.

## Import

Virtual Machine Scale Set Packet Captures can be imported using the `resource id`, e.g.

```sh
$ pulumi import azure:compute/scaleSetPacketCapture:ScaleSetPacketCapture capture1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Network/networkWatchers/watcher1/packetCaptures/capture1
```

ã
filtersuBs*q:o
m
computeScaleSetPacketCaptureFilterEazure:compute/ScaleSetPacketCaptureFilter:ScaleSetPacketCaptureFilteraOne or more `filter` blocks as defined below. Changing this forces a new resource to be created.
÷
machineScopeB:

compute!ScaleSetPacketCaptureMachineScopeQazure:compute/ScaleSetPacketCaptureMachineScope:ScaleSetPacketCaptureMachineScope]A `machine_scope` block as defined below. Changing this forces a new resource to be created.
É
maximumBytesPerPacketB ©The number of bytes captured per packet. The remaining bytes are truncated. Defaults to `0` (Entire Packet Captured). Changing this forces a new resource to be created.

maximumBytesPerSessionB yMaximum size of the capture in Bytes. Defaults to `1073741824` (1GB). Changing this forces a new resource to be created.
´
maximumCaptureDurationInSecondsB The maximum duration of the capture session in seconds. Defaults to `18000` (5 hours). Changing this forces a new resource to be created.
r
nameB" dThe name to use for this Network Packet Capture. Changing this forces a new resource to be created.
s
networkWatcherId" [The resource ID of the Network Watcher. Changing this forces a new resource to be created.

storageLocation:

compute$ScaleSetPacketCaptureStorageLocationWazure:compute/ScaleSetPacketCaptureStorageLocation:ScaleSetPacketCaptureStorageLocation`A `storage_location` block as defined below. Changing this forces a new resource to be created.

virtualMachineScaleSetId" }The resource ID of the Virtual Machine Scale Set to capture packets from. Changing this forces a new resource to be created.
"ã
filtersuBs*q:o
m
computeScaleSetPacketCaptureFilterEazure:compute/ScaleSetPacketCaptureFilter:ScaleSetPacketCaptureFilteraOne or more `filter` blocks as defined below. Changing this forces a new resource to be created.
"÷
machineScopeB:

compute!ScaleSetPacketCaptureMachineScopeQazure:compute/ScaleSetPacketCaptureMachineScope:ScaleSetPacketCaptureMachineScope]A `machine_scope` block as defined below. Changing this forces a new resource to be created.
"É
maximumBytesPerPacketB ©The number of bytes captured per packet. The remaining bytes are truncated. Defaults to `0` (Entire Packet Captured). Changing this forces a new resource to be created.
"
maximumBytesPerSessionB yMaximum size of the capture in Bytes. Defaults to `1073741824` (1GB). Changing this forces a new resource to be created.
"´
maximumCaptureDurationInSecondsB The maximum duration of the capture session in seconds. Defaults to `18000` (5 hours). Changing this forces a new resource to be created.
"p
name" dThe name to use for this Network Packet Capture. Changing this forces a new resource to be created.
"s
networkWatcherId" [The resource ID of the Network Watcher. Changing this forces a new resource to be created.
"
storageLocation:

compute$ScaleSetPacketCaptureStorageLocationWazure:compute/ScaleSetPacketCaptureStorageLocation:ScaleSetPacketCaptureStorageLocation`A `storage_location` block as defined below. Changing this forces a new resource to be created.
"
virtualMachineScaleSetId" }The resource ID of the Virtual Machine Scale Set to capture packets from. Changing this forces a new resource to be created.
*Õ
=
computeSharedImage%azure:compute/sharedImage:SharedImageû:Manages a Shared Image within a Shared Image Gallery.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const example = new azure.core.ResourceGroup("example", {
    name: "example-resources",
    location: "West Europe",
});
const exampleSharedImageGallery = new azure.compute.SharedImageGallery("example", {
    name: "example_image_gallery",
    resourceGroupName: example.name,
    location: example.location,
    description: "Shared images and things.",
    tags: {
        Hello: "There",
        World: "Example",
    },
});
const exampleSharedImage = new azure.compute.SharedImage("example", {
    name: "my-image",
    galleryName: exampleSharedImageGallery.name,
    resourceGroupName: example.name,
    location: example.location,
    osType: "Linux",
    identifier: {
        publisher: "PublisherName",
        offer: "OfferName",
        sku: "ExampleSku",
    },
});
```
```python
import pulumi
import pulumi_azure as azure

example = azure.core.ResourceGroup("example",
    name="example-resources",
    location="West Europe")
example_shared_image_gallery = azure.compute.SharedImageGallery("example",
    name="example_image_gallery",
    resource_group_name=example.name,
    location=example.location,
    description="Shared images and things.",
    tags={
        "Hello": "There",
        "World": "Example",
    })
example_shared_image = azure.compute.SharedImage("example",
    name="my-image",
    gallery_name=example_shared_image_gallery.name,
    resource_group_name=example.name,
    location=example.location,
    os_type="Linux",
    identifier={
        "publisher": "PublisherName",
        "offer": "OfferName",
        "sku": "ExampleSku",
    })
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var example = new Azure.Core.ResourceGroup("example", new()
    {
        Name = "example-resources",
        Location = "West Europe",
    });

    var exampleSharedImageGallery = new Azure.Compute.SharedImageGallery("example", new()
    {
        Name = "example_image_gallery",
        ResourceGroupName = example.Name,
        Location = example.Location,
        Description = "Shared images and things.",
        Tags = 
        {
            { "Hello", "There" },
            { "World", "Example" },
        },
    });

    var exampleSharedImage = new Azure.Compute.SharedImage("example", new()
    {
        Name = "my-image",
        GalleryName = exampleSharedImageGallery.Name,
        ResourceGroupName = example.Name,
        Location = example.Location,
        OsType = "Linux",
        Identifier = new Azure.Compute.Inputs.SharedImageIdentifierArgs
        {
            Publisher = "PublisherName",
            Offer = "OfferName",
            Sku = "ExampleSku",
        },
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/compute"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
			Name:     pulumi.String("example-resources"),
			Location: pulumi.String("West Europe"),
		})
		if err != nil {
			return err
		}
		exampleSharedImageGallery, err := compute.NewSharedImageGallery(ctx, "example", &compute.SharedImageGalleryArgs{
			Name:              pulumi.String("example_image_gallery"),
			ResourceGroupName: example.Name,
			Location:          example.Location,
			Description:       pulumi.String("Shared images and things."),
			Tags: pulumi.StringMap{
				"Hello": pulumi.String("There"),
				"World": pulumi.String("Example"),
			},
		})
		if err != nil {
			return err
		}
		_, err = compute.NewSharedImage(ctx, "example", &compute.SharedImageArgs{
			Name:              pulumi.String("my-image"),
			GalleryName:       exampleSharedImageGallery.Name,
			ResourceGroupName: example.Name,
			Location:          example.Location,
			OsType:            pulumi.String("Linux"),
			Identifier: &compute.SharedImageIdentifierArgs{
				Publisher: pulumi.String("PublisherName"),
				Offer:     pulumi.String("OfferName"),
				Sku:       pulumi.String("ExampleSku"),
			},
		})
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.core.ResourceGroup;
import com.pulumi.azure.core.ResourceGroupArgs;
import com.pulumi.azure.compute.SharedImageGallery;
import com.pulumi.azure.compute.SharedImageGalleryArgs;
import com.pulumi.azure.compute.SharedImage;
import com.pulumi.azure.compute.SharedImageArgs;
import com.pulumi.azure.compute.inputs.SharedImageIdentifierArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        var example = new ResourceGroup("example", ResourceGroupArgs.builder()
            .name("example-resources")
            .location("West Europe")
            .build());

        var exampleSharedImageGallery = new SharedImageGallery("exampleSharedImageGallery", SharedImageGalleryArgs.builder()
            .name("example_image_gallery")
            .resourceGroupName(example.name())
            .location(example.location())
            .description("Shared images and things.")
            .tags(Map.ofEntries(
                Map.entry("Hello", "There"),
                Map.entry("World", "Example")
            ))
            .build());

        var exampleSharedImage = new SharedImage("exampleSharedImage", SharedImageArgs.builder()
            .name("my-image")
            .galleryName(exampleSharedImageGallery.name())
            .resourceGroupName(example.name())
            .location(example.location())
            .osType("Linux")
            .identifier(SharedImageIdentifierArgs.builder()
                .publisher("PublisherName")
                .offer("OfferName")
                .sku("ExampleSku")
                .build())
            .build());

    }
}
```
```yaml
resources:
  example:
    type: azure:core:ResourceGroup
    properties:
      name: example-resources
      location: West Europe
  exampleSharedImageGallery:
    type: azure:compute:SharedImageGallery
    name: example
    properties:
      name: example_image_gallery
      resourceGroupName: ${example.name}
      location: ${example.location}
      description: Shared images and things.
      tags:
        Hello: There
        World: Example
  exampleSharedImage:
    type: azure:compute:SharedImage
    name: example
    properties:
      name: my-image
      galleryName: ${exampleSharedImageGallery.name}
      resourceGroupName: ${example.name}
      location: ${example.location}
      osType: Linux
      identifier:
        publisher: PublisherName
        offer: OfferName
        sku: ExampleSku
```
<!--End PulumiCodeChooser -->

## Import

Shared Images can be imported using the `resource id`, e.g.

```sh
$ pulumi import azure:compute/sharedImage:SharedImage image1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Compute/galleries/gallery1/images/image1
```


 acceleratedNetworkSupportEnabledB
 oSpecifies if the Shared Image supports Accelerated Network. Changing this forces a new resource to be created.
©
architectureB" CPU architecture supported by an OS. Possible values are `x64` and `Arm64`. Defaults to `x64`. Changing this forces a new resource to be created.
¹
confidentialVmEnabledB
 Specifies if Confidential Virtual Machines enabled. It will enable all the features of trusted, with higher confidentiality features for isolate machines or encrypted data. Available for Gen2 machines. Changing this forces a new resource to be created.

> **Note:**: Only one of `trusted_launch_supported`, `trusted_launch_enabled`, `confidential_vm_supported` and `confidential_vm_enabled` can be specified.

confidentialVmSupportedB
 ãSpecifies if supports creation of both Confidential virtual machines and Gen2 virtual machines with standard security from a compatible Gen2 OS disk VHD or Gen2 Managed image. Changing this forces a new resource to be created.
9
descriptionB" $A description of this Shared Image.

diskControllerTypeNvmeEnabledB
 fSpecifies if the Shared Image supports NVMe disks. Changing this forces a new resource to be created.

diskTypesNotAllowedsB*" lOne or more Disk Types not allowed for the Image. Possible values include `Standard_LRS` and `Premium_LRS`.
L
endOfLifeDateB" 5The end of life date in RFC3339 format of the Image.
v
eulaB" hThe End User Licence Agreement for the Shared Image. Changing this forces a new resource to be created.

galleryName" Specifies the name of the Shared Image Gallery in which this Shared Image should exist. Changing this forces a new resource to be created.

hibernationEnabledB
 gSpecifies if the Shared Image supports hibernation. Changing this forces a new resource to be created.
â
hyperVGenerationB" ÇThe generation of HyperV that the Virtual Machine used to create the Shared Image is based on. Possible values are `V1` and `V2`. Defaults to `V1`. Changing this forces a new resource to be created.


identifier_:]
[
computeSharedImageIdentifier9azure:compute/SharedImageIdentifier:SharedImageIdentifier(An `identifier` block as defined below.

locationB" Specifies the supported Azure location where the Shared Image Gallery exists. Changing this forces a new resource to be created.
R
maxRecommendedMemoryInGbB 0Maximum memory in GB recommended for the Image.
S
maxRecommendedVcpuCountB 2Maximum count of vCPUs recommended for the Image.
R
minRecommendedMemoryInGbB 0Minimum memory in GB recommended for the Image.
S
minRecommendedVcpuCountB 2Minimum count of vCPUs recommended for the Image.
i
nameB" [Specifies the name of the Shared Image. Changing this forces a new resource to be created.
¨
osType" The type of Operating System present in this Shared Image. Possible values are `Linux` and `Windows`. Changing this forces a new resource to be created.

privacyStatementUriB" The URI containing the Privacy Statement associated with this Shared Image. Changing this forces a new resource to be created.
£
purchasePlangBe:c
a
computeSharedImagePurchasePlan=azure:compute/SharedImagePurchasePlan:SharedImagePurchasePlan*A `purchase_plan` block as defined below.
`
releaseNoteUriB" HThe URI containing the Release Notes associated with this Shared Image.

resourceGroupName" |The name of the resource group in which the Shared Image Gallery exists. Changing this forces a new resource to be created.

specializedB
 ùSpecifies that the Operating System used inside this Image has not been Generalized (for example, `sysprep` on Windows has not been run). Changing this forces a new resource to be created.

!> **Note:** It's recommended to Generalize images where possible - Specialized Images reuse the same UUID internally within each Virtual Machine, which can have unintended side-effects.
A
tagsB2" 1A mapping of tags to assign to the Shared Image.
·
trustedLaunchEnabledB
 Specifies if Trusted Launch has to be enabled for the Virtual Machine created from the Shared Image. Changing this forces a new resource to be created.
ë
trustedLaunchSupportedB
 ÊSpecifies if supports creation of both Trusted Launch virtual machines and Gen2 virtual machines with standard security created from the Shared Image. Changing this forces a new resource to be created.
"
 acceleratedNetworkSupportEnabledB
 oSpecifies if the Shared Image supports Accelerated Network. Changing this forces a new resource to be created.
"©
architectureB" CPU architecture supported by an OS. Possible values are `x64` and `Arm64`. Defaults to `x64`. Changing this forces a new resource to be created.
"¹
confidentialVmEnabledB
 Specifies if Confidential Virtual Machines enabled. It will enable all the features of trusted, with higher confidentiality features for isolate machines or encrypted data. Available for Gen2 machines. Changing this forces a new resource to be created.

> **Note:**: Only one of `trusted_launch_supported`, `trusted_launch_enabled`, `confidential_vm_supported` and `confidential_vm_enabled` can be specified.
"
confidentialVmSupportedB
 ãSpecifies if supports creation of both Confidential virtual machines and Gen2 virtual machines with standard security from a compatible Gen2 OS disk VHD or Gen2 Managed image. Changing this forces a new resource to be created.
"9
descriptionB" $A description of this Shared Image.
"
diskControllerTypeNvmeEnabledB
 fSpecifies if the Shared Image supports NVMe disks. Changing this forces a new resource to be created.
"
diskTypesNotAllowedsB*" lOne or more Disk Types not allowed for the Image. Possible values include `Standard_LRS` and `Premium_LRS`.
"L
endOfLifeDateB" 5The end of life date in RFC3339 format of the Image.
"v
eulaB" hThe End User Licence Agreement for the Shared Image. Changing this forces a new resource to be created.
"
galleryName" Specifies the name of the Shared Image Gallery in which this Shared Image should exist. Changing this forces a new resource to be created.
"
hibernationEnabledB
 gSpecifies if the Shared Image supports hibernation. Changing this forces a new resource to be created.
"â
hyperVGenerationB" ÇThe generation of HyperV that the Virtual Machine used to create the Shared Image is based on. Possible values are `V1` and `V2`. Defaults to `V1`. Changing this forces a new resource to be created.
"

identifier_:]
[
computeSharedImageIdentifier9azure:compute/SharedImageIdentifier:SharedImageIdentifier(An `identifier` block as defined below.
"
location" Specifies the supported Azure location where the Shared Image Gallery exists. Changing this forces a new resource to be created.
"R
maxRecommendedMemoryInGbB 0Maximum memory in GB recommended for the Image.
"S
maxRecommendedVcpuCountB 2Maximum count of vCPUs recommended for the Image.
"R
minRecommendedMemoryInGbB 0Minimum memory in GB recommended for the Image.
"S
minRecommendedVcpuCountB 2Minimum count of vCPUs recommended for the Image.
"g
name" [Specifies the name of the Shared Image. Changing this forces a new resource to be created.
"¨
osType" The type of Operating System present in this Shared Image. Possible values are `Linux` and `Windows`. Changing this forces a new resource to be created.
"
privacyStatementUriB" The URI containing the Privacy Statement associated with this Shared Image. Changing this forces a new resource to be created.
"£
purchasePlangBe:c
a
computeSharedImagePurchasePlan=azure:compute/SharedImagePurchasePlan:SharedImagePurchasePlan*A `purchase_plan` block as defined below.
"`
releaseNoteUriB" HThe URI containing the Release Notes associated with this Shared Image.
"
resourceGroupName" |The name of the resource group in which the Shared Image Gallery exists. Changing this forces a new resource to be created.
"
specializedB
 ùSpecifies that the Operating System used inside this Image has not been Generalized (for example, `sysprep` on Windows has not been run). Changing this forces a new resource to be created.

!> **Note:** It's recommended to Generalize images where possible - Specialized Images reuse the same UUID internally within each Virtual Machine, which can have unintended side-effects.
"A
tagsB2" 1A mapping of tags to assign to the Shared Image.
"·
trustedLaunchEnabledB
 Specifies if Trusted Launch has to be enabled for the Virtual Machine created from the Shared Image. Changing this forces a new resource to be created.
"ë
trustedLaunchSupportedB
 ÊSpecifies if supports creation of both Trusted Launch virtual machines and Gen2 virtual machines with standard security created from the Shared Image. Changing this forces a new resource to be created.
*2
R
computeSharedImageGallery3azure:compute/sharedImageGallery:SharedImageGallery%Manages a Shared Image Gallery.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const example = new azure.core.ResourceGroup("example", {
    name: "example-resources",
    location: "West Europe",
});
const exampleSharedImageGallery = new azure.compute.SharedImageGallery("example", {
    name: "example_image_gallery",
    resourceGroupName: example.name,
    location: example.location,
    description: "Shared images and things.",
    tags: {
        Hello: "There",
        World: "Example",
    },
});
```
```python
import pulumi
import pulumi_azure as azure

example = azure.core.ResourceGroup("example",
    name="example-resources",
    location="West Europe")
example_shared_image_gallery = azure.compute.SharedImageGallery("example",
    name="example_image_gallery",
    resource_group_name=example.name,
    location=example.location,
    description="Shared images and things.",
    tags={
        "Hello": "There",
        "World": "Example",
    })
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var example = new Azure.Core.ResourceGroup("example", new()
    {
        Name = "example-resources",
        Location = "West Europe",
    });

    var exampleSharedImageGallery = new Azure.Compute.SharedImageGallery("example", new()
    {
        Name = "example_image_gallery",
        ResourceGroupName = example.Name,
        Location = example.Location,
        Description = "Shared images and things.",
        Tags = 
        {
            { "Hello", "There" },
            { "World", "Example" },
        },
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/compute"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
			Name:     pulumi.String("example-resources"),
			Location: pulumi.String("West Europe"),
		})
		if err != nil {
			return err
		}
		_, err = compute.NewSharedImageGallery(ctx, "example", &compute.SharedImageGalleryArgs{
			Name:              pulumi.String("example_image_gallery"),
			ResourceGroupName: example.Name,
			Location:          example.Location,
			Description:       pulumi.String("Shared images and things."),
			Tags: pulumi.StringMap{
				"Hello": pulumi.String("There"),
				"World": pulumi.String("Example"),
			},
		})
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.core.ResourceGroup;
import com.pulumi.azure.core.ResourceGroupArgs;
import com.pulumi.azure.compute.SharedImageGallery;
import com.pulumi.azure.compute.SharedImageGalleryArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        var example = new ResourceGroup("example", ResourceGroupArgs.builder()
            .name("example-resources")
            .location("West Europe")
            .build());

        var exampleSharedImageGallery = new SharedImageGallery("exampleSharedImageGallery", SharedImageGalleryArgs.builder()
            .name("example_image_gallery")
            .resourceGroupName(example.name())
            .location(example.location())
            .description("Shared images and things.")
            .tags(Map.ofEntries(
                Map.entry("Hello", "There"),
                Map.entry("World", "Example")
            ))
            .build());

    }
}
```
```yaml
resources:
  example:
    type: azure:core:ResourceGroup
    properties:
      name: example-resources
      location: West Europe
  exampleSharedImageGallery:
    type: azure:compute:SharedImageGallery
    name: example
    properties:
      name: example_image_gallery
      resourceGroupName: ${example.name}
      location: ${example.location}
      description: Shared images and things.
      tags:
        Hello: There
        World: Example
```
<!--End PulumiCodeChooser -->

## Import

Shared Image Galleries can be imported using the `resource id`, e.g.

```sh
$ pulumi import azure:compute/sharedImageGallery:SharedImageGallery gallery1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Compute/galleries/gallery1
```

B
descriptionB" -A description for this Shared Image Gallery.

locationB" uSpecifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
q
nameB" cSpecifies the name of the Shared Image Gallery. Changing this forces a new resource to be created.

resourceGroupName" The name of the resource group in which to create the Shared Image Gallery. Changing this forces a new resource to be created.
Ñ
sharingmBk:i
g
computeSharedImageGallerySharingAazure:compute/SharedImageGallerySharing:SharedImageGallerySharingWA `sharing` block as defined below. Changing this forces a new resource to be created.
I
tagsB2" 9A mapping of tags to assign to the Shared Image Gallery.
"B
descriptionB" -A description for this Shared Image Gallery.
"
location" uSpecifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
"o
name" cSpecifies the name of the Shared Image Gallery. Changing this forces a new resource to be created.
"
resourceGroupName" The name of the resource group in which to create the Shared Image Gallery. Changing this forces a new resource to be created.
"Ñ
sharingmBk:i
g
computeSharedImageGallerySharingAazure:compute/SharedImageGallerySharing:SharedImageGallerySharingWA `sharing` block as defined below. Changing this forces a new resource to be created.
"I
tagsB2" 9A mapping of tags to assign to the Shared Image Gallery.
"A

uniqueName" /The Unique Name for this Shared Image Gallery.
*ªp
R
computeSharedImageVersion3azure:compute/sharedImageVersion:SharedImageVersionCManages a Version of a Shared Image within a Shared Image Gallery.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const existing = azure.compute.getImage({
    name: "search-api",
    resourceGroupName: "packerimages",
});
const existingGetSharedImage = azure.compute.getSharedImage({
    name: "existing-image",
    galleryName: "existing_gallery",
    resourceGroupName: "existing-resources",
});
const example = new azure.compute.SharedImageVersion("example", {
    name: "0.0.1",
    galleryName: existingGetSharedImage.then(existingGetSharedImage => existingGetSharedImage.galleryName),
    imageName: existingGetSharedImage.then(existingGetSharedImage => existingGetSharedImage.name),
    resourceGroupName: existingGetSharedImage.then(existingGetSharedImage => existingGetSharedImage.resourceGroupName),
    location: existingGetSharedImage.then(existingGetSharedImage => existingGetSharedImage.location),
    managedImageId: existing.then(existing => existing.id),
    targetRegions: [{
        name: existingGetSharedImage.then(existingGetSharedImage => existingGetSharedImage.location),
        regionalReplicaCount: 5,
        storageAccountType: "Standard_LRS",
    }],
});
```
```python
import pulumi
import pulumi_azure as azure

existing = azure.compute.get_image(name="search-api",
    resource_group_name="packerimages")
existing_get_shared_image = azure.compute.get_shared_image(name="existing-image",
    gallery_name="existing_gallery",
    resource_group_name="existing-resources")
example = azure.compute.SharedImageVersion("example",
    name="0.0.1",
    gallery_name=existing_get_shared_image.gallery_name,
    image_name=existing_get_shared_image.name,
    resource_group_name=existing_get_shared_image.resource_group_name,
    location=existing_get_shared_image.location,
    managed_image_id=existing.id,
    target_regions=[{
        "name": existing_get_shared_image.location,
        "regional_replica_count": 5,
        "storage_account_type": "Standard_LRS",
    }])
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var existing = Azure.Compute.GetImage.Invoke(new()
    {
        Name = "search-api",
        ResourceGroupName = "packerimages",
    });

    var existingGetSharedImage = Azure.Compute.GetSharedImage.Invoke(new()
    {
        Name = "existing-image",
        GalleryName = "existing_gallery",
        ResourceGroupName = "existing-resources",
    });

    var example = new Azure.Compute.SharedImageVersion("example", new()
    {
        Name = "0.0.1",
        GalleryName = existingGetSharedImage.Apply(getSharedImageResult => getSharedImageResult.GalleryName),
        ImageName = existingGetSharedImage.Apply(getSharedImageResult => getSharedImageResult.Name),
        ResourceGroupName = existingGetSharedImage.Apply(getSharedImageResult => getSharedImageResult.ResourceGroupName),
        Location = existingGetSharedImage.Apply(getSharedImageResult => getSharedImageResult.Location),
        ManagedImageId = existing.Apply(getImageResult => getImageResult.Id),
        TargetRegions = new[]
        {
            new Azure.Compute.Inputs.SharedImageVersionTargetRegionArgs
            {
                Name = existingGetSharedImage.Apply(getSharedImageResult => getSharedImageResult.Location),
                RegionalReplicaCount = 5,
                StorageAccountType = "Standard_LRS",
            },
        },
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/compute"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		existing, err := compute.LookupImage(ctx, &compute.LookupImageArgs{
			Name:              pulumi.StringRef("search-api"),
			ResourceGroupName: "packerimages",
		}, nil)
		if err != nil {
			return err
		}
		existingGetSharedImage, err := compute.LookupSharedImage(ctx, &compute.LookupSharedImageArgs{
			Name:              "existing-image",
			GalleryName:       "existing_gallery",
			ResourceGroupName: "existing-resources",
		}, nil)
		if err != nil {
			return err
		}
		_, err = compute.NewSharedImageVersion(ctx, "example", &compute.SharedImageVersionArgs{
			Name:              pulumi.String("0.0.1"),
			GalleryName:       pulumi.String(existingGetSharedImage.GalleryName),
			ImageName:         pulumi.String(existingGetSharedImage.Name),
			ResourceGroupName: pulumi.String(existingGetSharedImage.ResourceGroupName),
			Location:          pulumi.String(existingGetSharedImage.Location),
			ManagedImageId:    pulumi.String(existing.Id),
			TargetRegions: compute.SharedImageVersionTargetRegionArray{
				&compute.SharedImageVersionTargetRegionArgs{
					Name:                 pulumi.String(existingGetSharedImage.Location),
					RegionalReplicaCount: pulumi.Int(5),
					StorageAccountType:   pulumi.String("Standard_LRS"),
				},
			},
		})
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.compute.ComputeFunctions;
import com.pulumi.azure.compute.inputs.GetImageArgs;
import com.pulumi.azure.compute.inputs.GetSharedImageArgs;
import com.pulumi.azure.compute.SharedImageVersion;
import com.pulumi.azure.compute.SharedImageVersionArgs;
import com.pulumi.azure.compute.inputs.SharedImageVersionTargetRegionArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        final var existing = ComputeFunctions.getImage(GetImageArgs.builder()
            .name("search-api")
            .resourceGroupName("packerimages")
            .build());

        final var existingGetSharedImage = ComputeFunctions.getSharedImage(GetSharedImageArgs.builder()
            .name("existing-image")
            .galleryName("existing_gallery")
            .resourceGroupName("existing-resources")
            .build());

        var example = new SharedImageVersion("example", SharedImageVersionArgs.builder()
            .name("0.0.1")
            .galleryName(existingGetSharedImage.applyValue(getSharedImageResult -> getSharedImageResult.galleryName()))
            .imageName(existingGetSharedImage.applyValue(getSharedImageResult -> getSharedImageResult.name()))
            .resourceGroupName(existingGetSharedImage.applyValue(getSharedImageResult -> getSharedImageResult.resourceGroupName()))
            .location(existingGetSharedImage.applyValue(getSharedImageResult -> getSharedImageResult.location()))
            .managedImageId(existing.applyValue(getImageResult -> getImageResult.id()))
            .targetRegions(SharedImageVersionTargetRegionArgs.builder()
                .name(existingGetSharedImage.applyValue(getSharedImageResult -> getSharedImageResult.location()))
                .regionalReplicaCount(5)
                .storageAccountType("Standard_LRS")
                .build())
            .build());

    }
}
```
```yaml
resources:
  example:
    type: azure:compute:SharedImageVersion
    properties:
      name: 0.0.1
      galleryName: ${existingGetSharedImage.galleryName}
      imageName: ${existingGetSharedImage.name}
      resourceGroupName: ${existingGetSharedImage.resourceGroupName}
      location: ${existingGetSharedImage.location}
      managedImageId: ${existing.id}
      targetRegions:
        - name: ${existingGetSharedImage.location}
          regionalReplicaCount: 5
          storageAccountType: Standard_LRS
variables:
  existing:
    fn::invoke:
      function: azure:compute:getImage
      arguments:
        name: search-api
        resourceGroupName: packerimages
  existingGetSharedImage:
    fn::invoke:
      function: azure:compute:getSharedImage
      arguments:
        name: existing-image
        galleryName: existing_gallery
        resourceGroupName: existing-resources
```
<!--End PulumiCodeChooser -->

## Import

Shared Image Versions can be imported using the `resource id`, e.g.

```sh
$ pulumi import azure:compute/sharedImageVersion:SharedImageVersion version /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Compute/galleries/gallery1/images/image1/versions/1.2.3
```

¶
blobUriB" ¤URI of the Azure Storage Blob used to create the Image Version. Changing this forces a new resource to be created.

> **NOTE:** You must specify exact one of `blob_uri`, `managed_image_id` and `os_disk_snapshot_id`.

> **NOTE:** `blob_uri` and `storage_account_id` must be specified together
à
$deletionOfReplicatedLocationsEnabledB
 ±Specifies whether this Shared Image Version can be deleted from the Azure Regions this is replicated to. Defaults to `false`. Changing this forces a new resource to be created.
T
endOfLifeDateB" =The end of life date in RFC3339 format of the Image Version.
Á
excludeFromLatestB
 ¥Should this Image Version be excluded from the `latest` filter? If set to `true` this Image Version won't be returned for the `latest` version. Defaults to `false`.

galleryName" zThe name of the Shared Image Gallery in which the Shared Image exists. Changing this forces a new resource to be created.
«
	imageName" The name of the Shared Image within the Shared Image Gallery in which this Version should be created. Changing this forces a new resource to be created.

locationB" nThe Azure Region in which the Shared Image Gallery exists. Changing this forces a new resource to be created.
ñ
managedImageIdB" ØThe ID of the Managed Image or Virtual Machine ID which should be used for this Shared Image Version. Changing this forces a new resource to be created.

> **NOTE:** The ID can be sourced from the `azure.compute.Image` data source or resource

> **NOTE:** You must specify exact one of `blob_uri`, `managed_image_id` and `os_disk_snapshot_id`.
}
nameB" oThe version number for this Image Version, such as `1.0.0`. Changing this forces a new resource to be created.

osDiskSnapshotIdB" ëThe ID of the OS disk snapshot which should be used for this Shared Image Version. Changing this forces a new resource to be created.

> **NOTE:** You must specify exact one of `blob_uri`, `managed_image_id` and `os_disk_snapshot_id`.
¬
replicationModeB" Mode to be used for replication. Possible values are `Full` and `Shallow`. Defaults to `Full`. Changing this forces a new resource to be created.

resourceGroupName" |The name of the Resource Group in which the Shared Image Gallery exists. Changing this forces a new resource to be created.
Ï
storageAccountIdB" ´The ID of the Storage Account where the Blob exists. Changing this forces a new resource to be created.

> **NOTE:** `blob_uri` and `storage_account_id` must be specified together
O
tagsB2" ?A collection of tags which should be applied to this resource.
Ç
targetRegions|*z:x
v
computeSharedImageVersionTargetRegionKazure:compute/SharedImageVersionTargetRegion:SharedImageVersionTargetRegion8One or more `target_region` blocks as documented below.
"¶
blobUriB" ¤URI of the Azure Storage Blob used to create the Image Version. Changing this forces a new resource to be created.

> **NOTE:** You must specify exact one of `blob_uri`, `managed_image_id` and `os_disk_snapshot_id`.

> **NOTE:** `blob_uri` and `storage_account_id` must be specified together
"à
$deletionOfReplicatedLocationsEnabledB
 ±Specifies whether this Shared Image Version can be deleted from the Azure Regions this is replicated to. Defaults to `false`. Changing this forces a new resource to be created.
"T
endOfLifeDateB" =The end of life date in RFC3339 format of the Image Version.
"Á
excludeFromLatestB
 ¥Should this Image Version be excluded from the `latest` filter? If set to `true` this Image Version won't be returned for the `latest` version. Defaults to `false`.
"
galleryName" zThe name of the Shared Image Gallery in which the Shared Image exists. Changing this forces a new resource to be created.
"«
	imageName" The name of the Shared Image within the Shared Image Gallery in which this Version should be created. Changing this forces a new resource to be created.
"~
location" nThe Azure Region in which the Shared Image Gallery exists. Changing this forces a new resource to be created.
"ñ
managedImageIdB" ØThe ID of the Managed Image or Virtual Machine ID which should be used for this Shared Image Version. Changing this forces a new resource to be created.

> **NOTE:** The ID can be sourced from the `azure.compute.Image` data source or resource

> **NOTE:** You must specify exact one of `blob_uri`, `managed_image_id` and `os_disk_snapshot_id`.
"{
name" oThe version number for this Image Version, such as `1.0.0`. Changing this forces a new resource to be created.
"
osDiskSnapshotIdB" ëThe ID of the OS disk snapshot which should be used for this Shared Image Version. Changing this forces a new resource to be created.

> **NOTE:** You must specify exact one of `blob_uri`, `managed_image_id` and `os_disk_snapshot_id`.
"¬
replicationModeB" Mode to be used for replication. Possible values are `Full` and `Shallow`. Defaults to `Full`. Changing this forces a new resource to be created.
"
resourceGroupName" |The name of the Resource Group in which the Shared Image Gallery exists. Changing this forces a new resource to be created.
"Ï
storageAccountIdB" ´The ID of the Storage Account where the Blob exists. Changing this forces a new resource to be created.

> **NOTE:** `blob_uri` and `storage_account_id` must be specified together
"O
tagsB2" ?A collection of tags which should be applied to this resource.
"Ç
targetRegions|*z:x
v
computeSharedImageVersionTargetRegionKazure:compute/SharedImageVersionTargetRegion:SharedImageVersionTargetRegion8One or more `target_region` blocks as documented below.
*äP
4
computeSnapshotazure:compute/snapshot:SnapshotÏ.Manages a Disk Snapshot.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const example = new azure.core.ResourceGroup("example", {
    name: "snapshot-rg",
    location: "West Europe",
});
const exampleManagedDisk = new azure.compute.ManagedDisk("example", {
    name: "managed-disk",
    location: example.location,
    resourceGroupName: example.name,
    storageAccountType: "Standard_LRS",
    createOption: "Empty",
    diskSizeGb: 10,
});
const exampleSnapshot = new azure.compute.Snapshot("example", {
    name: "snapshot",
    location: example.location,
    resourceGroupName: example.name,
    createOption: "Copy",
    sourceUri: exampleManagedDisk.id,
});
```
```python
import pulumi
import pulumi_azure as azure

example = azure.core.ResourceGroup("example",
    name="snapshot-rg",
    location="West Europe")
example_managed_disk = azure.compute.ManagedDisk("example",
    name="managed-disk",
    location=example.location,
    resource_group_name=example.name,
    storage_account_type="Standard_LRS",
    create_option="Empty",
    disk_size_gb=10)
example_snapshot = azure.compute.Snapshot("example",
    name="snapshot",
    location=example.location,
    resource_group_name=example.name,
    create_option="Copy",
    source_uri=example_managed_disk.id)
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var example = new Azure.Core.ResourceGroup("example", new()
    {
        Name = "snapshot-rg",
        Location = "West Europe",
    });

    var exampleManagedDisk = new Azure.Compute.ManagedDisk("example", new()
    {
        Name = "managed-disk",
        Location = example.Location,
        ResourceGroupName = example.Name,
        StorageAccountType = "Standard_LRS",
        CreateOption = "Empty",
        DiskSizeGb = 10,
    });

    var exampleSnapshot = new Azure.Compute.Snapshot("example", new()
    {
        Name = "snapshot",
        Location = example.Location,
        ResourceGroupName = example.Name,
        CreateOption = "Copy",
        SourceUri = exampleManagedDisk.Id,
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/compute"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
			Name:     pulumi.String("snapshot-rg"),
			Location: pulumi.String("West Europe"),
		})
		if err != nil {
			return err
		}
		exampleManagedDisk, err := compute.NewManagedDisk(ctx, "example", &compute.ManagedDiskArgs{
			Name:               pulumi.String("managed-disk"),
			Location:           example.Location,
			ResourceGroupName:  example.Name,
			StorageAccountType: pulumi.String("Standard_LRS"),
			CreateOption:       pulumi.String("Empty"),
			DiskSizeGb:         pulumi.Int(10),
		})
		if err != nil {
			return err
		}
		_, err = compute.NewSnapshot(ctx, "example", &compute.SnapshotArgs{
			Name:              pulumi.String("snapshot"),
			Location:          example.Location,
			ResourceGroupName: example.Name,
			CreateOption:      pulumi.String("Copy"),
			SourceUri:         exampleManagedDisk.ID(),
		})
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.core.ResourceGroup;
import com.pulumi.azure.core.ResourceGroupArgs;
import com.pulumi.azure.compute.ManagedDisk;
import com.pulumi.azure.compute.ManagedDiskArgs;
import com.pulumi.azure.compute.Snapshot;
import com.pulumi.azure.compute.SnapshotArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        var example = new ResourceGroup("example", ResourceGroupArgs.builder()
            .name("snapshot-rg")
            .location("West Europe")
            .build());

        var exampleManagedDisk = new ManagedDisk("exampleManagedDisk", ManagedDiskArgs.builder()
            .name("managed-disk")
            .location(example.location())
            .resourceGroupName(example.name())
            .storageAccountType("Standard_LRS")
            .createOption("Empty")
            .diskSizeGb("10")
            .build());

        var exampleSnapshot = new Snapshot("exampleSnapshot", SnapshotArgs.builder()
            .name("snapshot")
            .location(example.location())
            .resourceGroupName(example.name())
            .createOption("Copy")
            .sourceUri(exampleManagedDisk.id())
            .build());

    }
}
```
```yaml
resources:
  example:
    type: azure:core:ResourceGroup
    properties:
      name: snapshot-rg
      location: West Europe
  exampleManagedDisk:
    type: azure:compute:ManagedDisk
    name: example
    properties:
      name: managed-disk
      location: ${example.location}
      resourceGroupName: ${example.name}
      storageAccountType: Standard_LRS
      createOption: Empty
      diskSizeGb: '10'
  exampleSnapshot:
    type: azure:compute:Snapshot
    name: example
    properties:
      name: snapshot
      location: ${example.location}
      resourceGroupName: ${example.name}
      createOption: Copy
      sourceUri: ${exampleManagedDisk.id}
```
<!--End PulumiCodeChooser -->

## Import

Snapshots can be imported using the `resource id`, e.g.

```sh
$ pulumi import azure:compute/snapshot:Snapshot example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Compute/snapshots/snapshot1
```

Í
createOption" ¸Indicates how the snapshot is to be created. Possible values are `Copy` or `Import`. 

> **Note:** One of `source_uri`, `source_resource_id` or `storage_account_id` must be specified.
·
diskAccessIdB"  Specifies the ID of the Disk Access which should be used for this Snapshot. This is used in conjunction with setting `network_access_policy` to `AllowPrivate`.
<

diskSizeGbB (The size of the Snapshotted Disk in GB.

encryptionSettingspBn:l
j
computeSnapshotEncryptionSettingsCazure:compute/SnapshotEncryptionSettings:SnapshotEncryptionSettingsA `encryption_settings` block as defined below.

> **NOTE:** Removing `encryption_settings` forces a new resource to be created.
y
incrementalEnabledB
 ]Specifies if the Snapshot is incremental. Changing this forces a new resource to be created.

locationB" uSpecifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
n
nameB" `Specifies the name of the Snapshot resource. Changing this forces a new resource to be created.

networkAccessPolicyB" Policy for accessing the disk via network. Possible values are `AllowAll`, `AllowPrivate`, or `DenyAll`. Defaults to `AllowAll`.

publicNetworkAccessEnabledB
 fPolicy for controlling export on the disk. Possible values are `true` or `false`. Defaults to `true`.

resourceGroupName" sThe name of the resource group in which to create the Snapshot. Changing this forces a new resource to be created.

sourceResourceIdB" Specifies a reference to an existing snapshot, when `create_option` is `Copy`. Changing this forces a new resource to be created.
x
	sourceUriB" eSpecifies the URI to a Managed or Unmanaged Disk. Changing this forces a new resource to be created.
ä
storageAccountIdB" ÉSpecifies the ID of an storage account. Used with `source_uri` to allow authorization during import of unmanaged blobs from a different subscription. Changing this forces a new resource to be created.
=
tagsB2" -A mapping of tags to assign to the resource.
"Í
createOption" ¸Indicates how the snapshot is to be created. Possible values are `Copy` or `Import`. 

> **Note:** One of `source_uri`, `source_resource_id` or `storage_account_id` must be specified.
"·
diskAccessIdB"  Specifies the ID of the Disk Access which should be used for this Snapshot. This is used in conjunction with setting `network_access_policy` to `AllowPrivate`.
":

diskSizeGb (The size of the Snapshotted Disk in GB.
"
encryptionSettingspBn:l
j
computeSnapshotEncryptionSettingsCazure:compute/SnapshotEncryptionSettings:SnapshotEncryptionSettingsA `encryption_settings` block as defined below.

> **NOTE:** Removing `encryption_settings` forces a new resource to be created.
"y
incrementalEnabledB
 ]Specifies if the Snapshot is incremental. Changing this forces a new resource to be created.
"
location" uSpecifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
"l
name" `Specifies the name of the Snapshot resource. Changing this forces a new resource to be created.
"
networkAccessPolicyB" Policy for accessing the disk via network. Possible values are `AllowAll`, `AllowPrivate`, or `DenyAll`. Defaults to `AllowAll`.
"
publicNetworkAccessEnabledB
 fPolicy for controlling export on the disk. Possible values are `true` or `false`. Defaults to `true`.
"
resourceGroupName" sThe name of the resource group in which to create the Snapshot. Changing this forces a new resource to be created.
"
sourceResourceIdB" Specifies a reference to an existing snapshot, when `create_option` is `Copy`. Changing this forces a new resource to be created.
"x
	sourceUriB" eSpecifies the URI to a Managed or Unmanaged Disk. Changing this forces a new resource to be created.
"ä
storageAccountIdB" ÉSpecifies the ID of an storage account. Used with `source_uri` to allow authorization during import of unmanaged blobs from a different subscription. Changing this forces a new resource to be created.
"=
tagsB2" -A mapping of tags to assign to the resource.
"P
trustedLaunchEnabled
 4Whether Trusted Launch is enabled for the Snapshot.
*õ%
@
computeSshPublicKey'azure:compute/sshPublicKey:SshPublicKeyúManages a SSH Public Key.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";
import * as std from "@pulumi/std";

const example = new azure.compute.SshPublicKey("example", {
    name: "example",
    resourceGroupName: "example",
    location: "West Europe",
    publicKey: std.file({
        input: "~/.ssh/id_rsa.pub",
    }).then(invoke => invoke.result),
});
```
```python
import pulumi
import pulumi_azure as azure
import pulumi_std as std

example = azure.compute.SshPublicKey("example",
    name="example",
    resource_group_name="example",
    location="West Europe",
    public_key=std.file(input="~/.ssh/id_rsa.pub").result)
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;
using Std = Pulumi.Std;

return await Deployment.RunAsync(() => 
{
    var example = new Azure.Compute.SshPublicKey("example", new()
    {
        Name = "example",
        ResourceGroupName = "example",
        Location = "West Europe",
        PublicKey = Std.File.Invoke(new()
        {
            Input = "~/.ssh/id_rsa.pub",
        }).Apply(invoke => invoke.Result),
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/compute"
	"github.com/pulumi/pulumi-std/sdk/go/std"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		invokeFile, err := std.File(ctx, &std.FileArgs{
			Input: "~/.ssh/id_rsa.pub",
		}, nil)
		if err != nil {
			return err
		}
		_, err = compute.NewSshPublicKey(ctx, "example", &compute.SshPublicKeyArgs{
			Name:              pulumi.String("example"),
			ResourceGroupName: pulumi.String("example"),
			Location:          pulumi.String("West Europe"),
			PublicKey:         pulumi.String(invokeFile.Result),
		})
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.compute.SshPublicKey;
import com.pulumi.azure.compute.SshPublicKeyArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        var example = new SshPublicKey("example", SshPublicKeyArgs.builder()
            .name("example")
            .resourceGroupName("example")
            .location("West Europe")
            .publicKey(StdFunctions.file(FileArgs.builder()
                .input("~/.ssh/id_rsa.pub")
                .build()).result())
            .build());

    }
}
```
```yaml
resources:
  example:
    type: azure:compute:SshPublicKey
    properties:
      name: example
      resourceGroupName: example
      location: West Europe
      publicKey:
        fn::invoke:
          function: std:file
          arguments:
            input: ~/.ssh/id_rsa.pub
          return: result
```
<!--End PulumiCodeChooser -->

## Import

SSH Public Keys can be imported using the `resource id`, e.g.

```sh
$ pulumi import azure:compute/sshPublicKey:SshPublicKey example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Compute/sshPublicKeys/mySshPublicKeyName1
```


locationB" qThe Azure Region where the SSH Public Key should exist. Changing this forces a new SSH Public Key to be created.
~
nameB" pThe name which should be used for this SSH Public Key. Changing this forces a new SSH Public Key to be created.
¥
	publicKey" SSH public key used to authenticate to a virtual machine through ssh. the provided public key needs to be at least 2048-bit and in ssh-rsa format.

resourceGroupName" The name of the Resource Group where the SSH Public Key should exist. Changing this forces a new SSH Public Key to be created.
R
tagsB2" BA mapping of tags which should be assigned to the SSH Public Key.
"
location" qThe Azure Region where the SSH Public Key should exist. Changing this forces a new SSH Public Key to be created.
"|
name" pThe name which should be used for this SSH Public Key. Changing this forces a new SSH Public Key to be created.
"¥
	publicKey" SSH public key used to authenticate to a virtual machine through ssh. the provided public key needs to be at least 2048-bit and in ssh-rsa format.
"
resourceGroupName" The name of the Resource Group where the SSH Public Key should exist. Changing this forces a new SSH Public Key to be created.
"R
tagsB2" BA mapping of tags which should be assigned to the SSH Public Key.
*Õ
F
computeVirtualMachine+azure:compute/virtualMachine:VirtualMachineÛManages a Virtual Machine.

## Disclaimers

> **Note:** The `azure.compute.VirtualMachine` resource has been superseded by the `azure.compute.LinuxVirtualMachine` and `azure.compute.WindowsVirtualMachine` resources. The existing `azure.compute.VirtualMachine` resource will continue to be available throughout the 2.x releases however is in a feature-frozen state to maintain compatibility - new functionality will instead be added to the `azure.compute.LinuxVirtualMachine` and `azure.compute.WindowsVirtualMachine` resources.

> **Note:** Data Disks can be attached either directly on the `azure.compute.VirtualMachine` resource, or using the `azure.compute.DataDiskAttachment` resource - but the two cannot be used together. If both are used against the same Virtual Machine, spurious changes will occur.

## Example Usage

### From An Azure Platform Image)

This example provisions a Virtual Machine with Managed Disks.

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const config = new pulumi.Config();
const prefix = config.get("prefix") || "tfvmex";
const example = new azure.core.ResourceGroup("example", {
    name: `${prefix}-resources`,
    location: "West Europe",
});
const main = new azure.network.VirtualNetwork("main", {
    name: `${prefix}-network`,
    addressSpaces: ["10.0.0.0/16"],
    location: example.location,
    resourceGroupName: example.name,
});
const internal = new azure.network.Subnet("internal", {
    name: "internal",
    resourceGroupName: example.name,
    virtualNetworkName: main.name,
    addressPrefixes: ["10.0.2.0/24"],
});
const mainNetworkInterface = new azure.network.NetworkInterface("main", {
    name: `${prefix}-nic`,
    location: example.location,
    resourceGroupName: example.name,
    ipConfigurations: [{
        name: "testconfiguration1",
        subnetId: internal.id,
        privateIpAddressAllocation: "Dynamic",
    }],
});
const mainVirtualMachine = new azure.compute.VirtualMachine("main", {
    name: `${prefix}-vm`,
    location: example.location,
    resourceGroupName: example.name,
    networkInterfaceIds: [mainNetworkInterface.id],
    vmSize: "Standard_DS1_v2",
    storageImageReference: {
        publisher: "Canonical",
        offer: "0001-com-ubuntu-server-jammy",
        sku: "22_04-lts",
        version: "latest",
    },
    storageOsDisk: {
        name: "myosdisk1",
        caching: "ReadWrite",
        createOption: "FromImage",
        managedDiskType: "Standard_LRS",
    },
    osProfile: {
        computerName: "hostname",
        adminUsername: "testadmin",
        adminPassword: "Password1234!",
    },
    osProfileLinuxConfig: {
        disablePasswordAuthentication: false,
    },
    tags: {
        environment: "staging",
    },
});
```
```python
import pulumi
import pulumi_azure as azure

config = pulumi.Config()
prefix = config.get("prefix")
if prefix is None:
    prefix = "tfvmex"
example = azure.core.ResourceGroup("example",
    name=f"{prefix}-resources",
    location="West Europe")
main = azure.network.VirtualNetwork("main",
    name=f"{prefix}-network",
    address_spaces=["10.0.0.0/16"],
    location=example.location,
    resource_group_name=example.name)
internal = azure.network.Subnet("internal",
    name="internal",
    resource_group_name=example.name,
    virtual_network_name=main.name,
    address_prefixes=["10.0.2.0/24"])
main_network_interface = azure.network.NetworkInterface("main",
    name=f"{prefix}-nic",
    location=example.location,
    resource_group_name=example.name,
    ip_configurations=[{
        "name": "testconfiguration1",
        "subnet_id": internal.id,
        "private_ip_address_allocation": "Dynamic",
    }])
main_virtual_machine = azure.compute.VirtualMachine("main",
    name=f"{prefix}-vm",
    location=example.location,
    resource_group_name=example.name,
    network_interface_ids=[main_network_interface.id],
    vm_size="Standard_DS1_v2",
    storage_image_reference={
        "publisher": "Canonical",
        "offer": "0001-com-ubuntu-server-jammy",
        "sku": "22_04-lts",
        "version": "latest",
    },
    storage_os_disk={
        "name": "myosdisk1",
        "caching": "ReadWrite",
        "create_option": "FromImage",
        "managed_disk_type": "Standard_LRS",
    },
    os_profile={
        "computer_name": "hostname",
        "admin_username": "testadmin",
        "admin_password": "Password1234!",
    },
    os_profile_linux_config={
        "disable_password_authentication": False,
    },
    tags={
        "environment": "staging",
    })
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var config = new Config();
    var prefix = config.Get("prefix") ?? "tfvmex";
    var example = new Azure.Core.ResourceGroup("example", new()
    {
        Name = $"{prefix}-resources",
        Location = "West Europe",
    });

    var main = new Azure.Network.VirtualNetwork("main", new()
    {
        Name = $"{prefix}-network",
        AddressSpaces = new[]
        {
            "10.0.0.0/16",
        },
        Location = example.Location,
        ResourceGroupName = example.Name,
    });

    var @internal = new Azure.Network.Subnet("internal", new()
    {
        Name = "internal",
        ResourceGroupName = example.Name,
        VirtualNetworkName = main.Name,
        AddressPrefixes = new[]
        {
            "10.0.2.0/24",
        },
    });

    var mainNetworkInterface = new Azure.Network.NetworkInterface("main", new()
    {
        Name = $"{prefix}-nic",
        Location = example.Location,
        ResourceGroupName = example.Name,
        IpConfigurations = new[]
        {
            new Azure.Network.Inputs.NetworkInterfaceIpConfigurationArgs
            {
                Name = "testconfiguration1",
                SubnetId = @internal.Id,
                PrivateIpAddressAllocation = "Dynamic",
            },
        },
    });

    var mainVirtualMachine = new Azure.Compute.VirtualMachine("main", new()
    {
        Name = $"{prefix}-vm",
        Location = example.Location,
        ResourceGroupName = example.Name,
        NetworkInterfaceIds = new[]
        {
            mainNetworkInterface.Id,
        },
        VmSize = "Standard_DS1_v2",
        StorageImageReference = new Azure.Compute.Inputs.VirtualMachineStorageImageReferenceArgs
        {
            Publisher = "Canonical",
            Offer = "0001-com-ubuntu-server-jammy",
            Sku = "22_04-lts",
            Version = "latest",
        },
        StorageOsDisk = new Azure.Compute.Inputs.VirtualMachineStorageOsDiskArgs
        {
            Name = "myosdisk1",
            Caching = "ReadWrite",
            CreateOption = "FromImage",
            ManagedDiskType = "Standard_LRS",
        },
        OsProfile = new Azure.Compute.Inputs.VirtualMachineOsProfileArgs
        {
            ComputerName = "hostname",
            AdminUsername = "testadmin",
            AdminPassword = "Password1234!",
        },
        OsProfileLinuxConfig = new Azure.Compute.Inputs.VirtualMachineOsProfileLinuxConfigArgs
        {
            DisablePasswordAuthentication = false,
        },
        Tags = 
        {
            { "environment", "staging" },
        },
    });

});
```
```go
package main

import (
	"fmt"

	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/compute"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/network"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		cfg := config.New(ctx, "")
		prefix := "tfvmex"
		if param := cfg.Get("prefix"); param != "" {
			prefix = param
		}
		example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
			Name:     pulumi.Sprintf("%v-resources", prefix),
			Location: pulumi.String("West Europe"),
		})
		if err != nil {
			return err
		}
		main, err := network.NewVirtualNetwork(ctx, "main", &network.VirtualNetworkArgs{
			Name: pulumi.Sprintf("%v-network", prefix),
			AddressSpaces: pulumi.StringArray{
				pulumi.String("10.0.0.0/16"),
			},
			Location:          example.Location,
			ResourceGroupName: example.Name,
		})
		if err != nil {
			return err
		}
		internal, err := network.NewSubnet(ctx, "internal", &network.SubnetArgs{
			Name:               pulumi.String("internal"),
			ResourceGroupName:  example.Name,
			VirtualNetworkName: main.Name,
			AddressPrefixes: pulumi.StringArray{
				pulumi.String("10.0.2.0/24"),
			},
		})
		if err != nil {
			return err
		}
		mainNetworkInterface, err := network.NewNetworkInterface(ctx, "main", &network.NetworkInterfaceArgs{
			Name:              pulumi.Sprintf("%v-nic", prefix),
			Location:          example.Location,
			ResourceGroupName: example.Name,
			IpConfigurations: network.NetworkInterfaceIpConfigurationArray{
				&network.NetworkInterfaceIpConfigurationArgs{
					Name:                       pulumi.String("testconfiguration1"),
					SubnetId:                   internal.ID(),
					PrivateIpAddressAllocation: pulumi.String("Dynamic"),
				},
			},
		})
		if err != nil {
			return err
		}
		_, err = compute.NewVirtualMachine(ctx, "main", &compute.VirtualMachineArgs{
			Name:              pulumi.Sprintf("%v-vm", prefix),
			Location:          example.Location,
			ResourceGroupName: example.Name,
			NetworkInterfaceIds: pulumi.StringArray{
				mainNetworkInterface.ID(),
			},
			VmSize: pulumi.String("Standard_DS1_v2"),
			StorageImageReference: &compute.VirtualMachineStorageImageReferenceArgs{
				Publisher: pulumi.String("Canonical"),
				Offer:     pulumi.String("0001-com-ubuntu-server-jammy"),
				Sku:       pulumi.String("22_04-lts"),
				Version:   pulumi.String("latest"),
			},
			StorageOsDisk: &compute.VirtualMachineStorageOsDiskArgs{
				Name:            pulumi.String("myosdisk1"),
				Caching:         pulumi.String("ReadWrite"),
				CreateOption:    pulumi.String("FromImage"),
				ManagedDiskType: pulumi.String("Standard_LRS"),
			},
			OsProfile: &compute.VirtualMachineOsProfileArgs{
				ComputerName:  pulumi.String("hostname"),
				AdminUsername: pulumi.String("testadmin"),
				AdminPassword: pulumi.String("Password1234!"),
			},
			OsProfileLinuxConfig: &compute.VirtualMachineOsProfileLinuxConfigArgs{
				DisablePasswordAuthentication: pulumi.Bool(false),
			},
			Tags: pulumi.StringMap{
				"environment": pulumi.String("staging"),
			},
		})
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.core.ResourceGroup;
import com.pulumi.azure.core.ResourceGroupArgs;
import com.pulumi.azure.network.VirtualNetwork;
import com.pulumi.azure.network.VirtualNetworkArgs;
import com.pulumi.azure.network.Subnet;
import com.pulumi.azure.network.SubnetArgs;
import com.pulumi.azure.network.NetworkInterface;
import com.pulumi.azure.network.NetworkInterfaceArgs;
import com.pulumi.azure.network.inputs.NetworkInterfaceIpConfigurationArgs;
import com.pulumi.azure.compute.VirtualMachine;
import com.pulumi.azure.compute.VirtualMachineArgs;
import com.pulumi.azure.compute.inputs.VirtualMachineStorageImageReferenceArgs;
import com.pulumi.azure.compute.inputs.VirtualMachineStorageOsDiskArgs;
import com.pulumi.azure.compute.inputs.VirtualMachineOsProfileArgs;
import com.pulumi.azure.compute.inputs.VirtualMachineOsProfileLinuxConfigArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        final var config = ctx.config();
        final var prefix = config.get("prefix").orElse("tfvmex");
        var example = new ResourceGroup("example", ResourceGroupArgs.builder()
            .name(String.format("%s-resources", prefix))
            .location("West Europe")
            .build());

        var main = new VirtualNetwork("main", VirtualNetworkArgs.builder()
            .name(String.format("%s-network", prefix))
            .addressSpaces("10.0.0.0/16")
            .location(example.location())
            .resourceGroupName(example.name())
            .build());

        var internal = new Subnet("internal", SubnetArgs.builder()
            .name("internal")
            .resourceGroupName(example.name())
            .virtualNetworkName(main.name())
            .addressPrefixes("10.0.2.0/24")
            .build());

        var mainNetworkInterface = new NetworkInterface("mainNetworkInterface", NetworkInterfaceArgs.builder()
            .name(String.format("%s-nic", prefix))
            .location(example.location())
            .resourceGroupName(example.name())
            .ipConfigurations(NetworkInterfaceIpConfigurationArgs.builder()
                .name("testconfiguration1")
                .subnetId(internal.id())
                .privateIpAddressAllocation("Dynamic")
                .build())
            .build());

        var mainVirtualMachine = new VirtualMachine("mainVirtualMachine", VirtualMachineArgs.builder()
            .name(String.format("%s-vm", prefix))
            .location(example.location())
            .resourceGroupName(example.name())
            .networkInterfaceIds(mainNetworkInterface.id())
            .vmSize("Standard_DS1_v2")
            .storageImageReference(VirtualMachineStorageImageReferenceArgs.builder()
                .publisher("Canonical")
                .offer("0001-com-ubuntu-server-jammy")
                .sku("22_04-lts")
                .version("latest")
                .build())
            .storageOsDisk(VirtualMachineStorageOsDiskArgs.builder()
                .name("myosdisk1")
                .caching("ReadWrite")
                .createOption("FromImage")
                .managedDiskType("Standard_LRS")
                .build())
            .osProfile(VirtualMachineOsProfileArgs.builder()
                .computerName("hostname")
                .adminUsername("testadmin")
                .adminPassword("Password1234!")
                .build())
            .osProfileLinuxConfig(VirtualMachineOsProfileLinuxConfigArgs.builder()
                .disablePasswordAuthentication(false)
                .build())
            .tags(Map.of("environment", "staging"))
            .build());

    }
}
```
```yaml
configuration:
  prefix:
    type: string
    default: tfvmex
resources:
  example:
    type: azure:core:ResourceGroup
    properties:
      name: ${prefix}-resources
      location: West Europe
  main:
    type: azure:network:VirtualNetwork
    properties:
      name: ${prefix}-network
      addressSpaces:
        - 10.0.0.0/16
      location: ${example.location}
      resourceGroupName: ${example.name}
  internal:
    type: azure:network:Subnet
    properties:
      name: internal
      resourceGroupName: ${example.name}
      virtualNetworkName: ${main.name}
      addressPrefixes:
        - 10.0.2.0/24
  mainNetworkInterface:
    type: azure:network:NetworkInterface
    name: main
    properties:
      name: ${prefix}-nic
      location: ${example.location}
      resourceGroupName: ${example.name}
      ipConfigurations:
        - name: testconfiguration1
          subnetId: ${internal.id}
          privateIpAddressAllocation: Dynamic
  mainVirtualMachine:
    type: azure:compute:VirtualMachine
    name: main
    properties:
      name: ${prefix}-vm
      location: ${example.location}
      resourceGroupName: ${example.name}
      networkInterfaceIds:
        - ${mainNetworkInterface.id}
      vmSize: Standard_DS1_v2
      storageImageReference:
        publisher: Canonical
        offer: 0001-com-ubuntu-server-jammy
        sku: 22_04-lts
        version: latest
      storageOsDisk:
        name: myosdisk1
        caching: ReadWrite
        createOption: FromImage
        managedDiskType: Standard_LRS
      osProfile:
        computerName: hostname
        adminUsername: testadmin
        adminPassword: Password1234!
      osProfileLinuxConfig:
        disablePasswordAuthentication: false
      tags:
        environment: staging
```
<!--End PulumiCodeChooser -->

## Import

Virtual Machines can be imported using the `resource id`, e.g.

```sh
$ pulumi import azure:compute/virtualMachine:VirtualMachine example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Compute/virtualMachines/machine1
```

ã
additionalCapabilitiesB:

compute$VirtualMachineAdditionalCapabilitiesWazure:compute/VirtualMachineAdditionalCapabilities:VirtualMachineAdditionalCapabilities5An `additional_capabilities` block as defined below.

availabilitySetIdB" }The ID of the Availability Set in which the Virtual Machine should exist. Changing this forces a new resource to be created.
»
bootDiagnosticsyBw:u
s
computeVirtualMachineBootDiagnosticsIazure:compute/VirtualMachineBootDiagnostics:VirtualMachineBootDiagnostics-A `boot_diagnostics` block as defined below.
Ú
deleteDataDisksOnTerminationB
 ³Should the Data Disks (either the Managed Disks / VHD Blobs) be deleted when the Virtual Machine is destroyed? Defaults to `false`.

> **Note:** This setting works when instance is deleted via the provider only and don't forget to delete disks manually if you deleted VM manually. It can increase spending.
Ò
deleteOsDiskOnTerminationB
 ®Should the OS Disk (either the Managed Disk / VHD Blob) be deleted when the Virtual Machine is destroyed? Defaults to `false`.

> **Note:** This setting works when instance is deleted via the provider only and don't forget to delete disks manually if you deleted VM manually. It can increase spending.

identitydBb:`
^
computeVirtualMachineIdentity;azure:compute/VirtualMachineIdentity:VirtualMachineIdentity&An `identity` block as defined below.
¸
licenseTypeB" ¢Specifies the BYOL Type for this Virtual Machine. This is only applicable to Windows Virtual Machines. Possible values are `Windows_Client` and `Windows_Server`.

locationB" pSpecifies the Azure Region where the Virtual Machine exists. Changing this forces a new resource to be created.
l
nameB" ^Specifies the name of the Virtual Machine. Changing this forces a new resource to be created.
r
networkInterfaceIds*" UA list of Network Interface IDs which should be associated with the Virtual Machine.
ò
	osProfilegBe:c
a
computeVirtualMachineOsProfile=azure:compute/VirtualMachineOsProfile:VirtualMachineOsProfile|An `os_profile` block as defined below. Required when `create_option` in the `storage_os_disk` block is set to `FromImage`.
ü
osProfileLinuxConfigB:

compute"VirtualMachineOsProfileLinuxConfigSazure:compute/VirtualMachineOsProfileLinuxConfig:VirtualMachineOsProfileLinuxConfigV(Required, when a Linux machine) An `os_profile_linux_config` block as defined below.
Ë
osProfileSecrets{By*w:u
s
computeVirtualMachineOsProfileSecretIazure:compute/VirtualMachineOsProfileSecret:VirtualMachineOsProfileSecret:One or more `os_profile_secrets` blocks as defined below.

osProfileWindowsConfigB:

compute$VirtualMachineOsProfileWindowsConfigWazure:compute/VirtualMachineOsProfileWindowsConfig:VirtualMachineOsProfileWindowsConfigZ(Required, when a Windows machine) An `os_profile_windows_config` block as defined below.

planXBV:T
R
computeVirtualMachinePlan3azure:compute/VirtualMachinePlan:VirtualMachinePlan!A `plan` block as defined below.
¼
primaryNetworkInterfaceIdB" The ID of the Network Interface (which must be attached to the Virtual Machine) which should be the Primary Network Interface for this Virtual Machine.
°
proximityPlacementGroupIdB" The ID of the Proximity Placement Group to which this Virtual Machine should be assigned. Changing this forces a new resource to be created
¡
resourceGroupName" Specifies the name of the Resource Group in which the Virtual Machine should exist. Changing this forces a new resource to be created.
Ú
storageDataDisks{By*w:u
s
computeVirtualMachineStorageDataDiskIazure:compute/VirtualMachineStorageDataDisk:VirtualMachineStorageDataDiskÈOne or more `storage_data_disk` blocks as defined below.

> **Please Note:** Data Disks can also be attached either using this block or the `azure.compute.DataDiskAttachment` resource - but not both.

storageImageReferenceB:

compute#VirtualMachineStorageImageReferenceUazure:compute/VirtualMachineStorageImageReference:VirtualMachineStorageImageReferencegA `storage_image_reference` block as defined below. Changing this forces a new resource to be created.
°
storageOsDiskq:o
m
computeVirtualMachineStorageOsDiskEazure:compute/VirtualMachineStorageOsDisk:VirtualMachineStorageOsDisk,A `storage_os_disk` block as defined below.
D
tagsB2" 4A mapping of tags to assign to the Virtual Machine.
î
vmSize" ßSpecifies the [size of the Virtual Machine](https://docs.microsoft.com/azure/virtual-machines/sizes-general). See also [Azure VM Naming Conventions](https://docs.microsoft.com/azure/virtual-machines/vm-naming-conventions).

zonesB" ùA list of a single item of the Availability Zone which the Virtual Machine should be allocated in. Changing this forces a new resource to be created.

> **Please Note**: Availability Zones are [only supported in several regions at this time](https://docs.microsoft.com/azure/availability-zones/az-overview).

For more information on the different example configurations, please check out the [Azure documentation](https://docs.microsoft.com/en-gb/rest/api/compute/virtualmachines/createorupdate#examples)
"ã
additionalCapabilitiesB:

compute$VirtualMachineAdditionalCapabilitiesWazure:compute/VirtualMachineAdditionalCapabilities:VirtualMachineAdditionalCapabilities5An `additional_capabilities` block as defined below.
"
availabilitySetId" }The ID of the Availability Set in which the Virtual Machine should exist. Changing this forces a new resource to be created.
"»
bootDiagnosticsyBw:u
s
computeVirtualMachineBootDiagnosticsIazure:compute/VirtualMachineBootDiagnostics:VirtualMachineBootDiagnostics-A `boot_diagnostics` block as defined below.
"Ú
deleteDataDisksOnTerminationB
 ³Should the Data Disks (either the Managed Disks / VHD Blobs) be deleted when the Virtual Machine is destroyed? Defaults to `false`.

> **Note:** This setting works when instance is deleted via the provider only and don't forget to delete disks manually if you deleted VM manually. It can increase spending.
"Ò
deleteOsDiskOnTerminationB
 ®Should the OS Disk (either the Managed Disk / VHD Blob) be deleted when the Virtual Machine is destroyed? Defaults to `false`.

> **Note:** This setting works when instance is deleted via the provider only and don't forget to delete disks manually if you deleted VM manually. It can increase spending.
"
identitydBb:`
^
computeVirtualMachineIdentity;azure:compute/VirtualMachineIdentity:VirtualMachineIdentity&An `identity` block as defined below.
"¶
licenseType" ¢Specifies the BYOL Type for this Virtual Machine. This is only applicable to Windows Virtual Machines. Possible values are `Windows_Client` and `Windows_Server`.
"
location" pSpecifies the Azure Region where the Virtual Machine exists. Changing this forces a new resource to be created.
"j
name" ^Specifies the name of the Virtual Machine. Changing this forces a new resource to be created.
"r
networkInterfaceIds*" UA list of Network Interface IDs which should be associated with the Virtual Machine.
"ò
	osProfilegBe:c
a
computeVirtualMachineOsProfile=azure:compute/VirtualMachineOsProfile:VirtualMachineOsProfile|An `os_profile` block as defined below. Required when `create_option` in the `storage_os_disk` block is set to `FromImage`.
"ü
osProfileLinuxConfigB:

compute"VirtualMachineOsProfileLinuxConfigSazure:compute/VirtualMachineOsProfileLinuxConfig:VirtualMachineOsProfileLinuxConfigV(Required, when a Linux machine) An `os_profile_linux_config` block as defined below.
"Ë
osProfileSecrets{By*w:u
s
computeVirtualMachineOsProfileSecretIazure:compute/VirtualMachineOsProfileSecret:VirtualMachineOsProfileSecret:One or more `os_profile_secrets` blocks as defined below.
"
osProfileWindowsConfigB:

compute$VirtualMachineOsProfileWindowsConfigWazure:compute/VirtualMachineOsProfileWindowsConfig:VirtualMachineOsProfileWindowsConfigZ(Required, when a Windows machine) An `os_profile_windows_config` block as defined below.
"
planXBV:T
R
computeVirtualMachinePlan3azure:compute/VirtualMachinePlan:VirtualMachinePlan!A `plan` block as defined below.
"¼
primaryNetworkInterfaceIdB" The ID of the Network Interface (which must be attached to the Virtual Machine) which should be the Primary Network Interface for this Virtual Machine.
"°
proximityPlacementGroupIdB" The ID of the Proximity Placement Group to which this Virtual Machine should be assigned. Changing this forces a new resource to be created
"¡
resourceGroupName" Specifies the name of the Resource Group in which the Virtual Machine should exist. Changing this forces a new resource to be created.
"Ø
storageDataDisksy*w:u
s
computeVirtualMachineStorageDataDiskIazure:compute/VirtualMachineStorageDataDisk:VirtualMachineStorageDataDiskÈOne or more `storage_data_disk` blocks as defined below.

> **Please Note:** Data Disks can also be attached either using this block or the `azure.compute.DataDiskAttachment` resource - but not both.
"
storageImageReference:

compute#VirtualMachineStorageImageReferenceUazure:compute/VirtualMachineStorageImageReference:VirtualMachineStorageImageReferencegA `storage_image_reference` block as defined below. Changing this forces a new resource to be created.
"°
storageOsDiskq:o
m
computeVirtualMachineStorageOsDiskEazure:compute/VirtualMachineStorageOsDisk:VirtualMachineStorageOsDisk,A `storage_os_disk` block as defined below.
"D
tagsB2" 4A mapping of tags to assign to the Virtual Machine.
"î
vmSize" ßSpecifies the [size of the Virtual Machine](https://docs.microsoft.com/azure/virtual-machines/sizes-general). See also [Azure VM Naming Conventions](https://docs.microsoft.com/azure/virtual-machines/vm-naming-conventions).
"
zonesB" ùA list of a single item of the Availability Zone which the Virtual Machine should be allocated in. Changing this forces a new resource to be created.

> **Please Note**: Availability Zones are [only supported in several regions at this time](https://docs.microsoft.com/azure/availability-zones/az-overview).

For more information on the different example configurations, please check out the [Azure documentation](https://docs.microsoft.com/en-gb/rest/api/compute/virtualmachines/createorupdate#examples)
*È
y
computeVirtualMachineScaleSetExtensionMazure:compute/virtualMachineScaleSetExtension:VirtualMachineScaleSetExtension^Manages an Extension for a Virtual Machine Scale Set.

> **NOTE:** This resource is not intended to be used with the `azure.compute.ScaleSet` resource - instead it's intended for this to be used with the `azure.compute.LinuxVirtualMachineScaleSet` and `azure.compute.WindowsVirtualMachineScaleSet` resources.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const example = new azure.core.ResourceGroup("example", {
    name: "example",
    location: "West Europe",
});
const exampleLinuxVirtualMachineScaleSet = new azure.compute.LinuxVirtualMachineScaleSet("example", {
    name: "example",
    resourceGroupName: example.name,
    location: example.location,
    sku: "Standard_F2",
    adminUsername: "adminuser",
    instances: 1,
    sourceImageReference: {
        publisher: "Canonical",
        offer: "0001-com-ubuntu-server-jammy",
        sku: "22_04-lts",
        version: "latest",
    },
    networkInterfaces: [{
        name: "example",
        ipConfigurations: [{
            name: "internal",
        }],
    }],
    osDisk: {
        storageAccountType: "Standard_LRS",
        caching: "ReadWrite",
    },
});
const exampleVirtualMachineScaleSetExtension = new azure.compute.VirtualMachineScaleSetExtension("example", {
    name: "example",
    virtualMachineScaleSetId: exampleLinuxVirtualMachineScaleSet.id,
    publisher: "Microsoft.Azure.Extensions",
    type: "CustomScript",
    typeHandlerVersion: "2.0",
    settings: JSON.stringify({
        commandToExecute: "echo $HOSTNAME",
    }),
});
```
```python
import pulumi
import json
import pulumi_azure as azure

example = azure.core.ResourceGroup("example",
    name="example",
    location="West Europe")
example_linux_virtual_machine_scale_set = azure.compute.LinuxVirtualMachineScaleSet("example",
    name="example",
    resource_group_name=example.name,
    location=example.location,
    sku="Standard_F2",
    admin_username="adminuser",
    instances=1,
    source_image_reference={
        "publisher": "Canonical",
        "offer": "0001-com-ubuntu-server-jammy",
        "sku": "22_04-lts",
        "version": "latest",
    },
    network_interfaces=[{
        "name": "example",
        "ip_configurations": [{
            "name": "internal",
        }],
    }],
    os_disk={
        "storage_account_type": "Standard_LRS",
        "caching": "ReadWrite",
    })
example_virtual_machine_scale_set_extension = azure.compute.VirtualMachineScaleSetExtension("example",
    name="example",
    virtual_machine_scale_set_id=example_linux_virtual_machine_scale_set.id,
    publisher="Microsoft.Azure.Extensions",
    type="CustomScript",
    type_handler_version="2.0",
    settings=json.dumps({
        "commandToExecute": "echo $HOSTNAME",
    }))
```
```csharp
using System.Collections.Generic;
using System.Linq;
using System.Text.Json;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var example = new Azure.Core.ResourceGroup("example", new()
    {
        Name = "example",
        Location = "West Europe",
    });

    var exampleLinuxVirtualMachineScaleSet = new Azure.Compute.LinuxVirtualMachineScaleSet("example", new()
    {
        Name = "example",
        ResourceGroupName = example.Name,
        Location = example.Location,
        Sku = "Standard_F2",
        AdminUsername = "adminuser",
        Instances = 1,
        SourceImageReference = new Azure.Compute.Inputs.LinuxVirtualMachineScaleSetSourceImageReferenceArgs
        {
            Publisher = "Canonical",
            Offer = "0001-com-ubuntu-server-jammy",
            Sku = "22_04-lts",
            Version = "latest",
        },
        NetworkInterfaces = new[]
        {
            new Azure.Compute.Inputs.LinuxVirtualMachineScaleSetNetworkInterfaceArgs
            {
                Name = "example",
                IpConfigurations = new[]
                {
                    new Azure.Compute.Inputs.LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationArgs
                    {
                        Name = "internal",
                    },
                },
            },
        },
        OsDisk = new Azure.Compute.Inputs.LinuxVirtualMachineScaleSetOsDiskArgs
        {
            StorageAccountType = "Standard_LRS",
            Caching = "ReadWrite",
        },
    });

    var exampleVirtualMachineScaleSetExtension = new Azure.Compute.VirtualMachineScaleSetExtension("example", new()
    {
        Name = "example",
        VirtualMachineScaleSetId = exampleLinuxVirtualMachineScaleSet.Id,
        Publisher = "Microsoft.Azure.Extensions",
        Type = "CustomScript",
        TypeHandlerVersion = "2.0",
        Settings = JsonSerializer.Serialize(new Dictionary<string, object?>
        {
            ["commandToExecute"] = "echo $HOSTNAME",
        }),
    });

});
```
```go
package main

import (
	"encoding/json"

	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/compute"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
			Name:     pulumi.String("example"),
			Location: pulumi.String("West Europe"),
		})
		if err != nil {
			return err
		}
		exampleLinuxVirtualMachineScaleSet, err := compute.NewLinuxVirtualMachineScaleSet(ctx, "example", &compute.LinuxVirtualMachineScaleSetArgs{
			Name:              pulumi.String("example"),
			ResourceGroupName: example.Name,
			Location:          example.Location,
			Sku:               pulumi.String("Standard_F2"),
			AdminUsername:     pulumi.String("adminuser"),
			Instances:         pulumi.Int(1),
			SourceImageReference: &compute.LinuxVirtualMachineScaleSetSourceImageReferenceArgs{
				Publisher: pulumi.String("Canonical"),
				Offer:     pulumi.String("0001-com-ubuntu-server-jammy"),
				Sku:       pulumi.String("22_04-lts"),
				Version:   pulumi.String("latest"),
			},
			NetworkInterfaces: compute.LinuxVirtualMachineScaleSetNetworkInterfaceArray{
				&compute.LinuxVirtualMachineScaleSetNetworkInterfaceArgs{
					Name: pulumi.String("example"),
					IpConfigurations: compute.LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationArray{
						&compute.LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationArgs{
							Name: pulumi.String("internal"),
						},
					},
				},
			},
			OsDisk: &compute.LinuxVirtualMachineScaleSetOsDiskArgs{
				StorageAccountType: pulumi.String("Standard_LRS"),
				Caching:            pulumi.String("ReadWrite"),
			},
		})
		if err != nil {
			return err
		}
		tmpJSON0, err := json.Marshal(map[string]interface{}{
			"commandToExecute": "echo $HOSTNAME",
		})
		if err != nil {
			return err
		}
		json0 := string(tmpJSON0)
		_, err = compute.NewVirtualMachineScaleSetExtension(ctx, "example", &compute.VirtualMachineScaleSetExtensionArgs{
			Name:                     pulumi.String("example"),
			VirtualMachineScaleSetId: exampleLinuxVirtualMachineScaleSet.ID(),
			Publisher:                pulumi.String("Microsoft.Azure.Extensions"),
			Type:                     pulumi.String("CustomScript"),
			TypeHandlerVersion:       pulumi.String("2.0"),
			Settings:                 pulumi.String(json0),
		})
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.core.ResourceGroup;
import com.pulumi.azure.core.ResourceGroupArgs;
import com.pulumi.azure.compute.LinuxVirtualMachineScaleSet;
import com.pulumi.azure.compute.LinuxVirtualMachineScaleSetArgs;
import com.pulumi.azure.compute.inputs.LinuxVirtualMachineScaleSetSourceImageReferenceArgs;
import com.pulumi.azure.compute.inputs.LinuxVirtualMachineScaleSetNetworkInterfaceArgs;
import com.pulumi.azure.compute.inputs.LinuxVirtualMachineScaleSetOsDiskArgs;
import com.pulumi.azure.compute.VirtualMachineScaleSetExtension;
import com.pulumi.azure.compute.VirtualMachineScaleSetExtensionArgs;
import static com.pulumi.codegen.internal.Serialization.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        var example = new ResourceGroup("example", ResourceGroupArgs.builder()
            .name("example")
            .location("West Europe")
            .build());

        var exampleLinuxVirtualMachineScaleSet = new LinuxVirtualMachineScaleSet("exampleLinuxVirtualMachineScaleSet", LinuxVirtualMachineScaleSetArgs.builder()
            .name("example")
            .resourceGroupName(example.name())
            .location(example.location())
            .sku("Standard_F2")
            .adminUsername("adminuser")
            .instances(1)
            .sourceImageReference(LinuxVirtualMachineScaleSetSourceImageReferenceArgs.builder()
                .publisher("Canonical")
                .offer("0001-com-ubuntu-server-jammy")
                .sku("22_04-lts")
                .version("latest")
                .build())
            .networkInterfaces(LinuxVirtualMachineScaleSetNetworkInterfaceArgs.builder()
                .name("example")
                .ipConfigurations(LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationArgs.builder()
                    .name("internal")
                    .build())
                .build())
            .osDisk(LinuxVirtualMachineScaleSetOsDiskArgs.builder()
                .storageAccountType("Standard_LRS")
                .caching("ReadWrite")
                .build())
            .build());

        var exampleVirtualMachineScaleSetExtension = new VirtualMachineScaleSetExtension("exampleVirtualMachineScaleSetExtension", VirtualMachineScaleSetExtensionArgs.builder()
            .name("example")
            .virtualMachineScaleSetId(exampleLinuxVirtualMachineScaleSet.id())
            .publisher("Microsoft.Azure.Extensions")
            .type("CustomScript")
            .typeHandlerVersion("2.0")
            .settings(serializeJson(
                jsonObject(
                    jsonProperty("commandToExecute", "echo $HOSTNAME")
                )))
            .build());

    }
}
```
```yaml
resources:
  example:
    type: azure:core:ResourceGroup
    properties:
      name: example
      location: West Europe
  exampleLinuxVirtualMachineScaleSet:
    type: azure:compute:LinuxVirtualMachineScaleSet
    name: example
    properties:
      name: example
      resourceGroupName: ${example.name}
      location: ${example.location}
      sku: Standard_F2
      adminUsername: adminuser
      instances: 1
      sourceImageReference:
        publisher: Canonical
        offer: 0001-com-ubuntu-server-jammy
        sku: 22_04-lts
        version: latest
      networkInterfaces:
        - name: example
          ipConfigurations:
            - name: internal
      osDisk:
        storageAccountType: Standard_LRS
        caching: ReadWrite
  exampleVirtualMachineScaleSetExtension:
    type: azure:compute:VirtualMachineScaleSetExtension
    name: example
    properties:
      name: example
      virtualMachineScaleSetId: ${exampleLinuxVirtualMachineScaleSet.id}
      publisher: Microsoft.Azure.Extensions
      type: CustomScript
      typeHandlerVersion: '2.0'
      settings:
        fn::toJSON:
          commandToExecute: echo $HOSTNAME
```
<!--End PulumiCodeChooser -->

## Import

Virtual Machine Scale Set Extensions can be imported using the `resource id`, e.g.

```sh
$ pulumi import azure:compute/virtualMachineScaleSetExtension:VirtualMachineScaleSetExtension test /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Compute/virtualMachineScaleSets/scaleSet1/extensions/extension1
```

Ñ
autoUpgradeMinorVersionB
 ¯Should the latest version of the Extension be used at Deployment Time, if one is available? This won't auto-update the extension on existing installation. Defaults to `true`.

automaticUpgradeEnabledB
 rShould the Extension be automatically updated whenever the Publisher releases a new version of this VM Extension?
£
failureSuppressionEnabledB
 ÿShould failures from the extension be suppressed? Possible values are `true` or `false`. Defaults to `false`.

> **NOTE:** Operational failures such as not connecting to the VM will not be suppressed regardless of the `failure_suppression_enabled` value.
¨
forceUpdateTagB" A value which, when different to the previous value can be used to force-run the Extension even if the Extension Configuration hasn't changed.
w
nameB" iThe name for the Virtual Machine Scale Set Extension. Changing this forces a new resource to be created.
¢
protectedSettingsB" A JSON String which specifies Sensitive Settings (such as Passwords) for the Extension.

> **NOTE:** Keys within the `protected_settings` block are notoriously case-sensitive, where the casing required (e.g. TitleCase vs snakeCase) depends on the Extension being used. Please refer to the documentation for the specific Virtual Machine Extension you're looking to use for more information.

protectedSettingsFromKeyVaultÚB×:Ô
Ñ
compute<VirtualMachineScaleSetExtensionProtectedSettingsFromKeyVaultazure:compute/VirtualMachineScaleSetExtensionProtectedSettingsFromKeyVault:VirtualMachineScaleSetExtensionProtectedSettingsFromKeyVaultA `protected_settings_from_key_vault` block as defined below.

> **Note:** `protected_settings_from_key_vault` cannot be used with `protected_settings`
o
provisionAfterExtensionsB*" KAn ordered list of Extension names which this should be provisioned after.
n
	publisher" ]Specifies the Publisher of the Extension. Changing this forces a new resource to be created.
ñ
settingsB" ÞA JSON String which specifies Settings for the Extension.

> **NOTE:** Keys within the `settings` block are notoriously case-sensitive, where the casing required (e.g. TitleCase vs snakeCase) depends on the Extension being used. Please refer to the documentation for the specific Virtual Machine Extension you're looking to use for more information.
d
type" XSpecifies the Type of the Extension. Changing this forces a new resource to be created.
¼
typeHandlerVersion" ¡Specifies the version of the extension to use, available versions can be found using the Azure CLI.

> **Note:** The `Publisher` and `Type` of Virtual Machine Scale Set Extensions can be found using the Azure CLI, via:

```shell
az vmss extension image list --location westus -o table
```
õ
virtualMachineScaleSetId" ÔThe ID of the Virtual Machine Scale Set. Changing this forces a new resource to be created.

> **NOTE:** This should be the ID from the `azure.compute.LinuxVirtualMachineScaleSet` or `azure.compute.WindowsVirtualMachineScaleSet` resource - when using the older `azure.compute.ScaleSet` resource extensions should instead be defined inline.
"Ñ
autoUpgradeMinorVersionB
 ¯Should the latest version of the Extension be used at Deployment Time, if one is available? This won't auto-update the extension on existing installation. Defaults to `true`.
"
automaticUpgradeEnabledB
 rShould the Extension be automatically updated whenever the Publisher releases a new version of this VM Extension?
"£
failureSuppressionEnabledB
 ÿShould failures from the extension be suppressed? Possible values are `true` or `false`. Defaults to `false`.

> **NOTE:** Operational failures such as not connecting to the VM will not be suppressed regardless of the `failure_suppression_enabled` value.
"¨
forceUpdateTagB" A value which, when different to the previous value can be used to force-run the Extension even if the Extension Configuration hasn't changed.
"u
name" iThe name for the Virtual Machine Scale Set Extension. Changing this forces a new resource to be created.
"¢
protectedSettingsB" A JSON String which specifies Sensitive Settings (such as Passwords) for the Extension.

> **NOTE:** Keys within the `protected_settings` block are notoriously case-sensitive, where the casing required (e.g. TitleCase vs snakeCase) depends on the Extension being used. Please refer to the documentation for the specific Virtual Machine Extension you're looking to use for more information.
"
protectedSettingsFromKeyVaultÚB×:Ô
Ñ
compute<VirtualMachineScaleSetExtensionProtectedSettingsFromKeyVaultazure:compute/VirtualMachineScaleSetExtensionProtectedSettingsFromKeyVault:VirtualMachineScaleSetExtensionProtectedSettingsFromKeyVaultA `protected_settings_from_key_vault` block as defined below.

> **Note:** `protected_settings_from_key_vault` cannot be used with `protected_settings`
"o
provisionAfterExtensionsB*" KAn ordered list of Extension names which this should be provisioned after.
"n
	publisher" ]Specifies the Publisher of the Extension. Changing this forces a new resource to be created.
"ñ
settingsB" ÞA JSON String which specifies Settings for the Extension.

> **NOTE:** Keys within the `settings` block are notoriously case-sensitive, where the casing required (e.g. TitleCase vs snakeCase) depends on the Extension being used. Please refer to the documentation for the specific Virtual Machine Extension you're looking to use for more information.
"d
type" XSpecifies the Type of the Extension. Changing this forces a new resource to be created.
"¼
typeHandlerVersion" ¡Specifies the version of the extension to use, available versions can be found using the Azure CLI.

> **Note:** The `Publisher` and `Type` of Virtual Machine Scale Set Extensions can be found using the Azure CLI, via:

```shell
az vmss extension image list --location westus -o table
```
"õ
virtualMachineScaleSetId" ÔThe ID of the Virtual Machine Scale Set. Changing this forces a new resource to be created.

> **NOTE:** This should be the ID from the `azure.compute.LinuxVirtualMachineScaleSet` or `azure.compute.WindowsVirtualMachineScaleSet` resource - when using the older `azure.compute.ScaleSet` resource extensions should instead be defined inline.
*¨Ë
[
computeWindowsVirtualMachine9azure:compute/windowsVirtualMachine:WindowsVirtualMachinepManages a Windows Virtual Machine.

## Disclaimers

> **Note** This provider will automatically remove the OS Disk by default - this behaviour can be configured using the `features` setting within the Provider block.

> **Note** All arguments including the administrator login and password will be stored in the raw state as plain-text.

> **Note** This resource does not support Unmanaged Disks. If you need to use Unmanaged Disks you can continue to use the `azure.compute.VirtualMachine` resource instead.

> **Note** This resource does not support attaching existing OS Disks. You can instead capture an image of the OS Disk or continue to use the `azure.compute.VirtualMachine` resource instead.

> In this release there's a known issue where the `public_ip_address` and `public_ip_addresses` fields may not be fully populated for Dynamic Public IP's.

## Example Usage

This example provisions a basic Windows Virtual Machine on an internal network.

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const example = new azure.core.ResourceGroup("example", {
    name: "example-resources",
    location: "West Europe",
});
const exampleVirtualNetwork = new azure.network.VirtualNetwork("example", {
    name: "example-network",
    addressSpaces: ["10.0.0.0/16"],
    location: example.location,
    resourceGroupName: example.name,
});
const exampleSubnet = new azure.network.Subnet("example", {
    name: "internal",
    resourceGroupName: example.name,
    virtualNetworkName: exampleVirtualNetwork.name,
    addressPrefixes: ["10.0.2.0/24"],
});
const exampleNetworkInterface = new azure.network.NetworkInterface("example", {
    name: "example-nic",
    location: example.location,
    resourceGroupName: example.name,
    ipConfigurations: [{
        name: "internal",
        subnetId: exampleSubnet.id,
        privateIpAddressAllocation: "Dynamic",
    }],
});
const exampleWindowsVirtualMachine = new azure.compute.WindowsVirtualMachine("example", {
    name: "example-machine",
    resourceGroupName: example.name,
    location: example.location,
    size: "Standard_F2",
    adminUsername: "adminuser",
    adminPassword: "P@$$w0rd1234!",
    networkInterfaceIds: [exampleNetworkInterface.id],
    osDisk: {
        caching: "ReadWrite",
        storageAccountType: "Standard_LRS",
    },
    sourceImageReference: {
        publisher: "MicrosoftWindowsServer",
        offer: "WindowsServer",
        sku: "2016-Datacenter",
        version: "latest",
    },
});
```
```python
import pulumi
import pulumi_azure as azure

example = azure.core.ResourceGroup("example",
    name="example-resources",
    location="West Europe")
example_virtual_network = azure.network.VirtualNetwork("example",
    name="example-network",
    address_spaces=["10.0.0.0/16"],
    location=example.location,
    resource_group_name=example.name)
example_subnet = azure.network.Subnet("example",
    name="internal",
    resource_group_name=example.name,
    virtual_network_name=example_virtual_network.name,
    address_prefixes=["10.0.2.0/24"])
example_network_interface = azure.network.NetworkInterface("example",
    name="example-nic",
    location=example.location,
    resource_group_name=example.name,
    ip_configurations=[{
        "name": "internal",
        "subnet_id": example_subnet.id,
        "private_ip_address_allocation": "Dynamic",
    }])
example_windows_virtual_machine = azure.compute.WindowsVirtualMachine("example",
    name="example-machine",
    resource_group_name=example.name,
    location=example.location,
    size="Standard_F2",
    admin_username="adminuser",
    admin_password="P@$$w0rd1234!",
    network_interface_ids=[example_network_interface.id],
    os_disk={
        "caching": "ReadWrite",
        "storage_account_type": "Standard_LRS",
    },
    source_image_reference={
        "publisher": "MicrosoftWindowsServer",
        "offer": "WindowsServer",
        "sku": "2016-Datacenter",
        "version": "latest",
    })
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var example = new Azure.Core.ResourceGroup("example", new()
    {
        Name = "example-resources",
        Location = "West Europe",
    });

    var exampleVirtualNetwork = new Azure.Network.VirtualNetwork("example", new()
    {
        Name = "example-network",
        AddressSpaces = new[]
        {
            "10.0.0.0/16",
        },
        Location = example.Location,
        ResourceGroupName = example.Name,
    });

    var exampleSubnet = new Azure.Network.Subnet("example", new()
    {
        Name = "internal",
        ResourceGroupName = example.Name,
        VirtualNetworkName = exampleVirtualNetwork.Name,
        AddressPrefixes = new[]
        {
            "10.0.2.0/24",
        },
    });

    var exampleNetworkInterface = new Azure.Network.NetworkInterface("example", new()
    {
        Name = "example-nic",
        Location = example.Location,
        ResourceGroupName = example.Name,
        IpConfigurations = new[]
        {
            new Azure.Network.Inputs.NetworkInterfaceIpConfigurationArgs
            {
                Name = "internal",
                SubnetId = exampleSubnet.Id,
                PrivateIpAddressAllocation = "Dynamic",
            },
        },
    });

    var exampleWindowsVirtualMachine = new Azure.Compute.WindowsVirtualMachine("example", new()
    {
        Name = "example-machine",
        ResourceGroupName = example.Name,
        Location = example.Location,
        Size = "Standard_F2",
        AdminUsername = "adminuser",
        AdminPassword = "P@$$w0rd1234!",
        NetworkInterfaceIds = new[]
        {
            exampleNetworkInterface.Id,
        },
        OsDisk = new Azure.Compute.Inputs.WindowsVirtualMachineOsDiskArgs
        {
            Caching = "ReadWrite",
            StorageAccountType = "Standard_LRS",
        },
        SourceImageReference = new Azure.Compute.Inputs.WindowsVirtualMachineSourceImageReferenceArgs
        {
            Publisher = "MicrosoftWindowsServer",
            Offer = "WindowsServer",
            Sku = "2016-Datacenter",
            Version = "latest",
        },
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/compute"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/network"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
			Name:     pulumi.String("example-resources"),
			Location: pulumi.String("West Europe"),
		})
		if err != nil {
			return err
		}
		exampleVirtualNetwork, err := network.NewVirtualNetwork(ctx, "example", &network.VirtualNetworkArgs{
			Name: pulumi.String("example-network"),
			AddressSpaces: pulumi.StringArray{
				pulumi.String("10.0.0.0/16"),
			},
			Location:          example.Location,
			ResourceGroupName: example.Name,
		})
		if err != nil {
			return err
		}
		exampleSubnet, err := network.NewSubnet(ctx, "example", &network.SubnetArgs{
			Name:               pulumi.String("internal"),
			ResourceGroupName:  example.Name,
			VirtualNetworkName: exampleVirtualNetwork.Name,
			AddressPrefixes: pulumi.StringArray{
				pulumi.String("10.0.2.0/24"),
			},
		})
		if err != nil {
			return err
		}
		exampleNetworkInterface, err := network.NewNetworkInterface(ctx, "example", &network.NetworkInterfaceArgs{
			Name:              pulumi.String("example-nic"),
			Location:          example.Location,
			ResourceGroupName: example.Name,
			IpConfigurations: network.NetworkInterfaceIpConfigurationArray{
				&network.NetworkInterfaceIpConfigurationArgs{
					Name:                       pulumi.String("internal"),
					SubnetId:                   exampleSubnet.ID(),
					PrivateIpAddressAllocation: pulumi.String("Dynamic"),
				},
			},
		})
		if err != nil {
			return err
		}
		_, err = compute.NewWindowsVirtualMachine(ctx, "example", &compute.WindowsVirtualMachineArgs{
			Name:              pulumi.String("example-machine"),
			ResourceGroupName: example.Name,
			Location:          example.Location,
			Size:              pulumi.String("Standard_F2"),
			AdminUsername:     pulumi.String("adminuser"),
			AdminPassword:     pulumi.String("P@$$w0rd1234!"),
			NetworkInterfaceIds: pulumi.StringArray{
				exampleNetworkInterface.ID(),
			},
			OsDisk: &compute.WindowsVirtualMachineOsDiskArgs{
				Caching:            pulumi.String("ReadWrite"),
				StorageAccountType: pulumi.String("Standard_LRS"),
			},
			SourceImageReference: &compute.WindowsVirtualMachineSourceImageReferenceArgs{
				Publisher: pulumi.String("MicrosoftWindowsServer"),
				Offer:     pulumi.String("WindowsServer"),
				Sku:       pulumi.String("2016-Datacenter"),
				Version:   pulumi.String("latest"),
			},
		})
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.core.ResourceGroup;
import com.pulumi.azure.core.ResourceGroupArgs;
import com.pulumi.azure.network.VirtualNetwork;
import com.pulumi.azure.network.VirtualNetworkArgs;
import com.pulumi.azure.network.Subnet;
import com.pulumi.azure.network.SubnetArgs;
import com.pulumi.azure.network.NetworkInterface;
import com.pulumi.azure.network.NetworkInterfaceArgs;
import com.pulumi.azure.network.inputs.NetworkInterfaceIpConfigurationArgs;
import com.pulumi.azure.compute.WindowsVirtualMachine;
import com.pulumi.azure.compute.WindowsVirtualMachineArgs;
import com.pulumi.azure.compute.inputs.WindowsVirtualMachineOsDiskArgs;
import com.pulumi.azure.compute.inputs.WindowsVirtualMachineSourceImageReferenceArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        var example = new ResourceGroup("example", ResourceGroupArgs.builder()
            .name("example-resources")
            .location("West Europe")
            .build());

        var exampleVirtualNetwork = new VirtualNetwork("exampleVirtualNetwork", VirtualNetworkArgs.builder()
            .name("example-network")
            .addressSpaces("10.0.0.0/16")
            .location(example.location())
            .resourceGroupName(example.name())
            .build());

        var exampleSubnet = new Subnet("exampleSubnet", SubnetArgs.builder()
            .name("internal")
            .resourceGroupName(example.name())
            .virtualNetworkName(exampleVirtualNetwork.name())
            .addressPrefixes("10.0.2.0/24")
            .build());

        var exampleNetworkInterface = new NetworkInterface("exampleNetworkInterface", NetworkInterfaceArgs.builder()
            .name("example-nic")
            .location(example.location())
            .resourceGroupName(example.name())
            .ipConfigurations(NetworkInterfaceIpConfigurationArgs.builder()
                .name("internal")
                .subnetId(exampleSubnet.id())
                .privateIpAddressAllocation("Dynamic")
                .build())
            .build());

        var exampleWindowsVirtualMachine = new WindowsVirtualMachine("exampleWindowsVirtualMachine", WindowsVirtualMachineArgs.builder()
            .name("example-machine")
            .resourceGroupName(example.name())
            .location(example.location())
            .size("Standard_F2")
            .adminUsername("adminuser")
            .adminPassword("P@$$w0rd1234!")
            .networkInterfaceIds(exampleNetworkInterface.id())
            .osDisk(WindowsVirtualMachineOsDiskArgs.builder()
                .caching("ReadWrite")
                .storageAccountType("Standard_LRS")
                .build())
            .sourceImageReference(WindowsVirtualMachineSourceImageReferenceArgs.builder()
                .publisher("MicrosoftWindowsServer")
                .offer("WindowsServer")
                .sku("2016-Datacenter")
                .version("latest")
                .build())
            .build());

    }
}
```
```yaml
resources:
  example:
    type: azure:core:ResourceGroup
    properties:
      name: example-resources
      location: West Europe
  exampleVirtualNetwork:
    type: azure:network:VirtualNetwork
    name: example
    properties:
      name: example-network
      addressSpaces:
        - 10.0.0.0/16
      location: ${example.location}
      resourceGroupName: ${example.name}
  exampleSubnet:
    type: azure:network:Subnet
    name: example
    properties:
      name: internal
      resourceGroupName: ${example.name}
      virtualNetworkName: ${exampleVirtualNetwork.name}
      addressPrefixes:
        - 10.0.2.0/24
  exampleNetworkInterface:
    type: azure:network:NetworkInterface
    name: example
    properties:
      name: example-nic
      location: ${example.location}
      resourceGroupName: ${example.name}
      ipConfigurations:
        - name: internal
          subnetId: ${exampleSubnet.id}
          privateIpAddressAllocation: Dynamic
  exampleWindowsVirtualMachine:
    type: azure:compute:WindowsVirtualMachine
    name: example
    properties:
      name: example-machine
      resourceGroupName: ${example.name}
      location: ${example.location}
      size: Standard_F2
      adminUsername: adminuser
      adminPassword: P@$$w0rd1234!
      networkInterfaceIds:
        - ${exampleNetworkInterface.id}
      osDisk:
        caching: ReadWrite
        storageAccountType: Standard_LRS
      sourceImageReference:
        publisher: MicrosoftWindowsServer
        offer: WindowsServer
        sku: 2016-Datacenter
        version: latest
```
<!--End PulumiCodeChooser -->

## Import

Windows Virtual Machines can be imported using the `resource id`, e.g.

```sh
$ pulumi import azure:compute/windowsVirtualMachine:WindowsVirtualMachine example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Compute/virtualMachines/machine1
```

÷
additionalCapabilities¦B£: 

compute+WindowsVirtualMachineAdditionalCapabilitieseazure:compute/WindowsVirtualMachineAdditionalCapabilities:WindowsVirtualMachineAdditionalCapabilities4A `additional_capabilities` block as defined below.
É
additionalUnattendContents²B¯*¬:©
¦
compute.WindowsVirtualMachineAdditionalUnattendContentkazure:compute/WindowsVirtualMachineAdditionalUnattendContent:WindowsVirtualMachineAdditionalUnattendContentvOne or more `additional_unattend_content` blocks as defined below. Changing this forces a new resource to be created.
 
adminPassword" The Password which should be used for the local-administrator on this Virtual Machine. Changing this forces a new resource to be created.

adminUsername" yThe username of the local administrator used for the Virtual Machine. Changing this forces a new resource to be created.
v
allowExtensionOperationsB
 TShould Extension Operations be allowed on this Virtual Machine? Defaults to `true`.
£
availabilitySetIdB" Specifies the ID of the Availability Set in which the Virtual Machine should exist. Changing this forces a new resource to be created.
Ô
bootDiagnosticsB:

compute$WindowsVirtualMachineBootDiagnosticsWazure:compute/WindowsVirtualMachineBootDiagnostics:WindowsVirtualMachineBootDiagnostics-A `boot_diagnostics` block as defined below.
È
/bypassPlatformSafetyChecksOnUserScheduleEnabledB
 Specifies whether to skip platform scheduled patching when a user schedule is associated with the VM. Defaults to `false`.

> **NOTE:** `bypass_platform_safety_checks_on_user_schedule_enabled` can only be set to `true` when `patch_mode` is set to `AutomaticByPlatform`.

capacityReservationGroupIdB" ÞSpecifies the ID of the Capacity Reservation Group which the Virtual Machine should be allocated to.

> **NOTE:** `capacity_reservation_group_id` cannot be used with `availability_set_id` or `proximity_placement_group_id`
¸
computerNameB" ¡Specifies the Hostname which should be used for this Virtual Machine. If unspecified this defaults to the value for the `name` field. If the value of the `name` field is not a valid `computer_name`, then you must specify `computer_name`. Changing this forces a new resource to be created.


customDataB" The Base64-Encoded Custom Data which should be used for this Virtual Machine. Changing this forces a new resource to be created.

dedicatedHostGroupIdB" }The ID of a Dedicated Host Group that this Windows Virtual Machine should be run within. Conflicts with `dedicated_host_id`.

dedicatedHostIdB" jThe ID of a Dedicated Host where this machine should be run on. Conflicts with `dedicated_host_group_id`.

diskControllerTypeB" iSpecifies the Disk Controller Type used for this Virtual Machine. Possible values are `SCSI` and `NVMe`.
¶
edgeZoneB" £Specifies the Edge Zone within the Azure Region where this Windows Virtual Machine should exist. Changing this forces a new Windows Virtual Machine to be created.
´
enableAutomaticUpdatesB
 Specifies if Automatic Updates are Enabled for the Windows Virtual Machine. Changing this forces a new resource to be created. Defaults to `true`.
¢
encryptionAtHostEnabledB
 Should all of the disks (including the temp disk) attached to this Virtual Machine be encrypted by enabling Encryption at Host?
µ
evictionPolicyB" Specifies what should happen when the Virtual Machine is evicted for price reasons when using a Spot instance. Possible values are `Deallocate` and `Delete`. Changing this forces a new resource to be created.

> **NOTE:** This can only be configured when `priority` is set to `Spot`.
ë
extensionsTimeBudgetB" ÌSpecifies the duration allocated for all extensions to start. The time duration should be between 15 minutes and 120 minutes (inclusive) and should be specified in ISO 8601 format. Defaults to `PT1H30M`.
³
galleryApplicationsB*:

compute'WindowsVirtualMachineGalleryApplication]azure:compute/WindowsVirtualMachineGalleryApplication:WindowsVirtualMachineGalleryApplicationûOne or more `gallery_application` blocks as defined below.

> **Note** Gallery Application Assignments can be defined either directly on `azure.compute.WindowsVirtualMachine` resource, or using the `azure.compute.GalleryApplicationAssignment` resource - but the two approaches cannot be used together. If both are used with the same Virtual Machine, spurious changes will occur. If `azure.compute.GalleryApplicationAssignment` is used, it's recommended to use `ignore_changes` for the `gallery_application` block on the corresponding `azure.compute.WindowsVirtualMachine` resource, to avoid a persistent diff when using this resource.
á
hotpatchingEnabledB
 ÄShould the VM be patched without requiring a reboot? Possible values are `true` or `false`. Defaults to `false`. For more information about hot patching please see the [product documentation](https://docs.microsoft.com/azure/automanage/automanage-hotpatch).

> **NOTE:** Hotpatching can only be enabled if the `patch_mode` is set to `AutomaticByPlatform`, the `provision_vm_agent` is set to `true`, your `source_image_reference` references a hotpatching enabled image, and the VM's `size` is set to a [Azure generation 2](https://docs.microsoft.com/azure/virtual-machines/generation-2#generation-2-vm-sizes) VM. An example of how to correctly configure a Windows Virtual Machine to use the `hotpatching_enabled` field can be found in the `./examples/virtual-machines/windows/hotpatching-enabled` directory within the GitHub Repository.
­
identityyBw:u
s
computeWindowsVirtualMachineIdentityIazure:compute/WindowsVirtualMachineIdentity:WindowsVirtualMachineIdentity&An `identity` block as defined below.
¨
licenseTypeB" Specifies the type of on-premise license (also known as [Azure Hybrid Use Benefit](https://docs.microsoft.com/windows-server/get-started/azure-hybrid-benefit)) which should be used for this Virtual Machine. Possible values are `None`, `Windows_Client` and `Windows_Server`.

locationB" vThe Azure location where the Windows Virtual Machine should exist. Changing this forces a new resource to be created.
»
maxBidPriceB ¥The maximum price you're willing to pay for this Virtual Machine, in US Dollars; which must be greater than the current spot price. If this bid price falls below the current spot price the Virtual Machine will be evicted using the `eviction_policy`. Defaults to `-1`, which means that the Virtual Machine should not be evicted for price reasons.

> **NOTE:** This can only be configured when `priority` is set to `Spot`.
j
nameB" \The name of the Windows Virtual Machine. Changing this forces a new resource to be created.
Ü
networkInterfaceIds*" ¾. A list of Network Interface IDs which should be attached to this Virtual Machine. The first Network Interface ID in this list will be the Primary Network Interface on the Virtual Machine.
¡
osDiskq:o
m
computeWindowsVirtualMachineOsDiskEazure:compute/WindowsVirtualMachineOsDisk:WindowsVirtualMachineOsDisk$A `os_disk` block as defined below.
é
osImageNotificationB:

compute(WindowsVirtualMachineOsImageNotification_azure:compute/WindowsVirtualMachineOsImageNotification:WindowsVirtualMachineOsImageNotification2A `os_image_notification` block as defined below.
¿
patchAssessmentModeB" ¡Specifies the mode of VM Guest Patching for the Virtual Machine. Possible values are `AutomaticByPlatform` or `ImageDefault`. Defaults to `ImageDefault`.

> **NOTE:** If the `patch_assessment_mode` is set to `AutomaticByPlatform` then the `provision_vm_agent` field must be set to `true`.
å
	patchModeB" ÑSpecifies the mode of in-guest patching to this Windows Virtual Machine. Possible values are `Manual`, `AutomaticByOS` and `AutomaticByPlatform`. Defaults to `AutomaticByOS`. For more information on patch modes please see the [product documentation](https://docs.microsoft.com/azure/virtual-machines/automatic-vm-guest-patching#patch-orchestration-modes).

> **NOTE:** If `patch_mode` is set to `AutomaticByPlatform` then `provision_vm_agent` must also be set to `true`. If the Virtual Machine is using a hotpatching enabled image the `patch_mode` must always be set to `AutomaticByPlatform`.
Ë
planmBk:i
g
computeWindowsVirtualMachinePlanAazure:compute/WindowsVirtualMachinePlan:WindowsVirtualMachinePlanTA `plan` block as defined below. Changing this forces a new resource to be created.
Ñ
platformFaultDomainB ³Specifies the Platform Fault Domain in which this Windows Virtual Machine should be created. Defaults to `-1`, which means this will be automatically assigned to a fault domain that best maintains balance across the available fault domains. Changing this forces a new Windows Virtual Machine to be created.
·
priorityB" ¤Specifies the priority of this Virtual Machine. Possible values are `Regular` and `Spot`. Defaults to `Regular`. Changing this forces a new resource to be created.

provisionVmAgentB
 ÿShould the Azure VM Agent be provisioned on this Virtual Machine? Defaults to `true`. Changing this forces a new resource to be created.

> **NOTE:** If `provision_vm_agent` is set to `false` then `allow_extension_operations` must also be set to `false`.
|
proximityPlacementGroupIdB" YThe ID of the Proximity Placement Group which the Virtual Machine should be assigned to.
ï
rebootSettingB" ×Specifies the reboot setting for platform scheduled patching. Possible values are `Always`, `IfRequired` and `Never`.

> **NOTE:** `reboot_setting` can only be set when `patch_mode` is set to `AutomaticByPlatform`.
¢
resourceGroupName" The name of the Resource Group in which the Windows Virtual Machine should be exist. Changing this forces a new resource to be created.
°
secretsuBs*q:o
m
computeWindowsVirtualMachineSecretEazure:compute/WindowsVirtualMachineSecret:WindowsVirtualMachineSecret.One or more `secret` blocks as defined below.

secureBootEnabledB
 Specifies if Secure Boot and Trusted Launch is enabled for the Virtual Machine. Changing this forces a new resource to be created.
Z
size" NThe SKU which should be used for this Virtual Machine, such as `Standard_F2`.
Î
sourceImageIdB" ¶The ID of the Image which this Virtual Machine should be created from. Changing this forces a new resource to be created. Possible Image ID types include `Image ID`s, `Shared Image ID`s, `Shared Image Version ID`s, `Community Gallery Image ID`s, `Community Gallery Image Version ID`s, `Shared Gallery Image ID`s and `Shared Gallery Image Version ID`s.

> **NOTE:** One of either `source_image_id` or `source_image_reference` must be set.
ø
sourceImageReference B:

compute)WindowsVirtualMachineSourceImageReferenceaazure:compute/WindowsVirtualMachineSourceImageReference:WindowsVirtualMachineSourceImageReference¼A `source_image_reference` block as defined below. Changing this forces a new resource to be created.

> **NOTE:** One of either `source_image_id` or `source_image_reference` must be set.
T
tagsB2" DA mapping of tags which should be assigned to this Virtual Machine.
ü
terminationNotification©B¦:£
 
compute,WindowsVirtualMachineTerminationNotificationgazure:compute/WindowsVirtualMachineTerminationNotification:WindowsVirtualMachineTerminationNotification5A `termination_notification` block as defined below.
ü
timezoneB" éSpecifies the Time Zone which should be used by the Virtual Machine, [the possible values are defined here](https://jackstromberg.com/2017/01/list-of-time-zones-consumed-by-azure/). Changing this forces a new resource to be created.
^
userDataB" LThe Base64-Encoded User Data which should be used for this Virtual Machine.
¼
virtualMachineScaleSetIdB" Specifies the Orchestrated Virtual Machine Scale Set that this Virtual Machine should be created within.

> **NOTE:** To update `virtual_machine_scale_set_id` the Preview Feature `Microsoft.Compute/SingleFDAttachDetachVMToVmss` needs to be enabled, see [the documentation](https://review.learn.microsoft.com/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-attach-detach-vm#enroll-in-the-preview) for more information.

> **NOTE:** Orchestrated Virtual Machine Scale Sets can be provisioned using [the `azure.compute.OrchestratedVirtualMachineScaleSet` resource](https://www.terraform.io/docs/providers/azurerm/r/orchestrated_virtual_machine_scale_set.html).

> **NOTE:** To attach an existing VM to a Virtual Machine Scale Set, the scale set must have `single_placement_group` set to `false`, see [the documentation](https://learn.microsoft.com/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-attach-detach-vm?tabs=portal-1%2Cportal-2%2Cportal-3#limitations-for-attaching-an-existing-vm-to-a-scale-set) for more information.
s
vmAgentPlatformUpdatesEnabledB
 LSpecifies whether VMAgent Platform Updates is enabled. Defaults to `false`.
´
vtpmEnabledB
 Specifies if vTPM (virtual Trusted Platform Module) and Trusted Launch is enabled for the Virtual Machine. Changing this forces a new resource to be created.

winrmListenersB*:

compute"WindowsVirtualMachineWinrmListenerSazure:compute/WindowsVirtualMachineWinrmListener:WindowsVirtualMachineWinrmListeneriOne or more `winrm_listener` blocks as defined below. Changing this forces a new resource to be created.
Á
zoneB" ²* `zones` - (Optional) Specifies the Availability Zone in which this Windows Virtual Machine should be located. Changing this forces a new Windows Virtual Machine to be created.
"÷
additionalCapabilities¦B£: 

compute+WindowsVirtualMachineAdditionalCapabilitieseazure:compute/WindowsVirtualMachineAdditionalCapabilities:WindowsVirtualMachineAdditionalCapabilities4A `additional_capabilities` block as defined below.
"É
additionalUnattendContents²B¯*¬:©
¦
compute.WindowsVirtualMachineAdditionalUnattendContentkazure:compute/WindowsVirtualMachineAdditionalUnattendContent:WindowsVirtualMachineAdditionalUnattendContentvOne or more `additional_unattend_content` blocks as defined below. Changing this forces a new resource to be created.
" 
adminPassword" The Password which should be used for the local-administrator on this Virtual Machine. Changing this forces a new resource to be created.
"
adminUsername" yThe username of the local administrator used for the Virtual Machine. Changing this forces a new resource to be created.
"v
allowExtensionOperationsB
 TShould Extension Operations be allowed on this Virtual Machine? Defaults to `true`.
"£
availabilitySetIdB" Specifies the ID of the Availability Set in which the Virtual Machine should exist. Changing this forces a new resource to be created.
"Ô
bootDiagnosticsB:

compute$WindowsVirtualMachineBootDiagnosticsWazure:compute/WindowsVirtualMachineBootDiagnostics:WindowsVirtualMachineBootDiagnostics-A `boot_diagnostics` block as defined below.
"È
/bypassPlatformSafetyChecksOnUserScheduleEnabledB
 Specifies whether to skip platform scheduled patching when a user schedule is associated with the VM. Defaults to `false`.

> **NOTE:** `bypass_platform_safety_checks_on_user_schedule_enabled` can only be set to `true` when `patch_mode` is set to `AutomaticByPlatform`.
"
capacityReservationGroupIdB" ÞSpecifies the ID of the Capacity Reservation Group which the Virtual Machine should be allocated to.

> **NOTE:** `capacity_reservation_group_id` cannot be used with `availability_set_id` or `proximity_placement_group_id`
"¶
computerName" ¡Specifies the Hostname which should be used for this Virtual Machine. If unspecified this defaults to the value for the `name` field. If the value of the `name` field is not a valid `computer_name`, then you must specify `computer_name`. Changing this forces a new resource to be created.
"

customDataB" The Base64-Encoded Custom Data which should be used for this Virtual Machine. Changing this forces a new resource to be created.
"
dedicatedHostGroupIdB" }The ID of a Dedicated Host Group that this Windows Virtual Machine should be run within. Conflicts with `dedicated_host_id`.
"
dedicatedHostIdB" jThe ID of a Dedicated Host where this machine should be run on. Conflicts with `dedicated_host_group_id`.
"
diskControllerType" iSpecifies the Disk Controller Type used for this Virtual Machine. Possible values are `SCSI` and `NVMe`.
"¶
edgeZoneB" £Specifies the Edge Zone within the Azure Region where this Windows Virtual Machine should exist. Changing this forces a new Windows Virtual Machine to be created.
"´
enableAutomaticUpdatesB
 Specifies if Automatic Updates are Enabled for the Windows Virtual Machine. Changing this forces a new resource to be created. Defaults to `true`.
"¢
encryptionAtHostEnabledB
 Should all of the disks (including the temp disk) attached to this Virtual Machine be encrypted by enabling Encryption at Host?
"µ
evictionPolicyB" Specifies what should happen when the Virtual Machine is evicted for price reasons when using a Spot instance. Possible values are `Deallocate` and `Delete`. Changing this forces a new resource to be created.

> **NOTE:** This can only be configured when `priority` is set to `Spot`.
"ë
extensionsTimeBudgetB" ÌSpecifies the duration allocated for all extensions to start. The time duration should be between 15 minutes and 120 minutes (inclusive) and should be specified in ISO 8601 format. Defaults to `PT1H30M`.
"³
galleryApplicationsB*:

compute'WindowsVirtualMachineGalleryApplication]azure:compute/WindowsVirtualMachineGalleryApplication:WindowsVirtualMachineGalleryApplicationûOne or more `gallery_application` blocks as defined below.

> **Note** Gallery Application Assignments can be defined either directly on `azure.compute.WindowsVirtualMachine` resource, or using the `azure.compute.GalleryApplicationAssignment` resource - but the two approaches cannot be used together. If both are used with the same Virtual Machine, spurious changes will occur. If `azure.compute.GalleryApplicationAssignment` is used, it's recommended to use `ignore_changes` for the `gallery_application` block on the corresponding `azure.compute.WindowsVirtualMachine` resource, to avoid a persistent diff when using this resource.
"á
hotpatchingEnabledB
 ÄShould the VM be patched without requiring a reboot? Possible values are `true` or `false`. Defaults to `false`. For more information about hot patching please see the [product documentation](https://docs.microsoft.com/azure/automanage/automanage-hotpatch).

> **NOTE:** Hotpatching can only be enabled if the `patch_mode` is set to `AutomaticByPlatform`, the `provision_vm_agent` is set to `true`, your `source_image_reference` references a hotpatching enabled image, and the VM's `size` is set to a [Azure generation 2](https://docs.microsoft.com/azure/virtual-machines/generation-2#generation-2-vm-sizes) VM. An example of how to correctly configure a Windows Virtual Machine to use the `hotpatching_enabled` field can be found in the `./examples/virtual-machines/windows/hotpatching-enabled` directory within the GitHub Repository.
"­
identityyBw:u
s
computeWindowsVirtualMachineIdentityIazure:compute/WindowsVirtualMachineIdentity:WindowsVirtualMachineIdentity&An `identity` block as defined below.
"¨
licenseTypeB" Specifies the type of on-premise license (also known as [Azure Hybrid Use Benefit](https://docs.microsoft.com/windows-server/get-started/azure-hybrid-benefit)) which should be used for this Virtual Machine. Possible values are `None`, `Windows_Client` and `Windows_Server`.
"
location" vThe Azure location where the Windows Virtual Machine should exist. Changing this forces a new resource to be created.
"»
maxBidPriceB ¥The maximum price you're willing to pay for this Virtual Machine, in US Dollars; which must be greater than the current spot price. If this bid price falls below the current spot price the Virtual Machine will be evicted using the `eviction_policy`. Defaults to `-1`, which means that the Virtual Machine should not be evicted for price reasons.

> **NOTE:** This can only be configured when `priority` is set to `Spot`.
"h
name" \The name of the Windows Virtual Machine. Changing this forces a new resource to be created.
"Ü
networkInterfaceIds*" ¾. A list of Network Interface IDs which should be attached to this Virtual Machine. The first Network Interface ID in this list will be the Primary Network Interface on the Virtual Machine.
"¡
osDiskq:o
m
computeWindowsVirtualMachineOsDiskEazure:compute/WindowsVirtualMachineOsDisk:WindowsVirtualMachineOsDisk$A `os_disk` block as defined below.
"é
osImageNotificationB:

compute(WindowsVirtualMachineOsImageNotification_azure:compute/WindowsVirtualMachineOsImageNotification:WindowsVirtualMachineOsImageNotification2A `os_image_notification` block as defined below.
"¿
patchAssessmentModeB" ¡Specifies the mode of VM Guest Patching for the Virtual Machine. Possible values are `AutomaticByPlatform` or `ImageDefault`. Defaults to `ImageDefault`.

> **NOTE:** If the `patch_assessment_mode` is set to `AutomaticByPlatform` then the `provision_vm_agent` field must be set to `true`.
"å
	patchModeB" ÑSpecifies the mode of in-guest patching to this Windows Virtual Machine. Possible values are `Manual`, `AutomaticByOS` and `AutomaticByPlatform`. Defaults to `AutomaticByOS`. For more information on patch modes please see the [product documentation](https://docs.microsoft.com/azure/virtual-machines/automatic-vm-guest-patching#patch-orchestration-modes).

> **NOTE:** If `patch_mode` is set to `AutomaticByPlatform` then `provision_vm_agent` must also be set to `true`. If the Virtual Machine is using a hotpatching enabled image the `patch_mode` must always be set to `AutomaticByPlatform`.
"Ë
planmBk:i
g
computeWindowsVirtualMachinePlanAazure:compute/WindowsVirtualMachinePlan:WindowsVirtualMachinePlanTA `plan` block as defined below. Changing this forces a new resource to be created.
"Ñ
platformFaultDomainB ³Specifies the Platform Fault Domain in which this Windows Virtual Machine should be created. Defaults to `-1`, which means this will be automatically assigned to a fault domain that best maintains balance across the available fault domains. Changing this forces a new Windows Virtual Machine to be created.
"·
priorityB" ¤Specifies the priority of this Virtual Machine. Possible values are `Regular` and `Spot`. Defaults to `Regular`. Changing this forces a new resource to be created.
"Y
privateIpAddress" AThe Primary Private IP Address assigned to this Virtual Machine.
"]
privateIpAddresses*" AA list of Private IP Addresses assigned to this Virtual Machine.
"
provisionVmAgentB
 ÿShould the Azure VM Agent be provisioned on this Virtual Machine? Defaults to `true`. Changing this forces a new resource to be created.

> **NOTE:** If `provision_vm_agent` is set to `false` then `allow_extension_operations` must also be set to `false`.
"|
proximityPlacementGroupIdB" YThe ID of the Proximity Placement Group which the Virtual Machine should be assigned to.
"W
publicIpAddress" @The Primary Public IP Address assigned to this Virtual Machine.
"_
publicIpAddresses*" DA list of the Public IP Addresses assigned to this Virtual Machine.
"ï
rebootSettingB" ×Specifies the reboot setting for platform scheduled patching. Possible values are `Always`, `IfRequired` and `Never`.

> **NOTE:** `reboot_setting` can only be set when `patch_mode` is set to `AutomaticByPlatform`.
"¢
resourceGroupName" The name of the Resource Group in which the Windows Virtual Machine should be exist. Changing this forces a new resource to be created.
"°
secretsuBs*q:o
m
computeWindowsVirtualMachineSecretEazure:compute/WindowsVirtualMachineSecret:WindowsVirtualMachineSecret.One or more `secret` blocks as defined below.
"
secureBootEnabledB
 Specifies if Secure Boot and Trusted Launch is enabled for the Virtual Machine. Changing this forces a new resource to be created.
"Z
size" NThe SKU which should be used for this Virtual Machine, such as `Standard_F2`.
"Î
sourceImageIdB" ¶The ID of the Image which this Virtual Machine should be created from. Changing this forces a new resource to be created. Possible Image ID types include `Image ID`s, `Shared Image ID`s, `Shared Image Version ID`s, `Community Gallery Image ID`s, `Community Gallery Image Version ID`s, `Shared Gallery Image ID`s and `Shared Gallery Image Version ID`s.

> **NOTE:** One of either `source_image_id` or `source_image_reference` must be set.
"ø
sourceImageReference B:

compute)WindowsVirtualMachineSourceImageReferenceaazure:compute/WindowsVirtualMachineSourceImageReference:WindowsVirtualMachineSourceImageReference¼A `source_image_reference` block as defined below. Changing this forces a new resource to be created.

> **NOTE:** One of either `source_image_id` or `source_image_reference` must be set.
"T
tagsB2" DA mapping of tags which should be assigned to this Virtual Machine.
"ù
terminationNotification¦:£
 
compute,WindowsVirtualMachineTerminationNotificationgazure:compute/WindowsVirtualMachineTerminationNotification:WindowsVirtualMachineTerminationNotification5A `termination_notification` block as defined below.
"ü
timezoneB" éSpecifies the Time Zone which should be used by the Virtual Machine, [the possible values are defined here](https://jackstromberg.com/2017/01/list-of-time-zones-consumed-by-azure/). Changing this forces a new resource to be created.
"^
userDataB" LThe Base64-Encoded User Data which should be used for this Virtual Machine.
"]
virtualMachineId" EA 128-bit identifier which uniquely identifies this Virtual Machine.
"¼
virtualMachineScaleSetIdB" Specifies the Orchestrated Virtual Machine Scale Set that this Virtual Machine should be created within.

> **NOTE:** To update `virtual_machine_scale_set_id` the Preview Feature `Microsoft.Compute/SingleFDAttachDetachVMToVmss` needs to be enabled, see [the documentation](https://review.learn.microsoft.com/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-attach-detach-vm#enroll-in-the-preview) for more information.

> **NOTE:** Orchestrated Virtual Machine Scale Sets can be provisioned using [the `azure.compute.OrchestratedVirtualMachineScaleSet` resource](https://www.terraform.io/docs/providers/azurerm/r/orchestrated_virtual_machine_scale_set.html).

> **NOTE:** To attach an existing VM to a Virtual Machine Scale Set, the scale set must have `single_placement_group` set to `false`, see [the documentation](https://learn.microsoft.com/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-attach-detach-vm?tabs=portal-1%2Cportal-2%2Cportal-3#limitations-for-attaching-an-existing-vm-to-a-scale-set) for more information.
"s
vmAgentPlatformUpdatesEnabledB
 LSpecifies whether VMAgent Platform Updates is enabled. Defaults to `false`.
"´
vtpmEnabledB
 Specifies if vTPM (virtual Trusted Platform Module) and Trusted Launch is enabled for the Virtual Machine. Changing this forces a new resource to be created.
"
winrmListenersB*:

compute"WindowsVirtualMachineWinrmListenerSazure:compute/WindowsVirtualMachineWinrmListener:WindowsVirtualMachineWinrmListeneriOne or more `winrm_listener` blocks as defined below. Changing this forces a new resource to be created.
"Á
zoneB" ²* `zones` - (Optional) Specifies the Availability Zone in which this Windows Virtual Machine should be located. Changing this forces a new Windows Virtual Machine to be created.
*àÆ
s
computeWindowsVirtualMachineScaleSetIazure:compute/windowsVirtualMachineScaleSet:WindowsVirtualMachineScaleSetoManages a Windows Virtual Machine Scale Set.

## Disclaimers

> **Note:** This resource will only create Virtual Machine Scale Sets with the **Uniform** Orchestration Mode. For Virtual Machine Scale Sets with **Flexible** orchestration mode, use `azure.compute.OrchestratedVirtualMachineScaleSet`. Flexible orchestration mode is recommended for workloads on Azure.

> **Note:** All arguments including the administrator login and password will be stored in the raw state as plain-text. [Read more about sensitive data in state](https://www.terraform.io/docs/state/sensitive-data.html).

> **Note:** This provider will automatically update & reimage the nodes in the Scale Set (if Required) during an Update - this behaviour can be configured using the `features` setting within the Provider block.

> **Note:** This resource does not support Unmanaged Disks. If you need to use Unmanaged Disks you can continue to use the `azure.compute.ScaleSet` resource instead

## Example Usage

This example provisions a basic Windows Virtual Machine Scale Set on an internal network.

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const example = new azure.core.ResourceGroup("example", {
    name: "example-resources",
    location: "West Europe",
});
const exampleVirtualNetwork = new azure.network.VirtualNetwork("example", {
    name: "example-network",
    resourceGroupName: example.name,
    location: example.location,
    addressSpaces: ["10.0.0.0/16"],
});
const internal = new azure.network.Subnet("internal", {
    name: "internal",
    resourceGroupName: example.name,
    virtualNetworkName: exampleVirtualNetwork.name,
    addressPrefixes: ["10.0.2.0/24"],
});
const exampleWindowsVirtualMachineScaleSet = new azure.compute.WindowsVirtualMachineScaleSet("example", {
    name: "example-vmss",
    resourceGroupName: example.name,
    location: example.location,
    sku: "Standard_F2",
    instances: 1,
    adminPassword: "P@55w0rd1234!",
    adminUsername: "adminuser",
    computerNamePrefix: "vm-",
    sourceImageReference: {
        publisher: "MicrosoftWindowsServer",
        offer: "WindowsServer",
        sku: "2016-Datacenter-Server-Core",
        version: "latest",
    },
    osDisk: {
        storageAccountType: "Standard_LRS",
        caching: "ReadWrite",
    },
    networkInterfaces: [{
        name: "example",
        primary: true,
        ipConfigurations: [{
            name: "internal",
            primary: true,
            subnetId: internal.id,
        }],
    }],
});
```
```python
import pulumi
import pulumi_azure as azure

example = azure.core.ResourceGroup("example",
    name="example-resources",
    location="West Europe")
example_virtual_network = azure.network.VirtualNetwork("example",
    name="example-network",
    resource_group_name=example.name,
    location=example.location,
    address_spaces=["10.0.0.0/16"])
internal = azure.network.Subnet("internal",
    name="internal",
    resource_group_name=example.name,
    virtual_network_name=example_virtual_network.name,
    address_prefixes=["10.0.2.0/24"])
example_windows_virtual_machine_scale_set = azure.compute.WindowsVirtualMachineScaleSet("example",
    name="example-vmss",
    resource_group_name=example.name,
    location=example.location,
    sku="Standard_F2",
    instances=1,
    admin_password="P@55w0rd1234!",
    admin_username="adminuser",
    computer_name_prefix="vm-",
    source_image_reference={
        "publisher": "MicrosoftWindowsServer",
        "offer": "WindowsServer",
        "sku": "2016-Datacenter-Server-Core",
        "version": "latest",
    },
    os_disk={
        "storage_account_type": "Standard_LRS",
        "caching": "ReadWrite",
    },
    network_interfaces=[{
        "name": "example",
        "primary": True,
        "ip_configurations": [{
            "name": "internal",
            "primary": True,
            "subnet_id": internal.id,
        }],
    }])
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var example = new Azure.Core.ResourceGroup("example", new()
    {
        Name = "example-resources",
        Location = "West Europe",
    });

    var exampleVirtualNetwork = new Azure.Network.VirtualNetwork("example", new()
    {
        Name = "example-network",
        ResourceGroupName = example.Name,
        Location = example.Location,
        AddressSpaces = new[]
        {
            "10.0.0.0/16",
        },
    });

    var @internal = new Azure.Network.Subnet("internal", new()
    {
        Name = "internal",
        ResourceGroupName = example.Name,
        VirtualNetworkName = exampleVirtualNetwork.Name,
        AddressPrefixes = new[]
        {
            "10.0.2.0/24",
        },
    });

    var exampleWindowsVirtualMachineScaleSet = new Azure.Compute.WindowsVirtualMachineScaleSet("example", new()
    {
        Name = "example-vmss",
        ResourceGroupName = example.Name,
        Location = example.Location,
        Sku = "Standard_F2",
        Instances = 1,
        AdminPassword = "P@55w0rd1234!",
        AdminUsername = "adminuser",
        ComputerNamePrefix = "vm-",
        SourceImageReference = new Azure.Compute.Inputs.WindowsVirtualMachineScaleSetSourceImageReferenceArgs
        {
            Publisher = "MicrosoftWindowsServer",
            Offer = "WindowsServer",
            Sku = "2016-Datacenter-Server-Core",
            Version = "latest",
        },
        OsDisk = new Azure.Compute.Inputs.WindowsVirtualMachineScaleSetOsDiskArgs
        {
            StorageAccountType = "Standard_LRS",
            Caching = "ReadWrite",
        },
        NetworkInterfaces = new[]
        {
            new Azure.Compute.Inputs.WindowsVirtualMachineScaleSetNetworkInterfaceArgs
            {
                Name = "example",
                Primary = true,
                IpConfigurations = new[]
                {
                    new Azure.Compute.Inputs.WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationArgs
                    {
                        Name = "internal",
                        Primary = true,
                        SubnetId = @internal.Id,
                    },
                },
            },
        },
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/compute"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/network"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
			Name:     pulumi.String("example-resources"),
			Location: pulumi.String("West Europe"),
		})
		if err != nil {
			return err
		}
		exampleVirtualNetwork, err := network.NewVirtualNetwork(ctx, "example", &network.VirtualNetworkArgs{
			Name:              pulumi.String("example-network"),
			ResourceGroupName: example.Name,
			Location:          example.Location,
			AddressSpaces: pulumi.StringArray{
				pulumi.String("10.0.0.0/16"),
			},
		})
		if err != nil {
			return err
		}
		internal, err := network.NewSubnet(ctx, "internal", &network.SubnetArgs{
			Name:               pulumi.String("internal"),
			ResourceGroupName:  example.Name,
			VirtualNetworkName: exampleVirtualNetwork.Name,
			AddressPrefixes: pulumi.StringArray{
				pulumi.String("10.0.2.0/24"),
			},
		})
		if err != nil {
			return err
		}
		_, err = compute.NewWindowsVirtualMachineScaleSet(ctx, "example", &compute.WindowsVirtualMachineScaleSetArgs{
			Name:               pulumi.String("example-vmss"),
			ResourceGroupName:  example.Name,
			Location:           example.Location,
			Sku:                pulumi.String("Standard_F2"),
			Instances:          pulumi.Int(1),
			AdminPassword:      pulumi.String("P@55w0rd1234!"),
			AdminUsername:      pulumi.String("adminuser"),
			ComputerNamePrefix: pulumi.String("vm-"),
			SourceImageReference: &compute.WindowsVirtualMachineScaleSetSourceImageReferenceArgs{
				Publisher: pulumi.String("MicrosoftWindowsServer"),
				Offer:     pulumi.String("WindowsServer"),
				Sku:       pulumi.String("2016-Datacenter-Server-Core"),
				Version:   pulumi.String("latest"),
			},
			OsDisk: &compute.WindowsVirtualMachineScaleSetOsDiskArgs{
				StorageAccountType: pulumi.String("Standard_LRS"),
				Caching:            pulumi.String("ReadWrite"),
			},
			NetworkInterfaces: compute.WindowsVirtualMachineScaleSetNetworkInterfaceArray{
				&compute.WindowsVirtualMachineScaleSetNetworkInterfaceArgs{
					Name:    pulumi.String("example"),
					Primary: pulumi.Bool(true),
					IpConfigurations: compute.WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationArray{
						&compute.WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationArgs{
							Name:     pulumi.String("internal"),
							Primary:  pulumi.Bool(true),
							SubnetId: internal.ID(),
						},
					},
				},
			},
		})
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.core.ResourceGroup;
import com.pulumi.azure.core.ResourceGroupArgs;
import com.pulumi.azure.network.VirtualNetwork;
import com.pulumi.azure.network.VirtualNetworkArgs;
import com.pulumi.azure.network.Subnet;
import com.pulumi.azure.network.SubnetArgs;
import com.pulumi.azure.compute.WindowsVirtualMachineScaleSet;
import com.pulumi.azure.compute.WindowsVirtualMachineScaleSetArgs;
import com.pulumi.azure.compute.inputs.WindowsVirtualMachineScaleSetSourceImageReferenceArgs;
import com.pulumi.azure.compute.inputs.WindowsVirtualMachineScaleSetOsDiskArgs;
import com.pulumi.azure.compute.inputs.WindowsVirtualMachineScaleSetNetworkInterfaceArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        var example = new ResourceGroup("example", ResourceGroupArgs.builder()
            .name("example-resources")
            .location("West Europe")
            .build());

        var exampleVirtualNetwork = new VirtualNetwork("exampleVirtualNetwork", VirtualNetworkArgs.builder()
            .name("example-network")
            .resourceGroupName(example.name())
            .location(example.location())
            .addressSpaces("10.0.0.0/16")
            .build());

        var internal = new Subnet("internal", SubnetArgs.builder()
            .name("internal")
            .resourceGroupName(example.name())
            .virtualNetworkName(exampleVirtualNetwork.name())
            .addressPrefixes("10.0.2.0/24")
            .build());

        var exampleWindowsVirtualMachineScaleSet = new WindowsVirtualMachineScaleSet("exampleWindowsVirtualMachineScaleSet", WindowsVirtualMachineScaleSetArgs.builder()
            .name("example-vmss")
            .resourceGroupName(example.name())
            .location(example.location())
            .sku("Standard_F2")
            .instances(1)
            .adminPassword("P@55w0rd1234!")
            .adminUsername("adminuser")
            .computerNamePrefix("vm-")
            .sourceImageReference(WindowsVirtualMachineScaleSetSourceImageReferenceArgs.builder()
                .publisher("MicrosoftWindowsServer")
                .offer("WindowsServer")
                .sku("2016-Datacenter-Server-Core")
                .version("latest")
                .build())
            .osDisk(WindowsVirtualMachineScaleSetOsDiskArgs.builder()
                .storageAccountType("Standard_LRS")
                .caching("ReadWrite")
                .build())
            .networkInterfaces(WindowsVirtualMachineScaleSetNetworkInterfaceArgs.builder()
                .name("example")
                .primary(true)
                .ipConfigurations(WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationArgs.builder()
                    .name("internal")
                    .primary(true)
                    .subnetId(internal.id())
                    .build())
                .build())
            .build());

    }
}
```
```yaml
resources:
  example:
    type: azure:core:ResourceGroup
    properties:
      name: example-resources
      location: West Europe
  exampleVirtualNetwork:
    type: azure:network:VirtualNetwork
    name: example
    properties:
      name: example-network
      resourceGroupName: ${example.name}
      location: ${example.location}
      addressSpaces:
        - 10.0.0.0/16
  internal:
    type: azure:network:Subnet
    properties:
      name: internal
      resourceGroupName: ${example.name}
      virtualNetworkName: ${exampleVirtualNetwork.name}
      addressPrefixes:
        - 10.0.2.0/24
  exampleWindowsVirtualMachineScaleSet:
    type: azure:compute:WindowsVirtualMachineScaleSet
    name: example
    properties:
      name: example-vmss
      resourceGroupName: ${example.name}
      location: ${example.location}
      sku: Standard_F2
      instances: 1
      adminPassword: P@55w0rd1234!
      adminUsername: adminuser
      computerNamePrefix: vm-
      sourceImageReference:
        publisher: MicrosoftWindowsServer
        offer: WindowsServer
        sku: 2016-Datacenter-Server-Core
        version: latest
      osDisk:
        storageAccountType: Standard_LRS
        caching: ReadWrite
      networkInterfaces:
        - name: example
          primary: true
          ipConfigurations:
            - name: internal
              primary: true
              subnetId: ${internal.id}
```
<!--End PulumiCodeChooser -->

## Import

Windows Virtual Machine Scale Sets can be imported using the `resource id`, e.g.

```sh
$ pulumi import azure:compute/windowsVirtualMachineScaleSet:WindowsVirtualMachineScaleSet example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Compute/virtualMachineScaleSets/scaleset1
```


additionalCapabilities¾B»:¸
µ
compute3WindowsVirtualMachineScaleSetAdditionalCapabilitiesuazure:compute/WindowsVirtualMachineScaleSetAdditionalCapabilities:WindowsVirtualMachineScaleSetAdditionalCapabilities5An `additional_capabilities` block as defined below.
á
additionalUnattendContentsÊBÇ*Ä:Á
¾
compute6WindowsVirtualMachineScaleSetAdditionalUnattendContent{azure:compute/WindowsVirtualMachineScaleSetAdditionalUnattendContent:WindowsVirtualMachineScaleSetAdditionalUnattendContentvOne or more `additional_unattend_content` blocks as defined below. Changing this forces a new resource to be created.
 
adminPassword" The Password which should be used for the local-administrator on this Virtual Machine. Changing this forces a new resource to be created.

adminUsername" The username of the local administrator on each Virtual Machine Scale Set instance. Changing this forces a new resource to be created.
ä
automaticInstanceRepairÁB¾:»
¸
compute4WindowsVirtualMachineScaleSetAutomaticInstanceRepairwazure:compute/WindowsVirtualMachineScaleSetAutomaticInstanceRepair:WindowsVirtualMachineScaleSetAutomaticInstanceRepairAn `automatic_instance_repair` block as defined below. To enable the automatic instance repair, this Virtual Machine Scale Set must have a valid `health_probe_id` or an [Application Health Extension](https://docs.microsoft.com/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-health-extension).

> **Note:** For more information about Automatic Instance Repair, please refer to [this doc](https://docs.microsoft.com/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-automatic-instance-repairs).
÷
automaticOsUpgradePolicyÄBÁ:¾
»
compute5WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyyazure:compute/WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicy:WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyAn `automatic_os_upgrade_policy` block as defined below. This can only be specified when `upgrade_mode` is set to either `Automatic` or `Rolling`.
ì
bootDiagnostics©B¦:£
 
compute,WindowsVirtualMachineScaleSetBootDiagnosticsgazure:compute/WindowsVirtualMachineScaleSetBootDiagnostics:WindowsVirtualMachineScaleSetBootDiagnostics-A `boot_diagnostics` block as defined below.

capacityReservationGroupIdB" òSpecifies the ID of the Capacity Reservation Group which the Virtual Machine Scale Set should be allocated to. Changing this forces a new resource to be created.

> **Note:** `capacity_reservation_group_id` cannot be used with `proximity_placement_group_id`

> **Note:** `single_placement_group` must be set to `false` when `capacity_reservation_group_id` is specified.
Þ
computerNamePrefixB" ÁThe prefix which should be used for the name of the Virtual Machines in this Scale Set. If unspecified this defaults to the value for the `name` field. If the value of the `name` field is not a valid `computer_name_prefix`, then you must specify `computer_name_prefix`. Changing this forces a new resource to be created.


customDataB" The Base64-Encoded Custom Data which should be used for this Virtual Machine Scale Set.

> **Note:** When Custom Data has been configured, it's not possible to remove it without tainting the Virtual Machine Scale Set, due to a limitation of the Azure API.
Ø
	dataDisksB*:

compute%WindowsVirtualMachineScaleSetDataDiskYazure:compute/WindowsVirtualMachineScaleSetDataDisk:WindowsVirtualMachineScaleSetDataDisk1One or more `data_disk` blocks as defined below.
©
+doNotRunExtensionsOnOverprovisionedMachinesB
 tShould Virtual Machine Extensions be run on Overprovisioned Virtual Machines in the Scale Set? Defaults to `false`.
Ê
edgeZoneB" ·Specifies the Edge Zone within the Azure Region where this Windows Virtual Machine Scale Set should exist. Changing this forces a new Windows Virtual Machine Scale Set to be created.
l
enableAutomaticUpdatesB
 LAre automatic updates enabled for this Virtual Machine? Defaults to `true`.
¢
encryptionAtHostEnabledB
 Should all of the disks (including the temp disk) attached to this Virtual Machine be encrypted by enabling Encryption at Host?

evictionPolicyB" óSpecifies the eviction policy for Virtual Machines in this Scale Set. Possible values are `Deallocate` and `Delete`. Changing this forces a new resource to be created.

> **Note:** This can only be configured when `priority` is set to `Spot`.
ù
extensionOperationsEnabledB
 ÔShould extension operations be allowed on the Virtual Machine Scale Set? Possible values are `true` or `false`. Defaults to `true`. Changing this forces a new Windows Virtual Machine Scale Set to be created.

> **Note:** `extension_operations_enabled` may only be set to `false` if there are no extensions defined in the `extension` field.
Û

extensionsB*:

compute&WindowsVirtualMachineScaleSetExtension[azure:compute/WindowsVirtualMachineScaleSetExtension:WindowsVirtualMachineScaleSetExtension0One or more `extension` blocks as defined below
ï
extensionsTimeBudgetB" ÐSpecifies the duration allocated for all extensions to start. The time duration should be between `15` minutes and `120` minutes (inclusive) and should be specified in ISO 8601 format. Defaults to `PT1H30M`.

galleryApplicationsµB²*¯:¬
©
compute/WindowsVirtualMachineScaleSetGalleryApplicationmazure:compute/WindowsVirtualMachineScaleSetGalleryApplication:WindowsVirtualMachineScaleSetGalleryApplication;One or more `gallery_application` blocks as defined below.
Ø
healthProbeIdB" ÀThe ID of a Load Balancer Probe which should be used to determine the health of an instance. This is Required and can only be specified when `upgrade_mode` is set to `Automatic` or `Rolling`.
¥
hostGroupIdB" Specifies the ID of the dedicated host group that the virtual machine scale set resides in. Changing this forces a new resource to be created.
É
identityB:

compute%WindowsVirtualMachineScaleSetIdentityYazure:compute/WindowsVirtualMachineScaleSetIdentity:WindowsVirtualMachineScaleSetIdentity&An `identity` block as defined below.

	instances þThe number of Virtual Machines in the Scale Set.

> **NOTE:** If you're using AutoScaling, you may wish to use [`Ignore Changes` functionality](https://www.pulumi.com/docs/intro/concepts/programming-model/#ignorechanges) to ignore changes to this field.
Ï
licenseTypeB" ¹Specifies the type of on-premise license (also known as [Azure Hybrid Use Benefit](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-hybrid-use-benefit-licensing)) which should be used for this Virtual Machine Scale Set. Possible values are `None`, `Windows_Client` and `Windows_Server`.

locationB" The Azure location where the Windows Virtual Machine Scale Set should exist. Changing this forces a new resource to be created.
ñ
maxBidPriceB ÛThe maximum price you're willing to pay for each Virtual Machine in this Scale Set, in US Dollars; which must be greater than the current spot price. If this bid price falls below the current spot price the Virtual Machines in the Scale Set will be evicted using the `eviction_policy`. Defaults to `-1`, which means that each Virtual Machine in the Scale Set should not be evicted for price reasons.

> **Note:** This can only be configured when `priority` is set to `Spot`.
t
nameB" fThe name of the Windows Virtual Machine Scale Set. Changing this forces a new resource to be created.
ý
networkInterfaces¬*©:¦
£
compute-WindowsVirtualMachineScaleSetNetworkInterfaceiazure:compute/WindowsVirtualMachineScaleSetNetworkInterface:WindowsVirtualMachineScaleSetNetworkInterface9One or more `network_interface` blocks as defined below.
½
osDisk:

compute#WindowsVirtualMachineScaleSetOsDiskUazure:compute/WindowsVirtualMachineScaleSetOsDisk:WindowsVirtualMachineScaleSetOsDisk%An `os_disk` block as defined below.

overprovisionB
 Should Azure over-provision Virtual Machines in this Scale Set? This means that multiple Virtual Machines will be provisioned and Azure will keep the instances which become available first - which improves provisioning success rates and improves deployment time. You're not billed for these over-provisioned VM's and they don't count towards the Subscription Quota. Defaults to `true`.
»
planB:

compute!WindowsVirtualMachineScaleSetPlanQazure:compute/WindowsVirtualMachineScaleSetPlan:WindowsVirtualMachineScaleSetPlan¨A `plan` block as defined below. Changing this forces a new resource to be created.

> **Note:** When using an image from Azure Marketplace a `plan` must be specified.
³
platformFaultDomainCountB Specifies the number of fault domains that are used by this Linux Virtual Machine Scale Set. Changing this forces a new resource to be created.

priorityB" òThe Priority of this Virtual Machine Scale Set. Possible values are `Regular` and `Spot`. Defaults to `Regular`. Changing this value forces a new resource.

> **Note:** When `priority` is set to `Spot` an `eviction_policy` must be specified.
»
provisionVmAgentB
  Should the Azure VM Agent be provisioned on each Virtual Machine in the Scale Set? Defaults to `true`. Changing this value forces a new resource to be created.
½
proximityPlacementGroupIdB" The ID of the Proximity Placement Group in which the Virtual Machine Scale Set should be assigned to. Changing this forces a new resource to be created.
¬
resourceGroupName" The name of the Resource Group in which the Windows Virtual Machine Scale Set should be exist. Changing this forces a new resource to be created.

rollingUpgradePolicy¸Bµ:²
¯
compute1WindowsVirtualMachineScaleSetRollingUpgradePolicyqazure:compute/WindowsVirtualMachineScaleSetRollingUpgradePolicy:WindowsVirtualMachineScaleSetRollingUpgradePolicyÉA `rolling_upgrade_policy` block as defined below. This is Required and can only be specified when `upgrade_mode` is set to `Automatic` or `Rolling`. Changing this forces a new resource to be created.
Ä
scaleInB:

compute$WindowsVirtualMachineScaleSetScaleInWazure:compute/WindowsVirtualMachineScaleSetScaleIn:WindowsVirtualMachineScaleSetScaleIn%A `scale_in` block as defined below.
Í
secretsB*:

compute#WindowsVirtualMachineScaleSetSecretUazure:compute/WindowsVirtualMachineScaleSetSecret:WindowsVirtualMachineScaleSetSecret.One or more `secret` blocks as defined below.

secureBootEnabledB
 Specifies if Secure Boot and Trusted Launch is enabled for the Virtual Machine. Changing this forces a new resource to be created.
Í
singlePlacementGroupB
 ®Should this Virtual Machine Scale Set be limited to a Single Placement Group, which means the number of instances will be capped at 100 Virtual Machines. Defaults to `true`.
M
sku" BThe Virtual Machine SKU for the Scale Set, such as `Standard_F2`.
¡
sourceImageIdB" The ID of an Image which each Virtual Machine in this Scale Set should be based on. Possible Image ID types include `Image ID`, `Shared Image ID`, `Shared Image Version ID`, `Community Gallery Image ID`, `Community Gallery Image Version ID`, `Shared Gallery Image ID` and `Shared Gallery Image Version ID`.

> **Note:** One of either `source_image_id` or `source_image_reference` must be set.
Ý
sourceImageReference¸Bµ:²
¯
compute1WindowsVirtualMachineScaleSetSourceImageReferenceqazure:compute/WindowsVirtualMachineScaleSetSourceImageReference:WindowsVirtualMachineScaleSetSourceImageReferenceA `source_image_reference` block as defined below.

> **Note:** One of either `source_image_id` or `source_image_reference` must be set.
Ø
spotRestoreB:

compute(WindowsVirtualMachineScaleSetSpotRestore_azure:compute/WindowsVirtualMachineScaleSetSpotRestore:WindowsVirtualMachineScaleSetSpotRestore)A `spot_restore` block as defined below.
^
tagsB2" NA mapping of tags which should be assigned to this Virtual Machine Scale Set.

terminationNotificationÁB¾:»
¸
compute4WindowsVirtualMachineScaleSetTerminationNotificationwazure:compute/WindowsVirtualMachineScaleSetTerminationNotification:WindowsVirtualMachineScaleSetTerminationNotification5A `termination_notification` block as defined below.
´
timezoneB" ¡Specifies the time zone of the virtual machine, [the possible values are defined here](https://jackstromberg.com/2017/01/list-of-time-zones-consumed-by-azure/).

upgradeModeB" h
userDataB" VThe Base64-Encoded User Data which should be used for this Virtual Machine Scale Set.
´
vtpmEnabledB
 Specifies if vTPM (Virtual Trusted Platform Module) and Trusted Launch is enabled for the Virtual Machine. Changing this forces a new resource to be created.
¤
winrmListeners¦B£* :

compute*WindowsVirtualMachineScaleSetWinrmListenercazure:compute/WindowsVirtualMachineScaleSetWinrmListener:WindowsVirtualMachineScaleSetWinrmListeneriOne or more `winrm_listener` blocks as defined below. Changing this forces a new resource to be created.

zoneBalanceB
 Should the Virtual Machines in this Scale Set be strictly evenly distributed across Availability Zones? Defaults to `false`. Changing this forces a new resource to be created.

> **Note:** This can only be set to `true` when one or more `zones` are configured.
ë
zonesB*" ÙSpecifies a list of Availability Zones in which this Windows Virtual Machine Scale Set should be located.

> **Note:** Updating `zones` to remove an existing zone forces a new Virtual Machine Scale Set to be created.
"
additionalCapabilities¾B»:¸
µ
compute3WindowsVirtualMachineScaleSetAdditionalCapabilitiesuazure:compute/WindowsVirtualMachineScaleSetAdditionalCapabilities:WindowsVirtualMachineScaleSetAdditionalCapabilities5An `additional_capabilities` block as defined below.
"á
additionalUnattendContentsÊBÇ*Ä:Á
¾
compute6WindowsVirtualMachineScaleSetAdditionalUnattendContent{azure:compute/WindowsVirtualMachineScaleSetAdditionalUnattendContent:WindowsVirtualMachineScaleSetAdditionalUnattendContentvOne or more `additional_unattend_content` blocks as defined below. Changing this forces a new resource to be created.
" 
adminPassword" The Password which should be used for the local-administrator on this Virtual Machine. Changing this forces a new resource to be created.
"
adminUsername" The username of the local administrator on each Virtual Machine Scale Set instance. Changing this forces a new resource to be created.
"á
automaticInstanceRepair¾:»
¸
compute4WindowsVirtualMachineScaleSetAutomaticInstanceRepairwazure:compute/WindowsVirtualMachineScaleSetAutomaticInstanceRepair:WindowsVirtualMachineScaleSetAutomaticInstanceRepairAn `automatic_instance_repair` block as defined below. To enable the automatic instance repair, this Virtual Machine Scale Set must have a valid `health_probe_id` or an [Application Health Extension](https://docs.microsoft.com/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-health-extension).

> **Note:** For more information about Automatic Instance Repair, please refer to [this doc](https://docs.microsoft.com/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-automatic-instance-repairs).
"÷
automaticOsUpgradePolicyÄBÁ:¾
»
compute5WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyyazure:compute/WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicy:WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyAn `automatic_os_upgrade_policy` block as defined below. This can only be specified when `upgrade_mode` is set to either `Automatic` or `Rolling`.
"ì
bootDiagnostics©B¦:£
 
compute,WindowsVirtualMachineScaleSetBootDiagnosticsgazure:compute/WindowsVirtualMachineScaleSetBootDiagnostics:WindowsVirtualMachineScaleSetBootDiagnostics-A `boot_diagnostics` block as defined below.
"
capacityReservationGroupIdB" òSpecifies the ID of the Capacity Reservation Group which the Virtual Machine Scale Set should be allocated to. Changing this forces a new resource to be created.

> **Note:** `capacity_reservation_group_id` cannot be used with `proximity_placement_group_id`

> **Note:** `single_placement_group` must be set to `false` when `capacity_reservation_group_id` is specified.
"Ü
computerNamePrefix" ÁThe prefix which should be used for the name of the Virtual Machines in this Scale Set. If unspecified this defaults to the value for the `name` field. If the value of the `name` field is not a valid `computer_name_prefix`, then you must specify `computer_name_prefix`. Changing this forces a new resource to be created.
"

customDataB" The Base64-Encoded Custom Data which should be used for this Virtual Machine Scale Set.

> **Note:** When Custom Data has been configured, it's not possible to remove it without tainting the Virtual Machine Scale Set, due to a limitation of the Azure API.
"Ø
	dataDisksB*:

compute%WindowsVirtualMachineScaleSetDataDiskYazure:compute/WindowsVirtualMachineScaleSetDataDisk:WindowsVirtualMachineScaleSetDataDisk1One or more `data_disk` blocks as defined below.
"©
+doNotRunExtensionsOnOverprovisionedMachinesB
 tShould Virtual Machine Extensions be run on Overprovisioned Virtual Machines in the Scale Set? Defaults to `false`.
"Ê
edgeZoneB" ·Specifies the Edge Zone within the Azure Region where this Windows Virtual Machine Scale Set should exist. Changing this forces a new Windows Virtual Machine Scale Set to be created.
"l
enableAutomaticUpdatesB
 LAre automatic updates enabled for this Virtual Machine? Defaults to `true`.
"¢
encryptionAtHostEnabledB
 Should all of the disks (including the temp disk) attached to this Virtual Machine be encrypted by enabling Encryption at Host?
"
evictionPolicyB" óSpecifies the eviction policy for Virtual Machines in this Scale Set. Possible values are `Deallocate` and `Delete`. Changing this forces a new resource to be created.

> **Note:** This can only be configured when `priority` is set to `Spot`.
"ù
extensionOperationsEnabledB
 ÔShould extension operations be allowed on the Virtual Machine Scale Set? Possible values are `true` or `false`. Defaults to `true`. Changing this forces a new Windows Virtual Machine Scale Set to be created.

> **Note:** `extension_operations_enabled` may only be set to `false` if there are no extensions defined in the `extension` field.
"Ø

extensions*:

compute&WindowsVirtualMachineScaleSetExtension[azure:compute/WindowsVirtualMachineScaleSetExtension:WindowsVirtualMachineScaleSetExtension0One or more `extension` blocks as defined below
"ï
extensionsTimeBudgetB" ÐSpecifies the duration allocated for all extensions to start. The time duration should be between `15` minutes and `120` minutes (inclusive) and should be specified in ISO 8601 format. Defaults to `PT1H30M`.
"
galleryApplicationsµB²*¯:¬
©
compute/WindowsVirtualMachineScaleSetGalleryApplicationmazure:compute/WindowsVirtualMachineScaleSetGalleryApplication:WindowsVirtualMachineScaleSetGalleryApplication;One or more `gallery_application` blocks as defined below.
"Ø
healthProbeIdB" ÀThe ID of a Load Balancer Probe which should be used to determine the health of an instance. This is Required and can only be specified when `upgrade_mode` is set to `Automatic` or `Rolling`.
"¥
hostGroupIdB" Specifies the ID of the dedicated host group that the virtual machine scale set resides in. Changing this forces a new resource to be created.
"É
identityB:

compute%WindowsVirtualMachineScaleSetIdentityYazure:compute/WindowsVirtualMachineScaleSetIdentity:WindowsVirtualMachineScaleSetIdentity&An `identity` block as defined below.
"
	instances þThe number of Virtual Machines in the Scale Set.

> **NOTE:** If you're using AutoScaling, you may wish to use [`Ignore Changes` functionality](https://www.pulumi.com/docs/intro/concepts/programming-model/#ignorechanges) to ignore changes to this field.
"Ï
licenseTypeB" ¹Specifies the type of on-premise license (also known as [Azure Hybrid Use Benefit](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-hybrid-use-benefit-licensing)) which should be used for this Virtual Machine Scale Set. Possible values are `None`, `Windows_Client` and `Windows_Server`.
"
location" The Azure location where the Windows Virtual Machine Scale Set should exist. Changing this forces a new resource to be created.
"ñ
maxBidPriceB ÛThe maximum price you're willing to pay for each Virtual Machine in this Scale Set, in US Dollars; which must be greater than the current spot price. If this bid price falls below the current spot price the Virtual Machines in the Scale Set will be evicted using the `eviction_policy`. Defaults to `-1`, which means that each Virtual Machine in the Scale Set should not be evicted for price reasons.

> **Note:** This can only be configured when `priority` is set to `Spot`.
"r
name" fThe name of the Windows Virtual Machine Scale Set. Changing this forces a new resource to be created.
"ý
networkInterfaces¬*©:¦
£
compute-WindowsVirtualMachineScaleSetNetworkInterfaceiazure:compute/WindowsVirtualMachineScaleSetNetworkInterface:WindowsVirtualMachineScaleSetNetworkInterface9One or more `network_interface` blocks as defined below.
"½
osDisk:

compute#WindowsVirtualMachineScaleSetOsDiskUazure:compute/WindowsVirtualMachineScaleSetOsDisk:WindowsVirtualMachineScaleSetOsDisk%An `os_disk` block as defined below.
"
overprovisionB
 Should Azure over-provision Virtual Machines in this Scale Set? This means that multiple Virtual Machines will be provisioned and Azure will keep the instances which become available first - which improves provisioning success rates and improves deployment time. You're not billed for these over-provisioned VM's and they don't count towards the Subscription Quota. Defaults to `true`.
"»
planB:

compute!WindowsVirtualMachineScaleSetPlanQazure:compute/WindowsVirtualMachineScaleSetPlan:WindowsVirtualMachineScaleSetPlan¨A `plan` block as defined below. Changing this forces a new resource to be created.

> **Note:** When using an image from Azure Marketplace a `plan` must be specified.
"±
platformFaultDomainCount Specifies the number of fault domains that are used by this Linux Virtual Machine Scale Set. Changing this forces a new resource to be created.
"
priorityB" òThe Priority of this Virtual Machine Scale Set. Possible values are `Regular` and `Spot`. Defaults to `Regular`. Changing this value forces a new resource.

> **Note:** When `priority` is set to `Spot` an `eviction_policy` must be specified.
"»
provisionVmAgentB
  Should the Azure VM Agent be provisioned on each Virtual Machine in the Scale Set? Defaults to `true`. Changing this value forces a new resource to be created.
"½
proximityPlacementGroupIdB" The ID of the Proximity Placement Group in which the Virtual Machine Scale Set should be assigned to. Changing this forces a new resource to be created.
"¬
resourceGroupName" The name of the Resource Group in which the Windows Virtual Machine Scale Set should be exist. Changing this forces a new resource to be created.
"
rollingUpgradePolicy¸Bµ:²
¯
compute1WindowsVirtualMachineScaleSetRollingUpgradePolicyqazure:compute/WindowsVirtualMachineScaleSetRollingUpgradePolicy:WindowsVirtualMachineScaleSetRollingUpgradePolicyÉA `rolling_upgrade_policy` block as defined below. This is Required and can only be specified when `upgrade_mode` is set to `Automatic` or `Rolling`. Changing this forces a new resource to be created.
"Ä
scaleInB:

compute$WindowsVirtualMachineScaleSetScaleInWazure:compute/WindowsVirtualMachineScaleSetScaleIn:WindowsVirtualMachineScaleSetScaleIn%A `scale_in` block as defined below.
"Í
secretsB*:

compute#WindowsVirtualMachineScaleSetSecretUazure:compute/WindowsVirtualMachineScaleSetSecret:WindowsVirtualMachineScaleSetSecret.One or more `secret` blocks as defined below.
"
secureBootEnabledB
 Specifies if Secure Boot and Trusted Launch is enabled for the Virtual Machine. Changing this forces a new resource to be created.
"Í
singlePlacementGroupB
 ®Should this Virtual Machine Scale Set be limited to a Single Placement Group, which means the number of instances will be capped at 100 Virtual Machines. Defaults to `true`.
"M
sku" BThe Virtual Machine SKU for the Scale Set, such as `Standard_F2`.
"¡
sourceImageIdB" The ID of an Image which each Virtual Machine in this Scale Set should be based on. Possible Image ID types include `Image ID`, `Shared Image ID`, `Shared Image Version ID`, `Community Gallery Image ID`, `Community Gallery Image Version ID`, `Shared Gallery Image ID` and `Shared Gallery Image Version ID`.

> **Note:** One of either `source_image_id` or `source_image_reference` must be set.
"Ý
sourceImageReference¸Bµ:²
¯
compute1WindowsVirtualMachineScaleSetSourceImageReferenceqazure:compute/WindowsVirtualMachineScaleSetSourceImageReference:WindowsVirtualMachineScaleSetSourceImageReferenceA `source_image_reference` block as defined below.

> **Note:** One of either `source_image_id` or `source_image_reference` must be set.
"Õ
spotRestore:

compute(WindowsVirtualMachineScaleSetSpotRestore_azure:compute/WindowsVirtualMachineScaleSetSpotRestore:WindowsVirtualMachineScaleSetSpotRestore)A `spot_restore` block as defined below.
"^
tagsB2" NA mapping of tags which should be assigned to this Virtual Machine Scale Set.
"
terminationNotification¾:»
¸
compute4WindowsVirtualMachineScaleSetTerminationNotificationwazure:compute/WindowsVirtualMachineScaleSetTerminationNotification:WindowsVirtualMachineScaleSetTerminationNotification5A `termination_notification` block as defined below.
"´
timezoneB" ¡Specifies the time zone of the virtual machine, [the possible values are defined here](https://jackstromberg.com/2017/01/list-of-time-zones-consumed-by-azure/).
"J
uniqueId" :The Unique ID for this Windows Virtual Machine Scale Set.
"
upgradeModeB" "h
userDataB" VThe Base64-Encoded User Data which should be used for this Virtual Machine Scale Set.
"´
vtpmEnabledB
 Specifies if vTPM (Virtual Trusted Platform Module) and Trusted Launch is enabled for the Virtual Machine. Changing this forces a new resource to be created.
"¤
winrmListeners¦B£* :

compute*WindowsVirtualMachineScaleSetWinrmListenercazure:compute/WindowsVirtualMachineScaleSetWinrmListener:WindowsVirtualMachineScaleSetWinrmListeneriOne or more `winrm_listener` blocks as defined below. Changing this forces a new resource to be created.
"
zoneBalanceB
 Should the Virtual Machines in this Scale Set be strictly evenly distributed across Availability Zones? Defaults to `false`. Changing this forces a new resource to be created.

> **Note:** This can only be set to `true` when one or more `zones` are configured.
"ë
zonesB*" ÙSpecifies a list of Availability Zones in which this Windows Virtual Machine Scale Set should be located.

> **Note:** Updating `zones` to remove an existing zone forces a new Virtual Machine Scale Set to be created.
*ØD
D
confidentialledgerLedger&azure:confidentialledger/ledger:Ledgerû/Manages a Confidential Ledger.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const current = azure.core.getClientConfig({});
const example = new azure.core.ResourceGroup("example", {
    name: "example-resources",
    location: "West Europe",
});
const ledger = new azure.confidentialledger.Ledger("ledger", {
    name: "example-ledger",
    resourceGroupName: example.name,
    location: example.location,
    ledgerType: "Private",
    azureadBasedServicePrincipals: [{
        principalId: current.then(current => current.objectId),
        tenantId: current.then(current => current.tenantId),
        ledgerRoleName: "Administrator",
    }],
});
```
```python
import pulumi
import pulumi_azure as azure

current = azure.core.get_client_config()
example = azure.core.ResourceGroup("example",
    name="example-resources",
    location="West Europe")
ledger = azure.confidentialledger.Ledger("ledger",
    name="example-ledger",
    resource_group_name=example.name,
    location=example.location,
    ledger_type="Private",
    azuread_based_service_principals=[{
        "principal_id": current.object_id,
        "tenant_id": current.tenant_id,
        "ledger_role_name": "Administrator",
    }])
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var current = Azure.Core.GetClientConfig.Invoke();

    var example = new Azure.Core.ResourceGroup("example", new()
    {
        Name = "example-resources",
        Location = "West Europe",
    });

    var ledger = new Azure.ConfidentialLedger.Ledger("ledger", new()
    {
        Name = "example-ledger",
        ResourceGroupName = example.Name,
        Location = example.Location,
        LedgerType = "Private",
        AzureadBasedServicePrincipals = new[]
        {
            new Azure.ConfidentialLedger.Inputs.LedgerAzureadBasedServicePrincipalArgs
            {
                PrincipalId = current.Apply(getClientConfigResult => getClientConfigResult.ObjectId),
                TenantId = current.Apply(getClientConfigResult => getClientConfigResult.TenantId),
                LedgerRoleName = "Administrator",
            },
        },
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/confidentialledger"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		current, err := core.GetClientConfig(ctx, map[string]interface{}{}, nil)
		if err != nil {
			return err
		}
		example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
			Name:     pulumi.String("example-resources"),
			Location: pulumi.String("West Europe"),
		})
		if err != nil {
			return err
		}
		_, err = confidentialledger.NewLedger(ctx, "ledger", &confidentialledger.LedgerArgs{
			Name:              pulumi.String("example-ledger"),
			ResourceGroupName: example.Name,
			Location:          example.Location,
			LedgerType:        pulumi.String("Private"),
			AzureadBasedServicePrincipals: confidentialledger.LedgerAzureadBasedServicePrincipalArray{
				&confidentialledger.LedgerAzureadBasedServicePrincipalArgs{
					PrincipalId:    pulumi.String(current.ObjectId),
					TenantId:       pulumi.String(current.TenantId),
					LedgerRoleName: pulumi.String("Administrator"),
				},
			},
		})
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.core.CoreFunctions;
import com.pulumi.azure.core.ResourceGroup;
import com.pulumi.azure.core.ResourceGroupArgs;
import com.pulumi.azure.confidentialledger.Ledger;
import com.pulumi.azure.confidentialledger.LedgerArgs;
import com.pulumi.azure.confidentialledger.inputs.LedgerAzureadBasedServicePrincipalArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        final var current = CoreFunctions.getClientConfig();

        var example = new ResourceGroup("example", ResourceGroupArgs.builder()
            .name("example-resources")
            .location("West Europe")
            .build());

        var ledger = new Ledger("ledger", LedgerArgs.builder()
            .name("example-ledger")
            .resourceGroupName(example.name())
            .location(example.location())
            .ledgerType("Private")
            .azureadBasedServicePrincipals(LedgerAzureadBasedServicePrincipalArgs.builder()
                .principalId(current.applyValue(getClientConfigResult -> getClientConfigResult.objectId()))
                .tenantId(current.applyValue(getClientConfigResult -> getClientConfigResult.tenantId()))
                .ledgerRoleName("Administrator")
                .build())
            .build());

    }
}
```
```yaml
resources:
  example:
    type: azure:core:ResourceGroup
    properties:
      name: example-resources
      location: West Europe
  ledger:
    type: azure:confidentialledger:Ledger
    properties:
      name: example-ledger
      resourceGroupName: ${example.name}
      location: ${example.location}
      ledgerType: Private
      azureadBasedServicePrincipals:
        - principalId: ${current.objectId}
          tenantId: ${current.tenantId}
          ledgerRoleName: Administrator
variables:
  current:
    fn::invoke:
      function: azure:core:getClientConfig
      arguments: {}
```
<!--End PulumiCodeChooser -->

## Import

Confidential Ledgers can be imported using the `resource id`, e.g.

```sh
$ pulumi import azure:confidentialledger/ledger:Ledger example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/example-group/providers/Microsoft.ConfidentialLedger/ledgers/example-ledger
```


azureadBasedServicePrincipals¡*:

confidentialledger"LedgerAzureadBasedServicePrincipal^azure:confidentialledger/LedgerAzureadBasedServicePrincipal:LedgerAzureadBasedServicePrincipalEA list of `azuread_based_service_principal` blocks as defined below.
¦
"certificateBasedSecurityPrincipals³B°*­:ª
§
confidentialledger'LedgerCertificateBasedSecurityPrincipalhazure:confidentialledger/LedgerCertificateBasedSecurityPrincipal:LedgerCertificateBasedSecurityPrincipalJA list of `certificate_based_security_principal` blocks as defined below.


ledgerType" Specifies the type of Confidential Ledger. Possible values are `Private` and `Public`. Changing this forces a new resource to be created.

locationB" Specifies the supported Azure location where the Confidential Ledger exists. Changing this forces a new resource to be created.
p
nameB" bSpecifies the name of the Confidential Ledger. Changing this forces a new resource to be created.

resourceGroupName" xThe name of the Resource Group where the Confidential Ledger exists. Changing this forces a new resource to be created.
H
tagsB2" 8A mapping of tags to assign to the Confidential Ledger.
"
azureadBasedServicePrincipals¡*:

confidentialledger"LedgerAzureadBasedServicePrincipal^azure:confidentialledger/LedgerAzureadBasedServicePrincipal:LedgerAzureadBasedServicePrincipalEA list of `azuread_based_service_principal` blocks as defined below.
"¦
"certificateBasedSecurityPrincipals³B°*­:ª
§
confidentialledger'LedgerCertificateBasedSecurityPrincipalhazure:confidentialledger/LedgerCertificateBasedSecurityPrincipal:LedgerCertificateBasedSecurityPrincipalJA list of `certificate_based_security_principal` blocks as defined below.
"[
identityServiceEndpoint" <The Identity Service Endpoint for this Confidential Ledger.
"A
ledgerEndpoint" +The Endpoint for this Confidential Ledger.
"

ledgerType" Specifies the type of Confidential Ledger. Possible values are `Private` and `Public`. Changing this forces a new resource to be created.
"
location" Specifies the supported Azure location where the Confidential Ledger exists. Changing this forces a new resource to be created.
"n
name" bSpecifies the name of the Confidential Ledger. Changing this forces a new resource to be created.
"
resourceGroupName" xThe name of the Resource Group where the Confidential Ledger exists. Changing this forces a new resource to be created.
"H
tagsB2" 8A mapping of tags to assign to the Confidential Ledger.
*áL
K
connectionsApiConnection-azure:connections/apiConnection:ApiConnection¯AManages an API Connection.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const exampleResourceGroup = new azure.core.ResourceGroup("example", {
    name: "example-resources",
    location: "West Europe",
});
const example = azure.connections.getManagedApiOutput({
    name: "servicebus",
    location: exampleResourceGroup.location,
});
const exampleNamespace = new azure.servicebus.Namespace("example", {
    name: "acctestsbn-conn-example",
    location: exampleResourceGroup.location,
    resourceGroupName: exampleResourceGroup.name,
    sku: "Basic",
});
const exampleApiConnection = new azure.connections.ApiConnection("example", {
    name: "example-connection",
    resourceGroupName: exampleResourceGroup.name,
    managedApiId: example.apply(example => example.id),
    displayName: "Example 1",
    parameterValues: {
        connectionString: exampleNamespace.defaultPrimaryConnectionString,
    },
    tags: {
        Hello: "World",
    },
});
```
```python
import pulumi
import pulumi_azure as azure

example_resource_group = azure.core.ResourceGroup("example",
    name="example-resources",
    location="West Europe")
example = azure.connections.get_managed_api_output(name="servicebus",
    location=example_resource_group.location)
example_namespace = azure.servicebus.Namespace("example",
    name="acctestsbn-conn-example",
    location=example_resource_group.location,
    resource_group_name=example_resource_group.name,
    sku="Basic")
example_api_connection = azure.connections.ApiConnection("example",
    name="example-connection",
    resource_group_name=example_resource_group.name,
    managed_api_id=example.id,
    display_name="Example 1",
    parameter_values={
        "connectionString": example_namespace.default_primary_connection_string,
    },
    tags={
        "Hello": "World",
    })
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var exampleResourceGroup = new Azure.Core.ResourceGroup("example", new()
    {
        Name = "example-resources",
        Location = "West Europe",
    });

    var example = Azure.Connections.GetManagedApi.Invoke(new()
    {
        Name = "servicebus",
        Location = exampleResourceGroup.Location,
    });

    var exampleNamespace = new Azure.ServiceBus.Namespace("example", new()
    {
        Name = "acctestsbn-conn-example",
        Location = exampleResourceGroup.Location,
        ResourceGroupName = exampleResourceGroup.Name,
        Sku = "Basic",
    });

    var exampleApiConnection = new Azure.Connections.ApiConnection("example", new()
    {
        Name = "example-connection",
        ResourceGroupName = exampleResourceGroup.Name,
        ManagedApiId = example.Apply(getManagedApiResult => getManagedApiResult.Id),
        DisplayName = "Example 1",
        ParameterValues = 
        {
            { "connectionString", exampleNamespace.DefaultPrimaryConnectionString },
        },
        Tags = 
        {
            { "Hello", "World" },
        },
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/connections"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/servicebus"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		exampleResourceGroup, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
			Name:     pulumi.String("example-resources"),
			Location: pulumi.String("West Europe"),
		})
		if err != nil {
			return err
		}
		example := connections.GetManagedApiOutput(ctx, connections.GetManagedApiOutputArgs{
			Name:     pulumi.String("servicebus"),
			Location: exampleResourceGroup.Location,
		}, nil)
		exampleNamespace, err := servicebus.NewNamespace(ctx, "example", &servicebus.NamespaceArgs{
			Name:              pulumi.String("acctestsbn-conn-example"),
			Location:          exampleResourceGroup.Location,
			ResourceGroupName: exampleResourceGroup.Name,
			Sku:               pulumi.String("Basic"),
		})
		if err != nil {
			return err
		}
		_, err = connections.NewApiConnection(ctx, "example", &connections.ApiConnectionArgs{
			Name:              pulumi.String("example-connection"),
			ResourceGroupName: exampleResourceGroup.Name,
			ManagedApiId: pulumi.String(example.ApplyT(func(example connections.GetManagedApiResult) (*string, error) {
				return &example.Id, nil
			}).(pulumi.StringPtrOutput)),
			DisplayName: pulumi.String("Example 1"),
			ParameterValues: pulumi.StringMap{
				"connectionString": exampleNamespace.DefaultPrimaryConnectionString,
			},
			Tags: pulumi.StringMap{
				"Hello": pulumi.String("World"),
			},
		})
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.core.ResourceGroup;
import com.pulumi.azure.core.ResourceGroupArgs;
import com.pulumi.azure.connections.ConnectionsFunctions;
import com.pulumi.azure.connections.inputs.GetManagedApiArgs;
import com.pulumi.azure.servicebus.Namespace;
import com.pulumi.azure.servicebus.NamespaceArgs;
import com.pulumi.azure.connections.ApiConnection;
import com.pulumi.azure.connections.ApiConnectionArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        var exampleResourceGroup = new ResourceGroup("exampleResourceGroup", ResourceGroupArgs.builder()
            .name("example-resources")
            .location("West Europe")
            .build());

        final var example = ConnectionsFunctions.getManagedApi(GetManagedApiArgs.builder()
            .name("servicebus")
            .location(exampleResourceGroup.location())
            .build());

        var exampleNamespace = new Namespace("exampleNamespace", NamespaceArgs.builder()
            .name("acctestsbn-conn-example")
            .location(exampleResourceGroup.location())
            .resourceGroupName(exampleResourceGroup.name())
            .sku("Basic")
            .build());

        var exampleApiConnection = new ApiConnection("exampleApiConnection", ApiConnectionArgs.builder()
            .name("example-connection")
            .resourceGroupName(exampleResourceGroup.name())
            .managedApiId(example.applyValue(getManagedApiResult -> getManagedApiResult).applyValue(example -> example.applyValue(getManagedApiResult -> getManagedApiResult.id())))
            .displayName("Example 1")
            .parameterValues(Map.of("connectionString", exampleNamespace.defaultPrimaryConnectionString()))
            .tags(Map.of("Hello", "World"))
            .build());

    }
}
```
```yaml
resources:
  exampleResourceGroup:
    type: azure:core:ResourceGroup
    name: example
    properties:
      name: example-resources
      location: West Europe
  exampleNamespace:
    type: azure:servicebus:Namespace
    name: example
    properties:
      name: acctestsbn-conn-example
      location: ${exampleResourceGroup.location}
      resourceGroupName: ${exampleResourceGroup.name}
      sku: Basic
  exampleApiConnection:
    type: azure:connections:ApiConnection
    name: example
    properties:
      name: example-connection
      resourceGroupName: ${exampleResourceGroup.name}
      managedApiId: ${example.id}
      displayName: Example 1
      parameterValues:
        connectionString: ${exampleNamespace.defaultPrimaryConnectionString}
      tags:
        Hello: World
variables:
  example:
    fn::invoke:
      function: azure:connections:getManagedApi
      arguments:
        name: servicebus
        location: ${exampleResourceGroup.location}
```
<!--End PulumiCodeChooser -->

## Import

API Connections can be imported using the `resource id`, e.g.

```sh
$ pulumi import azure:connections/apiConnection:ApiConnection example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/example/providers/Microsoft.Web/connections/example-connection
```


displayNameB" |A display name for this API Connection. Defaults to `Service Bus`. Changing this forces a new API Connection to be created.

managedApiId" {The ID of the Managed API which this API Connection is linked to. Changing this forces a new API Connection to be created.
~
nameB" pThe Name which should be used for this API Connection. Changing this forces a new API Connection to be created.

parameterValuesB2" 
resourceGroupName" The name of the Resource Group where this API Connection should exist. Changing this forces a new API Connection to be created.
R
tagsB2" BA mapping of tags which should be assigned to the API Connection.
"
displayNameB" |A display name for this API Connection. Defaults to `Service Bus`. Changing this forces a new API Connection to be created.
"
managedApiId" {The ID of the Managed API which this API Connection is linked to. Changing this forces a new API Connection to be created.
"|
name" pThe Name which should be used for this API Connection. Changing this forces a new API Connection to be created.
"
parameterValuesB2" "
resourceGroupName" The name of the Resource Group where this API Connection should exist. Changing this forces a new API Connection to be created.
"R
tagsB2" BA mapping of tags which should be assigned to the API Connection.
2þ#
G
	blueprintgetDefinition+azure:blueprint/getDefinition:getDefinitionôUse this data source to access information about an existing Azure Blueprint Definition

> **NOTE:** Azure Blueprints are in Preview and potentially subject to breaking change without notice.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const current = azure.core.getClientConfig({});
const root = current.then(current => azure.management.getGroup({
    name: current.tenantId,
}));
const example = root.then(root => azure.blueprint.getDefinition({
    name: "exampleManagementGroupBP",
    scopeId: root.id,
}));
```
```python
import pulumi
import pulumi_azure as azure

current = azure.core.get_client_config()
root = azure.management.get_group(name=current.tenant_id)
example = azure.blueprint.get_definition(name="exampleManagementGroupBP",
    scope_id=root.id)
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var current = Azure.Core.GetClientConfig.Invoke();

    var root = Azure.Management.GetGroup.Invoke(new()
    {
        Name = current.Apply(getClientConfigResult => getClientConfigResult.TenantId),
    });

    var example = Azure.Blueprint.GetDefinition.Invoke(new()
    {
        Name = "exampleManagementGroupBP",
        ScopeId = root.Apply(getGroupResult => getGroupResult.Id),
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/blueprint"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/management"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		current, err := core.GetClientConfig(ctx, map[string]interface{}{}, nil)
		if err != nil {
			return err
		}
		root, err := management.LookupGroup(ctx, &management.LookupGroupArgs{
			Name: pulumi.StringRef(current.TenantId),
		}, nil)
		if err != nil {
			return err
		}
		_, err = blueprint.GetDefinition(ctx, &blueprint.GetDefinitionArgs{
			Name:    "exampleManagementGroupBP",
			ScopeId: root.Id,
		}, nil)
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.core.CoreFunctions;
import com.pulumi.azure.management.ManagementFunctions;
import com.pulumi.azure.management.inputs.GetGroupArgs;
import com.pulumi.azure.blueprint.BlueprintFunctions;
import com.pulumi.azure.blueprint.inputs.GetDefinitionArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        final var current = CoreFunctions.getClientConfig();

        final var root = ManagementFunctions.getGroup(GetGroupArgs.builder()
            .name(current.applyValue(getClientConfigResult -> getClientConfigResult.tenantId()))
            .build());

        final var example = BlueprintFunctions.getDefinition(GetDefinitionArgs.builder()
            .name("exampleManagementGroupBP")
            .scopeId(root.applyValue(getGroupResult -> getGroupResult.id()))
            .build());

    }
}
```
```yaml
variables:
  current:
    fn::invoke:
      function: azure:core:getClientConfig
      arguments: {}
  root:
    fn::invoke:
      function: azure:management:getGroup
      arguments:
        name: ${current.tenantId}
  example:
    fn::invoke:
      function: azure:blueprint:getDefinition
      arguments:
        name: exampleManagementGroupBP
        scopeId: ${root.id}
```
<!--End PulumiCodeChooser -->
'
name" The name of the Blueprint.
y
scopeId" jThe ID of the Subscription or Management Group, as the scope at which the blueprint definition is stored.
"@
description" -The description of the Blueprint Definition.
"A
displayName" .The display name of the Blueprint Definition.
"E
id" ;The provider-assigned unique ID for this managed resource.
"h
lastModified" TThe timestamp of when this last modification was saved to the Blueprint Definition.
"

name" "
scopeId" "%
targetScope" The target scope.
"P
timeCreated" =The timestamp of when this Blueprint Definition was created.
"N
versions*" <A list of versions published for this Blueprint Definition.
2Ü
Y
	blueprintgetPublishedVersion7azure:blueprint/getPublishedVersion:getPublishedVersionUse this data source to access information about an existing Blueprint Published Version

> **NOTE:** Azure Blueprints are in Preview and potentially subject to breaking change without notice.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const current = azure.core.getSubscription({});
const test = current.then(current => azure.blueprint.getPublishedVersion({
    scopeId: current.id,
    blueprintName: "exampleBluePrint",
    version: "dev_v2.3",
}));
```
```python
import pulumi
import pulumi_azure as azure

current = azure.core.get_subscription()
test = azure.blueprint.get_published_version(scope_id=current.id,
    blueprint_name="exampleBluePrint",
    version="dev_v2.3")
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var current = Azure.Core.GetSubscription.Invoke();

    var test = Azure.Blueprint.GetPublishedVersion.Invoke(new()
    {
        ScopeId = current.Apply(getSubscriptionResult => getSubscriptionResult.Id),
        BlueprintName = "exampleBluePrint",
        Version = "dev_v2.3",
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/blueprint"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		current, err := core.LookupSubscription(ctx, &core.LookupSubscriptionArgs{}, nil)
		if err != nil {
			return err
		}
		_, err = blueprint.GetPublishedVersion(ctx, &blueprint.GetPublishedVersionArgs{
			ScopeId:       current.Id,
			BlueprintName: "exampleBluePrint",
			Version:       "dev_v2.3",
		}, nil)
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.core.CoreFunctions;
import com.pulumi.azure.core.inputs.GetSubscriptionArgs;
import com.pulumi.azure.blueprint.BlueprintFunctions;
import com.pulumi.azure.blueprint.inputs.GetPublishedVersionArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        final var current = CoreFunctions.getSubscription();

        final var test = BlueprintFunctions.getPublishedVersion(GetPublishedVersionArgs.builder()
            .scopeId(current.applyValue(getSubscriptionResult -> getSubscriptionResult.id()))
            .blueprintName("exampleBluePrint")
            .version("dev_v2.3")
            .build());

    }
}
```
```yaml
variables:
  current:
    fn::invoke:
      function: azure:core:getSubscription
      arguments: {}
  test:
    fn::invoke:
      function: azure:blueprint:getPublishedVersion
      arguments:
        scopeId: ${current.id}
        blueprintName: exampleBluePrint
        version: dev_v2.3
```
<!--End PulumiCodeChooser -->
:
blueprintName" %The name of the Blueprint Definition
h
scopeId" YThe ID of the Management Group / Subscription where this Blueprint Definition is stored.
U
version" FThe Version name of the Published Version of the Blueprint Definition
"
blueprintName" "F
description" 3The description of the Blueprint Published Version
"G
displayName" 4The display name of the Blueprint Published Version
"E
id" ;The provider-assigned unique ID for this managed resource.
"
lastModified" "
scopeId" "$
targetScope" The target scope
"
timeCreated" "&
type" The type of the Blueprint
"
version" 2
\
cdngetFrontdoorCustomDomain;azure:cdn/getFrontdoorCustomDomain:getFrontdoorCustomDomainäUse this data source to access information about an existing Front Door (standard/premium) Custom Domain.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const example = azure.cdn.getFrontdoorCustomDomain({
    name: exampleAzurermCdnFrontdoorCustomDomain.name,
    profileName: exampleAzurermCdnFrontdoorProfile.name,
    resourceGroupName: exampleAzurermCdnFrontdoorProfile.resourceGroupName,
});
```
```python
import pulumi
import pulumi_azure as azure

example = azure.cdn.get_frontdoor_custom_domain(name=example_azurerm_cdn_frontdoor_custom_domain["name"],
    profile_name=example_azurerm_cdn_frontdoor_profile["name"],
    resource_group_name=example_azurerm_cdn_frontdoor_profile["resourceGroupName"])
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var example = Azure.Cdn.GetFrontdoorCustomDomain.Invoke(new()
    {
        Name = exampleAzurermCdnFrontdoorCustomDomain.Name,
        ProfileName = exampleAzurermCdnFrontdoorProfile.Name,
        ResourceGroupName = exampleAzurermCdnFrontdoorProfile.ResourceGroupName,
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/cdn"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		_, err := cdn.LookupFrontdoorCustomDomain(ctx, &cdn.LookupFrontdoorCustomDomainArgs{
			Name:              exampleAzurermCdnFrontdoorCustomDomain.Name,
			ProfileName:       exampleAzurermCdnFrontdoorProfile.Name,
			ResourceGroupName: exampleAzurermCdnFrontdoorProfile.ResourceGroupName,
		}, nil)
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.cdn.CdnFunctions;
import com.pulumi.azure.cdn.inputs.GetFrontdoorCustomDomainArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        final var example = CdnFunctions.getFrontdoorCustomDomain(GetFrontdoorCustomDomainArgs.builder()
            .name(exampleAzurermCdnFrontdoorCustomDomain.name())
            .profileName(exampleAzurermCdnFrontdoorProfile.name())
            .resourceGroupName(exampleAzurermCdnFrontdoorProfile.resourceGroupName())
            .build());

    }
}
```
```yaml
variables:
  example:
    fn::invoke:
      function: azure:cdn:getFrontdoorCustomDomain
      arguments:
        name: ${exampleAzurermCdnFrontdoorCustomDomain.name}
        profileName: ${exampleAzurermCdnFrontdoorProfile.name}
        resourceGroupName: ${exampleAzurermCdnFrontdoorProfile.resourceGroupName}
```
<!--End PulumiCodeChooser -->
6
name" *The name of the Front Door Custom Domain.
f
profileName" SThe name of the Front Door Profile which the Front Door Custom Domain is bound to.
]
resourceGroupName" DThe name of the Resource Group where the Front Door Profile exists.
"n
cdnFrontdoorProfileId" QThe ID of the Front Door Profile which the Front Door Custom Domain is bound to.
"
	dnsZoneId" "<
expirationDate" &The date time that the token expires.
"-
hostName" The host name of the domain.
"E
id" ;The provider-assigned unique ID for this managed resource.
"

name" "
profileName" "
resourceGroupName" "
tlsh*f:d
b
cdngetFrontdoorCustomDomainTl?azure:cdn/getFrontdoorCustomDomainTl:getFrontdoorCustomDomainTl A `tls` block as defined below.
"W
validationToken" @The challenge used for DNS TXT record or file based validation.
2ð
P
cdngetFrontdoorEndpoint3azure:cdn/getFrontdoorEndpoint:getFrontdoorEndpointåUse this data source to access information about an existing Front Door (standard/premium) Endpoint.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const example = azure.cdn.getFrontdoorEndpoint({
    name: "existing-endpoint",
    profileName: "existing-cdn-profile",
    resourceGroupName: "existing-resources",
});
```
```python
import pulumi
import pulumi_azure as azure

example = azure.cdn.get_frontdoor_endpoint(name="existing-endpoint",
    profile_name="existing-cdn-profile",
    resource_group_name="existing-resources")
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var example = Azure.Cdn.GetFrontdoorEndpoint.Invoke(new()
    {
        Name = "existing-endpoint",
        ProfileName = "existing-cdn-profile",
        ResourceGroupName = "existing-resources",
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/cdn"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		_, err := cdn.LookupFrontdoorEndpoint(ctx, &cdn.LookupFrontdoorEndpointArgs{
			Name:              "existing-endpoint",
			ProfileName:       "existing-cdn-profile",
			ResourceGroupName: "existing-resources",
		}, nil)
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.cdn.CdnFunctions;
import com.pulumi.azure.cdn.inputs.GetFrontdoorEndpointArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        final var example = CdnFunctions.getFrontdoorEndpoint(GetFrontdoorEndpointArgs.builder()
            .name("existing-endpoint")
            .profileName("existing-cdn-profile")
            .resourceGroupName("existing-resources")
            .build());

    }
}
```
```yaml
variables:
  example:
    fn::invoke:
      function: azure:cdn:getFrontdoorEndpoint
      arguments:
        name: existing-endpoint
        profileName: existing-cdn-profile
        resourceGroupName: existing-resources
```
<!--End PulumiCodeChooser -->
;
name" /Specifies the name of the Front Door Endpoint.
_
profileName" LThe name of the Front Door Profile within which Front Door Endpoint exists.
]
resourceGroupName" DThe name of the Resource Group where the Front Door Profile exists.
"M
enabled
 >Specifies whether this Front Door Endpoint is enabled or not.
"
hostName" Specifies the host name of the Front Door Endpoint, in the format `{endpointName}.{dnsZone}` (for example, `contoso.azureedge.net`).
"E
id" ;The provider-assigned unique ID for this managed resource.
"

name" "
profileName" "
resourceGroupName" "P
tags2" BSpecifies a mapping of Tags assigned to this Front Door Endpoint.
2Æ
b
cdngetFrontdoorFirewallPolicy?azure:cdn/getFrontdoorFirewallPolicy:getFrontdoorFirewallPolicyUse this data source to access information about an existing Front Door (standard/premium) Firewall Policy.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const example = azure.cdn.getFrontdoorFirewallPolicy({
    name: "examplecdnfdwafpolicy",
    resourceGroupName: exampleAzurermResourceGroup.name,
});
```
```python
import pulumi
import pulumi_azure as azure

example = azure.cdn.get_frontdoor_firewall_policy(name="examplecdnfdwafpolicy",
    resource_group_name=example_azurerm_resource_group["name"])
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var example = Azure.Cdn.GetFrontdoorFirewallPolicy.Invoke(new()
    {
        Name = "examplecdnfdwafpolicy",
        ResourceGroupName = exampleAzurermResourceGroup.Name,
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/cdn"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		_, err := cdn.LookupFrontdoorFirewallPolicy(ctx, &cdn.LookupFrontdoorFirewallPolicyArgs{
			Name:              "examplecdnfdwafpolicy",
			ResourceGroupName: exampleAzurermResourceGroup.Name,
		}, nil)
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.cdn.CdnFunctions;
import com.pulumi.azure.cdn.inputs.GetFrontdoorFirewallPolicyArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        final var example = CdnFunctions.getFrontdoorFirewallPolicy(GetFrontdoorFirewallPolicyArgs.builder()
            .name("examplecdnfdwafpolicy")
            .resourceGroupName(exampleAzurermResourceGroup.name())
            .build());

    }
}
```
```yaml
variables:
  example:
    fn::invoke:
      function: azure:cdn:getFrontdoorFirewallPolicy
      arguments:
        name: examplecdnfdwafpolicy
        resourceGroupName: ${exampleAzurermResourceGroup.name}
```
<!--End PulumiCodeChooser -->
8
name" ,The name of the Front Door Firewall Policy.
9
resourceGroupName"  The name of the resource group.
"D
enabled
 5The enabled state of the Front Door Firewall Policy.
"y
frontendEndpointIds*" \The Front Door Profiles frontend endpoints associated with this Front Door Firewall Policy.
"E
id" ;The provider-assigned unique ID for this managed resource.
"1
mode" %The Front Door Firewall Policy mode.
"

name" "4
redirectUrl" !The redirect URL for the client.
"
resourceGroupName" "K
skuName" <The sku's pricing tier for this Front Door Firewall Policy.
2ð
Y
cdngetFrontdoorOriginGroup9azure:cdn/getFrontdoorOriginGroup:getFrontdoorOriginGroupóUse this data source to access information about an existing Front Door (standard/premium) Origin Group.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const example = azure.cdn.getFrontdoorOriginGroup({
    name: "example-origin-group",
    profileName: "example-profile",
    resourceGroupName: "example-resources",
});
```
```python
import pulumi
import pulumi_azure as azure

example = azure.cdn.get_frontdoor_origin_group(name="example-origin-group",
    profile_name="example-profile",
    resource_group_name="example-resources")
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var example = Azure.Cdn.GetFrontdoorOriginGroup.Invoke(new()
    {
        Name = "example-origin-group",
        ProfileName = "example-profile",
        ResourceGroupName = "example-resources",
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/cdn"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		_, err := cdn.LookupFrontdoorOriginGroup(ctx, &cdn.LookupFrontdoorOriginGroupArgs{
			Name:              "example-origin-group",
			ProfileName:       "example-profile",
			ResourceGroupName: "example-resources",
		}, nil)
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.cdn.CdnFunctions;
import com.pulumi.azure.cdn.inputs.GetFrontdoorOriginGroupArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        final var example = CdnFunctions.getFrontdoorOriginGroup(GetFrontdoorOriginGroupArgs.builder()
            .name("example-origin-group")
            .profileName("example-profile")
            .resourceGroupName("example-resources")
            .build());

    }
}
```
```yaml
variables:
  example:
    fn::invoke:
      function: azure:cdn:getFrontdoorOriginGroup
      arguments:
        name: example-origin-group
        profileName: example-profile
        resourceGroupName: example-resources
```
<!--End PulumiCodeChooser -->
?
name" 3Specifies the name of the Front Door Origin Group.
c
profileName" PThe name of the Front Door Profile within which Front Door Origin Group exists.
]
resourceGroupName" DThe name of the Resource Group where the Front Door Profile exists.
"z
cdnFrontdoorProfileId" ]Specifies the ID of the Front Door Profile within which this Front Door Origin Group exists.
"¼
healthProbes*~:|
z
cdn"getFrontdoorOriginGroupHealthProbeOazure:cdn/getFrontdoorOriginGroupHealthProbe:getFrontdoorOriginGroupHealthProbe)A `health_probe` block as defined below.
"E
id" ;The provider-assigned unique ID for this managed resource.
"É
loadBalancings*:

cdn$getFrontdoorOriginGroupLoadBalancingSazure:cdn/getFrontdoorOriginGroupLoadBalancing:getFrontdoorOriginGroupLoadBalancing+A `load_balancing` block as defined below.
"

name" "
profileName" "
resourceGroupName" "6
0restoreTrafficTimeToHealedOrNewEndpointInMinutes "Z
sessionAffinityEnabled
 <Specifies whether session affinity is enabled on this host.
2¢
M
cdngetFrontdoorProfile1azure:cdn/getFrontdoorProfile:getFrontdoorProfileäUse this data source to access information about an existing Front Door (standard/premium) Profile.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const example = azure.cdn.getFrontdoorProfile({
    name: "existing-cdn-profile",
    resourceGroupName: "existing-resources",
});
```
```python
import pulumi
import pulumi_azure as azure

example = azure.cdn.get_frontdoor_profile(name="existing-cdn-profile",
    resource_group_name="existing-resources")
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var example = Azure.Cdn.GetFrontdoorProfile.Invoke(new()
    {
        Name = "existing-cdn-profile",
        ResourceGroupName = "existing-resources",
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/cdn"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		_, err := cdn.LookupFrontdoorProfile(ctx, &cdn.LookupFrontdoorProfileArgs{
			Name:              "existing-cdn-profile",
			ResourceGroupName: "existing-resources",
		}, nil)
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.cdn.CdnFunctions;
import com.pulumi.azure.cdn.inputs.GetFrontdoorProfileArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        final var example = CdnFunctions.getFrontdoorProfile(GetFrontdoorProfileArgs.builder()
            .name("existing-cdn-profile")
            .resourceGroupName("existing-resources")
            .build());

    }
}
```
```yaml
variables:
  example:
    fn::invoke:
      function: azure:cdn:getFrontdoorProfile
      arguments:
        name: existing-cdn-profile
        resourceGroupName: existing-resources
```
<!--End PulumiCodeChooser -->
:
name" .Specifies the name of the Front Door Profile.
^
resourceGroupName" EThe name of the Resource Group where this Front Door Profile exists.
"E
id" ;The provider-assigned unique ID for this managed resource.
"

name" "
resourceGroupName" "~
resourceGuid" jThe UUID of the Front Door Profile which will be sent in the HTTP Header as the `X-Azure-FDID` attribute.
"Q
responseTimeoutSeconds 3Specifies the maximum response timeout in seconds.
">
skuName" /Specifies the SKU for this Front Door Profile.
"O
tags2" ASpecifies a mapping of Tags assigned to this Front Door Profile.
2
M
cdngetFrontdoorRuleSet1azure:cdn/getFrontdoorRuleSet:getFrontdoorRuleSetÅUse this data source to access information about an existing Front Door (standard/premium) Rule Set.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const example = azure.cdn.getFrontdoorRuleSet({
    name: "existing-rule-set",
    profileName: "existing-profile",
    resourceGroupName: "existing-resources",
});
```
```python
import pulumi
import pulumi_azure as azure

example = azure.cdn.get_frontdoor_rule_set(name="existing-rule-set",
    profile_name="existing-profile",
    resource_group_name="existing-resources")
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var example = Azure.Cdn.GetFrontdoorRuleSet.Invoke(new()
    {
        Name = "existing-rule-set",
        ProfileName = "existing-profile",
        ResourceGroupName = "existing-resources",
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/cdn"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		_, err := cdn.LookupFrontdoorRuleSet(ctx, &cdn.LookupFrontdoorRuleSetArgs{
			Name:              "existing-rule-set",
			ProfileName:       "existing-profile",
			ResourceGroupName: "existing-resources",
		}, nil)
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.cdn.CdnFunctions;
import com.pulumi.azure.cdn.inputs.GetFrontdoorRuleSetArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        final var example = CdnFunctions.getFrontdoorRuleSet(GetFrontdoorRuleSetArgs.builder()
            .name("existing-rule-set")
            .profileName("existing-profile")
            .resourceGroupName("existing-resources")
            .build());

    }
}
```
```yaml
variables:
  example:
    fn::invoke:
      function: azure:cdn:getFrontdoorRuleSet
      arguments:
        name: existing-rule-set
        profileName: existing-profile
        resourceGroupName: existing-resources
```
<!--End PulumiCodeChooser -->
G
name" ;Specifies the name of the Front Door Rule Set to retrieve.
g
profileName" TSpecifies the name of the Front Door Profile where this Front Door Rule Set exists.
g
resourceGroupName" NSpecifies the name of the Resource Group where the Front Door Profile exists.
"l
cdnFrontdoorProfileId" OThe ID of the Front Door Profile within which this Front Door Rule Set exists.
"E
id" ;The provider-assigned unique ID for this managed resource.
"

name" "
profileName" "
resourceGroupName" 2ñ
J
cdngetFrontdoorSecret/azure:cdn/getFrontdoorSecret:getFrontdoorSecretUse this data source to access information about an existing Front Door (standard/premium) Secret.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const example = azure.cdn.getFrontdoorSecret({
    name: "example-secret",
    profileName: "example-profile",
    resourceGroupName: "example-resources",
});
```
```python
import pulumi
import pulumi_azure as azure

example = azure.cdn.get_frontdoor_secret(name="example-secret",
    profile_name="example-profile",
    resource_group_name="example-resources")
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var example = Azure.Cdn.GetFrontdoorSecret.Invoke(new()
    {
        Name = "example-secret",
        ProfileName = "example-profile",
        ResourceGroupName = "example-resources",
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/cdn"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		_, err := cdn.LookupFrontdoorSecret(ctx, &cdn.LookupFrontdoorSecretArgs{
			Name:              "example-secret",
			ProfileName:       "example-profile",
			ResourceGroupName: "example-resources",
		}, nil)
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.cdn.CdnFunctions;
import com.pulumi.azure.cdn.inputs.GetFrontdoorSecretArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        final var example = CdnFunctions.getFrontdoorSecret(GetFrontdoorSecretArgs.builder()
            .name("example-secret")
            .profileName("example-profile")
            .resourceGroupName("example-resources")
            .build());

    }
}
```
```yaml
variables:
  example:
    fn::invoke:
      function: azure:cdn:getFrontdoorSecret
      arguments:
        name: example-secret
        profileName: example-profile
        resourceGroupName: example-resources
```
<!--End PulumiCodeChooser -->
9
name" -Specifies the name of the Front Door Secret.
a
profileName" NThe name of the Front Door Profile within which the Front Door Secret exists.
]
resourceGroupName" DThe name of the Resource Group where the Front Door Profile exists.
"t
cdnFrontdoorProfileId" WSpecifies the ID of the Front Door Profile within which this Front Door Secret exists.
"E
id" ;The provider-assigned unique ID for this managed resource.
"

name" "
profileName" "
resourceGroupName" "
secretsb*`:^
\
cdngetFrontdoorSecretSecret;azure:cdn/getFrontdoorSecretSecret:getFrontdoorSecretSecret#A `secret` block as defined below.
2÷
2
cdn
getProfileazure:cdn/getProfile:getProfileUse this data source to access information about an existing CDN Profile.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const example = azure.cdn.getProfile({
    name: "myfirstcdnprofile",
    resourceGroupName: "example-resources",
});
export const cdnProfileId = example.then(example => example.id);
```
```python
import pulumi
import pulumi_azure as azure

example = azure.cdn.get_profile(name="myfirstcdnprofile",
    resource_group_name="example-resources")
pulumi.export("cdnProfileId", example.id)
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var example = Azure.Cdn.GetProfile.Invoke(new()
    {
        Name = "myfirstcdnprofile",
        ResourceGroupName = "example-resources",
    });

    return new Dictionary<string, object?>
    {
        ["cdnProfileId"] = example.Apply(getProfileResult => getProfileResult.Id),
    };
});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/cdn"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		example, err := cdn.LookupProfile(ctx, &cdn.LookupProfileArgs{
			Name:              "myfirstcdnprofile",
			ResourceGroupName: "example-resources",
		}, nil)
		if err != nil {
			return err
		}
		ctx.Export("cdnProfileId", example.Id)
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.cdn.CdnFunctions;
import com.pulumi.azure.cdn.inputs.GetProfileArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        final var example = CdnFunctions.getProfile(GetProfileArgs.builder()
            .name("myfirstcdnprofile")
            .resourceGroupName("example-resources")
            .build());

        ctx.export("cdnProfileId", example.applyValue(getProfileResult -> getProfileResult.id()));
    }
}
```
```yaml
variables:
  example:
    fn::invoke:
      function: azure:cdn:getProfile
      arguments:
        name: myfirstcdnprofile
        resourceGroupName: example-resources
outputs:
  cdnProfileId: ${example.id}
```
<!--End PulumiCodeChooser -->
)
name" The name of the CDN Profile.
Y
resourceGroupName" @The name of the resource group in which the CDN Profile exists.
"E
id" ;The provider-assigned unique ID for this managed resource.
"<
location" ,The Azure Region where the resource exists.
"

name" "
resourceGroupName" "C
sku" 8The pricing related information of current CDN profile.
":
tags2" ,A mapping of tags assigned to the resource.
2
>
	cognitive
getAccount%azure:cognitive/getAccount:getAccountªUse this data source to access information about an existing Cognitive Services Account.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const test = azure.cognitive.getAccount({
    name: "example-account",
    resourceGroupName: "cognitive_account_rg",
});
export const primaryAccessKey = test.then(test => test.primaryAccessKey);
```
```python
import pulumi
import pulumi_azure as azure

test = azure.cognitive.get_account(name="example-account",
    resource_group_name="cognitive_account_rg")
pulumi.export("primaryAccessKey", test.primary_access_key)
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var test = Azure.Cognitive.GetAccount.Invoke(new()
    {
        Name = "example-account",
        ResourceGroupName = "cognitive_account_rg",
    });

    return new Dictionary<string, object?>
    {
        ["primaryAccessKey"] = test.Apply(getAccountResult => getAccountResult.PrimaryAccessKey),
    };
});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/cognitive"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		test, err := cognitive.LookupAccount(ctx, &cognitive.LookupAccountArgs{
			Name:              "example-account",
			ResourceGroupName: "cognitive_account_rg",
		}, nil)
		if err != nil {
			return err
		}
		ctx.Export("primaryAccessKey", test.PrimaryAccessKey)
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.cognitive.CognitiveFunctions;
import com.pulumi.azure.cognitive.inputs.GetAccountArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        final var test = CognitiveFunctions.getAccount(GetAccountArgs.builder()
            .name("example-account")
            .resourceGroupName("cognitive_account_rg")
            .build());

        ctx.export("primaryAccessKey", test.applyValue(getAccountResult -> getAccountResult.primaryAccessKey()));
    }
}
```
```yaml
variables:
  test:
    fn::invoke:
      function: azure:cognitive:getAccount
      arguments:
        name: example-account
        resourceGroupName: cognitive_account_rg
outputs:
  primaryAccessKey: ${test.primaryAccessKey}
```
<!--End PulumiCodeChooser -->
B
name" 6Specifies the name of the Cognitive Services Account.
p
resourceGroupName" WSpecifies the name of the resource group where the Cognitive Services Account resides.
?
tagsB2" /A mapping of tags to assigned to the resource.
"?
endpoint" /The endpoint of the Cognitive Services Account
"E
id" ;The provider-assigned unique ID for this managed resource.
"

identities\*Z:X
V
	cognitivegetAccountIdentity5azure:cognitive/getAccountIdentity:getAccountIdentity%A `identity` block as defined below.
"7
kind" +The kind of the Cognitive Services Account
"c
localAuthEnabled
 KWhether local authentication methods is enabled for the Cognitive Account.
"O
location" ?The Azure location where the Cognitive Services Account exists
"

name" "Q
primaryAccessKey" 9The primary access key of the Cognitive Services Account
"O
qnaRuntimeEndpoint" 5If `kind` is `QnAMaker` the link to the QNA runtime.
"
resourceGroupName" "U
secondaryAccessKey" ;The secondary access key of the Cognitive Services Account
">
skuName" /The SKU name of the Cognitive Services Account
"?
tagsB2" /A mapping of tags to assigned to the resource.
2
F
communication
getService)azure:communication/getService:getServiceßUse this data source to access information about an existing Communication Service.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const example = azure.communication.getService({
    name: "existing",
    resourceGroupName: "existing",
});
export const id = example.then(example => example.id);
```
```python
import pulumi
import pulumi_azure as azure

example = azure.communication.get_service(name="existing",
    resource_group_name="existing")
pulumi.export("id", example.id)
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var example = Azure.Communication.GetService.Invoke(new()
    {
        Name = "existing",
        ResourceGroupName = "existing",
    });

    return new Dictionary<string, object?>
    {
        ["id"] = example.Apply(getServiceResult => getServiceResult.Id),
    };
});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/communication"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		example, err := communication.LookupService(ctx, &communication.LookupServiceArgs{
			Name:              "existing",
			ResourceGroupName: "existing",
		}, nil)
		if err != nil {
			return err
		}
		ctx.Export("id", example.Id)
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.communication.CommunicationFunctions;
import com.pulumi.azure.communication.inputs.GetServiceArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        final var example = CommunicationFunctions.getService(GetServiceArgs.builder()
            .name("existing")
            .resourceGroupName("existing")
            .build());

        ctx.export("id", example.applyValue(getServiceResult -> getServiceResult.id()));
    }
}
```
```yaml
variables:
  example:
    fn::invoke:
      function: azure:communication:getService
      arguments:
        name: existing
        resourceGroupName: existing
outputs:
  id: ${example.id}
```
<!--End PulumiCodeChooser -->
6
name" *The name of this Communication Service.
*
b
resourceGroupName" IThe name of the Resource Group where the Communication Service exists.
*
"Z
dataLocation" FThe location where the Communication service stores its data at rest.
"E
id" ;The provider-assigned unique ID for this managed resource.
"

name" "[
primaryConnectionString" <The primary connection string of the Communication Service.
"@

primaryKey" .The primary key of the Communication Service.
"
resourceGroupName" "_
secondaryConnectionString" >The secondary connection string of the Communication Service.
"D
secondaryKey" 0The secondary key of the Communication Service.
"G
tags2" 9A mapping of tags assigned to the Communication Service.
2
R
computegetAvailabilitySet3azure:compute/getAvailabilitySet:getAvailabilitySetÓUse this data source to access information about an existing Availability Set.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const example = azure.compute.getAvailabilitySet({
    name: "tf-appsecuritygroup",
    resourceGroupName: "my-resource-group",
});
export const availabilitySetId = example.then(example => example.id);
```
```python
import pulumi
import pulumi_azure as azure

example = azure.compute.get_availability_set(name="tf-appsecuritygroup",
    resource_group_name="my-resource-group")
pulumi.export("availabilitySetId", example.id)
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var example = Azure.Compute.GetAvailabilitySet.Invoke(new()
    {
        Name = "tf-appsecuritygroup",
        ResourceGroupName = "my-resource-group",
    });

    return new Dictionary<string, object?>
    {
        ["availabilitySetId"] = example.Apply(getAvailabilitySetResult => getAvailabilitySetResult.Id),
    };
});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/compute"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		example, err := compute.LookupAvailabilitySet(ctx, &compute.LookupAvailabilitySetArgs{
			Name:              "tf-appsecuritygroup",
			ResourceGroupName: "my-resource-group",
		}, nil)
		if err != nil {
			return err
		}
		ctx.Export("availabilitySetId", example.Id)
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.compute.ComputeFunctions;
import com.pulumi.azure.compute.inputs.GetAvailabilitySetArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        final var example = ComputeFunctions.getAvailabilitySet(GetAvailabilitySetArgs.builder()
            .name("tf-appsecuritygroup")
            .resourceGroupName("my-resource-group")
            .build());

        ctx.export("availabilitySetId", example.applyValue(getAvailabilitySetResult -> getAvailabilitySetResult.id()));
    }
}
```
```yaml
variables:
  example:
    fn::invoke:
      function: azure:compute:getAvailabilitySet
      arguments:
        name: tf-appsecuritygroup
        resourceGroupName: my-resource-group
outputs:
  availabilitySetId: ${example.id}
```
<!--End PulumiCodeChooser -->
.
name" "The name of the Availability Set.
^
resourceGroupName" EThe name of the resource group in which the Availability Set exists.
"E
id" ;The provider-assigned unique ID for this managed resource.
"P
location" @The supported Azure location where the Availability Set exists.
"?
managed
 0Whether the availability set is managed or not.
"

name" "K
platformFaultDomainCount" +The number of fault domains that are used.
"M
platformUpdateDomainCount" ,The number of update domains that are used.
"
resourceGroupName" ":
tags2" ,A mapping of tags assigned to the resource.
2¼
F
computegetBastionHost+azure:compute/getBastionHost:getBastionHostµUse this data source to access information about an existing Bastion Host.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const example = azure.compute.getBastionHost({
    name: "existing-bastion",
    resourceGroupName: "existing-resources",
});
export const id = example.then(example => example.id);
```
```python
import pulumi
import pulumi_azure as azure

example = azure.compute.get_bastion_host(name="existing-bastion",
    resource_group_name="existing-resources")
pulumi.export("id", example.id)
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var example = Azure.Compute.GetBastionHost.Invoke(new()
    {
        Name = "existing-bastion",
        ResourceGroupName = "existing-resources",
    });

    return new Dictionary<string, object?>
    {
        ["id"] = example.Apply(getBastionHostResult => getBastionHostResult.Id),
    };
});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/compute"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		example, err := compute.LookupBastionHost(ctx, &compute.LookupBastionHostArgs{
			Name:              "existing-bastion",
			ResourceGroupName: "existing-resources",
		}, nil)
		if err != nil {
			return err
		}
		ctx.Export("id", example.Id)
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.compute.ComputeFunctions;
import com.pulumi.azure.compute.inputs.GetBastionHostArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        final var example = ComputeFunctions.getBastionHost(GetBastionHostArgs.builder()
            .name("existing-bastion")
            .resourceGroupName("existing-resources")
            .build());

        ctx.export("id", example.applyValue(getBastionHostResult -> getBastionHostResult.id()));
    }
}
```
```yaml
variables:
  example:
    fn::invoke:
      function: azure:compute:getBastionHost
      arguments:
        name: existing-bastion
        resourceGroupName: existing-resources
outputs:
  id: ${example.id}
```
<!--End PulumiCodeChooser -->
*
name" The name of the Bastion Host.
W
resourceGroupName" >The name of the Resource Group where the Bastion Host exists.
"L
copyPasteEnabled
 4Is Copy/Paste feature enabled for the Bastion Host.
".
dnsName" The FQDN for the Bastion Host.
"J
fileCopyEnabled
 3Is File Copy feature enabled for the Bastion Host.
"E
id" ;The provider-assigned unique ID for this managed resource.
"¼
ipConfigurationsy*w:u
s
computegetBastionHostIpConfigurationIazure:compute/getBastionHostIpConfiguration:getBastionHostIpConfiguration-A `ip_configuration` block as defined below.
"L
ipConnectEnabled
 4Is IP Connect feature enabled for the Bastion Host.
"@
location" 0The Azure Region where the Bastion Host exists.
".
name" "The name of the IP configuration.
"
resourceGroupName" "N

scaleUnits <The number of scale units provisioned for the Bastion Host.
"Z
sessionRecordingEnabled
 ;Is Session Recording feature enabled for the Bastion Host.
"T
shareableLinkEnabled
 8Is Shareable Link feature enabled for the Bastion Host.
"(
sku" The SKU of the Bastion Host.
">
tags2" 0A mapping of tags assigned to the Bastion Host.
"K
tunnelingEnabled
 3Is Tunneling feature enabled for the Bastion Host.
"S
zones*" DA list of Availability Zones in which this Bastion Host is located.
2«
[
computegetConfidentialLedger9azure:compute/getConfidentialLedger:getConfidentialLedgeröGets information about an existing Confidential Ledger.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const current = azure.compute.getConfidentialLedger({
    name: "example-ledger",
    resourceGroupName: "example-resources",
});
export const ledgerEndpoint = current.then(current => current.ledgerEndpoint);
```
```python
import pulumi
import pulumi_azure as azure

current = azure.compute.get_confidential_ledger(name="example-ledger",
    resource_group_name="example-resources")
pulumi.export("ledgerEndpoint", current.ledger_endpoint)
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var current = Azure.Compute.GetConfidentialLedger.Invoke(new()
    {
        Name = "example-ledger",
        ResourceGroupName = "example-resources",
    });

    return new Dictionary<string, object?>
    {
        ["ledgerEndpoint"] = current.Apply(getConfidentialLedgerResult => getConfidentialLedgerResult.LedgerEndpoint),
    };
});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/compute"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		current, err := compute.GetConfidentialLedger(ctx, &compute.GetConfidentialLedgerArgs{
			Name:              "example-ledger",
			ResourceGroupName: "example-resources",
		}, nil)
		if err != nil {
			return err
		}
		ctx.Export("ledgerEndpoint", current.LedgerEndpoint)
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.compute.ComputeFunctions;
import com.pulumi.azure.compute.inputs.GetConfidentialLedgerArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        final var current = ComputeFunctions.getConfidentialLedger(GetConfidentialLedgerArgs.builder()
            .name("example-ledger")
            .resourceGroupName("example-resources")
            .build());

        ctx.export("ledgerEndpoint", current.applyValue(getConfidentialLedgerResult -> getConfidentialLedgerResult.ledgerEndpoint()));
    }
}
```
```yaml
variables:
  current:
    fn::invoke:
      function: azure:compute:getConfidentialLedger
      arguments:
        name: example-ledger
        resourceGroupName: example-resources
outputs:
  ledgerEndpoint: ${current.ledgerEndpoint}
```
<!--End PulumiCodeChooser -->
<
name" 0Specifies the name of this Confidential Ledger.
i
resourceGroupName" PSpecifies the name of the Resource Group where this Confidential Ledger exists.
"Ú
azureadBasedServicePrincipals¸*µ:²
¯
compute1getConfidentialLedgerAzureadBasedServicePrincipalqazure:compute/getConfidentialLedgerAzureadBasedServicePrincipal:getConfidentialLedgerAzureadBasedServicePrincipal"î
"certificateBasedSecurityPrincipalsÇ*Ä:Á
¾
compute6getConfidentialLedgerCertificateBasedSecurityPrincipal{azure:compute/getConfidentialLedgerCertificateBasedSecurityPrincipal:getConfidentialLedgerCertificateBasedSecurityPrincipal"E
id" ;The provider-assigned unique ID for this managed resource.
"[
identityServiceEndpoint" <The Identity Service Endpoint for this Confidential Ledger.
"A
ledgerEndpoint" +The Endpoint for this Confidential Ledger.
"3

ledgerType" !The type of Confidential Ledger.
"S
location" CThe supported Azure location where the Confidential Ledger exists.
"

name" "
resourceGroupName" "F
tags2" 8A mapping of tags to assign to the Confidential Ledger.
2²
L
computegetDedicatedHost/azure:compute/getDedicatedHost:getDedicatedHostÆUse this data source to access information about an existing Dedicated Host.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const example = azure.compute.getDedicatedHost({
    name: "example-host",
    dedicatedHostGroupName: "example-host-group",
    resourceGroupName: "example-resources",
});
export const dedicatedHostId = example.then(example => example.id);
```
```python
import pulumi
import pulumi_azure as azure

example = azure.compute.get_dedicated_host(name="example-host",
    dedicated_host_group_name="example-host-group",
    resource_group_name="example-resources")
pulumi.export("dedicatedHostId", example.id)
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var example = Azure.Compute.GetDedicatedHost.Invoke(new()
    {
        Name = "example-host",
        DedicatedHostGroupName = "example-host-group",
        ResourceGroupName = "example-resources",
    });

    return new Dictionary<string, object?>
    {
        ["dedicatedHostId"] = example.Apply(getDedicatedHostResult => getDedicatedHostResult.Id),
    };
});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/compute"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		example, err := compute.LookupDedicatedHost(ctx, &compute.LookupDedicatedHostArgs{
			Name:                   "example-host",
			DedicatedHostGroupName: "example-host-group",
			ResourceGroupName:      "example-resources",
		}, nil)
		if err != nil {
			return err
		}
		ctx.Export("dedicatedHostId", example.Id)
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.compute.ComputeFunctions;
import com.pulumi.azure.compute.inputs.GetDedicatedHostArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        final var example = ComputeFunctions.getDedicatedHost(GetDedicatedHostArgs.builder()
            .name("example-host")
            .dedicatedHostGroupName("example-host-group")
            .resourceGroupName("example-resources")
            .build());

        ctx.export("dedicatedHostId", example.applyValue(getDedicatedHostResult -> getDedicatedHostResult.id()));
    }
}
```
```yaml
variables:
  example:
    fn::invoke:
      function: azure:compute:getDedicatedHost
      arguments:
        name: example-host
        dedicatedHostGroupName: example-host-group
        resourceGroupName: example-resources
outputs:
  dedicatedHostId: ${example.id}
```
<!--End PulumiCodeChooser -->
o
dedicatedHostGroupName" QSpecifies the name of the Dedicated Host Group the Dedicated Host is located in.
6
name" *Specifies the name of the Dedicated Host.
d
resourceGroupName" KSpecifies the name of the resource group the Dedicated Host is located in.
"
dedicatedHostGroupName" "E
id" ;The provider-assigned unique ID for this managed resource.
">
location" .The location where the Dedicated Host exists.
"

name" "
resourceGroupName" "@
tags2" 2A mapping of tags assigned to the Dedicated Host.
2
[
computegetDedicatedHostGroup9azure:compute/getDedicatedHostGroup:getDedicatedHostGroup±Use this data source to access information about an existing Dedicated Host Group.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const example = azure.compute.getDedicatedHostGroup({
    name: "example-dedicated-host-group",
    resourceGroupName: "example-rg",
});
export const id = example.then(example => example.id);
```
```python
import pulumi
import pulumi_azure as azure

example = azure.compute.get_dedicated_host_group(name="example-dedicated-host-group",
    resource_group_name="example-rg")
pulumi.export("id", example.id)
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var example = Azure.Compute.GetDedicatedHostGroup.Invoke(new()
    {
        Name = "example-dedicated-host-group",
        ResourceGroupName = "example-rg",
    });

    return new Dictionary<string, object?>
    {
        ["id"] = example.Apply(getDedicatedHostGroupResult => getDedicatedHostGroupResult.Id),
    };
});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/compute"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		example, err := compute.LookupDedicatedHostGroup(ctx, &compute.LookupDedicatedHostGroupArgs{
			Name:              "example-dedicated-host-group",
			ResourceGroupName: "example-rg",
		}, nil)
		if err != nil {
			return err
		}
		ctx.Export("id", example.Id)
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.compute.ComputeFunctions;
import com.pulumi.azure.compute.inputs.GetDedicatedHostGroupArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        final var example = ComputeFunctions.getDedicatedHostGroup(GetDedicatedHostGroupArgs.builder()
            .name("example-dedicated-host-group")
            .resourceGroupName("example-rg")
            .build());

        ctx.export("id", example.applyValue(getDedicatedHostGroupResult -> getDedicatedHostGroupResult.id()));
    }
}
```
```yaml
variables:
  example:
    fn::invoke:
      function: azure:compute:getDedicatedHostGroup
      arguments:
        name: example-dedicated-host-group
        resourceGroupName: example-rg
outputs:
  id: ${example.id}
```
<!--End PulumiCodeChooser -->
<
name" 0Specifies the name of the Dedicated Host Group.
j
resourceGroupName" QSpecifies the name of the resource group the Dedicated Host Group is located in.
"
automaticPlacementEnabled
 mWhether virtual machines or virtual machine scale sets be placed automatically on this Dedicated Host Group.
"E
id" ;The provider-assigned unique ID for this managed resource.
"J
location" :The Azure location where the Dedicated Host Group exists.
"

name" "a
platformFaultDomainCount AThe number of fault domains that the Dedicated Host Group spans.
"
resourceGroupName" ":
tags2" ,A mapping of tags assigned to the resource.
"[
zones*" LA list of Availability Zones in which this Dedicated Host Group is located.
2
C
computegetDiskAccess)azure:compute/getDiskAccess:getDiskAccess»Use this data source to access information about an existing Disk Access.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const example = azure.compute.getDiskAccess({
    name: "existing",
    resourceGroupName: "existing",
});
export const id = example.then(example => example.id);
```
```python
import pulumi
import pulumi_azure as azure

example = azure.compute.get_disk_access(name="existing",
    resource_group_name="existing")
pulumi.export("id", example.id)
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var example = Azure.Compute.GetDiskAccess.Invoke(new()
    {
        Name = "existing",
        ResourceGroupName = "existing",
    });

    return new Dictionary<string, object?>
    {
        ["id"] = example.Apply(getDiskAccessResult => getDiskAccessResult.Id),
    };
});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/compute"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		example, err := compute.LookupDiskAccess(ctx, &compute.LookupDiskAccessArgs{
			Name:              "existing",
			ResourceGroupName: "existing",
		}, nil)
		if err != nil {
			return err
		}
		ctx.Export("id", example.Id)
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.compute.ComputeFunctions;
import com.pulumi.azure.compute.inputs.GetDiskAccessArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        final var example = ComputeFunctions.getDiskAccess(GetDiskAccessArgs.builder()
            .name("existing")
            .resourceGroupName("existing")
            .build());

        ctx.export("id", example.applyValue(getDiskAccessResult -> getDiskAccessResult.id()));
    }
}
```
```yaml
variables:
  example:
    fn::invoke:
      function: azure:compute:getDiskAccess
      arguments:
        name: existing
        resourceGroupName: existing
outputs:
  id: ${example.id}
```
<!--End PulumiCodeChooser -->
*
name" The name of this Disk Access.
V
resourceGroupName" =The name of the Resource Group where the Disk Access exists.
"E
id" ;The provider-assigned unique ID for this managed resource.
"

name" "
resourceGroupName" "
tags2" 2ú
X
computegetDiskEncryptionSet7azure:compute/getDiskEncryptionSet:getDiskEncryptionSetõUse this data source to access information about an existing Disk Encryption Set.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const existing = azure.compute.getDiskEncryptionSet({
    name: "example-des",
    resourceGroupName: "example-resources",
});
export const id = existing.then(existing => existing.id);
```
```python
import pulumi
import pulumi_azure as azure

existing = azure.compute.get_disk_encryption_set(name="example-des",
    resource_group_name="example-resources")
pulumi.export("id", existing.id)
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var existing = Azure.Compute.GetDiskEncryptionSet.Invoke(new()
    {
        Name = "example-des",
        ResourceGroupName = "example-resources",
    });

    return new Dictionary<string, object?>
    {
        ["id"] = existing.Apply(getDiskEncryptionSetResult => getDiskEncryptionSetResult.Id),
    };
});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/compute"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		existing, err := compute.LookupDiskEncryptionSet(ctx, &compute.LookupDiskEncryptionSetArgs{
			Name:              "example-des",
			ResourceGroupName: "example-resources",
		}, nil)
		if err != nil {
			return err
		}
		ctx.Export("id", existing.Id)
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.compute.ComputeFunctions;
import com.pulumi.azure.compute.inputs.GetDiskEncryptionSetArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        final var existing = ComputeFunctions.getDiskEncryptionSet(GetDiskEncryptionSetArgs.builder()
            .name("example-des")
            .resourceGroupName("example-resources")
            .build());

        ctx.export("id", existing.applyValue(getDiskEncryptionSetResult -> getDiskEncryptionSetResult.id()));
    }
}
```
```yaml
variables:
  existing:
    fn::invoke:
      function: azure:compute:getDiskEncryptionSet
      arguments:
        name: example-des
        resourceGroupName: example-resources
outputs:
  id: ${existing.id}
```
<!--End PulumiCodeChooser -->
:
name" .The name of the existing Disk Encryption Set.
^
resourceGroupName" EThe name of the Resource Group where the Disk Encryption Set exists.
"l
autoKeyRotationEnabled
 NIs the Azure Disk Encryption Set Key automatically rotated to latest version?
"E
id" ;The provider-assigned unique ID for this managed resource.
"¬

identitiesv*t:r
p
computegetDiskEncryptionSetIdentityGazure:compute/getDiskEncryptionSetIdentity:getDiskEncryptionSetIdentity&An `identity` block as defined below.
"u
keyVaultKeyUrl" _The URL for the Key Vault Key or Key Vault Secret that is currently being used by the service.
"C
location" 3The location where the Disk Encryption Set exists.
"

name" "
resourceGroupName" "E
tags2" 7A mapping of tags assigned to the Disk Encryption Set.
2Î
4
computegetImageazure:compute/getImage:getImage¹Use this data source to access information about an existing Image.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const search = azure.compute.getImage({
    name: "search-api",
    resourceGroupName: "packerimages",
});
export const imageId = search.then(search => search.id);
```
```python
import pulumi
import pulumi_azure as azure

search = azure.compute.get_image(name="search-api",
    resource_group_name="packerimages")
pulumi.export("imageId", search.id)
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var search = Azure.Compute.GetImage.Invoke(new()
    {
        Name = "search-api",
        ResourceGroupName = "packerimages",
    });

    return new Dictionary<string, object?>
    {
        ["imageId"] = search.Apply(getImageResult => getImageResult.Id),
    };
});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/compute"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		search, err := compute.LookupImage(ctx, &compute.LookupImageArgs{
			Name:              pulumi.StringRef("search-api"),
			ResourceGroupName: "packerimages",
		}, nil)
		if err != nil {
			return err
		}
		ctx.Export("imageId", search.Id)
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.compute.ComputeFunctions;
import com.pulumi.azure.compute.inputs.GetImageArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        final var search = ComputeFunctions.getImage(GetImageArgs.builder()
            .name("search-api")
            .resourceGroupName("packerimages")
            .build());

        ctx.export("imageId", search.applyValue(getImageResult -> getImageResult.id()));
    }
}
```
```yaml
variables:
  search:
    fn::invoke:
      function: azure:compute:getImage
      arguments:
        name: search-api
        resourceGroupName: packerimages
outputs:
  imageId: ${search.id}
```
<!--End PulumiCodeChooser -->
%
nameB" The name of the Image.
8
	nameRegexB" %Regex pattern of the image to match.
Q
resourceGroupName" 8The Name of the Resource Group where this Image exists.
«
sortDescendingB
 By default when matching by regex, images are sorted by name in ascending order and the first match is chosen, to sort descending, set this flag.
"
	dataDisksR*P:N
L
computegetImageDataDisk/azure:compute/getImageDataDisk:getImageDataDisk5a collection of `data_disk` blocks as defined below.
"E
id" ;The provider-assigned unique ID for this managed resource.
"<
location" ,the Azure Location where this Image exists.
"%
nameB" the name of the Image.
"
	nameRegexB" "}
osDisksL*J:H
F
computegetImageOsDisk+azure:compute/getImageOsDisk:getImageOsDisk$a `os_disk` block as defined below.
"
resourceGroupName" "
sortDescendingB
 "=
tags2" /a mapping of tags to assigned to the resource.
"1
zoneResilient
 is zone resiliency enabled?
2
7
compute	getImages!azure:compute/getImages:getImagesºUse this data source to access information about existing Images within a Resource Group.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const example = azure.compute.getImages({
    resourceGroupName: "example-resources",
});
```
```python
import pulumi
import pulumi_azure as azure

example = azure.compute.get_images(resource_group_name="example-resources")
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var example = Azure.Compute.GetImages.Invoke(new()
    {
        ResourceGroupName = "example-resources",
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/compute"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		_, err := compute.GetImages(ctx, &compute.GetImagesArgs{
			ResourceGroupName: "example-resources",
		}, nil)
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.compute.ComputeFunctions;
import com.pulumi.azure.compute.inputs.GetImagesArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        final var example = ComputeFunctions.getImages(GetImagesArgs.builder()
            .resourceGroupName("example-resources")
            .build());

    }
}
```
```yaml
variables:
  example:
    fn::invoke:
      function: azure:compute:getImages
      arguments:
        resourceGroupName: example-resources
```
<!--End PulumiCodeChooser -->
S
resourceGroupName" :The name of the Resource Group in which the Image exists.
N

tagsFilterB2" 8A mapping of tags to filter the list of images against.
"E
id" ;The provider-assigned unique ID for this managed resource.
"
imagesL*J:H
F
computegetImagesImage+azure:compute/getImagesImage:getImagesImage.One or more `images` blocks as defined below:
"
resourceGroupName" "

tagsFilterB2" 2×!
F
computegetManagedDisk+azure:compute/getManagedDisk:getManagedDisk½Use this data source to access information about an existing Managed Disk.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const existing = azure.compute.getManagedDisk({
    name: "example-datadisk",
    resourceGroupName: "example-resources",
});
export const id = existing.then(existing => existing.id);
```
```python
import pulumi
import pulumi_azure as azure

existing = azure.compute.get_managed_disk(name="example-datadisk",
    resource_group_name="example-resources")
pulumi.export("id", existing.id)
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var existing = Azure.Compute.GetManagedDisk.Invoke(new()
    {
        Name = "example-datadisk",
        ResourceGroupName = "example-resources",
    });

    return new Dictionary<string, object?>
    {
        ["id"] = existing.Apply(getManagedDiskResult => getManagedDiskResult.Id),
    };
});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/compute"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		existing, err := compute.LookupManagedDisk(ctx, &compute.LookupManagedDiskArgs{
			Name:              "example-datadisk",
			ResourceGroupName: "example-resources",
		}, nil)
		if err != nil {
			return err
		}
		ctx.Export("id", existing.Id)
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.compute.ComputeFunctions;
import com.pulumi.azure.compute.inputs.GetManagedDiskArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        final var existing = ComputeFunctions.getManagedDisk(GetManagedDiskArgs.builder()
            .name("example-datadisk")
            .resourceGroupName("example-resources")
            .build());

        ctx.export("id", existing.applyValue(getManagedDiskResult -> getManagedDiskResult.id()));
    }
}
```
```yaml
variables:
  existing:
    fn::invoke:
      function: azure:compute:getManagedDisk
      arguments:
        name: example-datadisk
        resourceGroupName: example-resources
outputs:
  id: ${existing.id}
```
<!--End PulumiCodeChooser -->
4
name" (Specifies the name of the Managed Disk.
b
resourceGroupName" ISpecifies the name of the Resource Group where this Managed Disk exists.
"
createOption" "]
diskAccessId" IThe ID of the disk access resource for using private endpoints on disks.
"`
diskEncryptionSetId" EThe ID of the Disk Encryption Set used to encrypt this Managed Disk.
"
diskIopsReadWrite fThe number of IOPS allowed for this disk, where one operation can transfer between 4k and 256k bytes.
">
diskMbpsReadWrite %The bandwidth allowed for this disk.
"=

diskSizeGb +The size of the Managed Disk in gigabytes.
"Ç
encryptionSettings*}:{
y
computegetManagedDiskEncryptionSettingMazure:compute/getManagedDiskEncryptionSetting:getManagedDiskEncryptionSetting0A `encryption_settings` block as defined below.
"E
id" ;The provider-assigned unique ID for this managed resource.
"X
imageReferenceId" @The ID of the source image used for creating this Managed Disk.
"

name" "F
networkAccessPolicy" +Policy for accessing the disk via network.
"?
osType" 1The operating system used for this Managed Disk.
"
resourceGroupName" "]
sourceResourceId" EThe ID of an existing Managed Disk which this Disk was created from.
"7
	sourceUri" &The Source URI for this Managed Disk.
"Y
storageAccountId" AThe ID of the Storage Account where the `source_uri` is located.
"I
storageAccountType" /The storage account type for the Managed Disk.
":
tags2" ,A mapping of tags assigned to the resource.
"K
zones*" <A list of Availability Zones where the Managed Disk exists.
2Õ

compute%getOrchestratedVirtualMachineScaleSetYazure:compute/getOrchestratedVirtualMachineScaleSet:getOrchestratedVirtualMachineScaleSetUse this data source to access information about an existing Orchestrated Virtual Machine Scale Set.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const example = azure.compute.getOrchestratedVirtualMachineScaleSet({
    name: "existing",
    resourceGroupName: "existing",
});
export const id = example.then(example => example.id);
```
```python
import pulumi
import pulumi_azure as azure

example = azure.compute.get_orchestrated_virtual_machine_scale_set(name="existing",
    resource_group_name="existing")
pulumi.export("id", example.id)
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var example = Azure.Compute.GetOrchestratedVirtualMachineScaleSet.Invoke(new()
    {
        Name = "existing",
        ResourceGroupName = "existing",
    });

    return new Dictionary<string, object?>
    {
        ["id"] = example.Apply(getOrchestratedVirtualMachineScaleSetResult => getOrchestratedVirtualMachineScaleSetResult.Id),
    };
});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/compute"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		example, err := compute.LookupOrchestratedVirtualMachineScaleSet(ctx, &compute.LookupOrchestratedVirtualMachineScaleSetArgs{
			Name:              "existing",
			ResourceGroupName: "existing",
		}, nil)
		if err != nil {
			return err
		}
		ctx.Export("id", example.Id)
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.compute.ComputeFunctions;
import com.pulumi.azure.compute.inputs.GetOrchestratedVirtualMachineScaleSetArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        final var example = ComputeFunctions.getOrchestratedVirtualMachineScaleSet(GetOrchestratedVirtualMachineScaleSetArgs.builder()
            .name("existing")
            .resourceGroupName("existing")
            .build());

        ctx.export("id", example.applyValue(getOrchestratedVirtualMachineScaleSetResult -> getOrchestratedVirtualMachineScaleSetResult.id()));
    }
}
```
```yaml
variables:
  example:
    fn::invoke:
      function: azure:compute:getOrchestratedVirtualMachineScaleSet
      arguments:
        name: existing
        resourceGroupName: existing
outputs:
  id: ${example.id}
```
<!--End PulumiCodeChooser -->
E
name" 9The name of this Orchestrated Virtual Machine Scale Set.
q
resourceGroupName" XThe name of the Resource Group where the Orchestrated Virtual Machine Scale Set exists.
"E
id" ;The provider-assigned unique ID for this managed resource.
"â

identities¬*©:¦
£
compute-getOrchestratedVirtualMachineScaleSetIdentityiazure:compute/getOrchestratedVirtualMachineScaleSetIdentity:getOrchestratedVirtualMachineScaleSetIdentity%A `identity` block as defined below.
"^
location" NThe Azure Region in which this Orchestrated Virtual Machine Scale Set exists.
"<
name" 0The name of the public IP address configuration
"
networkInterfacesÄ*Á:¾
»
compute5getOrchestratedVirtualMachineScaleSetNetworkInterfaceyazure:compute/getOrchestratedVirtualMachineScaleSetNetworkInterface:getOrchestratedVirtualMachineScaleSetNetworkInterface7A list of `network_interface` blocks as defined below.
"
resourceGroupName" 2®
L
computegetPlatformImage/azure:compute/getPlatformImage:getPlatformImageïUse this data source to access information about a Platform Image.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const example = azure.compute.getPlatformImage({
    location: "West Europe",
    publisher: "Canonical",
    offer: "0001-com-ubuntu-server-focal",
    sku: "20_04-lts",
});
export const id = example.then(example => example.id);
```
```python
import pulumi
import pulumi_azure as azure

example = azure.compute.get_platform_image(location="West Europe",
    publisher="Canonical",
    offer="0001-com-ubuntu-server-focal",
    sku="20_04-lts")
pulumi.export("id", example.id)
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var example = Azure.Compute.GetPlatformImage.Invoke(new()
    {
        Location = "West Europe",
        Publisher = "Canonical",
        Offer = "0001-com-ubuntu-server-focal",
        Sku = "20_04-lts",
    });

    return new Dictionary<string, object?>
    {
        ["id"] = example.Apply(getPlatformImageResult => getPlatformImageResult.Id),
    };
});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/compute"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		example, err := compute.GetPlatformImage(ctx, &compute.GetPlatformImageArgs{
			Location:  "West Europe",
			Publisher: "Canonical",
			Offer:     "0001-com-ubuntu-server-focal",
			Sku:       "20_04-lts",
		}, nil)
		if err != nil {
			return err
		}
		ctx.Export("id", example.Id)
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.compute.ComputeFunctions;
import com.pulumi.azure.compute.inputs.GetPlatformImageArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        final var example = ComputeFunctions.getPlatformImage(GetPlatformImageArgs.builder()
            .location("West Europe")
            .publisher("Canonical")
            .offer("0001-com-ubuntu-server-focal")
            .sku("20_04-lts")
            .build());

        ctx.export("id", example.applyValue(getPlatformImageResult -> getPlatformImageResult.id()));
    }
}
```
```yaml
variables:
  example:
    fn::invoke:
      function: azure:compute:getPlatformImage
      arguments:
        location: West Europe
        publisher: Canonical
        offer: 0001-com-ubuntu-server-focal
        sku: 20_04-lts
outputs:
  id: ${example.id}
```
<!--End PulumiCodeChooser -->
[
location" KSpecifies the Location to pull information about this Platform Image from.
E
offer" 8Specifies the Offer associated with the Platform Image.
M
	publisher" <Specifies the Publisher associated with the Platform Image.
4
sku" )Specifies the SKU of the Platform Image.
4
versionB" #The version of the Platform Image.
"E
id" ;The provider-assigned unique ID for this managed resource.
"
location" "
offer" "
	publisher" "	
sku" "
version" 2Ì'
F
computegetSharedImage+azure:compute/getSharedImage:getSharedImageUse this data source to access information about an existing Shared Image within a Shared Image Gallery.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const example = azure.compute.getSharedImage({
    name: "my-image",
    galleryName: "my-image-gallery",
    resourceGroupName: "example-resources",
});
```
```python
import pulumi
import pulumi_azure as azure

example = azure.compute.get_shared_image(name="my-image",
    gallery_name="my-image-gallery",
    resource_group_name="example-resources")
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var example = Azure.Compute.GetSharedImage.Invoke(new()
    {
        Name = "my-image",
        GalleryName = "my-image-gallery",
        ResourceGroupName = "example-resources",
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/compute"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		_, err := compute.LookupSharedImage(ctx, &compute.LookupSharedImageArgs{
			Name:              "my-image",
			GalleryName:       "my-image-gallery",
			ResourceGroupName: "example-resources",
		}, nil)
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.compute.ComputeFunctions;
import com.pulumi.azure.compute.inputs.GetSharedImageArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        final var example = ComputeFunctions.getSharedImage(GetSharedImageArgs.builder()
            .name("my-image")
            .galleryName("my-image-gallery")
            .resourceGroupName("example-resources")
            .build());

    }
}
```
```yaml
variables:
  example:
    fn::invoke:
      function: azure:compute:getSharedImage
      arguments:
        name: my-image
        galleryName: my-image-gallery
        resourceGroupName: example-resources
```
<!--End PulumiCodeChooser -->
Z
galleryName" GThe name of the Shared Image Gallery in which the Shared Image exists.
*
name" The name of the Shared Image.
b
resourceGroupName" IThe name of the Resource Group in which the Shared Image Gallery exists.
"d
 acceleratedNetworkSupportEnabled
 <Specifies if the Shared Image supports Accelerated Network.
"
architecture" "è
confidentialVmEnabled
 ÊSpecifies if Confidential Virtual Machines enabled. It will enable all the features of trusted, with higher confidentiality features for isolate machines or encrypted data. Available for Gen2 machines.
"Ð
confidentialVmSupported
 °Specifies if supports creation of both Confidential virtual machines and Gen2 virtual machines with standard security from a compatible Gen2 OS disk VHD or Gen2 Managed image.
"9
description" &The description of this Shared Image.
"A
eula" 5The End User Licence Agreement for the Shared Image.
"
galleryName" "N
hibernationEnabled
 4Specifies if the Shared Image supports hibernation.
"w
hyperVGeneration" _The generation of HyperV that the Virtual Machine used to create the Shared Image is based on.
"E
id" ;The provider-assigned unique ID for this managed resource.
"£
identifiersj*h:f
d
computegetSharedImageIdentifier?azure:compute/getSharedImageIdentifier:getSharedImageIdentifier(An `identifier` block as defined below.
"T
location" DThe supported Azure location where the Shared Image Gallery exists.
"E
name" 9(Required) The Purchase Plan Name for this Shared Image.
"I
osType" ;The type of Operating System present in this Shared Image.
"[
privacyStatementUri" @The URI containing the Privacy Statement for this Shared Image.
"¸
purchasePlansp*n:l
j
computegetSharedImagePurchasePlanCazure:compute/getSharedImagePurchasePlan:getSharedImagePurchasePlan5(Optional) A `purchase_plan` block as defined below.
"R
releaseNoteUri" <The URI containing the Release Notes for this Shared Image.
"
resourceGroupName" "
specialized
 Specifies that the Operating System used inside this Image has not been Generalized (for example, `sysprep` on Windows has not been run).
">
tags2" 0A mapping of tags assigned to the Shared Image.
"
trustedLaunchEnabled
 eSpecifies if Trusted Launch has to be enabled for the Virtual Machine created from the Shared Image.
"¶
trustedLaunchSupported
 Specifies if supports creation of both Trusted Launch virtual machines and Gen2 virtual machines with standard security created from the Shared Image.
2
[
computegetSharedImageGallery9azure:compute/getSharedImageGallery:getSharedImageGalleryôUse this data source to access information about an existing Shared Image Gallery.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const example = azure.compute.getSharedImageGallery({
    name: "my-image-gallery",
    resourceGroupName: "example-resources",
});
```
```python
import pulumi
import pulumi_azure as azure

example = azure.compute.get_shared_image_gallery(name="my-image-gallery",
    resource_group_name="example-resources")
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var example = Azure.Compute.GetSharedImageGallery.Invoke(new()
    {
        Name = "my-image-gallery",
        ResourceGroupName = "example-resources",
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/compute"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		_, err := compute.LookupSharedImageGallery(ctx, &compute.LookupSharedImageGalleryArgs{
			Name:              "my-image-gallery",
			ResourceGroupName: "example-resources",
		}, nil)
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.compute.ComputeFunctions;
import com.pulumi.azure.compute.inputs.GetSharedImageGalleryArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        final var example = ComputeFunctions.getSharedImageGallery(GetSharedImageGalleryArgs.builder()
            .name("my-image-gallery")
            .resourceGroupName("example-resources")
            .build());

    }
}
```
```yaml
variables:
  example:
    fn::invoke:
      function: azure:compute:getSharedImageGallery
      arguments:
        name: my-image-gallery
        resourceGroupName: example-resources
```
<!--End PulumiCodeChooser -->
2
name" &The name of the Shared Image Gallery.
b
resourceGroupName" IThe name of the Resource Group in which the Shared Image Gallery exists.
"?
description" ,A description for the Shared Image Gallery.
"E
id" ;The provider-assigned unique ID for this managed resource.
"S

imageNames*" ?A list of Shared Image names within this Shared Image Gallery.
"
location" "

name" "
resourceGroupName" "P
tags2" BA mapping of tags which are assigned to the Shared Image Gallery.
"H

uniqueName" 6The unique name assigned to the Shared Image Gallery.
2$
[
computegetSharedImageVersion9azure:compute/getSharedImageVersion:getSharedImageVersionýUse this data source to access information about an existing Version of a Shared Image within a Shared Image Gallery.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const example = azure.compute.getSharedImageVersion({
    name: "1.0.0",
    imageName: "my-image",
    galleryName: "my-image-gallery",
    resourceGroupName: "example-resources",
});
```
```python
import pulumi
import pulumi_azure as azure

example = azure.compute.get_shared_image_version(name="1.0.0",
    image_name="my-image",
    gallery_name="my-image-gallery",
    resource_group_name="example-resources")
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var example = Azure.Compute.GetSharedImageVersion.Invoke(new()
    {
        Name = "1.0.0",
        ImageName = "my-image",
        GalleryName = "my-image-gallery",
        ResourceGroupName = "example-resources",
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/compute"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		_, err := compute.LookupSharedImageVersion(ctx, &compute.LookupSharedImageVersionArgs{
			Name:              "1.0.0",
			ImageName:         "my-image",
			GalleryName:       "my-image-gallery",
			ResourceGroupName: "example-resources",
		}, nil)
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.compute.ComputeFunctions;
import com.pulumi.azure.compute.inputs.GetSharedImageVersionArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        final var example = ComputeFunctions.getSharedImageVersion(GetSharedImageVersionArgs.builder()
            .name("1.0.0")
            .imageName("my-image")
            .galleryName("my-image-gallery")
            .resourceGroupName("example-resources")
            .build());

    }
}
```
```yaml
variables:
  example:
    fn::invoke:
      function: azure:compute:getSharedImageVersion
      arguments:
        name: 1.0.0
        imageName: my-image
        galleryName: my-image-gallery
        resourceGroupName: example-resources
```
<!--End PulumiCodeChooser -->
Z
galleryName" GThe name of the Shared Image Gallery in which the Shared Image exists.
L
	imageName" ;The name of the Shared Image in which this Version exists.
÷
name" êThe name of the Image Version.

> **Note:** You may specify `latest` to obtain the latest version or `recent` to obtain the most recently updated version.

> **Note:** In 3.0, `latest` may return an image version with `exclude_from_latest` set to `true`. Starting from 4.0 onwards `latest` will not return image versions with `exlude_from_latest` set to `true`.
b
resourceGroupName" IThe name of the Resource Group in which the Shared Image Gallery exists.
y
sortVersionsBySemverB
 [Sort available versions taking SemVer versioning scheme into account. Defaults to `false`.
@
tagsB2" 0A mapping of tags assigned to the Shared Image.
"R
excludeFromLatest
 9Is this Image Version excluded from the `latest` filter?
"
galleryName" "E
id" ;The provider-assigned unique ID for this managed resource.
"
	imageName" "T
location" DThe supported Azure location where the Shared Image Gallery exists.
"e
managedImageId" OThe ID of the Managed Image which was the source of this Shared Image Version.
"A
name" 5The Azure Region in which this Image Version exists.
"|
osDiskImageSizeGb cThe size of the OS disk snapshot (in Gigabytes) which was the source of this Shared Image Version.
"j
osDiskSnapshotId" RThe ID of the OS disk snapshot which was the source of this Shared Image Version.
"
resourceGroupName" "
sortVersionsBySemverB
 "@
tagsB2" 0A mapping of tags assigned to the Shared Image.
"Ó
targetRegions*:

compute!getSharedImageVersionTargetRegionQazure:compute/getSharedImageVersionTargetRegion:getSharedImageVersionTargetRegion8One or more `target_region` blocks as documented below.
2ì
^
computegetSharedImageVersions;azure:compute/getSharedImageVersions:getSharedImageVersionsóUse this data source to access information about existing Versions of a Shared Image within a Shared Image Gallery.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const example = azure.compute.getSharedImageVersions({
    imageName: "my-image",
    galleryName: "my-image-gallery",
    resourceGroupName: "example-resources",
});
```
```python
import pulumi
import pulumi_azure as azure

example = azure.compute.get_shared_image_versions(image_name="my-image",
    gallery_name="my-image-gallery",
    resource_group_name="example-resources")
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var example = Azure.Compute.GetSharedImageVersions.Invoke(new()
    {
        ImageName = "my-image",
        GalleryName = "my-image-gallery",
        ResourceGroupName = "example-resources",
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/compute"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		_, err := compute.GetSharedImageVersions(ctx, &compute.GetSharedImageVersionsArgs{
			ImageName:         "my-image",
			GalleryName:       "my-image-gallery",
			ResourceGroupName: "example-resources",
		}, nil)
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.compute.ComputeFunctions;
import com.pulumi.azure.compute.inputs.GetSharedImageVersionsArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        final var example = ComputeFunctions.getSharedImageVersions(GetSharedImageVersionsArgs.builder()
            .imageName("my-image")
            .galleryName("my-image-gallery")
            .resourceGroupName("example-resources")
            .build());

    }
}
```
```yaml
variables:
  example:
    fn::invoke:
      function: azure:compute:getSharedImageVersions
      arguments:
        imageName: my-image
        galleryName: my-image-gallery
        resourceGroupName: example-resources
```
<!--End PulumiCodeChooser -->
R
galleryName" ?The name of the Shared Image in which the Shared Image exists.
L
	imageName" ;The name of the Shared Image in which this Version exists.
b
resourceGroupName" IThe name of the Resource Group in which the Shared Image Gallery exists.
N

tagsFilterB2" 8A mapping of tags to filter the list of images against.
"
galleryName" "E
id" ;The provider-assigned unique ID for this managed resource.
"
	imageName" "£
imagess*q:o
m
computegetSharedImageVersionsImageEazure:compute/getSharedImageVersionsImage:getSharedImageVersionsImage$An `images` block as defined below:
"
resourceGroupName" "

tagsFilterB2" 2¶
=
computegetSnapshot%azure:compute/getSnapshot:getSnapshotîUse this data source to access information about an existing Snapshot.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const example = azure.compute.getSnapshot({
    name: "my-snapshot",
    resourceGroupName: "my-resource-group",
});
```
```python
import pulumi
import pulumi_azure as azure

example = azure.compute.get_snapshot(name="my-snapshot",
    resource_group_name="my-resource-group")
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var example = Azure.Compute.GetSnapshot.Invoke(new()
    {
        Name = "my-snapshot",
        ResourceGroupName = "my-resource-group",
    });

});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/compute"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		_, err := compute.LookupSnapshot(ctx, &compute.LookupSnapshotArgs{
			Name:              "my-snapshot",
			ResourceGroupName: "my-resource-group",
		}, nil)
		if err != nil {
			return err
		}
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.compute.ComputeFunctions;
import com.pulumi.azure.compute.inputs.GetSnapshotArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        final var example = ComputeFunctions.getSnapshot(GetSnapshotArgs.builder()
            .name("my-snapshot")
            .resourceGroupName("my-resource-group")
            .build());

    }
}
```
```yaml
variables:
  example:
    fn::invoke:
      function: azure:compute:getSnapshot
      arguments:
        name: my-snapshot
        resourceGroupName: my-resource-group
```
<!--End PulumiCodeChooser -->
0
name" $Specifies the name of the Snapshot.
^
resourceGroupName" ESpecifies the name of the resource group the Snapshot is located in.
"
creationOption" ":

diskSizeGb (The size of the Snapshotted Disk in GB.
"
encryptionSettingsv*t:r
p
computegetSnapshotEncryptionSettingGazure:compute/getSnapshotEncryptionSetting:getSnapshotEncryptionSetting"E
id" ;The provider-assigned unique ID for this managed resource.
"

name" "
osType" "
resourceGroupName" "?
sourceResourceId" 'The reference to an existing snapshot.
"9
	sourceUri" (The URI to a Managed or Unmanaged Disk.
"6
storageAccountId" The ID of an storage account.
"
timeCreated" "P
trustedLaunchEnabled
 4Whether Trusted Launch is enabled for the Snapshot.
2Þ
I
computegetSshPublicKey-azure:compute/getSshPublicKey:getSshPublicKeyÙUse this data source to access information about an existing SSH Public Key.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const example = azure.compute.getSshPublicKey({
    name: "existing",
    resourceGroupName: "existing",
});
export const id = example.then(example => example.id);
```
```python
import pulumi
import pulumi_azure as azure

example = azure.compute.get_ssh_public_key(name="existing",
    resource_group_name="existing")
pulumi.export("id", example.id)
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var example = Azure.Compute.GetSshPublicKey.Invoke(new()
    {
        Name = "existing",
        ResourceGroupName = "existing",
    });

    return new Dictionary<string, object?>
    {
        ["id"] = example.Apply(getSshPublicKeyResult => getSshPublicKeyResult.Id),
    };
});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/compute"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		example, err := compute.LookupSshPublicKey(ctx, &compute.LookupSshPublicKeyArgs{
			Name:              "existing",
			ResourceGroupName: "existing",
		}, nil)
		if err != nil {
			return err
		}
		ctx.Export("id", example.Id)
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.compute.ComputeFunctions;
import com.pulumi.azure.compute.inputs.GetSshPublicKeyArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        final var example = ComputeFunctions.getSshPublicKey(GetSshPublicKeyArgs.builder()
            .name("existing")
            .resourceGroupName("existing")
            .build());

        ctx.export("id", example.applyValue(getSshPublicKeyResult -> getSshPublicKeyResult.id()));
    }
}
```
```yaml
variables:
  example:
    fn::invoke:
      function: azure:compute:getSshPublicKey
      arguments:
        name: existing
        resourceGroupName: existing
outputs:
  id: ${example.id}
```
<!--End PulumiCodeChooser -->
-
name" !The name of this SSH Public Key.
Y
resourceGroupName" @The name of the Resource Group where the SSH Public Key exists.
R
tagsB2" BA mapping of tags which should be assigned to the SSH Public Key.
"E
id" ;The provider-assigned unique ID for this managed resource.
"

name" "[
	publicKey" JThe SSH public key used to authenticate to a virtual machine through ssh.
"
resourceGroupName" "
tagsB2" 2¤
O
computegetVirtualMachine1azure:compute/getVirtualMachine:getVirtualMachineßUse this data source to access information about an existing Virtual Machine.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const example = azure.compute.getVirtualMachine({
    name: "production",
    resourceGroupName: "networking",
});
export const virtualMachineId = example.then(example => example.id);
```
```python
import pulumi
import pulumi_azure as azure

example = azure.compute.get_virtual_machine(name="production",
    resource_group_name="networking")
pulumi.export("virtualMachineId", example.id)
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var example = Azure.Compute.GetVirtualMachine.Invoke(new()
    {
        Name = "production",
        ResourceGroupName = "networking",
    });

    return new Dictionary<string, object?>
    {
        ["virtualMachineId"] = example.Apply(getVirtualMachineResult => getVirtualMachineResult.Id),
    };
});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/compute"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		example, err := compute.LookupVirtualMachine(ctx, &compute.LookupVirtualMachineArgs{
			Name:              "production",
			ResourceGroupName: "networking",
		}, nil)
		if err != nil {
			return err
		}
		ctx.Export("virtualMachineId", example.Id)
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.compute.ComputeFunctions;
import com.pulumi.azure.compute.inputs.GetVirtualMachineArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        final var example = ComputeFunctions.getVirtualMachine(GetVirtualMachineArgs.builder()
            .name("production")
            .resourceGroupName("networking")
            .build());

        ctx.export("virtualMachineId", example.applyValue(getVirtualMachineResult -> getVirtualMachineResult.id()));
    }
}
```
```yaml
variables:
  example:
    fn::invoke:
      function: azure:compute:getVirtualMachine
      arguments:
        name: production
        resourceGroupName: networking
outputs:
  virtualMachineId: ${example.id}
```
<!--End PulumiCodeChooser -->
7
name" +Specifies the name of the Virtual Machine.
e
resourceGroupName" LSpecifies the name of the resource group the Virtual Machine is located in.
"E
id" ;The provider-assigned unique ID for this managed resource.
"¢

identitiesm*k:i
g
computegetVirtualMachineIdentityAazure:compute/getVirtualMachineIdentity:getVirtualMachineIdentity%A `identity` block as defined below.
"
location" "

name" ":

powerState" (The power state of the virtual machine.
"Y
privateIpAddress" AThe Primary Private IP Address assigned to this Virtual Machine.
"]
privateIpAddresses*" AA list of Private IP Addresses assigned to this Virtual Machine.
"W
publicIpAddress" @The Primary Public IP Address assigned to this Virtual Machine.
"_
publicIpAddresses*" DA list of the Public IP Addresses assigned to this Virtual Machine.
"
resourceGroupName" 2Ù
g
computegetVirtualMachineScaleSetAazure:compute/getVirtualMachineScaleSet:getVirtualMachineScaleSetáUse this data source to access information about an existing Virtual Machine Scale Set.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const example = azure.compute.getVirtualMachineScaleSet({
    name: "existing",
    resourceGroupName: "existing",
});
export const id = example.then(example => example.id);
```
```python
import pulumi
import pulumi_azure as azure

example = azure.compute.get_virtual_machine_scale_set(name="existing",
    resource_group_name="existing")
pulumi.export("id", example.id)
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var example = Azure.Compute.GetVirtualMachineScaleSet.Invoke(new()
    {
        Name = "existing",
        ResourceGroupName = "existing",
    });

    return new Dictionary<string, object?>
    {
        ["id"] = example.Apply(getVirtualMachineScaleSetResult => getVirtualMachineScaleSetResult.Id),
    };
});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/compute"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		example, err := compute.GetVirtualMachineScaleSet(ctx, &compute.GetVirtualMachineScaleSetArgs{
			Name:              "existing",
			ResourceGroupName: "existing",
		}, nil)
		if err != nil {
			return err
		}
		ctx.Export("id", example.Id)
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.compute.ComputeFunctions;
import com.pulumi.azure.compute.inputs.GetVirtualMachineScaleSetArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        final var example = ComputeFunctions.getVirtualMachineScaleSet(GetVirtualMachineScaleSetArgs.builder()
            .name("existing")
            .resourceGroupName("existing")
            .build());

        ctx.export("id", example.applyValue(getVirtualMachineScaleSetResult -> getVirtualMachineScaleSetResult.id()));
    }
}
```
```yaml
variables:
  example:
    fn::invoke:
      function: azure:compute:getVirtualMachineScaleSet
      arguments:
        name: existing
        resourceGroupName: existing
outputs:
  id: ${example.id}
```
<!--End PulumiCodeChooser -->
8
name" ,The name of this Virtual Machine Scale Set.
d
resourceGroupName" KThe name of the Resource Group where the Virtual Machine Scale Set exists.
"E
id" ;The provider-assigned unique ID for this managed resource.
"½

identities*:

compute!getVirtualMachineScaleSetIdentityQazure:compute/getVirtualMachineScaleSetIdentity:getVirtualMachineScaleSetIdentity%A `identity` block as defined below.
"Æ
	instances*:

compute!getVirtualMachineScaleSetInstanceQazure:compute/getVirtualMachineScaleSetInstance:getVirtualMachineScaleSetInstance/A list of `instances` blocks as defined below.
"Q
location" AThe Azure Region in which this Virtual Machine Scale Set exists.
"<
name" 0The name of the public IP address configuration
"ï
networkInterfaces *:

compute)getVirtualMachineScaleSetNetworkInterfaceaazure:compute/getVirtualMachineScaleSetNetworkInterface:getVirtualMachineScaleSetNetworkInterface7A list of `network_interface` blocks as defined below.
"
resourceGroupName" 2ð
K
connectionsgetManagedApi-azure:connections/getManagedApi:getManagedApi¿Uses this data source to access information about an existing Managed API.

## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const example = azure.connections.getManagedApi({
    name: "servicebus",
    location: "West Europe",
});
export const id = example.then(example => example.id);
```
```python
import pulumi
import pulumi_azure as azure

example = azure.connections.get_managed_api(name="servicebus",
    location="West Europe")
pulumi.export("id", example.id)
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var example = Azure.Connections.GetManagedApi.Invoke(new()
    {
        Name = "servicebus",
        Location = "West Europe",
    });

    return new Dictionary<string, object?>
    {
        ["id"] = example.Apply(getManagedApiResult => getManagedApiResult.Id),
    };
});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/connections"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		example, err := connections.GetManagedApi(ctx, &connections.GetManagedApiArgs{
			Name:     "servicebus",
			Location: "West Europe",
		}, nil)
		if err != nil {
			return err
		}
		ctx.Export("id", example.Id)
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.connections.ConnectionsFunctions;
import com.pulumi.azure.connections.inputs.GetManagedApiArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        final var example = ConnectionsFunctions.getManagedApi(GetManagedApiArgs.builder()
            .name("servicebus")
            .location("West Europe")
            .build());

        ctx.export("id", example.applyValue(getManagedApiResult -> getManagedApiResult.id()));
    }
}
```
```yaml
variables:
  example:
    fn::invoke:
      function: azure:connections:getManagedApi
      arguments:
        name: servicebus
        location: West Europe
outputs:
  id: ${example.id}
```
<!--End PulumiCodeChooser -->
9
location" )The Azure location for this Managed API.
3
name" 'Specifies the name of the Managed API.
"E
id" ;The provider-assigned unique ID for this managed resource.
"
location" "

name" "
tags2" :
V
	blueprintAssignmentIdentity5azure:blueprint/AssignmentIdentity:AssignmentIdentityÁ
¾p
identityIdsB*" YSpecifies a list of User Assigned Managed Identity IDs to be assigned to this Blueprint.

principalIdB" 
tenantIdB" ¢
type" Specifies the type of Managed Service Identity that should be configured on this Blueprint. Possible values are `SystemAssigned` and `UserAssigned`.
:Ã	
S
botChannelDirectLineSite5azure:bot/ChannelDirectLineSite:ChannelDirectLineSiteë
èA
enabledB
 0Enables/Disables this site. Defaults to `true`.
U
endpointParametersEnabledB
 2Is the endpoint parameters enabled for this site?
û
enhancedAuthenticationEnabledB
 ÓEnables additional security measures for this site, see [Enhanced Directline Authentication Features](https://blog.botframework.com/2018/09/25/enhanced-direct-line-authentication-features). Disabled by default.

idB" Id for the site
1
keyB" $Primary key for accessing this site
4
key2B" &Secondary key for accessing this site
!
name" The name of the site
^
storageEnabledB
 FIs the storage site enabled for detailed logging? Defaults to `true`.
¬
trustedOriginsB*" This field is required when `is_secure_site_enabled` is enabled. Determines which origins can establish a Directline conversation for this site.
Y
userUploadEnabledB
 >Is the user upload enabled for this site? Defaults to `true`.
\
	v1AllowedB
 IEnables v1 of the Directline protocol for this site. Defaults to `true`.
\
	v3AllowedB
 IEnables v3 of the Directline protocol for this site. Defaults to `true`.
:Þ
M
botChannelFacebookPage1azure:bot/ChannelFacebookPage:ChannelFacebookPage
L
accessToken" 9The Facebook Page Access Token for the Facebook Channel.
9
id" /The Facebook Page ID for the Facebook Channel.
:õ
V
botChannelLineLineChannel7azure:bot/ChannelLineLineChannel:ChannelLineLineChannel
P
accessToken" =The access token which is used to call the Line Channel API.
C
secret" 5The secret which is used to access the Line Channel.
:
J
botChannelWebChatSite/azure:bot/ChannelWebChatSite:ChannelWebChatSite¹
¶U
endpointParametersEnabledB
 2Is the endpoint parameters enabled for this site?
"
name" The name of the site.
^
storageEnabledB
 FIs the storage site enabled for detailed logging? Defaults to `true`.
Y
userUploadEnabledB
 >Is the user upload enabled for this site? Defaults to `true`.
:
}
cdn#EndpointCustomDomainCdnManagedHttpsQazure:cdn/EndpointCustomDomainCdnManagedHttps:EndpointCustomDomainCdnManagedHttps
d
certificateType" MThe type of HTTPS certificate. Possible values are `Shared` and `Dedicated`.
d
protocolType" PThe type of protocol. Possible values are `ServerNameIndication` and `IPBased`.
²

tlsVersionB" The minimum TLS protocol version that is used for HTTPS. Possible values are `TLS10` (representing TLS 1.0/1.1), `TLS12` (representing TLS 1.2) and `None` (representing no minimums). Defaults to `TLS12`.

> **Note** Azure Services will require TLS 1.2+ by August 2025, please see this [announcement](https://azure.microsoft.com/en-us/updates/v2/update-retirement-tls1-0-tls1-1-versions-azure-services/) for more.
:

cdn$EndpointCustomDomainUserManagedHttpsSazure:cdn/EndpointCustomDomainUserManagedHttps:EndpointCustomDomainUserManagedHttps
\
keyVaultSecretId" DThe ID of the Key Vault Secret that contains the HTTPS certificate.
²

tlsVersionB" The minimum TLS protocol version that is used for HTTPS. Possible values are `TLS10` (representing TLS 1.0/1.1), `TLS12` (representing TLS 1.2) and `None` (representing no minimums). Defaults to `TLS12`.

> **Note** Azure Services will require TLS 1.2+ by August 2025, please see this [announcement](https://azure.microsoft.com/en-us/updates/v2/update-retirement-tls1-0-tls1-1-versions-azure-services/) for more.
:È&
P
cdnEndpointDeliveryRule3azure:cdn/EndpointDeliveryRule:EndpointDeliveryRuleó%
ð%è
cacheExpirationActionB:

cdn)EndpointDeliveryRuleCacheExpirationAction]azure:cdn/EndpointDeliveryRuleCacheExpirationAction:EndpointDeliveryRuleCacheExpirationAction4A `cache_expiration_action` block as defined above.
þ
cacheKeyQueryStringAction¤B¡:

cdn-EndpointDeliveryRuleCacheKeyQueryStringActioneazure:cdn/EndpointDeliveryRuleCacheKeyQueryStringAction:EndpointDeliveryRuleCacheKeyQueryStringAction:A `cache_key_query_string_action` block as defined above.
Ò
cookiesConditionsB*:

cdn$EndpointDeliveryRuleCookiesConditionSazure:cdn/EndpointDeliveryRuleCookiesCondition:EndpointDeliveryRuleCookiesCondition.A `cookies_condition` block as defined above.
Ç
deviceConditionB:
}
cdn#EndpointDeliveryRuleDeviceConditionQazure:cdn/EndpointDeliveryRuleDeviceCondition:EndpointDeliveryRuleDeviceCondition-A `device_condition` block as defined below.
ç
httpVersionConditionsB*:

cdn(EndpointDeliveryRuleHttpVersionCondition[azure:cdn/EndpointDeliveryRuleHttpVersionCondition:EndpointDeliveryRuleHttpVersionCondition3A `http_version_condition` block as defined below.

modifyRequestHeaderActions§B¤*¡:

cdn-EndpointDeliveryRuleModifyRequestHeaderActioneazure:cdn/EndpointDeliveryRuleModifyRequestHeaderAction:EndpointDeliveryRuleModifyRequestHeaderAction9A `modify_request_header_action` block as defined below.

modifyResponseHeaderActionsªB§*¤:¡

cdn.EndpointDeliveryRuleModifyResponseHeaderActiongazure:cdn/EndpointDeliveryRuleModifyResponseHeaderAction:EndpointDeliveryRuleModifyResponseHeaderAction:A `modify_response_header_action` block as defined below.
B
name" 6The Name which should be used for this Delivery Rule.
c
order VThe order used for this rule. The order values should be sequential and begin at `1`.
Ó
postArgConditionsB*:

cdn$EndpointDeliveryRulePostArgConditionSazure:cdn/EndpointDeliveryRulePostArgCondition:EndpointDeliveryRulePostArgCondition/A `post_arg_condition` block as defined below.
ç
queryStringConditionsB*:

cdn(EndpointDeliveryRuleQueryStringCondition[azure:cdn/EndpointDeliveryRuleQueryStringCondition:EndpointDeliveryRuleQueryStringCondition3A `query_string_condition` block as defined below.
ñ
remoteAddressConditionsB*:

cdn*EndpointDeliveryRuleRemoteAddressCondition_azure:cdn/EndpointDeliveryRuleRemoteAddressCondition:EndpointDeliveryRuleRemoteAddressCondition5A `remote_address_condition` block as defined below.
ç
requestBodyConditionsB*:

cdn(EndpointDeliveryRuleRequestBodyCondition[azure:cdn/EndpointDeliveryRuleRequestBodyCondition:EndpointDeliveryRuleRequestBodyCondition3A `request_body_condition` block as defined below.
ñ
requestHeaderConditionsB*:

cdn*EndpointDeliveryRuleRequestHeaderCondition_azure:cdn/EndpointDeliveryRuleRequestHeaderCondition:EndpointDeliveryRuleRequestHeaderCondition5A `request_header_condition` block as defined below.
í
requestMethodConditionB:

cdn*EndpointDeliveryRuleRequestMethodCondition_azure:cdn/EndpointDeliveryRuleRequestMethodCondition:EndpointDeliveryRuleRequestMethodCondition5A `request_method_condition` block as defined below.
í
requestSchemeConditionB:

cdn*EndpointDeliveryRuleRequestSchemeCondition_azure:cdn/EndpointDeliveryRuleRequestSchemeCondition:EndpointDeliveryRuleRequestSchemeCondition5A `request_scheme_condition` block as defined below.
â
requestUriConditionsB*:

cdn'EndpointDeliveryRuleRequestUriConditionYazure:cdn/EndpointDeliveryRuleRequestUriCondition:EndpointDeliveryRuleRequestUriCondition2A `request_uri_condition` block as defined below.

urlFileExtensionConditions§B¤*¡:

cdn-EndpointDeliveryRuleUrlFileExtensionConditioneazure:cdn/EndpointDeliveryRuleUrlFileExtensionCondition:EndpointDeliveryRuleUrlFileExtensionCondition9A `url_file_extension_condition` block as defined below.
è
urlFileNameConditionsB*:

cdn(EndpointDeliveryRuleUrlFileNameCondition[azure:cdn/EndpointDeliveryRuleUrlFileNameCondition:EndpointDeliveryRuleUrlFileNameCondition4A `url_file_name_condition` block as defined below.
Ó
urlPathConditionsB*:

cdn$EndpointDeliveryRuleUrlPathConditionSazure:cdn/EndpointDeliveryRuleUrlPathCondition:EndpointDeliveryRuleUrlPathCondition/A `url_path_condition` block as defined below.
Ô
urlRedirectActionB:

cdn%EndpointDeliveryRuleUrlRedirectActionUazure:cdn/EndpointDeliveryRuleUrlRedirectAction:EndpointDeliveryRuleUrlRedirectAction0A `url_redirect_action` block as defined below.
Ï
urlRewriteActionB:

cdn$EndpointDeliveryRuleUrlRewriteActionSazure:cdn/EndpointDeliveryRuleUrlRewriteAction:EndpointDeliveryRuleUrlRewriteAction/A `url_rewrite_action` block as defined below.
:

cdn)EndpointDeliveryRuleCacheExpirationAction]azure:cdn/EndpointDeliveryRuleCacheExpirationAction:EndpointDeliveryRuleCacheExpirationAction÷
ôj
behavior" ZThe behavior of the cache. Valid values are `BypassCache`, `Override` and `SetIfMissing`.

durationB" sDuration of the cache. Only allowed when `behavior` is set to `Override` or `SetIfMissing`. Format: `[d.]hh:mm:ss`
:î

cdn-EndpointDeliveryRuleCacheKeyQueryStringActioneazure:cdn/EndpointDeliveryRuleCacheKeyQueryStringAction:EndpointDeliveryRuleCacheKeyQueryStringActionÍ
Ê
behavior" wThe behavior of the cache key for query strings. Valid values are `Exclude`, `ExcludeAll`, `Include` and `IncludeAll`.
>

parametersB" *Comma separated list of parameter values.
:Â

cdn$EndpointDeliveryRuleCookiesConditionSazure:cdn/EndpointDeliveryRuleCookiesCondition:EndpointDeliveryRuleCookiesCondition¼
¹c
matchValuesB*" LList of values for the cookie. This is required if `operator` is not `Any`.
.
negateConditionB
 Defaults to `false`.

operator" Valid values are `Any`, `BeginsWith`, `Contains`, `EndsWith`, `Equal`, `GreaterThan`, `GreaterThanOrEqual`, `LessThan` and `LessThanOrEqual`.
$
selector" Name of the cookie.
Z

transformsB*" DA list of transforms. Valid values are `Lowercase` and `Uppercase`.
:¸
}
cdn#EndpointDeliveryRuleDeviceConditionQazure:cdn/EndpointDeliveryRuleDeviceCondition:EndpointDeliveryRuleDeviceCondition¶
³>
matchValues*" )Valid values are `Desktop` and `Mobile`.
.
negateConditionB
 Defaults to `false`.
A
operatorB" /Valid values are `Equal`. Defaults to `Equal`.
:Ï

cdn(EndpointDeliveryRuleHttpVersionCondition[azure:cdn/EndpointDeliveryRuleHttpVersionCondition:EndpointDeliveryRuleHttpVersionCondition½
ºE
matchValues*" 0Valid values are `0.9`, `1.0`, `1.1` and `2.0`.
.
negateConditionB
 Defaults to `false`.
A
operatorB" /Valid values are `Equal`. Defaults to `Equal`.
:

cdn-EndpointDeliveryRuleModifyRequestHeaderActioneazure:cdn/EndpointDeliveryRuleModifyRequestHeaderAction:EndpointDeliveryRuleModifyRequestHeaderAction÷
ôl
action" ^Action to be executed on a header value. Valid values are `Append`, `Delete` and `Overwrite`.

name" The header name.
e
valueB" VThe value of the header. Only needed when `action` is set to `Append` or `overwrite`.
:

cdn.EndpointDeliveryRuleModifyResponseHeaderActiongazure:cdn/EndpointDeliveryRuleModifyResponseHeaderAction:EndpointDeliveryRuleModifyResponseHeaderAction÷
ôl
action" ^Action to be executed on a header value. Valid values are `Append`, `Delete` and `Overwrite`.

name" The header name.
e
valueB" VThe value of the header. Only needed when `action` is set to `Append` or `overwrite`.
:¼

cdn$EndpointDeliveryRulePostArgConditionSazure:cdn/EndpointDeliveryRulePostArgCondition:EndpointDeliveryRulePostArgCondition¶
³[
matchValuesB*" DList of string values. This is required if `operator` is not `Any`.
.
negateConditionB
 Defaults to `false`.

operator" Valid values are `Any`, `BeginsWith`, `Contains`, `EndsWith`, `Equal`, `GreaterThan`, `GreaterThanOrEqual`, `LessThan` and `LessThanOrEqual`.
&
selector" Name of the post arg.
Z

transformsB*" DA list of transforms. Valid values are `Lowercase` and `Uppercase`.
: 

cdn(EndpointDeliveryRuleQueryStringCondition[azure:cdn/EndpointDeliveryRuleQueryStringCondition:EndpointDeliveryRuleQueryStringCondition
[
matchValuesB*" DList of string values. This is required if `operator` is not `Any`.
.
negateConditionB
 Defaults to `false`.

operator" Valid values are `Any`, `BeginsWith`, `Contains`, `EndsWith`, `Equal`, `GreaterThan`, `GreaterThanOrEqual`, `LessThan` and `LessThanOrEqual`.
Z

transformsB*" DA list of transforms. Valid values are `Lowercase` and `Uppercase`.
:ú

cdn*EndpointDeliveryRuleRemoteAddressCondition_azure:cdn/EndpointDeliveryRuleRemoteAddressCondition:EndpointDeliveryRuleRemoteAddressConditionâ
ßè
matchValuesB*" ÐList of string values. For `GeoMatch` `operator` this should be a list of country codes (e.g. `US` or `DE`). List of IP address if `operator` equals to `IPMatch`. This is required if `operator` is not `Any`.
.
negateConditionB
 Defaults to `false`.
B
operator" 2Valid values are `Any`, `GeoMatch` and `IPMatch`.
: 

cdn(EndpointDeliveryRuleRequestBodyCondition[azure:cdn/EndpointDeliveryRuleRequestBodyCondition:EndpointDeliveryRuleRequestBodyCondition
[
matchValuesB*" DList of string values. This is required if `operator` is not `Any`.
.
negateConditionB
 Defaults to `false`.

operator" Valid values are `Any`, `BeginsWith`, `Contains`, `EndsWith`, `Equal`, `GreaterThan`, `GreaterThanOrEqual`, `LessThan` and `LessThanOrEqual`.
Z

transformsB*" DA list of transforms. Valid values are `Lowercase` and `Uppercase`.
:Å

cdn*EndpointDeliveryRuleRequestHeaderCondition_azure:cdn/EndpointDeliveryRuleRequestHeaderCondition:EndpointDeliveryRuleRequestHeaderCondition­
ª[
matchValuesB*" DList of header values. This is required if `operator` is not `Any`.
.
negateConditionB
 Defaults to `false`.

operator" Valid values are `Any`, `BeginsWith`, `Contains`, `EndsWith`, `Equal`, `GreaterThan`, `GreaterThanOrEqual`, `LessThan` and `LessThanOrEqual`.

selector" Header name.
Z

transformsB*" DA list of transforms. Valid values are `Lowercase` and `Uppercase`.
:ì

cdn*EndpointDeliveryRuleRequestMethodCondition_azure:cdn/EndpointDeliveryRuleRequestMethodCondition:EndpointDeliveryRuleRequestMethodConditionÔ
Ñ\
matchValues*" GValid values are `DELETE`, `GET`, `HEAD`, `OPTIONS`, `POST` and `PUT`.
.
negateConditionB
 Defaults to `false`.
A
operatorB" /Valid values are `Equal`. Defaults to `Equal`.
:Ê

cdn*EndpointDeliveryRuleRequestSchemeCondition_azure:cdn/EndpointDeliveryRuleRequestSchemeCondition:EndpointDeliveryRuleRequestSchemeCondition²
¯:
matchValues*" %Valid values are `HTTP` and `HTTPS`.
.
negateConditionB
 Defaults to `false`.
A
operatorB" /Valid values are `Equal`. Defaults to `Equal`.
:

cdn'EndpointDeliveryRuleRequestUriConditionYazure:cdn/EndpointDeliveryRuleRequestUriCondition:EndpointDeliveryRuleRequestUriCondition
[
matchValuesB*" DList of string values. This is required if `operator` is not `Any`.
.
negateConditionB
 Defaults to `false`.

operator" Valid values are `Any`, `BeginsWith`, `Contains`, `EndsWith`, `Equal`, `GreaterThan`, `GreaterThanOrEqual`, `LessThan` and `LessThanOrEqual`.
Z

transformsB*" DA list of transforms. Valid values are `Lowercase` and `Uppercase`.
:¯

cdn-EndpointDeliveryRuleUrlFileExtensionConditioneazure:cdn/EndpointDeliveryRuleUrlFileExtensionCondition:EndpointDeliveryRuleUrlFileExtensionCondition
[
matchValuesB*" DList of string values. This is required if `operator` is not `Any`.
.
negateConditionB
 Defaults to `false`.

operator" Valid values are `Any`, `BeginsWith`, `Contains`, `EndsWith`, `Equal`, `GreaterThan`, `GreaterThanOrEqual`, `LessThan` and `LessThanOrEqual`.
Z

transformsB*" DA list of transforms. Valid values are `Lowercase` and `Uppercase`.
: 

cdn(EndpointDeliveryRuleUrlFileNameCondition[azure:cdn/EndpointDeliveryRuleUrlFileNameCondition:EndpointDeliveryRuleUrlFileNameCondition
[
matchValuesB*" DList of string values. This is required if `operator` is not `Any`.
.
negateConditionB
 Defaults to `false`.

operator" Valid values are `Any`, `BeginsWith`, `Contains`, `EndsWith`, `Equal`, `GreaterThan`, `GreaterThanOrEqual`, `LessThan` and `LessThanOrEqual`.
Z

transformsB*" DA list of transforms. Valid values are `Lowercase` and `Uppercase`.
:©

cdn$EndpointDeliveryRuleUrlPathConditionSazure:cdn/EndpointDeliveryRuleUrlPathCondition:EndpointDeliveryRuleUrlPathCondition£
 [
matchValuesB*" DList of string values. This is required if `operator` is not `Any`.
.
negateConditionB
 Defaults to `false`.
´
operator" £Valid values are `Any`, `BeginsWith`, `Contains`, `EndsWith`, `Equal`, `GreaterThan`, `GreaterThanOrEqual`, `LessThan`, `LessThanOrEqual`, `RegEx` and `Wildcard`.
Z

transformsB*" DA list of transforms. Valid values are `Lowercase` and `Uppercase`.
:³

cdn%EndpointDeliveryRuleUrlRedirectActionUazure:cdn/EndpointDeliveryRuleUrlRedirectAction:EndpointDeliveryRuleUrlRedirectActionª
§`
fragmentB" NSpecifies the fragment part of the URL. This value must not start with a `#`.
:
hostnameB" (Specifies the hostname part of the URL.
T
pathB" FSpecifies the path part of the URL. This value must begin with a `/`.

protocolB" ySpecifies the protocol part of the URL. Valid values are `MatchRequest`, `Http` and `Https`. Defaults to `MatchRequest`.
¦
queryStringB" Specifies the query string part of the URL. This value must not start with a `?` or `&` and must be in `<key>=<value>` format separated by `&`.
z
redirectType" fType of the redirect. Valid values are `Found`, `Moved`, `PermanentRedirect` and `TemporaryRedirect`.
:¢

cdn$EndpointDeliveryRuleUrlRewriteActionSazure:cdn/EndpointDeliveryRuleUrlRewriteAction:EndpointDeliveryRuleUrlRewriteAction
]
destination" JThis value must start with a `/` and can't be longer than 260 characters.
W
preserveUnmatchedPathB
 8Whether preserve an unmatched path. Defaults to `true`.
_
sourcePattern" JThis value must start with a `/` and can't be longer than 260 characters.
:à
G
cdnEndpointGeoFilter-azure:cdn/EndpointGeoFilter:EndpointGeoFilter
Y
action" KThe Action of the Geo Filter. Possible values include `Allow` and `Block`.
r
countryCodes*" \A List of two letter country codes (e.g. `US`, `GB`) to be associated with this Geo Filter.
@
relativePath" ,The relative path applicable to geo filter.
:ø
b
cdnEndpointGlobalDeliveryRule?azure:cdn/EndpointGlobalDeliveryRule:EndpointGlobalDeliveryRule
ú
cacheExpirationActionªB§:¤
¡
cdn/EndpointGlobalDeliveryRuleCacheExpirationActioniazure:cdn/EndpointGlobalDeliveryRuleCacheExpirationAction:EndpointGlobalDeliveryRuleCacheExpirationAction4A `cache_expiration_action` block as defined above.

cacheKeyQueryStringAction¶B³:°
­
cdn3EndpointGlobalDeliveryRuleCacheKeyQueryStringActionqazure:cdn/EndpointGlobalDeliveryRuleCacheKeyQueryStringAction:EndpointGlobalDeliveryRuleCacheKeyQueryStringAction:A `cache_key_query_string_action` block as defined above.

modifyRequestHeaderActions¹B¶*³:°
­
cdn3EndpointGlobalDeliveryRuleModifyRequestHeaderActionqazure:cdn/EndpointGlobalDeliveryRuleModifyRequestHeaderAction:EndpointGlobalDeliveryRuleModifyRequestHeaderAction9A `modify_request_header_action` block as defined below.

modifyResponseHeaderActions¼B¹*¶:³
°
cdn4EndpointGlobalDeliveryRuleModifyResponseHeaderActionsazure:cdn/EndpointGlobalDeliveryRuleModifyResponseHeaderAction:EndpointGlobalDeliveryRuleModifyResponseHeaderAction:A `modify_response_header_action` block as defined below.
æ
urlRedirectActionB:

cdn+EndpointGlobalDeliveryRuleUrlRedirectActionaazure:cdn/EndpointGlobalDeliveryRuleUrlRedirectAction:EndpointGlobalDeliveryRuleUrlRedirectAction0A `url_redirect_action` block as defined below.
á
urlRewriteActionB:

cdn*EndpointGlobalDeliveryRuleUrlRewriteAction_azure:cdn/EndpointGlobalDeliveryRuleUrlRewriteAction:EndpointGlobalDeliveryRuleUrlRewriteAction/A `url_rewrite_action` block as defined below.
:
¡
cdn/EndpointGlobalDeliveryRuleCacheExpirationActioniazure:cdn/EndpointGlobalDeliveryRuleCacheExpirationAction:EndpointGlobalDeliveryRuleCacheExpirationAction÷
ôj
behavior" ZThe behavior of the cache. Valid values are `BypassCache`, `Override` and `SetIfMissing`.

durationB" sDuration of the cache. Only allowed when `behavior` is set to `Override` or `SetIfMissing`. Format: `[d.]hh:mm:ss`
:
­
cdn3EndpointGlobalDeliveryRuleCacheKeyQueryStringActionqazure:cdn/EndpointGlobalDeliveryRuleCacheKeyQueryStringAction:EndpointGlobalDeliveryRuleCacheKeyQueryStringActionÍ
Ê
behavior" wThe behavior of the cache key for query strings. Valid values are `Exclude`, `ExcludeAll`, `Include` and `IncludeAll`.
>

parametersB" *Comma separated list of parameter values.
:ª
­
cdn3EndpointGlobalDeliveryRuleModifyRequestHeaderActionqazure:cdn/EndpointGlobalDeliveryRuleModifyRequestHeaderAction:EndpointGlobalDeliveryRuleModifyRequestHeaderAction÷
ôl
action" ^Action to be executed on a header value. Valid values are `Append`, `Delete` and `Overwrite`.

name" The header name.
e
valueB" VThe value of the header. Only needed when `action` is set to `Append` or `overwrite`.
:­
°
cdn4EndpointGlobalDeliveryRuleModifyResponseHeaderActionsazure:cdn/EndpointGlobalDeliveryRuleModifyResponseHeaderAction:EndpointGlobalDeliveryRuleModifyResponseHeaderAction÷
ôl
action" ^Action to be executed on a header value. Valid values are `Append`, `Delete` and `Overwrite`.

name" The header name.
e
valueB" VThe value of the header. Only needed when `action` is set to `Append` or `overwrite`.
:Å

cdn+EndpointGlobalDeliveryRuleUrlRedirectActionaazure:cdn/EndpointGlobalDeliveryRuleUrlRedirectAction:EndpointGlobalDeliveryRuleUrlRedirectActionª
§`
fragmentB" NSpecifies the fragment part of the URL. This value must not start with a `#`.
:
hostnameB" (Specifies the hostname part of the URL.
T
pathB" FSpecifies the path part of the URL. This value must begin with a `/`.

protocolB" ySpecifies the protocol part of the URL. Valid values are `MatchRequest`, `Http` and `Https`. Defaults to `MatchRequest`.
¦
queryStringB" Specifies the query string part of the URL. This value must not start with a `?` or `&` and must be in `<key>=<value>` format separated by `&`.
z
redirectType" fType of the redirect. Valid values are `Found`, `Moved`, `PermanentRedirect` and `TemporaryRedirect`.
:´

cdn*EndpointGlobalDeliveryRuleUrlRewriteAction_azure:cdn/EndpointGlobalDeliveryRuleUrlRewriteAction:EndpointGlobalDeliveryRuleUrlRewriteAction
]
destination" JThis value must start with a `/` and can't be longer than 260 characters.
W
preserveUnmatchedPathB
 8Whether preserve an unmatched path. Defaults to `true`.
_
sourcePattern" JThis value must start with a `/` and can't be longer than 260 characters.
:á
>
cdnEndpointOrigin'azure:cdn/EndpointOrigin:EndpointOrigin
÷
hostName" æA string that determines the hostname/IP address of the origin server. This string can be a domain name, Storage Account endpoint, Web App endpoint, IPv4 address or IPv6 address. Changing this forces a new resource to be created.
t
httpPortB bThe HTTP port of the origin. Defaults to `80`. Changing this forces a new resource to be created.
w
	httpsPortB dThe HTTPS port of the origin. Defaults to `443`. Changing this forces a new resource to be created.
¯
name" ¢The name of the origin. This is an arbitrary value. However, this value needs to be unique under the endpoint. Changing this forces a new resource to be created.
:Î
\
cdnFrontdoorCustomDomainTls;azure:cdn/FrontdoorCustomDomainTls:FrontdoorCustomDomainTlsí
êD
cdnFrontdoorSecretIdB" &Resource ID of the Front Door Secret.
µ
certificateTypeB" Defines the source of the SSL certificate. Possible values include `CustomerCertificate` and `ManagedCertificate`. Defaults to `ManagedCertificate`.

->**NOTE:** It may take up to 15 minutes for the Front Door Service to validate the state and Domain ownership of the Custom Domain.
é
minimumTlsVersionB" ÍTLS protocol version that will be used for Https. Possible values include `TLS10` and `TLS12`. Defaults to `TLS12`.

> **Note** Azure Services will require TLS 1.2+ by August 2025, please see this [announcement](https://azure.microsoft.com/en-us/updates/v2/update-retirement-tls1-0-tls1-1-versions-azure-services/) for more details.
:ì
w
cdn!FrontdoorFirewallPolicyCustomRuleMazure:cdn/FrontdoorFirewallPolicyCustomRule:FrontdoorFirewallPolicyCustomRuleð
íz
action" lThe action to perform when the rule is matched. Possible values are `Allow`, `Block`, `Log`, or `Redirect`.
I
enabledB
 8Is the rule is enabled or disabled? Defaults to `true`.
§
matchConditions­Bª*§:¤
¡
cdn/FrontdoorFirewallPolicyCustomRuleMatchConditioniazure:cdn/FrontdoorFirewallPolicyCustomRuleMatchCondition:FrontdoorFirewallPolicyCustomRuleMatchConditiondOne or more `match_condition` block defined below. Can support up to `10` `match_condition` blocks.
t
name" hGets name of the resource that is unique within a policy. This name can be used to access the resource.

priorityB xThe priority of the rule. Rules with a lower value will be evaluated before rules with a higher value. Defaults to `1`.
Y
rateLimitDurationInMinutesB 5The rate limit duration in minutes. Defaults to `1`.
H
rateLimitThresholdB ,The rate limit threshold. Defaults to `10`.
R
type" FThe type of rule. Possible values are `MatchRule` or `RateLimitRule`.
:¾	
¡
cdn/FrontdoorFirewallPolicyCustomRuleMatchConditioniazure:cdn/FrontdoorFirewallPolicyCustomRuleMatchCondition:FrontdoorFirewallPolicyCustomRuleMatchCondition
Í
matchValues*" ·Up to `600` possible values to match. Limit is in total across all `match_condition` blocks and `match_values` arguments. String value itself can be up to `256` characters in length.
Ô
matchVariable" ¾The request variable to compare with. Possible values are `Cookies`, `PostArgs`, `QueryString`, `RemoteAddr`, `RequestBody`, `RequestHeader`, `RequestMethod`, `RequestUri`, or `SocketAddr`.
J
negationConditionB
 /Should the result of the condition be negated.
þ
operator" íComparison type to use for matching with the variable value. Possible values are `Any`, `BeginsWith`, `Contains`, `EndsWith`, `Equal`, `GeoMatch`, `GreaterThan`, `GreaterThanOrEqual`, `IPMatch`, `LessThan`, `LessThanOrEqual` or `RegEx`.

selectorB" qMatch against a specific key if the `match_variable` is `QueryString`, `PostArgs`, `RequestHeader` or `Cookies`.


transformsB*" Up to `5` transforms to apply. Possible values are `Lowercase`, `RemoveNulls`, `Trim`, `Uppercase`, `URLDecode` or `URLEncode`.
:¢
z
cdn"FrontdoorFirewallPolicyManagedRuleOazure:cdn/FrontdoorFirewallPolicyManagedRule:FrontdoorFirewallPolicyManagedRule£

 
ø
action" éThe action to perform for all DRS rules when the managed rule is matched or when the anomaly score is 5 or greater depending on which version of the DRS you are using. Possible values include `Allow`, `Log`, `Block`, and `Redirect`.
ã

exclusions¡B*:

cdn+FrontdoorFirewallPolicyManagedRuleExclusionaazure:cdn/FrontdoorFirewallPolicyManagedRuleExclusion:FrontdoorFirewallPolicyManagedRuleExclusion1One or more `exclusion` blocks as defined below.
Þ
	overridesB*:

cdn*FrontdoorFirewallPolicyManagedRuleOverride_azure:cdn/FrontdoorFirewallPolicyManagedRuleOverride:FrontdoorFirewallPolicyManagedRuleOverride0One or more `override` blocks as defined below.
½
type" °The name of the managed rule to use with this resource. Possible values include `DefaultRuleSet`, `Microsoft_DefaultRuleSet`, `BotProtection` or `Microsoft_BotManagerRuleSet`.

version" The version of the managed rule to use with this resource. Possible values depends on which DRS type you are using, for the `DefaultRuleSet` type the possible values include `1.0` or `preview-0.1`. For `Microsoft_DefaultRuleSet` the possible values include `1.1`, `2.0` or `2.1`. For `BotProtection` the value must be `preview-0.1` and for `Microsoft_BotManagerRuleSet` the value must be `1.0`.
:Ü

cdn+FrontdoorFirewallPolicyManagedRuleExclusionaazure:cdn/FrontdoorFirewallPolicyManagedRuleExclusion:FrontdoorFirewallPolicyManagedRuleExclusionÁ
¾¤
matchVariable" The variable type to be excluded. Possible values are `QueryStringArgNames`, `RequestBodyPostArgNames`, `RequestCookieNames`, `RequestHeaderNames`, `RequestBodyJsonArgNames`

> **NOTE:** `RequestBodyJsonArgNames` is only available on Default Rule Set (DRS) 2.0 or later
Ü
operator" ËComparison operator to apply to the selector when specifying which elements in the collection this exclusion applies to. Possible values are: `Equals`, `Contains`, `StartsWith`, `EndsWith`, `EqualsAny`.
µ
selector" ¤Selector for the value in the `match_variable` attribute this exclusion applies to.

> **NOTE:** `selector` must be set to `*` if `operator` is set to `EqualsAny`.
:

cdn*FrontdoorFirewallPolicyManagedRuleOverride_azure:cdn/FrontdoorFirewallPolicyManagedRuleOverride:FrontdoorFirewallPolicyManagedRuleOverrideè
åû

exclusions¹B¶*³:°
­
cdn3FrontdoorFirewallPolicyManagedRuleOverrideExclusionqazure:cdn/FrontdoorFirewallPolicyManagedRuleOverrideExclusion:FrontdoorFirewallPolicyManagedRuleOverrideExclusion1One or more `exclusion` blocks as defined below.
9
ruleGroupName" $The managed rule group to override.
©
rulesªB§*¤:¡

cdn.FrontdoorFirewallPolicyManagedRuleOverrideRulegazure:cdn/FrontdoorFirewallPolicyManagedRuleOverrideRule:FrontdoorFirewallPolicyManagedRuleOverrideRulesOne or more `rule` blocks as defined below. If none are specified, all of the rules in the group will be disabled.
:ô
­
cdn3FrontdoorFirewallPolicyManagedRuleOverrideExclusionqazure:cdn/FrontdoorFirewallPolicyManagedRuleOverrideExclusion:FrontdoorFirewallPolicyManagedRuleOverrideExclusionÁ
¾¤
matchVariable" The variable type to be excluded. Possible values are `QueryStringArgNames`, `RequestBodyPostArgNames`, `RequestCookieNames`, `RequestHeaderNames`, `RequestBodyJsonArgNames`

> **NOTE:** `RequestBodyJsonArgNames` is only available on Default Rule Set (DRS) 2.0 or later
Ü
operator" ËComparison operator to apply to the selector when specifying which elements in the collection this exclusion applies to. Possible values are: `Equals`, `Contains`, `StartsWith`, `EndsWith`, `EqualsAny`.
µ
selector" ¤Selector for the value in the `match_variable` attribute this exclusion applies to.

> **NOTE:** `selector` must be set to `*` if `operator` is set to `EqualsAny`.
:

cdn.FrontdoorFirewallPolicyManagedRuleOverrideRulegazure:cdn/FrontdoorFirewallPolicyManagedRuleOverrideRule:FrontdoorFirewallPolicyManagedRuleOverrideRuleí
êÓ
action" ÄThe action to be applied when the managed rule matches or when the anomaly score is 5 or greater. Possible values for DRS `1.1` and below are `Allow`, `Log`, `Block`, and `Redirect`. For DRS `2.0` and above the possible values are `Log` or `AnomalyScoring`.

->**NOTE:** Please see the DRS [product documentation](https://learn.microsoft.com/azure/web-application-firewall/afds/waf-front-door-drs?tabs=drs20#anomaly-scoring-mode) for more information.
W
enabledB
 FIs the managed rule override enabled or disabled. Defaults to `false`


exclusionsÅBÂ*¿:¼
¹
cdn7FrontdoorFirewallPolicyManagedRuleOverrideRuleExclusionyazure:cdn/FrontdoorFirewallPolicyManagedRuleOverrideRuleExclusion:FrontdoorFirewallPolicyManagedRuleOverrideRuleExclusion1One or more `exclusion` blocks as defined below.
/
ruleId" !Identifier for the managed rule.
:
¹
cdn7FrontdoorFirewallPolicyManagedRuleOverrideRuleExclusionyazure:cdn/FrontdoorFirewallPolicyManagedRuleOverrideRuleExclusion:FrontdoorFirewallPolicyManagedRuleOverrideRuleExclusionÁ
¾¤
matchVariable" The variable type to be excluded. Possible values are `QueryStringArgNames`, `RequestBodyPostArgNames`, `RequestCookieNames`, `RequestHeaderNames`, `RequestBodyJsonArgNames`

> **NOTE:** `RequestBodyJsonArgNames` is only available on Default Rule Set (DRS) 2.0 or later
Ü
operator" ËComparison operator to apply to the selector when specifying which elements in the collection this exclusion applies to. Possible values are: `Equals`, `Contains`, `StartsWith`, `EndsWith`, `EqualsAny`.
µ
selector" ¤Selector for the value in the `match_variable` attribute this exclusion applies to.

> **NOTE:** `selector` must be set to `*` if `operator` is set to `EqualsAny`.
:
q
cdnFrontdoorOriginGroupHealthProbeIazure:cdn/FrontdoorOriginGroupHealthProbe:FrontdoorOriginGroupHealthProbe

intervalInSeconds vSpecifies the number of seconds between health probes. Possible values are between `1` and `255` seconds (inclusive).

pathB" þSpecifies the path relative to the origin that is used to determine the health of the origin. Defaults to `/`.

> **NOTE:** Health probes can only be disabled if there is a single enabled origin in a single enabled origin group. For more information about the `health_probe` settings please see the [product documentation](https://docs.microsoft.com/azure/frontdoor/health-probes).
h
protocol" XSpecifies the protocol to use for health probe. Possible values are `Http` and `Https`.

requestTypeB" sSpecifies the type of health probe request that is made. Possible values are `GET` and `HEAD`. Defaults to `HEAD`.
:Ì
w
cdn!FrontdoorOriginGroupLoadBalancingMazure:cdn/FrontdoorOriginGroupLoadBalancing:FrontdoorOriginGroupLoadBalancingÐ
Íå
additionalLatencyInMillisecondsB »Specifies the additional latency in milliseconds for probes to fall into the lowest latency bucket. Possible values are between `0` and `1000` milliseconds (inclusive). Defaults to `50`.
§

sampleSizeB Specifies the number of samples to consider for load balancing decisions. Possible values are between `0` and `255` (inclusive). Defaults to `4`.
¸
successfulSamplesRequiredB Specifies the number of samples within the sample period that must succeed. Possible values are between `0` and `255` (inclusive). Defaults to `3`.
:ü
b
cdnFrontdoorOriginPrivateLink?azure:cdn/FrontdoorOriginPrivateLink:FrontdoorOriginPrivateLink

location" xSpecifies the location where the Private Link resource should exist. Changing this forces a new resource to be created.
ð
privateLinkTargetId" ÔThe ID of the Azure Resource to connect to via the Private Link.

> **Note:** the `private_link_target_id` property must specify the Resource ID of the Private Link Service when using Load Balancer as an Origin.
£
requestMessageB" Specifies the request message that will be submitted to the `private_link_target_id` when requesting the private link endpoint connection. Values must be between `1` and `140` characters in length. Defaults to `Access request for CDN FrontDoor Private Link Origin`.
ë

targetTypeB" ÖSpecifies the type of target for this Private Link Endpoint. Possible values are `blob`, `blob_secondary`, `web` and `sites`.

> **NOTE:** `target_type` cannot be specified when using a Load Balancer as an Origin.
:¥
M
cdnFrontdoorRouteCache1azure:cdn/FrontdoorRouteCache:FrontdoorRouteCacheÓ
Ðö
compressionEnabledB
 ÙIs content compression enabled? Possible values are `true` or `false`. Defaults to `false`.

> **NOTE:** Content won't be compressed when the requested content is smaller than `1 KB` or larger than `8 MB`(inclusive).
ã
contentTypesToCompressesB*" ¾A list of one or more `Content types` (formerly known as `MIME types`) to compress. Possible values include `application/eot`, `application/font`, `application/font-sfnt`, `application/javascript`, `application/json`, `application/opentype`, `application/otf`, `application/pkcs7-mime`, `application/truetype`, `application/ttf`, `application/vnd.ms-fontobject`, `application/xhtml+xml`, `application/xml`, `application/xml+rss`, `application/x-font-opentype`, `application/x-font-truetype`, `application/x-font-ttf`, `application/x-httpd-cgi`, `application/x-mpegurl`, `application/x-opentype`, `application/x-otf`, `application/x-perl`, `application/x-ttf`, `application/x-javascript`, `font/eot`, `font/ttf`, `font/otf`, `font/opentype`, `image/svg+xml`, `text/css`, `text/csv`, `text/html`, `text/javascript`, `text/js`, `text/plain`, `text/richtext`, `text/tab-separated-values`, `text/xml`, `text/x-script`, `text/x-component` or `text/x-java-source`.
°
queryStringCachingBehaviorB" Defines how the Front Door Route will cache requests that include query strings. Possible values include `IgnoreQueryString`, `IgnoreSpecifiedQueryStrings`, `IncludeSpecifiedQueryStrings` or `UseQueryString`. Defaults to `IgnoreQueryString`.

> **NOTE:** The value of the `query_string_caching_behavior` determines if the `query_strings` field will be used as an include list or an ignore list.
<
queryStringsB*" $Query strings to include or ignore.
:×
P
cdnFrontdoorRuleActions3azure:cdn/FrontdoorRuleActions:FrontdoorRuleActions
ÿ
â
requestHeaderActionsB*:

cdn'FrontdoorRuleActionsRequestHeaderActionYazure:cdn/FrontdoorRuleActionsRequestHeaderAction:FrontdoorRuleActionsRequestHeaderAction2A `request_header_action` block as defined below.
ç
responseHeaderActionsB*:

cdn(FrontdoorRuleActionsResponseHeaderAction[azure:cdn/FrontdoorRuleActionsResponseHeaderAction:FrontdoorRuleActionsResponseHeaderAction3A `response_header_action` block as defined below.
 
 routeConfigurationOverrideAction¹B¶:³
°
cdn4FrontdoorRuleActionsRouteConfigurationOverrideActionsazure:cdn/FrontdoorRuleActionsRouteConfigurationOverrideAction:FrontdoorRuleActionsRouteConfigurationOverrideAction@A `route_configuration_override_action` block as defined below.
Æ
urlRedirectActionB:

cdn%FrontdoorRuleActionsUrlRedirectActionUazure:cdn/FrontdoorRuleActionsUrlRedirectAction:FrontdoorRuleActionsUrlRedirectAction¡A `url_redirect_action` block as defined below. You may **not** have a `url_redirect_action` **and** a `url_rewrite_action` defined in the same `actions` block.
Á
urlRewriteActionB:

cdn$FrontdoorRuleActionsUrlRewriteActionSazure:cdn/FrontdoorRuleActionsUrlRewriteAction:FrontdoorRuleActionsUrlRewriteAction A `url_rewrite_action` block as defined below. You may **not** have a `url_rewrite_action` **and** a `url_redirect_action` defined in the same `actions` block.
:»

cdn'FrontdoorRuleActionsRequestHeaderActionYazure:cdn/FrontdoorRuleActionsRequestHeaderAction:FrontdoorRuleActionsRequestHeaderAction¬
©á
headerAction" ÌThe action to be taken on the specified `header_name`. Possible values include `Append`, `Overwrite` or `Delete`.

> **NOTE:** `Append` causes the specified header to be added to the request with the specified value. If the header is already present, the value is appended to the existing header value using string concatenation. No delimiters are added. `Overwrite` causes specified header to be added to the request with the specified value. If the header is already present, the specified value overwrites the existing value. `Delete` causes the header to be deleted from the request.
4

headerName" "The name of the header to modify.

valueB" }The value to append or overwrite.

->**NOTE:** `value` is required if the `header_action` is set to `Append` or `Overwrite`.
:¾

cdn(FrontdoorRuleActionsResponseHeaderAction[azure:cdn/FrontdoorRuleActionsResponseHeaderAction:FrontdoorRuleActionsResponseHeaderAction¬
©á
headerAction" ÌThe action to be taken on the specified `header_name`. Possible values include `Append`, `Overwrite` or `Delete`.

> **NOTE:** `Append` causes the specified header to be added to the request with the specified value. If the header is already present, the value is appended to the existing header value using string concatenation. No delimiters are added. `Overwrite` causes specified header to be added to the request with the specified value. If the header is already present, the specified value overwrites the existing value. `Delete` causes the header to be deleted from the request.
4

headerName" "The name of the header to modify.

valueB" }The value to append or overwrite.

->**NOTE:** `value` is required if the `header_action` is set to `Append` or `Overwrite`.
:ö
°
cdn4FrontdoorRuleActionsRouteConfigurationOverrideActionsazure:cdn/FrontdoorRuleActionsRouteConfigurationOverrideAction:FrontdoorRuleActionsRouteConfigurationOverrideActionÀ
½²
cacheBehaviorB" `HonorOrigin` the Front Door will always honor origin response header directive. If the origin directive is missing, Front Door will cache contents anywhere from `1` to `3` days. `OverrideAlways` the TTL value returned from your Front Door Origin is overwritten with the value specified in the action. This behavior will only be applied if the response is cacheable. `OverrideIfOriginMissing` if no TTL value gets returned from your Front Door Origin, the rule sets the TTL to the value specified in the action. This behavior will only be applied if the response is cacheable. `Disabled` the Front Door will not cache the response contents, irrespective of Front Door Origin response directives. Possible values include `HonorOrigin`, `OverrideAlways`, `OverrideIfOriginMissing` or `Disabled`.
ø
cacheDurationB" àWhen Cache behavior is set to `Override` or `SetIfMissing`, this field specifies the cache duration to use. The maximum duration is 366 days specified in the `d.HH:MM:SS` format(e.g. `365.23:59:59`). If the desired maximum cache duration is less than 1 day then the maximum cache duration should be specified in the `HH:MM:SS` format(e.g. `23:59:59`).
¿
cdnFrontdoorOriginGroupIdB" The Front Door Origin Group resource ID that the request should be routed to. This overrides the configuration specified in the Front Door Endpoint route.

compressionEnabledB
 åShould the Front Door dynamically compress the content? Possible values include `true` or `false`.

->**NOTE:** Content won't be compressed on AzureFrontDoor when requested content is smaller than `1 byte` or larger than `1 MB`.
×
forwardingProtocolB" ºThe forwarding protocol the request will be redirected as. This overrides the configuration specified in the route to be associated with. Possible values include `MatchRequest`, `HttpOnly` or `HttpsOnly`.

->**NOTE:** If the `cdn_frontdoor_origin_group_id` is not defined you cannot set the `forwarding_protocol`.
í
queryStringCachingBehaviorB" È`IncludeSpecifiedQueryStrings` query strings specified in the `query_string_parameters` field get included when the cache key gets generated. `UseQueryString` cache every unique URL, each unique URL will have its own cache key. `IgnoreSpecifiedQueryStrings` query strings specified in the `query_string_parameters` field get excluded when the cache key gets generated. `IgnoreQueryString` query strings aren't considered when the cache key gets generated. Possible values include `IgnoreQueryString`, `UseQueryString`, `IgnoreSpecifiedQueryStrings` or `IncludeSpecifiedQueryStrings`.
ù
queryStringParametersB*" ×A list of query string parameter names.

->**NOTE:** `query_string_parameters` is a required field when the `query_string_caching_behavior` is set to `IncludeSpecifiedQueryStrings` or `IgnoreSpecifiedQueryStrings`.
:à


cdn%FrontdoorRuleActionsUrlRedirectActionUazure:cdn/FrontdoorRuleActionsUrlRedirectAction:FrontdoorRuleActionsUrlRedirectAction×	
Ô	Ì
destinationFragmentB" ®The fragment to use in the redirect. The value must be a string between `0` and `1024` characters in length, leave blank to preserve the incoming fragment. Defaults to `""`.
Ç
destinationHostname" «The host name you want the request to be redirected to. The value must be a string between `0` and `2048` characters in length, leave blank to preserve the incoming host.
°
destinationPathB" The path to use in the redirect. The value must be a string and include the leading `/`, leave blank to preserve the incoming path. Defaults to `""`.
Ã
queryStringB" ­The query string used in the redirect URL. The value must be in the &lt;key>=&lt;value> or &lt;key>={`action_server_variable`} format and must not include the leading `?`, leave blank to preserve the incoming query string. Maximum allowed length for this field is `2048` characters. Defaults to `""`.
¢
redirectProtocolB" The protocol the request will be redirected as. Possible values include `MatchRequest`, `Http` or `Https`. Defaults to `MatchRequest`.

redirectType" The response type to return to the requestor. Possible values include `Moved`, `Found` , `TemporaryRedirect` or `PermanentRedirect`.
:í

cdn$FrontdoorRuleActionsUrlRewriteActionSazure:cdn/FrontdoorRuleActionsUrlRewriteAction:FrontdoorRuleActionsUrlRewriteActionç
äs
destination" `The destination path to use in the rewrite. The destination path overwrites the source pattern.
¨
preserveUnmatchedPathB
 Append the remaining path after the source pattern to the new destination path? Possible values `true` or `false`. Defaults to `false`.
Á
sourcePattern" «The source pattern in the URL path to replace. This uses prefix-based matching. For example, to match all URL paths use a forward slash `"/"` as the source pattern value.
:Ñ$
Y
cdnFrontdoorRuleConditions9azure:cdn/FrontdoorRuleConditions:FrontdoorRuleConditionsó#
ð#ë
clientPortConditionsB*:

cdn*FrontdoorRuleConditionsClientPortCondition_azure:cdn/FrontdoorRuleConditionsClientPortCondition:FrontdoorRuleConditionsClientPortCondition2A `client_port_condition` block as defined below.
Û
cookiesConditionsB*:

cdn'FrontdoorRuleConditionsCookiesConditionYazure:cdn/FrontdoorRuleConditionsCookiesCondition:FrontdoorRuleConditionsCookiesCondition.A `cookies_condition` block as defined below.
á
hostNameConditionsB*:

cdn(FrontdoorRuleConditionsHostNameCondition[azure:cdn/FrontdoorRuleConditionsHostNameCondition:FrontdoorRuleConditionsHostNameCondition0A `host_name_condition` block as defined below.
ð
httpVersionConditions¡B*:

cdn+FrontdoorRuleConditionsHttpVersionConditionaazure:cdn/FrontdoorRuleConditionsHttpVersionCondition:FrontdoorRuleConditionsHttpVersionCondition3A `http_version_condition` block as defined below.
á
isDeviceConditionsB*:

cdn(FrontdoorRuleConditionsIsDeviceCondition[azure:cdn/FrontdoorRuleConditionsIsDeviceCondition:FrontdoorRuleConditionsIsDeviceCondition0A `is_device_condition` block as defined below.
á
postArgsConditionsB*:

cdn(FrontdoorRuleConditionsPostArgsCondition[azure:cdn/FrontdoorRuleConditionsPostArgsCondition:FrontdoorRuleConditionsPostArgsCondition0A `post_args_condition` block as defined below.
ð
queryStringConditions¡B*:

cdn+FrontdoorRuleConditionsQueryStringConditionaazure:cdn/FrontdoorRuleConditionsQueryStringCondition:FrontdoorRuleConditionsQueryStringCondition3A `query_string_condition` block as defined below.
ú
remoteAddressConditions§B¤*¡:

cdn-FrontdoorRuleConditionsRemoteAddressConditioneazure:cdn/FrontdoorRuleConditionsRemoteAddressCondition:FrontdoorRuleConditionsRemoteAddressCondition5A `remote_address_condition` block as defined below.
ð
requestBodyConditions¡B*:

cdn+FrontdoorRuleConditionsRequestBodyConditionaazure:cdn/FrontdoorRuleConditionsRequestBodyCondition:FrontdoorRuleConditionsRequestBodyCondition3A `request_body_condition` block as defined below.
ú
requestHeaderConditions§B¤*¡:

cdn-FrontdoorRuleConditionsRequestHeaderConditioneazure:cdn/FrontdoorRuleConditionsRequestHeaderCondition:FrontdoorRuleConditionsRequestHeaderCondition5A `request_header_condition` block as defined below.
ú
requestMethodConditions§B¤*¡:

cdn-FrontdoorRuleConditionsRequestMethodConditioneazure:cdn/FrontdoorRuleConditionsRequestMethodCondition:FrontdoorRuleConditionsRequestMethodCondition5A `request_method_condition` block as defined below.
ú
requestSchemeConditions§B¤*¡:

cdn-FrontdoorRuleConditionsRequestSchemeConditioneazure:cdn/FrontdoorRuleConditionsRequestSchemeCondition:FrontdoorRuleConditionsRequestSchemeCondition5A `request_scheme_condition` block as defined below.
ë
requestUriConditionsB*:

cdn*FrontdoorRuleConditionsRequestUriCondition_azure:cdn/FrontdoorRuleConditionsRequestUriCondition:FrontdoorRuleConditionsRequestUriCondition2A `request_uri_condition` block as defined below.
ë
serverPortConditionsB*:

cdn*FrontdoorRuleConditionsServerPortCondition_azure:cdn/FrontdoorRuleConditionsServerPortCondition:FrontdoorRuleConditionsServerPortCondition2A `server_port_condition` block as defined below.
ú
socketAddressConditions§B¤*¡:

cdn-FrontdoorRuleConditionsSocketAddressConditioneazure:cdn/FrontdoorRuleConditionsSocketAddressCondition:FrontdoorRuleConditionsSocketAddressCondition5A `socket_address_condition` block as defined below.
ð
sslProtocolConditions¡B*:

cdn+FrontdoorRuleConditionsSslProtocolConditionaazure:cdn/FrontdoorRuleConditionsSslProtocolCondition:FrontdoorRuleConditionsSslProtocolCondition3A `ssl_protocol_condition` block as defined below.

urlFileExtensionConditions°B­*ª:§
¤
cdn0FrontdoorRuleConditionsUrlFileExtensionConditionkazure:cdn/FrontdoorRuleConditionsUrlFileExtensionCondition:FrontdoorRuleConditionsUrlFileExtensionCondition9A `url_file_extension_condition` block as defined below.
ð
urlFilenameConditions¡B*:

cdn+FrontdoorRuleConditionsUrlFilenameConditionaazure:cdn/FrontdoorRuleConditionsUrlFilenameCondition:FrontdoorRuleConditionsUrlFilenameCondition3A `url_filename_condition` block as defined below.
Ü
urlPathConditionsB*:

cdn'FrontdoorRuleConditionsUrlPathConditionYazure:cdn/FrontdoorRuleConditionsUrlPathCondition:FrontdoorRuleConditionsUrlPathCondition/A `url_path_condition` block as defined below.
:£

cdn*FrontdoorRuleConditionsClientPortCondition_azure:cdn/FrontdoorRuleConditionsClientPortCondition:FrontdoorRuleConditionsClientPortCondition
·
matchValuesB*" One or more integer values(e.g. "1") representing the value of the client port to match. If multiple values are specified, they're evaluated using `OR` logic.
Å
negateConditionB
 «If `true` operator becomes the opposite of its value. Possible values `true` or `false`. Defaults to `false`. Details can be found in the `Condition Operator List` below.

operator" òA Conditional operator. Possible values include `Any`, `Equal`, `Contains`, `BeginsWith`, `EndsWith`, `LessThan`, `LessThanOrEqual`, `GreaterThan`, `GreaterThanOrEqual` or `RegEx`. Details can be found in the `Condition Operator List` below.
:Ä

cdn'FrontdoorRuleConditionsCookiesConditionYazure:cdn/FrontdoorRuleConditionsCookiesCondition:FrontdoorRuleConditionsCookiesConditionµ
²F

cookieName" 4A string value representing the name of the cookie.
Ä
matchValuesB*" ¬One or more string or integer values(e.g. "1") representing the value of the request header to match. If multiple values are specified, they're evaluated using `OR` logic.
Å
negateConditionB
 «If `true` operator becomes the opposite of its value. Possible values `true` or `false`. Defaults to `false`. Details can be found in the `Condition Operator List` below.

operator" òA Conditional operator. Possible values include `Any`, `Equal`, `Contains`, `BeginsWith`, `EndsWith`, `LessThan`, `LessThanOrEqual`, `GreaterThan`, `GreaterThanOrEqual` or `RegEx`. Details can be found in the `Condition Operator List` below.
Ò

transformsB*" »A Conditional operator. Possible values include `Lowercase`, `RemoveNulls`, `Trim`, `Uppercase`, `UrlDecode` or `UrlEncode`. Details can be found in the `Condition Transform List` below.
:ö

cdn(FrontdoorRuleConditionsHostNameCondition[azure:cdn/FrontdoorRuleConditionsHostNameCondition:FrontdoorRuleConditionsHostNameConditionä
á»
matchValuesB*" £A list of one or more string values representing the value of the request hostname to match. If multiple values are specified, they're evaluated using `OR` logic.
Å
negateConditionB
 «If `true` operator becomes the opposite of its value. Possible values `true` or `false`. Defaults to `false`. Details can be found in the `Condition Operator List` below.

operator" òA Conditional operator. Possible values include `Any`, `Equal`, `Contains`, `BeginsWith`, `EndsWith`, `LessThan`, `LessThanOrEqual`, `GreaterThan`, `GreaterThanOrEqual` or `RegEx`. Details can be found in the `Condition Operator List` below.
Ò

transformsB*" »A Conditional operator. Possible values include `Lowercase`, `RemoveNulls`, `Trim`, `Uppercase`, `UrlDecode` or `UrlEncode`. Details can be found in the `Condition Transform List` below.
:

cdn+FrontdoorRuleConditionsHttpVersionConditionaazure:cdn/FrontdoorRuleConditionsHttpVersionCondition:FrontdoorRuleConditionsHttpVersionCondition
ýr
matchValues*" ]What HTTP version should this condition match? Possible values `2.0`, `1.1`, `1.0` or `0.9`.
Å
negateConditionB
 «If `true` operator becomes the opposite of its value. Possible values `true` or `false`. Defaults to `false`. Details can be found in the `Condition Operator List` below.
?
operatorB" -Possible value `Equal`. Defaults to `Equal`.
:

cdn(FrontdoorRuleConditionsIsDeviceCondition[azure:cdn/FrontdoorRuleConditionsIsDeviceCondition:FrontdoorRuleConditionsIsDeviceConditionò
ïd
matchValuesB" OWhich device should this rule match on? Possible values `Mobile` or `Desktop`.
Å
negateConditionB
 «If `true` operator becomes the opposite of its value. Possible values `true` or `false`. Defaults to `false`. Details can be found in the `Condition Operator List` below.
?
operatorB" -Possible value `Equal`. Defaults to `Equal`.
:Ó

cdn(FrontdoorRuleConditionsPostArgsCondition[azure:cdn/FrontdoorRuleConditionsPostArgsCondition:FrontdoorRuleConditionsPostArgsConditionÁ
¾Å
matchValuesB*" ­One or more string or integer values(e.g. "1") representing the value of the `POST` argument to match. If multiple values are specified, they're evaluated using `OR` logic.
Å
negateConditionB
 «If `true` operator becomes the opposite of its value. Possible values `true` or `false`. Defaults to `false`. Details can be found in the `Condition Operator List` below.

operator" òA Conditional operator. Possible values include `Any`, `Equal`, `Contains`, `BeginsWith`, `EndsWith`, `LessThan`, `LessThanOrEqual`, `GreaterThan`, `GreaterThanOrEqual` or `RegEx`. Details can be found in the `Condition Operator List` below.
Q
postArgsName" =A string value representing the name of the `POST` argument.
Ò

transformsB*" »A Conditional operator. Possible values include `Lowercase`, `RemoveNulls`, `Trim`, `Uppercase`, `UrlDecode` or `UrlEncode`. Details can be found in the `Condition Transform List` below.
:

cdn+FrontdoorRuleConditionsQueryStringConditionaazure:cdn/FrontdoorRuleConditionsQueryStringCondition:FrontdoorRuleConditionsQueryStringConditionë
èÂ
matchValuesB*" ªOne or more string or integer values(e.g. "1") representing the value of the query string to match. If multiple values are specified, they're evaluated using `OR` logic.
Å
negateConditionB
 «If `true` operator becomes the opposite of its value. Possible values `true` or `false`. Defaults to `false`. Details can be found in the `Condition Operator List` below.

operator" òA Conditional operator. Possible values include `Any`, `Equal`, `Contains`, `BeginsWith`, `EndsWith`, `LessThan`, `LessThanOrEqual`, `GreaterThan`, `GreaterThanOrEqual` or `RegEx`. Details can be found in the `Condition Operator List` below.
Ò

transformsB*" »A Conditional operator. Possible values include `Lowercase`, `RemoveNulls`, `Trim`, `Uppercase`, `UrlDecode` or `UrlEncode`. Details can be found in the `Condition Transform List` below.
:Ý

cdn-FrontdoorRuleConditionsRemoteAddressConditioneazure:cdn/FrontdoorRuleConditionsRemoteAddressCondition:FrontdoorRuleConditionsRemoteAddressCondition¼
¹
matchValuesB*" For the IP Match or IP Not Match operators: specify one or more IP address ranges. If multiple IP address ranges are specified, they're evaluated using `OR` logic. For the Geo Match or Geo Not Match operators: specify one or more locations using their country code.

->**NOTE:** See the `Specifying IP Address Ranges` section below on how to correctly define the `match_values` field.
Å
negateConditionB
 «If `true` operator becomes the opposite of its value. Possible values `true` or `false`. Defaults to `false`. Details can be found in the `Condition Operator List` below.
Ò
operatorB" ¿The type of the remote address to match. Possible values include `Any`, `GeoMatch` or `IPMatch`. Use the `negate_condition` to specify Not `GeoMatch` or Not `IPMatch`. Defaults to `IPMatch`.
:

cdn+FrontdoorRuleConditionsRequestBodyConditionaazure:cdn/FrontdoorRuleConditionsRequestBodyCondition:FrontdoorRuleConditionsRequestBodyConditionø
õÏ
matchValues*" ¹A list of one or more string or integer values(e.g. "1") representing the value of the request body text to match. If multiple values are specified, they're evaluated using `OR` logic.
Å
negateConditionB
 «If `true` operator becomes the opposite of its value. Possible values `true` or `false`. Defaults to `false`. Details can be found in the `Condition Operator List` below.

operator" òA Conditional operator. Possible values include `Any`, `Equal`, `Contains`, `BeginsWith`, `EndsWith`, `LessThan`, `LessThanOrEqual`, `GreaterThan`, `GreaterThanOrEqual` or `RegEx`. Details can be found in the `Condition Operator List` below.
Ò

transformsB*" »A Conditional operator. Possible values include `Lowercase`, `RemoveNulls`, `Trim`, `Uppercase`, `UrlDecode` or `UrlEncode`. Details can be found in the `Condition Transform List` below.
:ß

cdn-FrontdoorRuleConditionsRequestHeaderConditioneazure:cdn/FrontdoorRuleConditionsRequestHeaderCondition:FrontdoorRuleConditionsRequestHeaderCondition¾
»O

headerName" =A string value representing the name of the `POST` argument.
Ä
matchValuesB*" ¬One or more string or integer values(e.g. "1") representing the value of the request header to match. If multiple values are specified, they're evaluated using `OR` logic.
Å
negateConditionB
 «If `true` operator becomes the opposite of its value. Possible values `true` or `false`. Defaults to `false`. Details can be found in the `Condition Operator List` below.

operator" òA Conditional operator. Possible values include `Any`, `Equal`, `Contains`, `BeginsWith`, `EndsWith`, `LessThan`, `LessThanOrEqual`, `GreaterThan`, `GreaterThanOrEqual` or `RegEx`. Details can be found in the `Condition Operator List` below.
Ò

transformsB*" »A Conditional operator. Possible values include `Lowercase`, `RemoveNulls`, `Trim`, `Uppercase`, `UrlDecode` or `UrlEncode`. Details can be found in the `Condition Transform List` below.
:

cdn-FrontdoorRuleConditionsRequestMethodConditioneazure:cdn/FrontdoorRuleConditionsRequestMethodCondition:FrontdoorRuleConditionsRequestMethodConditionå
âÖ
matchValues*" ÀA list of one or more HTTP methods. Possible values include `GET`, `POST`, `PUT`, `DELETE`, `HEAD`, `OPTIONS` or `TRACE`. If multiple values are specified, they're evaluated using `OR` logic.
Å
negateConditionB
 «If `true` operator becomes the opposite of its value. Possible values `true` or `false`. Defaults to `false`. Details can be found in the `Condition Operator List` below.
?
operatorB" -Possible value `Equal`. Defaults to `Equal`.
:

cdn-FrontdoorRuleConditionsRequestSchemeConditioneazure:cdn/FrontdoorRuleConditionsRequestSchemeCondition:FrontdoorRuleConditionsRequestSchemeConditionî
ë`
matchValuesB" KThe requests protocol to match. Possible values include `HTTP` or `HTTPS`.
Å
negateConditionB
 «If `true` operator becomes the opposite of its value. Possible values `true` or `false`. Defaults to `false`. Details can be found in the `Condition Operator List` below.
?
operatorB" -Possible value `Equal`. Defaults to `Equal`.
:

cdn*FrontdoorRuleConditionsRequestUriCondition_azure:cdn/FrontdoorRuleConditionsRequestUriCondition:FrontdoorRuleConditionsRequestUriConditionê
çÁ
matchValuesB*" ©One or more string or integer values(e.g. "1") representing the value of the request URL to match. If multiple values are specified, they're evaluated using `OR` logic.
Å
negateConditionB
 «If `true` operator becomes the opposite of its value. Possible values `true` or `false`. Defaults to `false`. Details can be found in the `Condition Operator List` below.

operator" òA Conditional operator. Possible values include `Any`, `Equal`, `Contains`, `BeginsWith`, `EndsWith`, `LessThan`, `LessThanOrEqual`, `GreaterThan`, `GreaterThanOrEqual` or `RegEx`. Details can be found in the `Condition Operator List` below.
Ò

transformsB*" »A Conditional operator. Possible values include `Lowercase`, `RemoveNulls`, `Trim`, `Uppercase`, `UrlDecode` or `UrlEncode`. Details can be found in the `Condition Transform List` below.
:Ò

cdn*FrontdoorRuleConditionsServerPortCondition_azure:cdn/FrontdoorRuleConditionsServerPortCondition:FrontdoorRuleConditionsServerPortConditionº
·æ
matchValues*" ÐA list of one or more integer values(e.g. "1") representing the value of the client port to match. Possible values include `80` or `443`. If multiple values are specified, they're evaluated using `OR` logic.
Å
negateConditionB
 «If `true` operator becomes the opposite of its value. Possible values `true` or `false`. Defaults to `false`. Details can be found in the `Condition Operator List` below.

operator" òA Conditional operator. Possible values include `Any`, `Equal`, `Contains`, `BeginsWith`, `EndsWith`, `LessThan`, `LessThanOrEqual`, `GreaterThan`, `GreaterThanOrEqual` or `RegEx`. Details can be found in the `Condition Operator List` below.
:Ø

cdn-FrontdoorRuleConditionsSocketAddressConditioneazure:cdn/FrontdoorRuleConditionsSocketAddressCondition:FrontdoorRuleConditionsSocketAddressCondition·
´
matchValuesB*" ïSpecify one or more IP address ranges. If multiple IP address ranges are specified, they're evaluated using `OR` logic.

->**NOTE:** See the `Specifying IP Address Ranges` section below on how to correctly define the `match_values` field.
Å
negateConditionB
 «If `true` operator becomes the opposite of its value. Possible values `true` or `false`. Defaults to `false`. Details can be found in the `Condition Operator List` below.
ß
operatorB" ÌThe type of match. The Possible values are `IpMatch` or `Any`. Defaults to `IPMatch`.

->**NOTE:** If the value of the `operator` field is set to `IpMatch` then the `match_values` field is also required.
:

cdn+FrontdoorRuleConditionsSslProtocolConditionaazure:cdn/FrontdoorRuleConditionsSslProtocolCondition:FrontdoorRuleConditionsSslProtocolCondition
u
matchValues*" `A list of one or more HTTP methods. Possible values are `TLSv1`, `TLSv1.1` and `TLSv1.2` logic.
Å
negateConditionB
 «If `true` operator becomes the opposite of its value. Possible values `true` or `false`. Defaults to `false`. Details can be found in the `Condition Operator List` below.
?
operatorB" -Possible value `Equal`. Defaults to `Equal`.
:§
¤
cdn0FrontdoorRuleConditionsUrlFileExtensionConditionkazure:cdn/FrontdoorRuleConditionsUrlFileExtensionCondition:FrontdoorRuleConditionsUrlFileExtensionConditioný
úÔ
matchValues*" ¾A list of one or more string or integer values(e.g. "1") representing the value of the request file extension to match. If multiple values are specified, they're evaluated using `OR` logic.
Å
negateConditionB
 «If `true` operator becomes the opposite of its value. Possible values `true` or `false`. Defaults to `false`. Details can be found in the `Condition Operator List` below.

operator" òA Conditional operator. Possible values include `Any`, `Equal`, `Contains`, `BeginsWith`, `EndsWith`, `LessThan`, `LessThanOrEqual`, `GreaterThan`, `GreaterThanOrEqual` or `RegEx`. Details can be found in the `Condition Operator List` below.
Ò

transformsB*" »A Conditional operator. Possible values include `Lowercase`, `RemoveNulls`, `Trim`, `Uppercase`, `UrlDecode` or `UrlEncode`. Details can be found in the `Condition Transform List` below.
:ï

cdn+FrontdoorRuleConditionsUrlFilenameConditionaazure:cdn/FrontdoorRuleConditionsUrlFilenameCondition:FrontdoorRuleConditionsUrlFilenameConditionÔ
Ñ«
matchValuesB*" A list of one or more string or integer values(e.g. "1") representing the value of the request file name to match. If multiple values are specified, they're evaluated using `OR` logic.

> **NOTE:** The `match_values` field is only optional if the `operator` is set to `Any`.
Å
negateConditionB
 «If `true` operator becomes the opposite of its value. Possible values `true` or `false`. Defaults to `false`. Details can be found in the `Condition Operator List` below.

operator" òA Conditional operator. Possible values include `Any`, `Equal`, `Contains`, `BeginsWith`, `EndsWith`, `LessThan`, `LessThanOrEqual`, `GreaterThan`, `GreaterThanOrEqual` or `RegEx`. Details can be found in the `Condition Operator List` below.
Ò

transformsB*" »A Conditional operator. Possible values include `Lowercase`, `RemoveNulls`, `Trim`, `Uppercase`, `UrlDecode` or `UrlEncode`. Details can be found in the `Condition Transform List` below.
:¡

cdn'FrontdoorRuleConditionsUrlPathConditionYazure:cdn/FrontdoorRuleConditionsUrlPathCondition:FrontdoorRuleConditionsUrlPathCondition
é
matchValuesB*" ÑOne or more string or integer values(e.g. "1") representing the value of the request path to match. Don't include the leading slash (`/`). If multiple values are specified, they're evaluated using `OR` logic.
Å
negateConditionB
 «If `true` operator becomes the opposite of its value. Possible values `true` or `false`. Defaults to `false`. Details can be found in the `Condition Operator List` below.

operator" òA Conditional operator. Possible values include `Any`, `Equal`, `Contains`, `BeginsWith`, `EndsWith`, `LessThan`, `LessThanOrEqual`, `GreaterThan`, `GreaterThanOrEqual` or `RegEx`. Details can be found in the `Condition Operator List` below.
Ò

transformsB*" »A Conditional operator. Possible values include `Lowercase`, `RemoveNulls`, `Trim`, `Uppercase`, `UrlDecode` or `UrlEncode`. Details can be found in the `Condition Transform List` below.
:û
S
cdnFrontdoorSecretSecret5azure:cdn/FrontdoorSecretSecret:FrontdoorSecretSecret£
 
customerCertificates*:

cdn(FrontdoorSecretSecretCustomerCertificate[azure:cdn/FrontdoorSecretSecretCustomerCertificate:FrontdoorSecretSecretCustomerCertificatemA `customer_certificate` block as defined below. Changing this forces a new Front Door Secret to be created.
:¼

cdn(FrontdoorSecretSecretCustomerCertificate[azure:cdn/FrontdoorSecretSecretCustomerCertificate:FrontdoorSecretSecretCustomerCertificateª
§«
keyVaultCertificateId" The ID of the Key Vault certificate resource to use. Changing this forces a new Front Door Secret to be created.

->**NOTE:** If you would like to use the **latest version** of the Key Vault Certificate use the Key Vault Certificates `versionless_id` attribute as the `key_vault_certificate_id` fields value(e.g. `key_vault_certificate_id = azurerm_key_vault_certificate.example.versionless_id`).
w
subjectAlternativeNamesB*" TOne or more `subject alternative names` contained within the key vault certificate.
:¶

cdn'FrontdoorSecurityPolicySecurityPoliciesYazure:cdn/FrontdoorSecurityPolicySecurityPolicies:FrontdoorSecurityPolicySecurityPolicies§
¤¡
firewall§:¤
¡
cdn/FrontdoorSecurityPolicySecurityPoliciesFirewalliazure:cdn/FrontdoorSecurityPolicySecurityPoliciesFirewall:FrontdoorSecurityPolicySecurityPoliciesFirewallkAn `firewall` block as defined below. Changing this forces a new Front Door Security Policy to be created.
:Î
¡
cdn/FrontdoorSecurityPolicySecurityPoliciesFirewalliazure:cdn/FrontdoorSecurityPolicySecurityPoliciesFirewall:FrontdoorSecurityPolicySecurityPoliciesFirewall§
¤È
associationÈ:Å
Â
cdn:FrontdoorSecurityPolicySecurityPoliciesFirewallAssociationazure:cdn/FrontdoorSecurityPolicySecurityPoliciesFirewallAssociation:FrontdoorSecurityPolicySecurityPoliciesFirewallAssociationnAn `association` block as defined below. Changing this forces a new Front Door Security Policy to be created.
Ö
cdnFrontdoorFirewallPolicyId" ±The Resource Id of the Front Door Firewall Policy that should be linked to this Front Door Security Policy. Changing this forces a new Front Door Security Policy to be created.
:à
Â
cdn:FrontdoorSecurityPolicySecurityPoliciesFirewallAssociationazure:cdn/FrontdoorSecurityPolicySecurityPoliciesFirewallAssociation:FrontdoorSecurityPolicySecurityPoliciesFirewallAssociation
ß
domainsÞ*Û:Ø
Õ
cdn@FrontdoorSecurityPolicySecurityPoliciesFirewallAssociationDomainazure:cdn/FrontdoorSecurityPolicySecurityPoliciesFirewallAssociationDomain:FrontdoorSecurityPolicySecurityPoliciesFirewallAssociationDomainsOne or more `domain` blocks as defined below. Changing this forces a new Front Door Security Policy to be created.
°
patternsToMatch" The list of paths to match for this firewall policy. Possible value includes `/*`. Changing this forces a new Front Door Security Policy to be created.
:
Õ
cdn@FrontdoorSecurityPolicySecurityPoliciesFirewallAssociationDomainazure:cdn/FrontdoorSecurityPolicySecurityPoliciesFirewallAssociationDomain:FrontdoorSecurityPolicySecurityPoliciesFirewallAssociationDomain¶
³D
activeB
 4Is the Front Door Custom Domain/Endpoint activated?
ê
cdnFrontdoorDomainId" ÍThe Resource Id of the **Front Door Custom Domain** or **Front Door Endpoint** that should be bound to this Front Door Security Policy. Changing this forces a new Front Door Security Policy to be created.
:Â
b
cdngetFrontdoorCustomDomainTl?azure:cdn/getFrontdoorCustomDomainTl:getFrontdoorCustomDomainTlÛ
ØF
cdnFrontdoorSecretId" *The Resource ID of the Front Door Secret.
1
certificateType" The SSL certificate type.
[
minimumTlsVersion" BThe TLS protocol version that will be used for Https connections.
:Ð
z
cdn"getFrontdoorOriginGroupHealthProbeOazure:cdn/getFrontdoorOriginGroupHealthProbe:getFrontdoorOriginGroupHealthProbeÑ
ÎP
intervalInSeconds 7Specifies the number of seconds between health probes.
j
path" ^Specifies the path relative to the origin that is used to determine the health of the origin.
@
protocol" 0Specifies the protocol to use for health probe.
L
requestType" 9Specifies the type of health probe request that is made.
:ä

cdn$getFrontdoorOriginGroupLoadBalancingSazure:cdn/getFrontdoorOriginGroupLoadBalancing:getFrontdoorOriginGroupLoadBalancingÞ
Û
additionalLatencyInMilliseconds dSpecifies the additional latency in milliseconds for probes to fall into the lowest latency bucket.
\

sampleSize JSpecifies the number of samples to consider for load balancing decisions.
m
successfulSamplesRequired LSpecifies the number of samples within the sample period that must succeed.
:Ñ
\
cdngetFrontdoorSecretSecret;azure:cdn/getFrontdoorSecretSecret:getFrontdoorSecretSecretð
íê
customerCertificates*:

cdn+getFrontdoorSecretSecretCustomerCertificateaazure:cdn/getFrontdoorSecretSecretCustomerCertificate:getFrontdoorSecretSecretCustomerCertificate1A `customer_certificate` block as defined below.
:

cdn+getFrontdoorSecretSecretCustomerCertificateaazure:cdn/getFrontdoorSecretSecretCustomerCertificate:getFrontdoorSecretSecretCustomerCertificateú
÷A
expirationDate" +The key vault certificate expiration date.
;
keyVaultCertificateId" The key vault certificate ID.
u
subjectAlternativeNames*" TOne or more `subject alternative names` contained within the key vault certificate.
:×
Z
chaosstudioExperimentIdentity7azure:chaosstudio/ExperimentIdentity:ExperimentIdentityø
õ³
identityIdsB*" A list of User Managed Identity IDs which should be assigned to the Policy Definition.

> **NOTE:** This is required when `type` is set to `UserAssigned`.
U
principalIdB" @The Principal ID associated with this Managed Service Identity.
O
tenantIdB" =The Tenant ID associated with this Managed Service Identity.

type" The Type of Managed Identity which should be added to this Policy Definition. Possible values are `SystemAssigned` and `UserAssigned`.
:ó
Z
chaosstudioExperimentSelector7azure:chaosstudio/ExperimentSelector:ExperimentSelector
f
chaosStudioTargetIds*" HA list of Chaos Studio Target IDs that should be part of this Selector.
'
name" The name of this Selector.
:
N
chaosstudioExperimentStep/azure:chaosstudio/ExperimentStep:ExperimentStepÌ
É¢
branchesf*d:b
`
chaosstudioExperimentStepBranch;azure:chaosstudio/ExperimentStepBranch:ExperimentStepBranch.One or more `branch` blocks as defined above.
"
name" The name of the Step.
:Å
`
chaosstudioExperimentStepBranch;azure:chaosstudio/ExperimentStepBranch:ExperimentStepBranchà
Ý´
actionsx*v:t
r
chaosstudioExperimentStepBranchActionGazure:chaosstudio/ExperimentStepBranchAction:ExperimentStepBranchAction/One or more `actions` blocks as defined above.
$
name" The name of the branch.
:Þ
r
chaosstudioExperimentStepBranchActionGazure:chaosstudio/ExperimentStepBranchAction:ExperimentStepBranchActionç
ä

actionType" uThe type of action that should be added to the experiment. Possible values are `continuous`, `delay` and `discrete`.
l
durationB" ZAn ISO8601 formatted string specifying the duration for a `delay` or `continuous` action.
Ç

parametersB2" °A key-value map of additional parameters to configure the action. The values that are accepted by this depend on the `urn` i.e. the capability/fault that is applied. Possible parameter values can be found in this [documentation](https://learn.microsoft.com/azure/chaos-studio/chaos-studio-fault-library)
¡
selectorNameB" The name of the Selector to which this action should apply to. This must be specified if the `action_type` is `continuous` or `discrete`.
û
urnB" íThe Unique Resource Name of the action, this value is provided by the `azure.chaosstudio.Capability` resource e.g. `azurerm_chaos_studio_capability.example.urn`. This must be specified if the `action_type` is `continuous` or `discrete`.
:ä
t
	cognitiveAIServicesCustomerManagedKeyIazure:cognitive/AIServicesCustomerManagedKey:AIServicesCustomerManagedKeyë
èÑ
identityClientIdB" ¶The Client ID of the User Assigned Identity that has access to the key. This property only needs to be specified when there are multiple identities attached to the Azure AI Service.
Å
keyVaultKeyIdB" ­The ID of the Key Vault Key which should be used to encrypt the data in this AI Services Account. Exactly one of `key_vault_key_id`, `managed_hsm_key_id` must be specified.
É
managedHsmKeyIdB" ¯The ID of the managed HSM Key which should be used to encrypt the data in this AI Services Account. Exactly one of `key_vault_key_id`, `managed_hsm_key_id` must be specified.
:µ
V
	cognitiveAIServicesIdentity5azure:cognitive/AIServicesIdentity:AIServicesIdentityÚ
×á
identityIdsB*" ÉSpecifies a list of User Assigned Managed Identity IDs to be assigned to this AI Services Account.

> **NOTE:** This is required when `type` is set to `UserAssigned` or `SystemAssigned, UserAssigned`.
U
principalIdB" @The Principal ID associated with this Managed Service Identity.
O
tenantIdB" =The Tenant ID associated with this Managed Service Identity.
È
type" »Specifies the type of Managed Service Identity that should be configured on this AI Services Account. Possible values are `SystemAssigned`, `UserAssigned`, `SystemAssigned, UserAssigned`
:ç
_
	cognitiveAIServicesNetworkAcls;azure:cognitive/AIServicesNetworkAcls:AIServicesNetworkAcls

defaultAction" The Default Action to use when no rules match from `ip_rules` / `virtual_network_rules`. Possible values are `Allow` and `Deny`.
t
ipRulesB*" aOne or more IP Addresses, or CIDR Blocks which should be able to access the AI Services Account.
í
virtualNetworkRules¡B*:

	cognitive'AIServicesNetworkAclsVirtualNetworkRule_azure:cognitive/AIServicesNetworkAclsVirtualNetworkRule:AIServicesNetworkAclsVirtualNetworkRule2A `virtual_network_rules` block as defined below.
:

	cognitive'AIServicesNetworkAclsVirtualNetworkRule_azure:cognitive/AIServicesNetworkAclsVirtualNetworkRule:AIServicesNetworkAclsVirtualNetworkRuleé
æ
 ignoreMissingVnetServiceEndpointB
 YWhether to ignore a missing Virtual Network Service Endpoint or not. Default to `false`.
^
subnetId" NThe ID of the subnet which should be able to access this AI Services Account.
:û
S
	cognitiveAIServicesStorage3azure:cognitive/AIServicesStorage:AIServicesStorage£
 e
identityClientIdB" KThe client ID of the Managed Identity associated with the Storage Account.
7
storageAccountId" The ID of the Storage Account.
:¾
k
	cognitiveAccountCustomerManagedKeyCazure:cognitive/AccountCustomerManagedKey:AccountCustomerManagedKeyÎ
ËÑ
identityClientIdB" ¶The Client ID of the User Assigned Identity that has access to the key. This property only needs to be specified when there're multiple identities attached to the Cognitive Account.
u
keyVaultKeyId" `The ID of the Key Vault Key which should be used to Encrypt the data in this Cognitive Account.
:º
M
	cognitiveAccountIdentity/azure:cognitive/AccountIdentity:AccountIdentityè
åß
identityIdsB*" ÇSpecifies a list of User Assigned Managed Identity IDs to be assigned to this Cognitive Account.

> **NOTE:** This is required when `type` is set to `UserAssigned` or `SystemAssigned, UserAssigned`.
U
principalIdB" @The Principal ID associated with this Managed Service Identity.
O
tenantIdB" =The Tenant ID associated with this Managed Service Identity.
Ø
type" ËSpecifies the type of Managed Service Identity that should be configured on this Cognitive Account. Possible values are `SystemAssigned`, `UserAssigned`, `SystemAssigned, UserAssigned` (to enable both).
:Ó
V
	cognitiveAccountNetworkAcls5azure:cognitive/AccountNetworkAcls:AccountNetworkAclsø
õ
defaultAction" The Default Action to use when no rules match from `ip_rules` / `virtual_network_rules`. Possible values are `Allow` and `Deny`.
r
ipRulesB*" _One or more IP Addresses, or CIDR Blocks which should be able to access the Cognitive Account.
ä
virtualNetworkRulesB*:

	cognitive$AccountNetworkAclsVirtualNetworkRuleYazure:cognitive/AccountNetworkAclsVirtualNetworkRule:AccountNetworkAclsVirtualNetworkRule2A `virtual_network_rules` block as defined below.
:è

	cognitive$AccountNetworkAclsVirtualNetworkRuleYazure:cognitive/AccountNetworkAclsVirtualNetworkRule:AccountNetworkAclsVirtualNetworkRuleÖ
Ós
 ignoreMissingVnetServiceEndpointB
 IWhether ignore missing vnet service endpoint or not. Default to `false`.
\
subnetId" LThe ID of the subnet which should be able to access this Cognitive Account.
:ô
J
	cognitiveAccountStorage-azure:cognitive/AccountStorage:AccountStorage¥
¢Ó
identityClientIdB" ¸The client ID of the managed identity associated with the storage resource.

> **NOTE:** Not all `kind` support a `storage` block. For example the `kind` `OpenAI` does not support it.
J
storageAccountId" 2Full resource id of a Microsoft.Storage resource.
:¢
M
	cognitiveDeploymentModel/azure:cognitive/DeploymentModel:DeploymentModelÐ
Í
format" The format of the Cognitive Services Account Deployment model. Changing this forces a new resource to be created. Possible value is `OpenAI`.
|
name" pThe name of the Cognitive Services Account Deployment model. Changing this forces a new resource to be created.
¬
versionB" The version of Cognitive Services Account Deployment model. If `version` is not specified, the default version of the model at the time will be assigned.
:

G
	cognitiveDeploymentSku+azure:cognitive/DeploymentSku:DeploymentSkuÇ	
Ä	²
capacityB Tokens-per-Minute (TPM). The unit of measure for this field is in the thousands of Tokens-per-Minute. Defaults to `1` which means that the limitation is `1000` tokens per minute. If the resources SKU supports scale in/out then the capacity field should be included in the resources' configuration. If the scale in/out is not supported by the resources SKU then this field can be safely omitted. For more information about TPM please see the [product documentation](https://learn.microsoft.com/azure/ai-services/openai/how-to/quota?tabs=rest).
¬
familyB" If the service has different generations of hardware, for the same SKU, then that can be captured here. Changing this forces a new resource to be created.

name" The name of the SKU. Possible values include `Standard`, `DataZoneStandard`, `GlobalBatch`, `GlobalStandard` and `ProvisionedManaged`.
¸
sizeB" ©The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. Changing this forces a new resource to be created.

tierB" }Possible values are `Free`, `Basic`, `Standard`, `Premium`, `Enterprise`. Changing this forces a new resource to be created.
:¬
V
	cognitivegetAccountIdentity5azure:cognitive/getAccountIdentity:getAccountIdentityÑ
Îh
identityIds*" SThe list of User Assigned Managed Identity IDs assigned to this Cognitive Account.

principalId" oThe Principal ID of the System Assigned Managed Service Identity that is configured on this Cognitive Account.
|
tenantId" lThe Tenant ID of the System Assigned Managed Service Identity that is configured on this Cognitive Account.
_
type" SThe type of Managed Service Identity that is configured on this Cognitive Account.
:´


communication$EmailServiceDomainVerificationRecord]azure:communication/EmailServiceDomainVerificationRecord:EmailServiceDomainVerificationRecord	
	ê
dkim2s¯B¬*©:¦
£
communication)EmailServiceDomainVerificationRecordDkim2gazure:communication/EmailServiceDomainVerificationRecordDkim2:EmailServiceDomainVerificationRecordDkim2.(Optional) An `dkim2` block as defined below.
å
dkims¬B©*¦:£
 
communication(EmailServiceDomainVerificationRecordDkimeazure:communication/EmailServiceDomainVerificationRecordDkim:EmailServiceDomainVerificationRecordDkim-(Optional) An `dkim` block as defined below.
ê
dmarcs¯B¬*©:¦
£
communication)EmailServiceDomainVerificationRecordDmarcgazure:communication/EmailServiceDomainVerificationRecordDmarc:EmailServiceDomainVerificationRecordDmarc.(Optional) An `dmarc` block as defined below.
ï
domains²B¯*¬:©
¦
communication*EmailServiceDomainVerificationRecordDomainiazure:communication/EmailServiceDomainVerificationRecordDomain:EmailServiceDomainVerificationRecordDomain/(Optional) An `domain` block as defined below.
à
spfs©B¦*£: 

communication'EmailServiceDomainVerificationRecordSpfcazure:communication/EmailServiceDomainVerificationRecordSpf:EmailServiceDomainVerificationRecordSpf,(Optional) An `spf` block as defined below.
:ï
 
communication(EmailServiceDomainVerificationRecordDkimeazure:communication/EmailServiceDomainVerificationRecordDkim:EmailServiceDomainVerificationRecordDkimÉ
ÆÜ
nameB" ÍThe name of the Email Communication Service resource. If `domain_management` is `AzureManaged`, the name must be `AzureManagedDomain`. Changing this forces a new Email Communication Service to be created.

ttlB xRepresents an expiry time in seconds to represent how long this entry can be cached by the resolver, default = 3600sec.
3
typeB" %Type of the DNS record. Example: TXT
(
valueB" Value of the DNS record.
:ò
£
communication)EmailServiceDomainVerificationRecordDkim2gazure:communication/EmailServiceDomainVerificationRecordDkim2:EmailServiceDomainVerificationRecordDkim2É
ÆÜ
nameB" ÍThe name of the Email Communication Service resource. If `domain_management` is `AzureManaged`, the name must be `AzureManagedDomain`. Changing this forces a new Email Communication Service to be created.

ttlB xRepresents an expiry time in seconds to represent how long this entry can be cached by the resolver, default = 3600sec.
3
typeB" %Type of the DNS record. Example: TXT
(
valueB" Value of the DNS record.
:ò
£
communication)EmailServiceDomainVerificationRecordDmarcgazure:communication/EmailServiceDomainVerificationRecordDmarc:EmailServiceDomainVerificationRecordDmarcÉ
ÆÜ
nameB" ÍThe name of the Email Communication Service resource. If `domain_management` is `AzureManaged`, the name must be `AzureManagedDomain`. Changing this forces a new Email Communication Service to be created.

ttlB xRepresents an expiry time in seconds to represent how long this entry can be cached by the resolver, default = 3600sec.
3
typeB" %Type of the DNS record. Example: TXT
(
valueB" Value of the DNS record.
:õ
¦
communication*EmailServiceDomainVerificationRecordDomainiazure:communication/EmailServiceDomainVerificationRecordDomain:EmailServiceDomainVerificationRecordDomainÉ
ÆÜ
nameB" ÍThe name of the Email Communication Service resource. If `domain_management` is `AzureManaged`, the name must be `AzureManagedDomain`. Changing this forces a new Email Communication Service to be created.

ttlB xRepresents an expiry time in seconds to represent how long this entry can be cached by the resolver, default = 3600sec.
3
typeB" %Type of the DNS record. Example: TXT
(
valueB" Value of the DNS record.
:ì

communication'EmailServiceDomainVerificationRecordSpfcazure:communication/EmailServiceDomainVerificationRecordSpf:EmailServiceDomainVerificationRecordSpfÉ
ÆÜ
nameB" ÍThe name of the Email Communication Service resource. If `domain_management` is `AzureManaged`, the name must be `AzureManagedDomain`. Changing this forces a new Email Communication Service to be created.

ttlB xRepresents an expiry time in seconds to represent how long this entry can be cached by the resolver, default = 3600sec.
3
typeB" %Type of the DNS record. Example: TXT
(
valueB" Value of the DNS record.
:ü
j
computeBastionHostIpConfigurationCazure:compute/BastionHostIpConfiguration:BastionHostIpConfiguration
a
name" UThe name of the IP configuration. Changing this forces a new resource to be created.

publicIpAddressId" yReference to a Public IP Address to associate with this Bastion Host. Changing this forces a new resource to be created.

subnetId" þReference to a subnet in which this Bastion Host has been created. Changing this forces a new resource to be created.

> **Note:** The Subnet used for the Bastion Host must have the name `AzureBastionSubnet` and the subnet mask must be at least a `/26`.
:ë
^
computeCapacityReservationSku;azure:compute/CapacityReservationSku:CapacityReservationSku

capacity Specifies the number of instances to be reserved. It must be greater than or equal to `0` and not exceed the quota in the subscription.
g
name" [Name of the sku, such as `Standard_F2`. Changing this forces a new resource to be created.
:¥
g
computeDiskEncryptionSetIdentityAazure:compute/DiskEncryptionSetIdentity:DiskEncryptionSetIdentity¹
¶×
identityIdsB*" ¿A list of User Assigned Managed Identity IDs to be assigned to this Disk Encryption Set.

> **NOTE:** This is required when `type` is set to `UserAssigned` or `SystemAssigned, UserAssigned`.
?
principalIdB" *The (Client) ID of the Service Principal.
M
tenantIdB" ;The ID of the Tenant the Service Principal is assigned in.
É
type" ¼The type of Managed Service Identity that is configured on this Disk Encryption Set. Possible values are `SystemAssigned`, `UserAssigned`, `SystemAssigned, UserAssigned` (to enable both).
:¦

compute&ExtensionProtectedSettingsFromKeyVault[azure:compute/ExtensionProtectedSettingsFromKeyVault:ExtensionProtectedSettingsFromKeyVault
V
	secretUrl" EThe URL to the Key Vault Secret which stores the protected settings.
5
sourceVaultId"  The ID of the source Key Vault.
:î

compute%GalleryApplicationVersionManageActionYazure:compute/GalleryApplicationVersionManageAction:GalleryApplicationVersionManageActionÝ
Úr
install" cThe command to install the Gallery Application. Changing this forces a new resource to be created.
p
remove" bThe command to remove the Gallery Application. Changing this forces a new resource to be created.
r
updateB" bThe command to update the Gallery Application. Changing this forces a new resource to be created.
:
y
computeGalleryApplicationVersionSourceMazure:compute/GalleryApplicationVersionSource:GalleryApplicationVersionSource

defaultConfigurationLinkB" fThe Storage Blob URI of the default configuration. Changing this forces a new resource to be created.
|
	mediaLink" kThe Storage Blob URI of the source application package. Changing this forces a new resource to be created.
:´

compute%GalleryApplicationVersionTargetRegionYazure:compute/GalleryApplicationVersionTargetRegion:GalleryApplicationVersionTargetRegion£
 ð
excludeFromLatestB
 ÔSpecifies whether this Gallery Application Version should be excluded from the `latest` filter. If set to `true`, this Gallery Application Version won't be returned for the `latest` version. Defaults to `false`.
N
name" BThe Azure Region in which the Gallery Application Version exists.

regionalReplicaCount ~The number of replicas of the Gallery Application Version to be created per region. Possible values are between `1` and `10`.
½
storageAccountTypeB"  The storage account type for the Gallery Application Version. Possible values are `Standard_LRS`, `Premium_LRS` and `Standard_ZRS`. Defaults to `Standard_LRS`.
:
C
computeImageDataDisk)azure:compute/ImageDataDisk:ImageDataDiskÑ
Îj
blobUriB" YSpecifies the URI in Azure storage of the blob that you want to use to create the image.
g
cachingB" VSpecifies the caching mode as `ReadWrite`, `ReadOnly`, or `None`. Defaults to `None`.

diskEncryptionSetIdB" The ID of the Disk Encryption Set which should be used to encrypt this disk. Changing this forces a new resource to be created.
A
lunB 4Specifies the logical unit number of the data disk.
£
managedDiskIdB" Specifies the ID of the managed disk resource that you want to use to create the image. Changing this forces a new resource to be created.
v
sizeGbB fSpecifies the size of the image to be created. The target size can't be smaller than the source size.
ô
storageType" àThe type of Storage Disk to use. Possible values are `Premium_LRS`, `PremiumV2_LRS`, `Premium_ZRS`, `Standard_LRS`, `StandardSSD_LRS`, `StandardSSD_ZRS` and `UltraSSD_LRS`. Changing this forces a new resource to be created.
:

=
computeImageOsDisk%azure:compute/ImageOsDisk:ImageOsDiskÑ	
Î	
blobUriB" Specifies the URI in Azure storage of the blob that you want to use to create the image. Changing this forces a new resource to be created.
j
cachingB" YSpecifies the caching mode as `ReadWrite`, `ReadOnly`, or `None`. The default is `None`.

diskEncryptionSetIdB" The ID of the Disk Encryption Set which should be used to encrypt this disk. Changing this forces a new resource to be created.
o
managedDiskIdB" XSpecifies the ID of the managed disk resource that you want to use to create the image.
´
osStateB" ¢Specifies the state of the operating system contained in the blob. Currently, the only value is Generalized. Possible values are `Generalized` and `Specialized`.

osTypeB" zSpecifies the type of operating system contained in the virtual machine image. Possible values are: `Windows` or `Linux`.
r
sizeGbB bSpecifies the size of the image to be created. Changing this forces a new resource to be created.
ô
storageType" àThe type of Storage Disk to use. Possible values are `Premium_LRS`, `PremiumV2_LRS`, `Premium_ZRS`, `Standard_LRS`, `StandardSSD_LRS`, `StandardSSD_ZRS` and `UltraSSD_LRS`. Changing this forces a new resource to be created.
:

compute)LinuxVirtualMachineAdditionalCapabilitiesaazure:compute/LinuxVirtualMachineAdditionalCapabilities:LinuxVirtualMachineAdditionalCapabilities
ÿQ
hibernationEnabledB
 5Whether to enable the hibernation capability or not.
©
ultraSsdEnabledB
 Should the capacity to enable Data Disks of the `UltraSSD_LRS` storage account type be supported on this Virtual Machine? Defaults to `false`.
:
v
computeLinuxVirtualMachineAdminSshKeyKazure:compute/LinuxVirtualMachineAdminSshKey:LinuxVirtualMachineAdminSshKey
Ö
	publicKey" ÄThe Public Key which should be used for authentication, which needs to be in `ssh-rsa` format with at least 2048-bit or in `ssh-ed25519` format. Changing this forces a new resource to be created.
¾
username" ­The Username for which this Public SSH Key should be configured. Changing this forces a new resource to be created.

> **NOTE:** The Azure VM Agent only allows creating SSH Keys at the path `/home/{username}/.ssh/authorized_keys` - as such this public key will be written to the authorized keys file.
:¸

compute"LinuxVirtualMachineBootDiagnosticsSazure:compute/LinuxVirtualMachineBootDiagnostics:LinuxVirtualMachineBootDiagnostics°
­ª
storageAccountUriB" The Primary/Secondary Endpoint for the Azure Storage Account which should be used to store Boot Diagnostics, including Console Output and Screenshots from the Hypervisor.

> **NOTE:** Passing a null value will utilize a Managed Storage Account to store Boot Diagnostics
:æ

compute%LinuxVirtualMachineGalleryApplicationYazure:compute/LinuxVirtualMachineGalleryApplication:LinuxVirtualMachineGalleryApplicationÕ
Ò¾
automaticUpgradeEnabledB
 Specifies whether the version will be automatically updated for the VM when a new Gallery Application version is available in PIR/SIG. Defaults to `false`.

configurationBlobUriB" lSpecifies the URI to an Azure Blob that will replace the default configuration for the package if provided.

orderB Specifies the order in which the packages have to be installed. Possible values are between `0` and `2147483647`. Defaults to `0`.
q
tagB" dSpecifies a passthrough value for more generic context. This field can be any valid `string` value.
®
&treatFailureAsDeploymentFailureEnabledB
 ~Specifies whether any failure for any operation in the VmApplication will fail the deployment of the VM. Defaults to `false`.
H
	versionId" 7Specifies the Gallery Application Version resource ID.
:â
m
computeLinuxVirtualMachineIdentityEazure:compute/LinuxVirtualMachineIdentity:LinuxVirtualMachineIdentityð
íã
identityIdsB*" ËSpecifies a list of User Assigned Managed Identity IDs to be assigned to this Linux Virtual Machine.

> **NOTE:** This is required when `type` is set to `UserAssigned` or `SystemAssigned, UserAssigned`.
U
principalIdB" @The Principal ID associated with this Managed Service Identity.
O
tenantIdB" =The Tenant ID associated with this Managed Service Identity.
Ü
type" ÏSpecifies the type of Managed Service Identity that should be configured on this Linux Virtual Machine. Possible values are `SystemAssigned`, `UserAssigned`, `SystemAssigned, UserAssigned` (to enable both).
:é
g
computeLinuxVirtualMachineOsDiskAazure:compute/LinuxVirtualMachineOsDisk:LinuxVirtualMachineOsDiský
ú
caching" {The Type of Caching which should be used for the Internal OS Disk. Possible values are `None`, `ReadOnly` and `ReadWrite`.
ú
diffDiskSettings B:

compute)LinuxVirtualMachineOsDiskDiffDiskSettingsaazure:compute/LinuxVirtualMachineOsDiskDiffDiskSettings:LinuxVirtualMachineOsDiskDiffDiskSettingsÂA `diff_disk_settings` block as defined above. Changing this forces a new resource to be created.

> **NOTE:** `diff_disk_settings` can only be set when `caching` is set to `ReadOnly`. More information can be found [here](https://docs.microsoft.com/azure/virtual-machines/ephemeral-os-disks-deploy#vm-template-deployment)
¸
diskEncryptionSetIdB" The ID of the Disk Encryption Set which should be used to Encrypt this OS Disk. Conflicts with `secure_vm_disk_encryption_set_id`.

> **NOTE:** The Disk Encryption Set must have the `Reader` Role Assignment scoped on the Key Vault - in addition to an Access Policy to the Key Vault


diskSizeGbB íThe Size of the Internal OS Disk in GB, if you wish to vary from the size used in the image this Virtual Machine is sourced from.

> **NOTE:** If specified this must be equal to or larger than the size of the Image the Virtual Machine is based on. When creating a larger disk than exists in the image you'll need to repartition the disk to use the remaining space.
y
nameB" kThe name which should be used for the Internal OS Disk. Changing this forces a new resource to be created.

secureVmDiskEncryptionSetIdB" âThe ID of the Disk Encryption Set which should be used to Encrypt this OS Disk when the Virtual Machine is a Confidential VM. Conflicts with `disk_encryption_set_id`. Changing this forces a new resource to be created.

> **NOTE:** `secure_vm_disk_encryption_set_id` can only be specified when `security_encryption_type` is set to `DiskWithVMGuestState`.
º
securityEncryptionTypeB" Encryption Type when the Virtual Machine is a Confidential VM. Possible values are `VMGuestStateOnly` and `DiskWithVMGuestState`. Changing this forces a new resource to be created.

> **NOTE:** `vtpm_enabled` must be set to `true` when `security_encryption_type` is specified.

> **NOTE:** `encryption_at_host_enabled` cannot be set to `true` when `security_encryption_type` is set to `DiskWithVMGuestState`.

storageAccountType" çThe Type of Storage Account which should back this the Internal OS Disk. Possible values are `Standard_LRS`, `StandardSSD_LRS`, `Premium_LRS`, `StandardSSD_ZRS` and `Premium_ZRS`. Changing this forces a new resource to be created.
å
writeAcceleratorEnabledB
 ÃShould Write Accelerator be Enabled for this OS Disk? Defaults to `false`.

> **NOTE:** This requires that the `storage_account_type` is set to `Premium_LRS` and that `caching` is set to `None`.
:

compute)LinuxVirtualMachineOsDiskDiffDiskSettingsaazure:compute/LinuxVirtualMachineOsDiskDiffDiskSettings:LinuxVirtualMachineOsDiskDiffDiskSettingsô
ñª
option" Specifies the Ephemeral Disk Settings for the OS Disk. At this time the only possible value is `Local`. Changing this forces a new resource to be created.
Á
	placementB" ­Specifies where to store the Ephemeral Disk. Possible values are `CacheDisk` and `ResourceDisk`. Defaults to `CacheDisk`. Changing this forces a new resource to be created.
:Ö

compute&LinuxVirtualMachineOsImageNotification[azure:compute/LinuxVirtualMachineOsImageNotification:LinuxVirtualMachineOsImageNotificationÂ
¿¼
timeoutB" ªLength of time a notification to be sent to the VM on the instance metadata server till the VM gets OS upgraded. The only possible value is `PT15M`. Defaults to `PT15M`.
:Í
a
computeLinuxVirtualMachinePlan=azure:compute/LinuxVirtualMachinePlan:LinuxVirtualMachinePlanç
ä
name" Specifies the Name of the Marketplace Image this Virtual Machine should be created from. Changing this forces a new resource to be created.

product" Specifies the Product of the Marketplace Image this Virtual Machine should be created from. Changing this forces a new resource to be created.
£
	publisher" Specifies the Publisher of the Marketplace Image this Virtual Machine should be created from. Changing this forces a new resource to be created.
:È
¯
compute1LinuxVirtualMachineScaleSetAdditionalCapabilitiesqazure:compute/LinuxVirtualMachineScaleSetAdditionalCapabilities:LinuxVirtualMachineScaleSetAdditionalCapabilities

ultraSsdEnabledB
 óShould the capacity to enable Data Disks of the `UltraSSD_LRS` storage account type be supported on this Virtual Machine Scale Set? Possible values are `true` or `false`. Defaults to `false`. Changing this forces a new resource to be created.
:Ò

compute&LinuxVirtualMachineScaleSetAdminSshKey[azure:compute/LinuxVirtualMachineScaleSetAdminSshKey:LinuxVirtualMachineScaleSetAdminSshKey¾
»£
	publicKey" The Public Key which should be used for authentication, which needs to be in `ssh-rsa` format with at least 2048-bit or in `ssh-ed25519` format.

username" The Username for which this Public SSH Key should be configured.

> **Note:** The Azure VM Agent only allows creating SSH Keys at the path `/home/{username}/.ssh/authorized_keys` - as such this public key will be added/appended to the authorized keys file.
:«

²
compute2LinuxVirtualMachineScaleSetAutomaticInstanceRepairsazure:compute/LinuxVirtualMachineScaleSetAutomaticInstanceRepair:LinuxVirtualMachineScaleSetAutomaticInstanceRepairó
ðÐ
actionB" ¿The repair action that will be used for repairing unhealthy virtual machines in the scale set. Possible values include `Replace`, `Restart`, `Reimage`.

> **Note:**  Once the `action` field has been set it will always return the last value it was assigned if it is removed from the configuration file.

> **Note:**  If you wish to update the repair `action` of an existing `automatic_instance_repair` policy, you must first `disable` the `automatic_instance_repair` policy before you can re-enable the `automatic_instance_repair` policy with the new repair `action` defined.
b
enabled
 SShould the automatic instance repair be enabled on this Virtual Machine Scale Set?
¶
gracePeriodB"  Amount of time for which automatic repairs will be delayed. The grace period starts right after the VM is found unhealthy. Possible values are between `10` and `90` minutes. The time duration should be specified in `ISO 8601` format (e.g. `PT10M` to `PT90M`).

> **Note:**  Once the `grace_period` field has been set it will always return the last value it was assigned if it is removed from the configuration file.
:¼
µ
compute3LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyuazure:compute/LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicy:LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicy
þH
disableAutomaticRollback
 (Should automatic rollbacks be disabled?
±
enableAutomaticOsUpgrade
 Should OS Upgrades automatically be applied to Scale Set instances in a rolling fashion when a newer version of the OS Image becomes available?
:Ñ

compute*LinuxVirtualMachineScaleSetBootDiagnosticscazure:compute/LinuxVirtualMachineScaleSetBootDiagnostics:LinuxVirtualMachineScaleSetBootDiagnostics±
®«
storageAccountUriB" The Primary/Secondary Endpoint for the Azure Storage Account which should be used to store Boot Diagnostics, including Console Output and Screenshots from the Hypervisor.

> **Note:** Passing a null value will utilize a Managed Storage Account to store Boot Diagnostics.
:

compute#LinuxVirtualMachineScaleSetDataDiskUazure:compute/LinuxVirtualMachineScaleSetDataDisk:LinuxVirtualMachineScaleSetDataDisk

caching" uThe type of Caching which should be used for this Data Disk. Possible values are `None`, `ReadOnly` and `ReadWrite`.
ß
createOptionB" ÈThe create option which should be used for this Data Disk. Possible values are `Empty` and `FromImage`. Defaults to `Empty`. (`FromImage` should only be used if the source image includes data disks).

diskEncryptionSetIdB" ðThe ID of the Disk Encryption Set which should be used to encrypt this Data Disk. Changing this forces a new resource to be created.

> **Note:** The Disk Encryption Set must have the `Reader` Role Assignment scoped on the Key Vault - in addition to an Access Policy to the Key Vault

> **Note:** Disk Encryption Sets are in Public Preview in a limited set of regions
E

diskSizeGb 3The size of the Data Disk which should be created.
f
lun [The Logical Unit Number of the Data Disk, which must be unique within the Virtual Machine.
)
nameB" The name of the Data Disk.
ç
storageAccountType" ÌThe Type of Storage Account which should back this Data Disk. Possible values include `Standard_LRS`, `StandardSSD_LRS`, `StandardSSD_ZRS`, `Premium_LRS`, `PremiumV2_LRS`, `Premium_ZRS` and `UltraSSD_LRS`.

> **Note:** `UltraSSD_LRS` is only supported when `ultra_ssd_enabled` within the `additional_capabilities` block is enabled.
¦
ultraSsdDiskIopsReadWriteB Specifies the Read-Write IOPS for this Data Disk. Only settable when `storage_account_type` is `PremiumV2_LRS` or `UltraSSD_LRS`.
±
ultraSsdDiskMbpsReadWriteB Specifies the bandwidth in MB per second for this Data Disk. Only settable when `storage_account_type` is `PremiumV2_LRS` or `UltraSSD_LRS`.
ç
writeAcceleratorEnabledB
 ÅShould Write Accelerator be enabled for this Data Disk? Defaults to `false`.

> **Note:** This requires that the `storage_account_type` is set to `Premium_LRS` and that `caching` is set to `None`.
:

compute$LinuxVirtualMachineScaleSetExtensionWazure:compute/LinuxVirtualMachineScaleSetExtension:LinuxVirtualMachineScaleSetExtensionÿ
üÑ
autoUpgradeMinorVersionB
 ¯Should the latest version of the Extension be used at Deployment Time, if one is available? This won't auto-update the extension on existing installation. Defaults to `true`.

automaticUpgradeEnabledB
 rShould the Extension be automatically updated whenever the Publisher releases a new version of this VM Extension?
¨
forceUpdateTagB" A value which, when different to the previous value can be used to force-run the Extension even if the Extension Configuration hasn't changed.
B
name" 6The name for the Virtual Machine Scale Set Extension.
¢
protectedSettingsB" A JSON String which specifies Sensitive Settings (such as Passwords) for the Extension.

> **Note:** Keys within the `protected_settings` block are notoriously case-sensitive, where the casing required (e.g. TitleCase vs snakeCase) depends on the Extension being used. Please refer to the documentation for the specific Virtual Machine Extension you're looking to use for more information.
¦
protectedSettingsFromKeyVaultéBæ:ã
à
computeALinuxVirtualMachineScaleSetExtensionProtectedSettingsFromKeyVaultazure:compute/LinuxVirtualMachineScaleSetExtensionProtectedSettingsFromKeyVault:LinuxVirtualMachineScaleSetExtensionProtectedSettingsFromKeyVaultA `protected_settings_from_key_vault` block as defined below.

> **Note:** `protected_settings_from_key_vault` cannot be used with `protected_settings`
o
provisionAfterExtensionsB*" KAn ordered list of Extension names which this should be provisioned after.
;
	publisher" *Specifies the Publisher of the Extension.
ñ
settingsB" ÞA JSON String which specifies Settings for the Extension.

> **Note:** Keys within the `settings` block are notoriously case-sensitive, where the casing required (e.g. TitleCase vs snakeCase) depends on the Extension being used. Please refer to the documentation for the specific Virtual Machine Extension you're looking to use for more information.
1
type" %Specifies the Type of the Extension.
~
typeHandlerVersion" dSpecifies the version of the extension to use, available versions can be found using the Azure CLI.
:ø
à
computeALinuxVirtualMachineScaleSetExtensionProtectedSettingsFromKeyVaultazure:compute/LinuxVirtualMachineScaleSetExtensionProtectedSettingsFromKeyVault:LinuxVirtualMachineScaleSetExtensionProtectedSettingsFromKeyVault
V
	secretUrl" EThe URL to the Key Vault Secret which stores the protected settings.
5
sourceVaultId"  The ID of the source Key Vault.
:Û
£
compute-LinuxVirtualMachineScaleSetGalleryApplicationiazure:compute/LinuxVirtualMachineScaleSetGalleryApplication:LinuxVirtualMachineScaleSetGalleryApplication²
¯¾
configurationBlobUriB" Specifies the URI to an Azure Blob that will replace the default configuration for the package if provided. Changing this forces a new resource to be created.
Æ
orderB ¶Specifies the order in which the packages have to be installed. Possible values are between `0` and `2147483647`. Defaults to `0`. Changing this forces a new resource to be created.
¥
tagB" Specifies a passthrough value for more generic context. This field can be any valid `string` value. Changing this forces a new resource to be created.
{
	versionId" jSpecifies the Gallery Application Version resource ID. Changing this forces a new resource to be created.
:

compute#LinuxVirtualMachineScaleSetIdentityUazure:compute/LinuxVirtualMachineScaleSetIdentity:LinuxVirtualMachineScaleSetIdentity
í
identityIdsB*" ÕSpecifies a list of User Assigned Managed Identity IDs to be assigned to this Linux Virtual Machine Scale Set.

> **Note:** This is required when `type` is set to `UserAssigned` or `SystemAssigned, UserAssigned`.
U
principalIdB" @The Principal ID associated with this Managed Service Identity.
O
tenantIdB" =The Tenant ID associated with this Managed Service Identity.
æ
type" ÙSpecifies the type of Managed Service Identity that should be configured on this Linux Virtual Machine Scale Set. Possible values are `SystemAssigned`, `UserAssigned`, `SystemAssigned, UserAssigned` (to enable both).
:«	

compute+LinuxVirtualMachineScaleSetNetworkInterfaceeazure:compute/LinuxVirtualMachineScaleSetNetworkInterface:LinuxVirtualMachineScaleSetNetworkInterface
o

dnsServersB*" YA list of IP Addresses of DNS Servers which should be assigned to the Network Interface.
v
enableAcceleratedNetworkingB
 QDoes this Network Interface support Accelerated Networking? Defaults to `false`.
d
enableIpForwardingB
 HDoes this Network Interface support IP Forwarding? Defaults to `false`.
£
ipConfigurationsÔ*Ñ:Î
Ë
compute:LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationazure:compute/LinuxVirtualMachineScaleSetNetworkInterfaceIpConfiguration:LinuxVirtualMachineScaleSetNetworkInterfaceIpConfiguration8One or more `ip_configuration` blocks as defined above.
y
name" mThe Name which should be used for this Network Interface. Changing this forces a new resource to be created.
w
networkSecurityGroupIdB" WThe ID of a Network Security Group which should be assigned to this Network Interface.

primaryB
 Is this the Primary IP Configuration?

> **Note:** If multiple `network_interface` blocks are specified, one must be set to `primary`.
:À
Ë
compute:LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationazure:compute/LinuxVirtualMachineScaleSetNetworkInterfaceIpConfiguration:LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationï
ì°
'applicationGatewayBackendAddressPoolIdsB*" }A list of Backend Address Pools ID's from a Application Gateway which this Virtual Machine Scale Set should be connected to.

applicationSecurityGroupIdsB*" gA list of Application Security Group ID's which this Virtual Machine Scale Set should be connected to.
Ï
!loadBalancerBackendAddressPoolIdsB*" ¡A list of Backend Address Pools ID's from a Load Balancer which this Virtual Machine Scale Set should be connected to.

> **Note:**  When the Virtual Machine Scale Set is configured to have public IPs per instance are created with a load balancer, the SKU of the Virtual Machine instance IPs is determined by the SKU of the Virtual Machine Scale Sets Load Balancer (e.g. `Basic` or `Standard`). Alternatively, you may use the `public_ip_prefix_id` field to generate instance-level IPs in a virtual machine scale set as well. The zonal properties of the prefix will be passed to the Virtual Machine instance IPs, though they will not be shown in the output. To view the public IP addresses assigned to the Virtual Machine Scale Sets Virtual Machine instances use the **az vmss list-instance-public-ips --resource-group `ResourceGroupName` --name `VirtualMachineScaleSetName`** CLI command.

> **Note:** When using this field you'll also need to configure a Rule for the Load Balancer, and use a `depends_on` between this resource and the Load Balancer Rule.
½
loadBalancerInboundNatRulesIdsB*" A list of NAT Rule ID's from a Load Balancer which this Virtual Machine Scale Set should be connected to.

> **Note:** When using this field you'll also need to configure a Rule for the Load Balancer, and use a `depends_on` between this resource and the Load Balancer Rule.
E
name" 9The Name which should be used for this IP Configuration.
È
primaryB
 ¶Is this the Primary IP Configuration for this Network Interface? Defaults to `false`.

> **Note:** One `ip_configuration` block must be marked as Primary for each Network Interface.
Ê
publicIpAddressesB*þ:û
ø
computeILinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddress¡azure:compute/LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddress:LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddress.A `public_ip_address` block as defined below.

subnetIdB" The ID of the Subnet which this IP Configuration should be connected to.

> `subnet_id` is required if `version` is set to `IPv4`.

versionB" The Internet Protocol Version which should be used for this IP Configuration. Possible values are `IPv4` and `IPv6`. Defaults to `IPv4`.
:
ø
computeILinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddress¡azure:compute/LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddress:LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddress¡
ù
domainNameLabelB" ßThe Prefix which should be used for the Domain Name Label for each Virtual Machine Instance. Azure concatenates the Domain Name Label and Virtual Machine Index to create a unique Domain Name Label for each Virtual Machine.

idleTimeoutInMinutesB eThe Idle Timeout in Minutes for the Public IP Address. Possible values are in the range `4` to `32`.

ipTagsB*:

computeNLinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTag«azure:compute/LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTag:LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagaOne or more `ip_tag` blocks as defined above. Changing this forces a new resource to be created.
=
name" 1The Name of the Public IP Address Configuration.

publicIpPrefixIdB" éThe ID of the Public IP Address Prefix from where Public IP Addresses should be allocated. Changing this forces a new resource to be created.

> **Note:** This functionality is in Preview and must be opted into via `az feature register --namespace Microsoft.Network --name AllowBringYourOwnPublicIpAddress` and then `az provider register -n Microsoft.Network`.
Ï
versionB" ½The Internet Protocol Version which should be used for this public IP address. Possible values are `IPv4` and `IPv6`. Defaults to `IPv4`. Changing this forces a new resource to be created.
:

computeNLinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTag«azure:compute/LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTag:LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagú
÷
tag" yThe IP Tag associated with the Public IP, such as `SQL` or `Storage`. Changing this forces a new resource to be created.
n
type" bThe Type of IP Tag, such as `FirstPartyUsage`. Changing this forces a new resource to be created.
:â

compute!LinuxVirtualMachineScaleSetOsDiskQazure:compute/LinuxVirtualMachineScaleSetOsDisk:LinuxVirtualMachineScaleSetOsDiskÞ
Û
caching" {The Type of Caching which should be used for the Internal OS Disk. Possible values are `None`, `ReadOnly` and `ReadWrite`.
±
diffDiskSettings¸Bµ:²
¯
compute1LinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsqazure:compute/LinuxVirtualMachineScaleSetOsDiskDiffDiskSettings:LinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsbA `diff_disk_settings` block as defined above. Changing this forces a new resource to be created.
¿
diskEncryptionSetIdB" ¡The ID of the Disk Encryption Set which should be used to encrypt this OS Disk. Conflicts with `secure_vm_disk_encryption_set_id`. Changing this forces a new resource to be created.

> **Note:** The Disk Encryption Set must have the `Reader` Role Assignment scoped on the Key Vault - in addition to an Access Policy to the Key Vault

> **Note:** Disk Encryption Sets are in Public Preview in a limited set of regions


diskSizeGbB ôThe Size of the Internal OS Disk in GB, if you wish to vary from the size used in the image this Virtual Machine Scale Set is sourced from.

> **Note:** If specified this must be equal to or larger than the size of the Image the VM Scale Set is based on. When creating a larger disk than exists in the image you'll need to repartition the disk to use the remaining space.

secureVmDiskEncryptionSetIdB" ëThe ID of the Disk Encryption Set which should be used to Encrypt the OS Disk when the Virtual Machine Scale Set is Confidential VMSS. Conflicts with `disk_encryption_set_id`. Changing this forces a new resource to be created.

> **Note:** `secure_vm_disk_encryption_set_id` can only be specified when `security_encryption_type` is set to `DiskWithVMGuestState`.
Ä
securityEncryptionTypeB" £Encryption Type when the Virtual Machine Scale Set is Confidential VMSS. Possible values are `VMGuestStateOnly` and `DiskWithVMGuestState`. Changing this forces a new resource to be created.

> **Note:** `vtpm_enabled` must be set to `true` when `security_encryption_type` is specified.

> **Note:** `encryption_at_host_enabled` cannot be set to `true` when `security_encryption_type` is set to `DiskWithVMGuestState`.

storageAccountType" ëThe Type of Storage Account which should back this the Internal OS Disk. Possible values include `Standard_LRS`, `StandardSSD_LRS`, `StandardSSD_ZRS`, `Premium_LRS` and `Premium_ZRS`. Changing this forces a new resource to be created.
å
writeAcceleratorEnabledB
 ÃShould Write Accelerator be Enabled for this OS Disk? Defaults to `false`.

> **Note:** This requires that the `storage_account_type` is set to `Premium_LRS` and that `caching` is set to `None`.
:©
¯
compute1LinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsqazure:compute/LinuxVirtualMachineScaleSetOsDiskDiffDiskSettings:LinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsô
ñª
option" Specifies the Ephemeral Disk Settings for the OS Disk. At this time the only possible value is `Local`. Changing this forces a new resource to be created.
Á
	placementB" ­Specifies where to store the Ephemeral Disk. Possible values are `CacheDisk` and `ResourceDisk`. Defaults to `CacheDisk`. Changing this forces a new resource to be created.
:á
y
computeLinuxVirtualMachineScaleSetPlanMazure:compute/LinuxVirtualMachineScaleSetPlan:LinuxVirtualMachineScaleSetPlanã
àu
name" iSpecifies the name of the image from the marketplace. Changing this forces a new resource to be created.
{
product" lSpecifies the product of the image from the marketplace. Changing this forces a new resource to be created.
j
	publisher" YSpecifies the publisher of the image. Changing this forces a new resource to be created.
:¦
©
compute/LinuxVirtualMachineScaleSetRollingUpgradePolicymazure:compute/LinuxVirtualMachineScaleSetRollingUpgradePolicy:LinuxVirtualMachineScaleSetRollingUpgradePolicy÷
ô³
crossZoneUpgradesEnabledB
 Should the Virtual Machine Scale Set ignore the Azure Zone boundaries when constructing upgrade batches? Possible values are `true` or `false`.
Ä
maxBatchInstancePercent ¤The maximum percent of total virtual machine instances that will be upgraded simultaneously by the rolling upgrade in one batch. As this is a maximum, unhealthy instances in previous or future batches can cause the percentage of instances in a batch to decrease to ensure higher reliability.
ì
maxUnhealthyInstancePercent ÈThe maximum percentage of the total virtual machine instances in the scale set that can be simultaneously unhealthy, either as a result of being upgraded, or by being found in an unhealthy state by the virtual machine health checks before the rolling upgrade aborts. This constraint will be checked prior to starting any batch.

#maxUnhealthyUpgradedInstancePercent áThe maximum percentage of upgraded virtual machine instances that can be found to be in an unhealthy state. This check will happen after each batch is upgraded. If this percentage is ever exceeded, the rolling update aborts.

maximumSurgeInstancesEnabledB
 ÞCreate new virtual machines to upgrade the scale set, rather than updating the existing virtual machines. Existing virtual machines will be deleted once the new virtual machines are created for each batch. Possible values are `true` or `false`.

> **Note:** `overprovision` must be set to `false` when `maximum_surge_instances_enabled` is specified.
É
pauseTimeBetweenBatches" ©The wait time between completing the update for all virtual machines in one batch and starting the next batch. The time duration should be specified in ISO 8601 format.
¡
#prioritizeUnhealthyInstancesEnabledB
 tUpgrade all unhealthy instances in a scale set before any healthy instances. Possible values are `true` or `false`.
:

compute"LinuxVirtualMachineScaleSetScaleInSazure:compute/LinuxVirtualMachineScaleSetScaleIn:LinuxVirtualMachineScaleSetScaleIn
Ò
forceDeletionEnabledB
 ³Should the virtual machines chosen for removal be force deleted when the virtual machine scale set is being scaled-in? Possible values are `true` or `false`. Defaults to `false`.
±
ruleB" ¢The scale-in policy rule that decides which virtual machines are chosen for removal when a Virtual Machine Scale Set is scaled in. Possible values for the scale-in policy rules are `Default`, `NewestVM` and `OldestVM`, defaults to `Default`. For more information about scale in policy, please [refer to this doc](https://docs.microsoft.com/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-scale-in-policy).
:Ï

compute!LinuxVirtualMachineScaleSetSecretQazure:compute/LinuxVirtualMachineScaleSetSecret:LinuxVirtualMachineScaleSetSecretË
Èï
certificates©*¦:£
 
compute,LinuxVirtualMachineScaleSetSecretCertificategazure:compute/LinuxVirtualMachineScaleSetSecretCertificate:LinuxVirtualMachineScaleSetSecretCertificate3One or more `certificate` blocks as defined above.
T

keyVaultId" BThe ID of the Key Vault from which all Secrets should be sourced.
:Ô
 
compute,LinuxVirtualMachineScaleSetSecretCertificategazure:compute/LinuxVirtualMachineScaleSetSecretCertificate:LinuxVirtualMachineScaleSetSecretCertificate®
«¨
url" The Secret URL of a Key Vault Certificate.

> **Note:** This can be sourced from the `secret_id` field within the `azure.keyvault.Certificate` Resource.

> **Note:** The certificate must have been uploaded/created in PFX format, PEM certificates are not currently supported by Azure.
:ö
©
compute/LinuxVirtualMachineScaleSetSourceImageReferencemazure:compute/LinuxVirtualMachineScaleSetSourceImageReference:LinuxVirtualMachineScaleSetSourceImageReferenceÇ
Ä
offer" ySpecifies the offer of the image used to create the virtual machines. Changing this forces a new resource to be created.

	publisher" }Specifies the publisher of the image used to create the virtual machines. Changing this forces a new resource to be created.
O
sku" DSpecifies the SKU of the image used to create the virtual machines.
W
version" HSpecifies the version of the image used to create the virtual machines.
:ù

compute&LinuxVirtualMachineScaleSetSpotRestore[azure:compute/LinuxVirtualMachineScaleSetSpotRestore:LinuxVirtualMachineScaleSetSpotRestoreå
âö
enabledB
 äShould the Spot-Try-Restore feature be enabled? The Spot-Try-Restore feature will attempt to automatically restore the evicted Spot Virtual Machine Scale Set VM instances opportunistically based on capacity availability and pricing constraints. Possible values are `true` or `false`. Defaults to `false`. Changing this forces a new resource to be created.
æ
timeoutB" ÔThe length of time that the Virtual Machine Scale Set should attempt to restore the Spot VM instances which have been evicted. The time duration should be between `15` minutes and `120` minutes (inclusive). The time duration should be specified in the ISO 8601 format. Defaults to `PT1H`. Changing this forces a new resource to be created.
:Þ
²
compute2LinuxVirtualMachineScaleSetTerminationNotificationsazure:compute/LinuxVirtualMachineScaleSetTerminationNotification:LinuxVirtualMachineScaleSetTerminationNotification¦
£a
enabled
 RShould the termination notification be enabled on this Virtual Machine Scale Set?
½
timeoutB" «Length of time (in minutes, between 5 and 15) a notification to be sent to the VM on the instance metadata server till the VM gets deleted. The time duration should be specified in ISO 8601 format. Defaults to `PT5M`.

> **Note:** For more information about the termination notification, please [refer to this doc](https://docs.microsoft.com/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-terminate-notification).
:
g
computeLinuxVirtualMachineSecretAazure:compute/LinuxVirtualMachineSecret:LinuxVirtualMachineSecret³
°×
certificates*:

compute$LinuxVirtualMachineSecretCertificateWazure:compute/LinuxVirtualMachineSecretCertificate:LinuxVirtualMachineSecretCertificate3One or more `certificate` blocks as defined above.
T

keyVaultId" BThe ID of the Key Vault from which all Secrets should be sourced.
:¹

compute$LinuxVirtualMachineSecretCertificateWazure:compute/LinuxVirtualMachineSecretCertificate:LinuxVirtualMachineSecretCertificate«
¨¥
url" The Secret URL of a Key Vault Certificate.

> **NOTE:** This can be sourced from the `secret_id` field within the `azure.keyvault.Certificate` Resource.
:Æ

compute'LinuxVirtualMachineSourceImageReference]azure:compute/LinuxVirtualMachineSourceImageReference:LinuxVirtualMachineSourceImageReference¯
¬
offer" ySpecifies the offer of the image used to create the virtual machines. Changing this forces a new resource to be created.

	publisher" }Specifies the publisher of the image used to create the virtual machines. Changing this forces a new resource to be created.

sku" wSpecifies the SKU of the image used to create the virtual machines. Changing this forces a new resource to be created.

version" {Specifies the version of the image used to create the virtual machines. Changing this forces a new resource to be created.
:À

compute*LinuxVirtualMachineTerminationNotificationcazure:compute/LinuxVirtualMachineTerminationNotification:LinuxVirtualMachineTerminationNotification 
W
enabled
 HShould the termination notification be enabled on this Virtual Machine?
Á
timeoutB" ¯Length of time (in minutes, between `5` and `15`) a notification to be sent to the VM on the instance metadata server till the VM gets deleted. The time duration should be specified in ISO 8601 format. Defaults to `PT5M`.

> **NOTE:** For more information about the termination notification, please [refer to this doc](https://docs.microsoft.com/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-terminate-notification).
:ç
s
computeManagedDiskEncryptionSettingsIazure:compute/ManagedDiskEncryptionSettings:ManagedDiskEncryptionSettingsï
ìô
diskEncryptionKey¬:©
¦
compute.ManagedDiskEncryptionSettingsDiskEncryptionKeykazure:compute/ManagedDiskEncryptionSettingsDiskEncryptionKey:ManagedDiskEncryptionSettingsDiskEncryptionKey0A `disk_encryption_key` block as defined above.
ò
keyEncryptionKey¬B©:¦
£
compute-ManagedDiskEncryptionSettingsKeyEncryptionKeyiazure:compute/ManagedDiskEncryptionSettingsKeyEncryptionKey:ManagedDiskEncryptionSettingsKeyEncryptionKey/A `key_encryption_key` block as defined below.
:Ä
¦
compute.ManagedDiskEncryptionSettingsDiskEncryptionKeykazure:compute/ManagedDiskEncryptionSettingsDiskEncryptionKey:ManagedDiskEncryptionSettingsDiskEncryptionKey

	secretUrl" The URL to the Key Vault Secret used as the Disk Encryption Key. This can be found as `id` on the `azure.keyvault.Secret` resource.
z
sourceVaultId" eThe ID of the source Key Vault. This can be found as `id` on the `azure.keyvault.KeyVault` resource.
:¶
£
compute-ManagedDiskEncryptionSettingsKeyEncryptionKeyiazure:compute/ManagedDiskEncryptionSettingsKeyEncryptionKey:ManagedDiskEncryptionSettingsKeyEncryptionKey

keyUrl" }The URL to the Key Vault Key used as the Key Encryption Key. This can be found as `id` on the `azure.keyvault.Key` resource.
z
sourceVaultId" eThe ID of the source Key Vault. This can be found as `id` on the `azure.keyvault.KeyVault` resource.
:¶
Ä
compute8OrchestratedVirtualMachineScaleSetAdditionalCapabilitiesazure:compute/OrchestratedVirtualMachineScaleSetAdditionalCapabilities:OrchestratedVirtualMachineScaleSetAdditionalCapabilitiesì
éæ
ultraSsdEnabledB
 ÌShould the capacity to enable Data Disks of the `UltraSSD_LRS` storage account type be supported on this Virtual Machine Scale Set? Defaults to `false`. Changing this forces a new resource to be created.
:ê

È
compute9OrchestratedVirtualMachineScaleSetAutomaticInstanceRepairazure:compute/OrchestratedVirtualMachineScaleSetAutomaticInstanceRepair:OrchestratedVirtualMachineScaleSetAutomaticInstanceRepair	
	Ð
actionB" ¿The repair action that will be used for repairing unhealthy virtual machines in the scale set. Possible values include `Replace`, `Restart`, `Reimage`.

> **Note:**  Once the `action` field has been set it will always return the last value it was assigned if it is removed from the configuration file.

> **Note:**  If you wish to update the repair `action` of an existing `automatic_instance_repair` policy, you must first `disable` the `automatic_instance_repair` policy before you can re-enable the `automatic_instance_repair` policy with the new repair `action` defined.

enabled
 {Should the automatic instance repair be enabled on this Virtual Machine Scale Set? Possible values are `true` and `false`.
¶
gracePeriodB"  Amount of time for which automatic repairs will be delayed. The grace period starts right after the VM is found unhealthy. Possible values are between `10` and `90` minutes. The time duration should be specified in `ISO 8601` format (e.g. `PT10M` to `PT90M`).

> **Note:**  Once the `grace_period` field has been set it will always return the last value it was assigned if it is removed from the configuration file.
:¸
¯
compute1OrchestratedVirtualMachineScaleSetBootDiagnosticsqazure:compute/OrchestratedVirtualMachineScaleSetBootDiagnostics:OrchestratedVirtualMachineScaleSetBootDiagnostics
ý
storageAccountUriB" áThe Primary/Secondary Endpoint for the Azure Storage Account which should be used to store Boot Diagnostics, including Console Output and Screenshots from the Hypervisor. By including a `boot_diagnostics` block without passing the `storage_account_uri` field will cause the API to utilize a Managed Storage Account to store the Boot Diagnostics output.
:

compute*OrchestratedVirtualMachineScaleSetDataDiskcazure:compute/OrchestratedVirtualMachineScaleSetDataDisk:OrchestratedVirtualMachineScaleSetDataDiskà
Ý~
caching" oThe type of Caching which should be used for this Data Disk. Possible values are None, ReadOnly and ReadWrite.
Ù
createOptionB" ÂThe create option which should be used for this Data Disk. Possible values are Empty and FromImage. Defaults to `Empty`. (FromImage should only be used if the source image includes data disks).
¢
diskEncryptionSetIdB" The ID of the Disk Encryption Set which should be used to encrypt the Data Disk. Changing this forces a new resource to be created.
|

diskSizeGbB hThe size of the Data Disk which should be created. Required if `create_option` is specified as `Empty`.

lunB The Logical Unit Number of the Data Disk, which must be unique within the Virtual Machine. Required if `create_option` is specified as `Empty`.
é
storageAccountType" ÎThe Type of Storage Account which should back this Data Disk. Possible values include `Standard_LRS`, `StandardSSD_LRS`, `StandardSSD_ZRS`, `Premium_LRS`, `PremiumV2_LRS`, `Premium_ZRS` and `UltraSSD_LRS`.
¦
ultraSsdDiskIopsReadWriteB Specifies the Read-Write IOPS for this Data Disk. Only settable when `storage_account_type` is `PremiumV2_LRS` or `UltraSSD_LRS`.
±
ultraSsdDiskMbpsReadWriteB Specifies the bandwidth in MB per second for this Data Disk. Only settable when `storage_account_type` is `PremiumV2_LRS` or `UltraSSD_LRS`.
r
writeAcceleratorEnabledB
 QSpecifies if Write Accelerator is enabled on the Data Disk. Defaults to `false`.
:Ò

compute+OrchestratedVirtualMachineScaleSetExtensioneazure:compute/OrchestratedVirtualMachineScaleSetExtension:OrchestratedVirtualMachineScaleSetExtension¯
¬Ø
autoUpgradeMinorVersionEnabledB
 ¯Should the latest version of the Extension be used at Deployment Time, if one is available? This won't auto-update the extension on existing installation. Defaults to `true`.

%extensionsToProvisionAfterVmCreationsB*" gAn ordered list of Extension names which Virtual Machine Scale Set should provision after VM creation.

failureSuppressionEnabledB
 êShould failures from the extension be suppressed? Possible values are `true` or `false`.

> **Note:** Operational failures such as not connecting to the VM will not be suppressed regardless of the `failure_suppression_enabled` value.
¹
forceExtensionExecutionOnChangeB" A value which, when different to the previous value can be used to force-run the Extension even if the Extension Configuration hasn't changed.
B
name" 6The name for the Virtual Machine Scale Set Extension.
¦
protectedSettingsB" A JSON String which specifies Sensitive Settings (such as Passwords) for the Extension.

> **Note:** Keys within the `protected_settings` block are notoriously case-sensitive, where the casing required (e.g. `TitleCase` vs `snakeCase`) depends on the Extension being used. Please refer to the documentation for the specific Virtual Machine Extension you're looking to use for more information.
»
protectedSettingsFromKeyVaultþBû:ø
õ
computeHOrchestratedVirtualMachineScaleSetExtensionProtectedSettingsFromKeyVaultazure:compute/OrchestratedVirtualMachineScaleSetExtensionProtectedSettingsFromKeyVault:OrchestratedVirtualMachineScaleSetExtensionProtectedSettingsFromKeyVaultA `protected_settings_from_key_vault` block as defined below.

> **Note:** `protected_settings_from_key_vault` cannot be used with `protected_settings`
;
	publisher" *Specifies the Publisher of the Extension.
L
settingsB" :A JSON String which specifies Settings for the Extension.
1
type" %Specifies the Type of the Extension.
~
typeHandlerVersion" dSpecifies the version of the extension to use, available versions can be found using the Azure CLI.
:
õ
computeHOrchestratedVirtualMachineScaleSetExtensionProtectedSettingsFromKeyVaultazure:compute/OrchestratedVirtualMachineScaleSetExtensionProtectedSettingsFromKeyVault:OrchestratedVirtualMachineScaleSetExtensionProtectedSettingsFromKeyVault
V
	secretUrl" EThe URL to the Key Vault Secret which stores the protected settings.
5
sourceVaultId"  The ID of the source Key Vault.
:»

compute*OrchestratedVirtualMachineScaleSetIdentitycazure:compute/OrchestratedVirtualMachineScaleSetIdentity:OrchestratedVirtualMachineScaleSetIdentity
}
identityIds*" hSpecifies a list of User Managed Identity IDs to be assigned to this Windows Virtual Machine Scale Set.

type" The type of Managed Identity that should be configured on this Windows Virtual Machine Scale Set. Only possible value is `UserAssigned`.
:ä

²
compute2OrchestratedVirtualMachineScaleSetNetworkInterfacesazure:compute/OrchestratedVirtualMachineScaleSetNetworkInterface:OrchestratedVirtualMachineScaleSetNetworkInterface¬	
©	o

dnsServersB*" YA list of IP Addresses of DNS Servers which should be assigned to the Network Interface.

enableAcceleratedNetworkingB
 yDoes this Network Interface support Accelerated Networking? Possible values are `true` and `false`. Defaults to `false`.

enableIpForwardingB
 pDoes this Network Interface support IP Forwarding? Possible values are `true` and `false`. Defaults to `false`.
¸
ipConfigurationsé*æ:ã
à
computeAOrchestratedVirtualMachineScaleSetNetworkInterfaceIpConfigurationazure:compute/OrchestratedVirtualMachineScaleSetNetworkInterfaceIpConfiguration:OrchestratedVirtualMachineScaleSetNetworkInterfaceIpConfiguration8One or more `ip_configuration` blocks as defined above.
y
name" mThe Name which should be used for this Network Interface. Changing this forces a new resource to be created.
w
networkSecurityGroupIdB" WThe ID of a Network Security Group which should be assigned to this Network Interface.
Ö
primaryB
 ÄIs this the Primary IP Configuration? Possible values are `true` and `false`. Defaults to `false`.

> **Note:** If multiple `network_interface` blocks are specified, one must be set to `primary`.
:Ó
à
computeAOrchestratedVirtualMachineScaleSetNetworkInterfaceIpConfigurationazure:compute/OrchestratedVirtualMachineScaleSetNetworkInterfaceIpConfiguration:OrchestratedVirtualMachineScaleSetNetworkInterfaceIpConfigurationí
ê¯
'applicationGatewayBackendAddressPoolIdsB*" |A list of Backend Address Pools IDs from a Application Gateway which this Virtual Machine Scale Set should be connected to.

applicationSecurityGroupIdsB*" fA list of Application Security Group IDs which this Virtual Machine Scale Set should be connected to.
Ê
!loadBalancerBackendAddressPoolIdsB*" A list of Backend Address Pools IDs from a Load Balancer which this Virtual Machine Scale Set should be connected to.

> **Note:** When using this field you'll also need to configure a Rule for the Load Balancer, and use a depends_on between this resource and the Load Balancer Rule.
E
name" 9The Name which should be used for this IP Configuration.
ð
primaryB
 ÞIs this the Primary IP Configuration for this Network Interface? Possible values are `true` and `false`. Defaults to `false`.

> **Note:** One `ip_configuration` block must be marked as Primary for each Network Interface.
ß
publicIpAddressesB*:

computePOrchestratedVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddress¯azure:compute/OrchestratedVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddress:OrchestratedVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddress.A `public_ip_address` block as defined below.

subnetIdB" The ID of the Subnet which this IP Configuration should be connected to.

> **Note:** `subnet_id` is required if version is set to `IPv4`.

versionB" The Internet Protocol Version which should be used for this IP Configuration. Possible values are `IPv4` and `IPv6`. Defaults to `IPv4`.
:è

computePOrchestratedVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddress¯azure:compute/OrchestratedVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddress:OrchestratedVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressÕ
Ò©
domainNameLabelB" The Prefix which should be used for the Domain Name Label for each Virtual Machine Instance. Azure concatenates the Domain Name Label and Virtual Machine Index to create a unique Domain Name Label for each Virtual Machine. Valid values must be between `1` and `26` characters long, start with a lower case letter, end with a lower case letter or number and contains only `a-z`, `0-9` and `hyphens`.

idleTimeoutInMinutesB eThe Idle Timeout in Minutes for the Public IP Address. Possible values are in the range `4` to `32`.

ipTags¨B¥*¢:

computeUOrchestratedVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTag¹azure:compute/OrchestratedVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTag:OrchestratedVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagaOne or more `ip_tag` blocks as defined above. Changing this forces a new resource to be created.
=
name" 1The Name of the Public IP Address Configuration.
©
publicIpPrefixIdB" The ID of the Public IP Address Prefix from where Public IP Addresses should be allocated. Changing this forces a new resource to be created.
Ç
skuNameB" µSpecifies what Public IP Address SKU the Public IP Address should be provisioned as. Possible vaules include `Basic_Regional`, `Basic_Global`, `Standard_Regional` or `Standard_Global`. For more information about Public IP Address SKU's and their capabilities, please see the [product documentation](https://docs.microsoft.com/azure/virtual-network/ip-services/public-ip-addresses#sku). Changing this forces a new resource to be created.
Ï
versionB" ½The Internet Protocol Version which should be used for this public IP address. Possible values are `IPv4` and `IPv6`. Defaults to `IPv4`. Changing this forces a new resource to be created.
:

computeUOrchestratedVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTag¹azure:compute/OrchestratedVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTag:OrchestratedVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagú
÷
tag" yThe IP Tag associated with the Public IP, such as `SQL` or `Storage`. Changing this forces a new resource to be created.
n
type" bThe Type of IP Tag, such as `FirstPartyUsage`. Changing this forces a new resource to be created.
:

compute(OrchestratedVirtualMachineScaleSetOsDisk_azure:compute/OrchestratedVirtualMachineScaleSetOsDisk:OrchestratedVirtualMachineScaleSetOsDiskð	
í	
caching" {The Type of Caching which should be used for the Internal OS Disk. Possible values are `None`, `ReadOnly` and `ReadWrite`.
Æ
diffDiskSettingsÍBÊ:Ç
Ä
compute8OrchestratedVirtualMachineScaleSetOsDiskDiffDiskSettingsazure:compute/OrchestratedVirtualMachineScaleSetOsDiskDiffDiskSettings:OrchestratedVirtualMachineScaleSetOsDiskDiffDiskSettingsbA `diff_disk_settings` block as defined above. Changing this forces a new resource to be created.
õ
diskEncryptionSetIdB" ×The ID of the Disk Encryption Set which should be used to encrypt this OS Disk. Changing this forces a new resource to be created.

> **Note:** Disk Encryption Sets are in Public Preview in a limited set of regions
¡

diskSizeGbB The Size of the Internal OS Disk in GB, if you wish to vary from the size used in the image this Virtual Machine Scale Set is sourced from.

storageAccountType" ëThe Type of Storage Account which should back this the Internal OS Disk. Possible values include `Standard_LRS`, `StandardSSD_LRS`, `StandardSSD_ZRS`, `Premium_LRS` and `Premium_ZRS`. Changing this forces a new resource to be created.
p
writeAcceleratorEnabledB
 OSpecifies if Write Accelerator is enabled on the OS Disk. Defaults to `false`.
:¾
Ä
compute8OrchestratedVirtualMachineScaleSetOsDiskDiffDiskSettingsazure:compute/OrchestratedVirtualMachineScaleSetOsDiskDiffDiskSettings:OrchestratedVirtualMachineScaleSetOsDiskDiffDiskSettingsô
ñª
option" Specifies the Ephemeral Disk Settings for the OS Disk. At this time the only possible value is `Local`. Changing this forces a new resource to be created.
Á
	placementB" ­Specifies where to store the Ephemeral Disk. Possible values are `CacheDisk` and `ResourceDisk`. Defaults to `CacheDisk`. Changing this forces a new resource to be created.
: 

compute+OrchestratedVirtualMachineScaleSetOsProfileeazure:compute/OrchestratedVirtualMachineScaleSetOsProfile:OrchestratedVirtualMachineScaleSetOsProfileý
ú

customDataB" The Base64-Encoded Custom Data which should be used for this Virtual Machine Scale Set.

> **Note:** When Custom Data has been configured, it's not possible to remove it without tainting the Virtual Machine Scale Set, due to a limitation of the Azure API.
©
linuxConfigurationÝBÚ:×
Ô
compute=OrchestratedVirtualMachineScaleSetOsProfileLinuxConfigurationazure:compute/OrchestratedVirtualMachineScaleSetOsProfileLinuxConfiguration:OrchestratedVirtualMachineScaleSetOsProfileLinuxConfiguration3A `linux_configuration` block as documented below.
³
windowsConfigurationãBà:Ý
Ú
compute?OrchestratedVirtualMachineScaleSetOsProfileWindowsConfigurationazure:compute/OrchestratedVirtualMachineScaleSetOsProfileWindowsConfiguration:OrchestratedVirtualMachineScaleSetOsProfileWindowsConfiguration5A `windows_configuration` block as documented below.
:Í
Ô
compute=OrchestratedVirtualMachineScaleSetOsProfileLinuxConfigurationazure:compute/OrchestratedVirtualMachineScaleSetOsProfileLinuxConfiguration:OrchestratedVirtualMachineScaleSetOsProfileLinuxConfigurationó
ð¢
adminPasswordB" The Password which should be used for the local-administrator on this Virtual Machine. Changing this forces a new resource to be created.
Á
adminSshKeysBþ*û:ø
õ
computeHOrchestratedVirtualMachineScaleSetOsProfileLinuxConfigurationAdminSshKeyazure:compute/OrchestratedVirtualMachineScaleSetOsProfileLinuxConfigurationAdminSshKey:OrchestratedVirtualMachineScaleSetOsProfileLinuxConfigurationAdminSshKey-A `admin_ssh_key` block as documented below.

adminUsername" The username of the local administrator on each Virtual Machine Scale Set instance. Changing this forces a new resource to be created.
Ú
computerNamePrefixB" ½The prefix which should be used for the name of the Virtual Machines in this Scale Set. If unspecified this defaults to the value for the name field. If the value of the name field is not a valid `computer_name_prefix`, then you must specify `computer_name_prefix`. Changing this forces a new resource to be created.
ç
disablePasswordAuthenticationB
 ¿When an `admin_password` is specified `disable_password_authentication` must be set to `false`. Defaults to `true`.

> **Note:** Either `admin_password` or `admin_ssh_key` must be specified.
õ
patchAssessmentModeB" ×Specifies the mode of VM Guest Patching for the virtual machines that are associated to the Virtual Machine Scale Set. Possible values are `AutomaticByPlatform` or `ImageDefault`. Defaults to `ImageDefault`.

> **Note:** If the `patch_assessment_mode` is set to `AutomaticByPlatform` then the `provision_vm_agent` field must be set to `true`.
¶
	patchModeB" ¢Specifies the mode of in-guest patching of this Windows Virtual Machine. Possible values are `ImageDefault` or `AutomaticByPlatform`. Defaults to `ImageDefault`. For more information on patch modes please see the [product documentation](https://docs.microsoft.com/azure/virtual-machines/automatic-vm-guest-patching#patch-orchestration-modes).

> **Note:** If `patch_mode` is set to `AutomaticByPlatform` the `provision_vm_agent` must be set to `true` and the `extension` must contain at least one application health extension.  An example of how to correctly configure a Virtual Machine Scale Set to provision a Linux Virtual Machine with Automatic VM Guest Patching enabled can be found in the `./examples/orchestrated-vm-scale-set/automatic-vm-guest-patching` directory within the GitHub Repository.
»
provisionVmAgentB
  Should the Azure VM Agent be provisioned on each Virtual Machine in the Scale Set? Defaults to `true`. Changing this value forces a new resource to be created.
®
secretsòBï*ì:é
æ
computeCOrchestratedVirtualMachineScaleSetOsProfileLinuxConfigurationSecretazure:compute/OrchestratedVirtualMachineScaleSetOsProfileLinuxConfigurationSecret:OrchestratedVirtualMachineScaleSetOsProfileLinuxConfigurationSecret.One or more `secret` blocks as defined below.
:²
õ
computeHOrchestratedVirtualMachineScaleSetOsProfileLinuxConfigurationAdminSshKeyazure:compute/OrchestratedVirtualMachineScaleSetOsProfileLinuxConfigurationAdminSshKey:OrchestratedVirtualMachineScaleSetOsProfileLinuxConfigurationAdminSshKey·
´£
	publicKey" The Public Key which should be used for authentication, which needs to be in `ssh-rsa` format with at least 2048-bit or in `ssh-ed25519` format.

username" úThe Username for which this Public SSH Key should be configured.

> **Note:** The Azure VM Agent only allows creating SSH Keys at the path `/home/{username}/.ssh/authorized_keys` - as such this public key will be written to the authorized keys file.
:
æ
computeCOrchestratedVirtualMachineScaleSetOsProfileLinuxConfigurationSecretazure:compute/OrchestratedVirtualMachineScaleSetOsProfileLinuxConfigurationSecret:OrchestratedVirtualMachineScaleSetOsProfileLinuxConfigurationSecret²
¯Ö
certificates*:

computeNOrchestratedVirtualMachineScaleSetOsProfileLinuxConfigurationSecretCertificate«azure:compute/OrchestratedVirtualMachineScaleSetOsProfileLinuxConfigurationSecretCertificate:OrchestratedVirtualMachineScaleSetOsProfileLinuxConfigurationSecretCertificate3One or more `certificate` blocks as defined below.
T

keyVaultId" BThe ID of the Key Vault from which all Secrets should be sourced.
:¸

computeNOrchestratedVirtualMachineScaleSetOsProfileLinuxConfigurationSecretCertificate«azure:compute/OrchestratedVirtualMachineScaleSetOsProfileLinuxConfigurationSecretCertificate:OrchestratedVirtualMachineScaleSetOsProfileLinuxConfigurationSecretCertificate«
¨¥
url" The Secret URL of a Key Vault Certificate.

> **Note:** This can be sourced from the `secret_id` field within the `azure.keyvault.Certificate` Resource.
:æ"
Ú
compute?OrchestratedVirtualMachineScaleSetOsProfileWindowsConfigurationazure:compute/OrchestratedVirtualMachineScaleSetOsProfileWindowsConfiguration:OrchestratedVirtualMachineScaleSetOsProfileWindowsConfiguration!
!È
additionalUnattendContents±B®*«:¨
¥
computeXOrchestratedVirtualMachineScaleSetOsProfileWindowsConfigurationAdditionalUnattendContent¿azure:compute/OrchestratedVirtualMachineScaleSetOsProfileWindowsConfigurationAdditionalUnattendContent:OrchestratedVirtualMachineScaleSetOsProfileWindowsConfigurationAdditionalUnattendContentvOne or more `additional_unattend_content` blocks as defined below. Changing this forces a new resource to be created.
 
adminPassword" The Password which should be used for the local-administrator on this Virtual Machine. Changing this forces a new resource to be created.

adminUsername" The username of the local administrator on each Virtual Machine Scale Set instance. Changing this forces a new resource to be created.
Þ
computerNamePrefixB" ÁThe prefix which should be used for the name of the Virtual Machines in this Scale Set. If unspecified this defaults to the value for the `name` field. If the value of the `name` field is not a valid `computer_name_prefix`, then you must specify `computer_name_prefix`. Changing this forces a new resource to be created.
l
enableAutomaticUpdatesB
 LAre automatic updates enabled for this Virtual Machine? Defaults to `true`.
¾
hotpatchingEnabledB
 ¡Should the VM be patched without requiring a reboot? Possible values are `true` or `false`. Defaults to `false`. For more information about hot patching please see the [product documentation](https://docs.microsoft.com/azure/automanage/automanage-hotpatch).

> **Note:** Hotpatching can only be enabled if the `patch_mode` is set to `AutomaticByPlatform`, the `provision_vm_agent` is set to `true`, your `source_image_reference` references a hotpatching enabled image, the VM's `sku_name` is set to a [Azure generation 2](https://docs.microsoft.com/azure/virtual-machines/generation-2#generation-2-vm-sizes) VM SKU and the `extension` contains an application health extension. An example of how to correctly configure a Virtual Machine Scale Set to provision a Windows Virtual Machine with hotpatching enabled can be found in the `./examples/orchestrated-vm-scale-set/hotpatching-enabled` directory within the GitHub Repository.
õ
patchAssessmentModeB" ×Specifies the mode of VM Guest Patching for the virtual machines that are associated to the Virtual Machine Scale Set. Possible values are `AutomaticByPlatform` or `ImageDefault`. Defaults to `ImageDefault`.

> **Note:** If the `patch_assessment_mode` is set to `AutomaticByPlatform` then the `provision_vm_agent` field must be set to `true`.
°
	patchModeB" Specifies the mode of in-guest patching of this Windows Virtual Machine. Possible values are `Manual`, `AutomaticByOS` and `AutomaticByPlatform`. Defaults to `AutomaticByOS`. For more information on patch modes please see the [product documentation](https://docs.microsoft.com/azure/virtual-machines/automatic-vm-guest-patching#patch-orchestration-modes).

> **Note:** If `patch_mode` is set to `AutomaticByPlatform` the `provision_vm_agent` must be set to `true` and the `extension` must contain at least one application health extension.
»
provisionVmAgentB
  Should the Azure VM Agent be provisioned on each Virtual Machine in the Scale Set? Defaults to `true`. Changing this value forces a new resource to be created.
´
secretsøBõ*ò:ï
ì
computeEOrchestratedVirtualMachineScaleSetOsProfileWindowsConfigurationSecretazure:compute/OrchestratedVirtualMachineScaleSetOsProfileWindowsConfigurationSecret:OrchestratedVirtualMachineScaleSetOsProfileWindowsConfigurationSecret.One or more `secret` blocks as defined below.
´
timezoneB" ¡Specifies the time zone of the virtual machine, the possible values are defined [here](https://jackstromberg.com/2017/01/list-of-time-zones-consumed-by-azure/).

winrmListenersB*:

computeLOrchestratedVirtualMachineScaleSetOsProfileWindowsConfigurationWinrmListener§azure:compute/OrchestratedVirtualMachineScaleSetOsProfileWindowsConfigurationWinrmListener:OrchestratedVirtualMachineScaleSetOsProfileWindowsConfigurationWinrmListeneriOne or more `winrm_listener` blocks as defined below. Changing this forces a new resource to be created.
:
¥
computeXOrchestratedVirtualMachineScaleSetOsProfileWindowsConfigurationAdditionalUnattendContent¿azure:compute/OrchestratedVirtualMachineScaleSetOsProfileWindowsConfigurationAdditionalUnattendContent:OrchestratedVirtualMachineScaleSetOsProfileWindowsConfigurationAdditionalUnattendContentæ
ãª
content" The XML formatted content that is added to the unattend.xml file for the specified path and component. Changing this forces a new resource to be created.
³
setting" £The name of the setting to which the content applies. Possible values are `AutoLogon` and `FirstLogonCommands`. Changing this forces a new resource to be created.
:ª
ì
computeEOrchestratedVirtualMachineScaleSetOsProfileWindowsConfigurationSecretazure:compute/OrchestratedVirtualMachineScaleSetOsProfileWindowsConfigurationSecret:OrchestratedVirtualMachineScaleSetOsProfileWindowsConfigurationSecret¸
µÜ
certificates*:

computePOrchestratedVirtualMachineScaleSetOsProfileWindowsConfigurationSecretCertificate¯azure:compute/OrchestratedVirtualMachineScaleSetOsProfileWindowsConfigurationSecretCertificate:OrchestratedVirtualMachineScaleSetOsProfileWindowsConfigurationSecretCertificate3One or more `certificate` blocks as defined below.
T

keyVaultId" BThe ID of the Key Vault from which all Secrets should be sourced.
:¡

computePOrchestratedVirtualMachineScaleSetOsProfileWindowsConfigurationSecretCertificate¯azure:compute/OrchestratedVirtualMachineScaleSetOsProfileWindowsConfigurationSecretCertificate:OrchestratedVirtualMachineScaleSetOsProfileWindowsConfigurationSecretCertificate
a
store" TThe certificate store on the Virtual Machine where the certificate should be added.
¥
url" The Secret URL of a Key Vault Certificate.

> **Note:** This can be sourced from the `secret_id` field within the `azure.keyvault.Certificate` Resource.
:¼

computeLOrchestratedVirtualMachineScaleSetOsProfileWindowsConfigurationWinrmListener§azure:compute/OrchestratedVirtualMachineScaleSetOsProfileWindowsConfigurationWinrmListener:OrchestratedVirtualMachineScaleSetOsProfileWindowsConfigurationWinrmListenerµ
²
certificateUrlB" The Secret URL of a Key Vault Certificate, which must be specified when protocol is set to `Https`. Changing this forces a new resource to be created.

> **Note:** This can be sourced from the `secret_id` field within the `azure.keyvault.Certificate` Resource.

protocol" ~Specifies the protocol of listener. Possible values are `Http` or `Https`. Changing this forces a new resource to be created.
:÷

compute&OrchestratedVirtualMachineScaleSetPlan[azure:compute/OrchestratedVirtualMachineScaleSetPlan:OrchestratedVirtualMachineScaleSetPlanã
àu
name" iSpecifies the name of the image from the marketplace. Changing this forces a new resource to be created.
{
product" lSpecifies the product of the image from the marketplace. Changing this forces a new resource to be created.
j
	publisher" YSpecifies the publisher of the image. Changing this forces a new resource to be created.
:ï
£
compute-OrchestratedVirtualMachineScaleSetPriorityMixiazure:compute/OrchestratedVirtualMachineScaleSetPriorityMix:OrchestratedVirtualMachineScaleSetPriorityMixÆ
ÃÜ
baseRegularCountB ÁSpecifies the base number of VMs of `Regular` priority that will be created before any VMs of priority `Spot` are created. Possible values are integers between `0` and `1000`. Defaults to `0`.
á
regularPercentageAboveBaseB ¼Specifies the desired percentage of VM instances that are of `Regular` priority after the base count has been reached. Possible values are integers between `0` and `100`. Defaults to `0`.
:½
 
compute,OrchestratedVirtualMachineScaleSetSkuProfilegazure:compute/OrchestratedVirtualMachineScaleSetSkuProfile:OrchestratedVirtualMachineScaleSetSkuProfile
Ä
allocationStrategy" ©Specifies the allocation strategy for the virtual machine scale set based on which the VMs will be allocated. Possible values are `LowestPrice` and `CapacityOptimized`.
K
vmSizes*" :Specifies the VM sizes for the virtual machine scale set.
:
¾
compute6OrchestratedVirtualMachineScaleSetSourceImageReference{azure:compute/OrchestratedVirtualMachineScaleSetSourceImageReference:OrchestratedVirtualMachineScaleSetSourceImageReferenceÇ
Ä
offer" ySpecifies the offer of the image used to create the virtual machines. Changing this forces a new resource to be created.

	publisher" }Specifies the publisher of the image used to create the virtual machines. Changing this forces a new resource to be created.
O
sku" DSpecifies the SKU of the image used to create the virtual machines.
W
version" HSpecifies the version of the image used to create the virtual machines.
:Í
È
compute9OrchestratedVirtualMachineScaleSetTerminationNotificationazure:compute/OrchestratedVirtualMachineScaleSetTerminationNotification:OrchestratedVirtualMachineScaleSetTerminationNotificationÿ
ü
enabled
 uShould the termination notification be enabled on this Virtual Machine Scale Set? Possible values `true` or `false`.
ò
timeoutB" àLength of time (in minutes, between `5` and `15`) a notification to be sent to the VM on the instance metadata server till the VM gets deleted. The time duration should be specified in `ISO 8601` format. Defaults to `PT5M`.
:Ò
U
computePacketCaptureFilter5azure:compute/PacketCaptureFilter:PacketCaptureFilterø

õ
Í
localIpAddressB" ´The local IP Address to be filtered on. Specify `127.0.0.1` for a single address entry, `127.0.0.1-127.0.0.255` for a range and `127.0.0.1;127.0.0.5` for multiple entries. Multiple ranges and mixing ranges with multiple entries are currently not supported. Changing this forces a new resource to be created.

	localPortB" The local port to be filtered on. Specify `80` for single port entry, `80-85` for a range and `80;443;` for multiple entries. Multiple ranges and mixing ranges with multiple entries are currently not supported. Changing this forces a new resource to be created.

protocol" The Protocol to be filtered on. Possible values include `Any`, `TCP` and `UDP`. Changing this forces a new resource to be created.
Ï
remoteIpAddressB" µThe remote IP Address to be filtered on. Specify `127.0.0.1` for a single address entry, `127.0.0.1-127.0.0.255` for a range and `127.0.0.1;127.0.0.5` for multiple entries. Multiple ranges and mixing ranges with multiple entries are currently not supported. Changing this forces a new resource to be created.


remotePortB" The remote port to be filtered on. Specify `80` for single port entry, `80-85` for a range and `80;443;` for multiple entries. Multiple ranges and mixing ranges with multiple entries are currently not supported. Changing this forces a new resource to be created.
:Û
p
computePacketCaptureStorageLocationGazure:compute/PacketCaptureStorageLocation:PacketCaptureStorageLocationæ
ã·
filePathB" ¤A valid local path on the target Virtual Machine. Must include the name of the capture file (*.cap). For Linux Virtual Machines it must start with `/var/captures`.
Ã
storageAccountIdB" ¨The ID of the storage account where the packet capture sessions should be saved to.

> **NOTE:** At least one of `file_path` or `storage_account_id` must be specified.
a
storagePathB" LThe URI of the storage path where the packet capture sessions are saved to.
:ÿ

compute"RunCommandErrorBlobManagedIdentitySazure:compute/RunCommandErrorBlobManagedIdentity:RunCommandErrorBlobManagedIdentityx
v9
clientIdB" 'The client ID of the managed identity.
9
objectIdB" 'The object ID of the managed identity.
:ô
^
computeRunCommandInstanceView;azure:compute/RunCommandInstanceView:RunCommandInstanceView

endTimeB" 
errorMessageB" 
executionMessageB" 
executionStateB" 
exitCodeB 
outputB" 
	startTimeB" :

compute#RunCommandOutputBlobManagedIdentityUazure:compute/RunCommandOutputBlobManagedIdentity:RunCommandOutputBlobManagedIdentityx
v9
clientIdB" 'The client ID of the managed identity.
9
objectIdB" 'The object ID of the managed identity.
:©
U
computeRunCommandParameter5azure:compute/RunCommandParameter:RunCommandParameterP
N$
name" The run parameter name.
&
value" The run parameter value.
:Ä
p
computeRunCommandProtectedParameterGazure:compute/RunCommandProtectedParameter:RunCommandProtectedParameterP
N$
name" The run parameter name.
&
value" The run parameter value.
:
L
computeRunCommandSource/azure:compute/RunCommandSource:RunCommandSource°
­
	commandIdB" 
scriptB" 
	scriptUriB" ô
scriptUriManagedIdentityB:

compute(RunCommandSourceScriptUriManagedIdentity_azure:compute/RunCommandSourceScriptUriManagedIdentity:RunCommandSourceScriptUriManagedIdentity8A `script_uri_managed_identity` block as defined above.
:

compute(RunCommandSourceScriptUriManagedIdentity_azure:compute/RunCommandSourceScriptUriManagedIdentity:RunCommandSourceScriptUriManagedIdentityx
v9
clientIdB" 'The client ID of the managed identity.
9
objectIdB" 'The object ID of the managed identity.
:
a
computeScaleSetBootDiagnostics=azure:compute/ScaleSetBootDiagnostics:ScaleSetBootDiagnostics
a
enabledB
 PWhether to enable boot diagnostics for the virtual machine. Defaults to `true`.
²

storageUri" Blob endpoint for the storage account to hold the virtual machine's diagnostic files. This must be the root of a storage account, and not a storage container.
:ß
O
computeScaleSetExtension1azure:compute/ScaleSetExtension:ScaleSetExtension
e
autoUpgradeMinorVersionB
 DSpecifies whether or not to use the latest minor version available.
1
name" %Specifies the name of the extension.

protectedSettingsB" qThe protected_settings passed to the extension, like settings, these are specified as a JSON object in a string.

provisionAfterExtensionsB*" xSpecifies a dependency array of extensions required to be executed before, the array stores the name of each extension.
k
	publisher" ZThe publisher of the extension, available publishers can be found by using the Azure CLI.
j
settingsB" XThe settings passed to the extension, these are specified as a JSON object in a string.
e
type" YThe type of extension, available types for a publisher can be found using the Azure CLI.
~
typeHandlerVersion" dSpecifies the version of the extension to use, available versions can be found using the Azure CLI.
:8
L
computeScaleSetIdentity/azure:compute/ScaleSetIdentity:ScaleSetIdentity´7
±7¤3
identityIdsB*" 3Specifies a list of user managed identity ids to be assigned to the VMSS. Required if `type` is `UserAssigned`.

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure from "@pulumi/azure";

const example = new azure.compute.ScaleSet("example", {
    name: "vm-scaleset",
    resourceGroupName: exampleAzurermResourceGroup.name,
    location: exampleAzurermResourceGroup.location,
    sku: {
        name: vmSku,
        tier: "Standard",
        capacity: instanceCount,
    },
    identity: {
        type: "SystemAssigned",
    },
    extensions: [{
        name: "MSILinuxExtension",
        publisher: "Microsoft.ManagedIdentity",
        type: "ManagedIdentityExtensionForLinux",
        typeHandlerVersion: "1.0",
        settings: "{\"port\": 50342}",
    }],
});
export const principalId = example.identity.apply(identity => identity?.principalId);
```
```python
import pulumi
import pulumi_azure as azure

example = azure.compute.ScaleSet("example",
    name="vm-scaleset",
    resource_group_name=example_azurerm_resource_group["name"],
    location=example_azurerm_resource_group["location"],
    sku={
        "name": vm_sku,
        "tier": "Standard",
        "capacity": instance_count,
    },
    identity={
        "type": "SystemAssigned",
    },
    extensions=[{
        "name": "MSILinuxExtension",
        "publisher": "Microsoft.ManagedIdentity",
        "type": "ManagedIdentityExtensionForLinux",
        "type_handler_version": "1.0",
        "settings": "{\"port\": 50342}",
    }])
pulumi.export("principalId", example.identity.principal_id)
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Azure = Pulumi.Azure;

return await Deployment.RunAsync(() => 
{
    var example = new Azure.Compute.ScaleSet("example", new()
    {
        Name = "vm-scaleset",
        ResourceGroupName = exampleAzurermResourceGroup.Name,
        Location = exampleAzurermResourceGroup.Location,
        Sku = new Azure.Compute.Inputs.ScaleSetSkuArgs
        {
            Name = vmSku,
            Tier = "Standard",
            Capacity = instanceCount,
        },
        Identity = new Azure.Compute.Inputs.ScaleSetIdentityArgs
        {
            Type = "SystemAssigned",
        },
        Extensions = new[]
        {
            new Azure.Compute.Inputs.ScaleSetExtensionArgs
            {
                Name = "MSILinuxExtension",
                Publisher = "Microsoft.ManagedIdentity",
                Type = "ManagedIdentityExtensionForLinux",
                TypeHandlerVersion = "1.0",
                Settings = "{\"port\": 50342}",
            },
        },
    });

    return new Dictionary<string, object?>
    {
        ["principalId"] = example.Identity.Apply(identity => identity?.PrincipalId),
    };
});
```
```go
package main

import (
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/compute"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		example, err := compute.NewScaleSet(ctx, "example", &compute.ScaleSetArgs{
			Name:              pulumi.String("vm-scaleset"),
			ResourceGroupName: pulumi.Any(exampleAzurermResourceGroup.Name),
			Location:          pulumi.Any(exampleAzurermResourceGroup.Location),
			Sku: &compute.ScaleSetSkuArgs{
				Name:     pulumi.Any(vmSku),
				Tier:     pulumi.String("Standard"),
				Capacity: pulumi.Any(instanceCount),
			},
			Identity: &compute.ScaleSetIdentityArgs{
				Type: pulumi.String("SystemAssigned"),
			},
			Extensions: compute.ScaleSetExtensionArray{
				&compute.ScaleSetExtensionArgs{
					Name:               pulumi.String("MSILinuxExtension"),
					Publisher:          pulumi.String("Microsoft.ManagedIdentity"),
					Type:               pulumi.String("ManagedIdentityExtensionForLinux"),
					TypeHandlerVersion: pulumi.String("1.0"),
					Settings:           pulumi.String("{\"port\": 50342}"),
				},
			},
		})
		if err != nil {
			return err
		}
		ctx.Export("principalId", example.Identity.ApplyT(func(identity compute.ScaleSetIdentity) (*string, error) {
			return &identity.PrincipalId, nil
		}).(pulumi.StringPtrOutput))
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.azure.compute.ScaleSet;
import com.pulumi.azure.compute.ScaleSetArgs;
import com.pulumi.azure.compute.inputs.ScaleSetSkuArgs;
import com.pulumi.azure.compute.inputs.ScaleSetIdentityArgs;
import com.pulumi.azure.compute.inputs.ScaleSetExtensionArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        var example = new ScaleSet("example", ScaleSetArgs.builder()
            .name("vm-scaleset")
            .resourceGroupName(exampleAzurermResourceGroup.name())
            .location(exampleAzurermResourceGroup.location())
            .sku(ScaleSetSkuArgs.builder()
                .name(vmSku)
                .tier("Standard")
                .capacity(instanceCount)
                .build())
            .identity(ScaleSetIdentityArgs.builder()
                .type("SystemAssigned")
                .build())
            .extensions(ScaleSetExtensionArgs.builder()
                .name("MSILinuxExtension")
                .publisher("Microsoft.ManagedIdentity")
                .type("ManagedIdentityExtensionForLinux")
                .typeHandlerVersion("1.0")
                .settings("{\"port\": 50342}")
                .build())
            .build());

        ctx.export("principalId", example.identity().applyValue(identity -> identity.principalId()));
    }
}
```
```yaml
resources:
  example:
    type: azure:compute:ScaleSet
    properties:
      name: vm-scaleset
      resourceGroupName: ${exampleAzurermResourceGroup.name}
      location: ${exampleAzurermResourceGroup.location}
      sku:
        name: ${vmSku}
        tier: Standard
        capacity: ${instanceCount}
      identity:
        type: SystemAssigned
      extensions:
        - name: MSILinuxExtension
          publisher: Microsoft.ManagedIdentity
          type: ManagedIdentityExtensionForLinux
          typeHandlerVersion: '1.0'
          settings: '{"port": 50342}'
outputs:
  principalId: ${example.identity.principalId}
```
<!--End PulumiCodeChooser -->

principalIdB" 
tenantIdB" à
type" ÓSpecifies the identity type to be assigned to the scale set. Allowable values are `SystemAssigned` and `UserAssigned`. For the `SystemAssigned` identity the scale set's Service Principal ID (SPN) can be retrieved after the scale set has been created. See [documentation](https://docs.microsoft.com/azure/active-directory/managed-service-identity/overview) for more information. Possible values are `SystemAssigned`, `UserAssigned` and `SystemAssigned, UserAssigned`.
:ó
^
computeScaleSetNetworkProfile;azure:compute/ScaleSetNetworkProfile:ScaleSetNetworkProfile
Z
acceleratedNetworkingB
 ;Specifies whether to enable accelerated networking or not.
Å
dnsSettingsB:

compute!ScaleSetNetworkProfileDnsSettingsQazure:compute/ScaleSetNetworkProfileDnsSettings:ScaleSetNetworkProfileDnsSettings,A `dns_settings` block as documented below.
Ü
ipConfigurations*:

compute%ScaleSetNetworkProfileIpConfigurationYazure:compute/ScaleSetNetworkProfileIpConfiguration:ScaleSetNetworkProfileIpConfiguration1An `ip_configuration` block as documented below.
Y
ipForwardingB
 CWhether IP forwarding is enabled on this NIC. Defaults to `false`.
G
name" ;Specifies the name of the network interface configuration.
Y
networkSecurityGroupIdB" 9Specifies the identifier for the network security group.

primary
 yIndicates whether network interfaces created from the network interface configuration will be the primary NIC of the VM.
:¾

compute!ScaleSetNetworkProfileDnsSettingsQazure:compute/ScaleSetNetworkProfileDnsSettings:ScaleSetNetworkProfileDnsSettings;
97

dnsServers*" #Specifies an array of DNS servers.
:Ö

compute%ScaleSetNetworkProfileIpConfigurationYazure:compute/ScaleSetNetworkProfileIpConfiguration:ScaleSetNetworkProfileIpConfigurationÅ
Â
'applicationGatewayBackendAddressPoolIdsB*" ßSpecifies an array of references to backend address pools of application gateways. A scale set can reference backend address pools of multiple application gateways. Multiple scale sets can use the same application gateway.
\
applicationSecurityGroupIdsB*" 5Specifies up to `20` application security group IDs.
¸
!loadBalancerBackendAddressPoolIdsB*" Specifies an array of references to backend address pools of load balancers. A scale set can reference backend address pools of one public and one internal load balancer. Multiple scale sets cannot use the same load balancer.

> **NOTE:** When using this field you'll also need to configure a Rule for the Load Balancer, and use a `depends_on` between this resource and the Load Balancer Rule.
®
loadBalancerInboundNatRulesIdsB*" Specifies an array of references to inbound NAT pools for load balancers. A scale set can reference inbound NAT pools of one public and one internal load balancer. Multiple scale sets cannot use the same load balancer.

> **NOTE:** When using this field you'll also need to configure a Rule for the Load Balancer, and use a `depends_on` between this resource and the Load Balancer Rule.
4
name" (Specifies name of the IP configuration.
F
primary
 7Specifies if this ip_configuration is the primary one.
§
publicIpAddressConfigurationéBæ:ã
à
computeAScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationazure:compute/ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfiguration:ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationDescribes a virtual machines scale set IP Configuration's PublicIPAddress configuration. The `public_ip_address_configuration` block is documented below.
8
subnetId" (Specifies the identifier of the subnet.
:Ã
à
computeAScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationazure:compute/ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfiguration:ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationÝ
ÚC
domainNameLabel" ,The domain name label for the DNS settings.
U
idleTimeout BThe idle timeout in minutes. This value must be between 4 and 30.
<
name" 0The name of the public IP address configuration
:®
O
computeScaleSetOsProfile1azure:compute/ScaleSetOsProfile:ScaleSetOsProfileÚ
×}
adminPasswordB" fSpecifies the administrator password to use for all the instances of virtual machines in a scale set.

adminUsername" lSpecifies the administrator account name to use for all the instances of virtual machines in the scale set.

computerNamePrefix" çSpecifies the computer name prefix for all of the virtual machines in the scale set. Computer name prefixes must be 1 to 9 characters long for windows images and 1 - 58 for Linux. Changing this forces a new resource to be created.
Ì

customDataB" ·Specifies custom data to supply to the machine. On Linux-based systems, this can be used as a cloud-init script. On other systems, this will be copied as a file on disk. Internally, this provider will base64 encode this value before sending it to the API. The maximum length of the binary array is 65535 bytes.
:æ
p
computeScaleSetOsProfileLinuxConfigGazure:compute/ScaleSetOsProfileLinuxConfig:ScaleSetOsProfileLinuxConfigñ
î®
disablePasswordAuthenticationB
 Specifies whether password authentication should be disabled. Defaults to `false`. Changing this forces a new resource to be created.
º
sshKeysB*:

compute"ScaleSetOsProfileLinuxConfigSshKeySazure:compute/ScaleSetOsProfileLinuxConfigSshKey:ScaleSetOsProfileLinuxConfigSshKeyOne or more `ssh_keys` blocks as defined below.

> **Note:** Please note that the only allowed `path` is `/home/<username>/.ssh/authorized_keys` due to a limitation of Azure.

> **NOTE:** At least one `ssh_keys` block is required if `disable_password_authentication` is set to `true`.
:©

compute"ScaleSetOsProfileLinuxConfigSshKeySazure:compute/ScaleSetOsProfileLinuxConfigSshKey:ScaleSetOsProfileLinuxConfigSshKey¡
Ø
keyDataB" ÆThe Public SSH Key which should be written to the `path` defined above.

> **Note:** Azure only supports RSA SSH2 key signatures of at least 2048 bits in length

> **NOTE:** Rather than defining this in-line you can source this from a local file using the `file` function - for example `key_data = file("~/.ssh/id_rsa.pub")`.
À
path" ³The path of the destination file on the virtual machine

> **NOTE:** Due to a limitation in the Azure VM Agent the only allowed `path` is `/home/{username}/.ssh/authorized_keys`.
:²
a
computeScaleSetOsProfileSecret=azure:compute/ScaleSetOsProfileSecret:ScaleSetOsProfileSecretÌ
É5
sourceVaultId"  Specifies the key vault to use.

vaultCertificatesB*:

compute'ScaleSetOsProfileSecretVaultCertificate]azure:compute/ScaleSetOsProfileSecretVaultCertificate:ScaleSetOsProfileSecretVaultCertificateZ(Required, on Windows machines) One or more `vault_certificates` blocks as defined below.
:á

compute'ScaleSetOsProfileSecretVaultCertificate]azure:compute/ScaleSetOsProfileSecretVaultCertificate:ScaleSetOsProfileSecretVaultCertificateÊ
Ç
certificateStoreB" (Required, on windows machines) Specifies the certificate store on the Virtual Machine where the certificate should be added to.
¥
certificateUrl" It is the Base64 encoding of a JSON Object that which is encoded in UTF-8 of which the contents need to be `data`, `dataType` and `password`.
:ú
v
computeScaleSetOsProfileWindowsConfigKazure:compute/ScaleSetOsProfileWindowsConfig:ScaleSetOsProfileWindowsConfigÿ
ü¥
additionalUnattendConfigsÊBÇ*Ä:Á
¾
compute6ScaleSetOsProfileWindowsConfigAdditionalUnattendConfig{azure:compute/ScaleSetOsProfileWindowsConfigAdditionalUnattendConfig:ScaleSetOsProfileWindowsConfigAdditionalUnattendConfig;An `additional_unattend_config` block as documented below.
x
enableAutomaticUpgradesB
 WIndicates whether virtual machines in the scale set are enabled for automatic updates.

provisionVmAgentB
 hIndicates whether virtual machine agent should be provisioned on the virtual machines in the scale set.
Ò
winrmsB*:

compute#ScaleSetOsProfileWindowsConfigWinrmUazure:compute/ScaleSetOsProfileWindowsConfigWinrm:ScaleSetOsProfileWindowsConfigWinrm4A collection of `winrm` blocks as documented below.
:û
¾
compute6ScaleSetOsProfileWindowsConfigAdditionalUnattendConfig{azure:compute/ScaleSetOsProfileWindowsConfigAdditionalUnattendConfig:ScaleSetOsProfileWindowsConfigAdditionalUnattendConfig·
´
	component" Specifies the name of the component to configure with the added content. The only allowable value is `Microsoft-Windows-Shell-Setup`.

content" Specifies the base-64 encoded XML formatted content that is added to the unattend.xml file for the specified path and component.
r
pass" fSpecifies the name of the pass that the content applies to. The only allowable value is `oobeSystem`.

settingName" {Specifies the name of the setting to which the content applies. Possible values are: `FirstLogonCommands` and `AutoLogon`.
:®

compute#ScaleSetOsProfileWindowsConfigWinrmUazure:compute/ScaleSetOsProfileWindowsConfigWinrm:ScaleSetOsProfileWindowsConfigWinrm£
 i
certificateUrlB" QSpecifies URL of the certificate with which new Virtual Machines is provisioned.
3
protocol" #Specifies the protocol of listener
:ê
m
computeScaleSetPacketCaptureFilterEazure:compute/ScaleSetPacketCaptureFilter:ScaleSetPacketCaptureFilterø

õ
Í
localIpAddressB" ´The local IP Address to be filtered on. Specify `127.0.0.1` for a single address entry, `127.0.0.1-127.0.0.255` for a range and `127.0.0.1;127.0.0.5` for multiple entries. Multiple ranges and mixing ranges with multiple entries are currently not supported. Changing this forces a new resource to be created.

	localPortB" The local port to be filtered on. Specify `80` for single port entry, `80-85` for a range and `80;443;` for multiple entries. Multiple ranges and mixing ranges with multiple entries are currently not supported. Changing this forces a new resource to be created.

protocol" The Protocol to be filtered on. Possible values include `Any`, `TCP` and `UDP`. Changing this forces a new resource to be created.
Ï
remoteIpAddressB" µThe remote IP Address to be filtered on. Specify `127.0.0.1` for a single address entry, `127.0.0.1-127.0.0.255` for a range and `127.0.0.1;127.0.0.5` for multiple entries. Multiple ranges and mixing ranges with multiple entries are currently not supported. Changing this forces a new resource to be created.


remotePortB" The remote port to be filtered on. Specify `80` for single port entry, `80-85` for a range and `80;443;` for multiple entries. Multiple ranges and mixing ranges with multiple entries are currently not supported. Changing this forces a new resource to be created.
:

compute!ScaleSetPacketCaptureMachineScopeQazure:compute/ScaleSetPacketCaptureMachineScope:ScaleSetPacketCaptureMachineScope
Ì
excludeInstanceIdsB*" ­A list of Virtual Machine Scale Set instance IDs which should be excluded from running Packet Capture, e.g. `["0", "2"]`. Changing this forces a new resource to be created.
Ã
includeInstanceIdsB*" ¤A list of Virtual Machine Scale Set instance IDs which should be included for Packet Capture, e.g. `["1", "3"]`. Changing this forces a new resource to be created.
:Ö

compute$ScaleSetPacketCaptureStorageLocationWazure:compute/ScaleSetPacketCaptureStorageLocation:ScaleSetPacketCaptureStorageLocationÈ
Å¬
filePathB" A valid local path on the targeting VM. Must include the name of the capture file (*.cap). For Linux virtual machine it must start with `/var/captures`.
°
storageAccountIdB" The ID of the storage account to save the packet capture session

> **NOTE:** At least one of `file_path` or `storage_account_id` must be specified.
a
storagePathB" LThe URI of the storage path where the packet capture sessions are saved to.
:
@
computeScaleSetPlan'azure:compute/ScaleSetPlan:ScaleSetPlanÊ
ÇB
name" 6Specifies the name of the image from the marketplace.
H
product" 9Specifies the product of the image from the marketplace.
7
	publisher" &Specifies the publisher of the image.
:¼
p
computeScaleSetRollingUpgradePolicyGazure:compute/ScaleSetRollingUpgradePolicy:ScaleSetRollingUpgradePolicyÇ

Ä
Ø
maxBatchInstancePercentB ¶The maximum percent of total virtual machine instances that will be upgraded simultaneously by the rolling upgrade in one batch. As this is a maximum, unhealthy instances in previous or future batches can cause the percentage of instances in a batch to decrease to ensure higher reliability. Defaults to `20`.

maxUnhealthyInstancePercentB ÚThe maximum percentage of the total virtual machine instances in the scale set that can be simultaneously unhealthy, either as a result of being upgraded, or by being found in an unhealthy state by the virtual machine health checks before the rolling upgrade aborts. This constraint will be checked prior to starting any batch. Defaults to `20`.
¡
#maxUnhealthyUpgradedInstancePercentB óThe maximum percentage of upgraded virtual machine instances that can be found to be in an unhealthy state. This check will happen after each batch is upgraded. If this percentage is ever exceeded, the rolling update aborts. Defaults to `20`.
¿
pauseTimeBetweenBatchesB" The wait time between completing the update for all virtual machines in one batch and starting the next batch. The time duration should be specified in ISO 8601 format for duration (<https://en.wikipedia.org/wiki/ISO_8601#Durations>). Defaults to `PT0S` seconds represented as `PT0S`.
:Æ
=
computeScaleSetSku%azure:compute/ScaleSetSku:ScaleSetSku
K
capacity ;Specifies the number of virtual machines in the scale set.
C
name" 7Specifies the size of virtual machines in a scale set.
m
tierB" _Specifies the tier of virtual machines in a scale set. Possible values, `standard` or `basic`.
:ß
v
computeScaleSetStorageProfileDataDiskKazure:compute/ScaleSetStorageProfileDataDisk:ScaleSetStorageProfileDataDiskä
áy
cachingB" hSpecifies the caching requirements. Possible values include: `None` (default), `ReadOnly`, `ReadWrite`.
z
createOption" fSpecifies how the data disk should be created. The only possible options are `FromImage` and `Empty`.
p

diskSizeGbB \Specifies the size of the disk in GB. This element is required when creating an empty disk.
c
lun XSpecifies the Logical Unit Number of the disk in each virtual machine in the scale set.

managedDiskTypeB" wSpecifies the type of managed disk to create. Value must be either `Standard_LRS`, `StandardSSD_LRS` or `Premium_LRS`.
:ó

compute$ScaleSetStorageProfileImageReferenceWazure:compute/ScaleSetStorageProfileImageReference:ScaleSetStorageProfileImageReferenceå
â|
idB" pSpecifies the ID of the (custom) image to use to create the virtual machine scale set, as in the example below.
U
offerB" FSpecifies the offer of the image used to create the virtual machines.
]
	publisherB" JSpecifies the publisher of the image used to create the virtual machines.
Q
skuB" DSpecifies the SKU of the image used to create the virtual machines.
Y
versionB" HSpecifies the version of the image used to create the virtual machines.
:°
p
computeScaleSetStorageProfileOsDiskGazure:compute/ScaleSetStorageProfileOsDisk:ScaleSetStorageProfileOsDisk»

¸
y
cachingB" hSpecifies the caching requirements. Possible values include: `None` (default), `ReadOnly`, `ReadWrite`.
r
createOption" ^Specifies how the virtual machine should be created. The only possible option is `FromImage`.
¨
imageB" Specifies the blob URI for user image. A virtual machine scale set creates an os disk in the same container as the user image.
Updating the osDisk image causes the existing disk to be deleted and a new one created with the new image. If the VM scale set is in Manual upgrade mode then the virtual machines are not updated until they have manualUpgrade applied to them.
When setting this field `os_type` needs to be specified. Cannot be used when `vhd_containers`, `managed_disk_type` or `storage_profile_image_reference` are specified.
Ó
managedDiskTypeB" ¹Specifies the type of managed disk to create. Value you must be either `Standard_LRS`, `StandardSSD_LRS` or `Premium_LRS`. Cannot be used when `vhd_containers` or `image` is specified.
{
nameB" mSpecifies the disk name. Must be specified when using unmanaged disk ('managed_disk_type' property not set).
V
osTypeB" FSpecifies the operating system Type, valid values are windows, Linux.
q
vhdContainersB*" XSpecifies the VHD URI. Cannot be used when `image` or `managed_disk_type` is specified.
:
g
computeSharedImageGallerySharingAazure:compute/SharedImageGallerySharing:SharedImageGallerySharing
ï
communityGallery B:

compute)SharedImageGallerySharingCommunityGalleryaazure:compute/SharedImageGallerySharingCommunityGallery:SharedImageGallerySharingCommunityGallery·A `community_gallery` block as defined below. Changing this forces a new resource to be created.

> **NOTE:** `community_gallery` must be set when `permission` is set to `Community`.
¢

permission" The permission of the Shared Image Gallery when sharing. Possible values are `Community`, `Groups` and `Private`. Changing this forces a new resource to be created.

> **Note:** This requires that the Preview Feature `Microsoft.Compute/CommunityGalleries` is enabled, see [the documentation](https://learn.microsoft.com/azure/virtual-machines/share-gallery-community?tabs=cli) for more information.
:

compute)SharedImageGallerySharingCommunityGalleryaazure:compute/SharedImageGallerySharingCommunityGallery:SharedImageGallerySharingCommunityGalleryö
ó|
eula" pThe End User Licence Agreement for the Shared Image Gallery. Changing this forces a new resource to be created.
q
nameB" cSpecifies the name of the Shared Image Gallery. Changing this forces a new resource to be created.

prefix" uPrefix of the community public name for the Shared Image Gallery. Changing this forces a new resource to be created.
~
publisherEmail" hEmail of the publisher for the Shared Image Gallery. Changing this forces a new resource to be created.
z
publisherUri" fURI of the publisher for the Shared Image Gallery. Changing this forces a new resource to be created.
:¨
[
computeSharedImageIdentifier9azure:compute/SharedImageIdentifier:SharedImageIdentifierÈ
Åf
offer" YThe Offer Name for this Shared Image. Changing this forces a new resource to be created.
o
	publisher" ^The Publisher Name for this Gallery Image. Changing this forces a new resource to be created.
j
sku" _The Name of the SKU for this Gallery Image. Changing this forces a new resource to be created.
:Ì
a
computeSharedImagePurchasePlan=azure:compute/SharedImagePurchasePlan:SharedImagePurchasePlanæ
ãm
name" aThe Purchase Plan Name for this Shared Image. Changing this forces a new resource to be created.
v
productB" eThe Purchase Plan Product for this Gallery Image. Changing this forces a new resource to be created.
z
	publisherB" gThe Purchase Plan Publisher for this Gallery Image. Changing this forces a new resource to be created.
:
v
computeSharedImageVersionTargetRegionKazure:compute/SharedImageVersionTargetRegion:SharedImageVersionTargetRegion
¦
diskEncryptionSetIdB" The ID of the Disk Encryption Set to encrypt the Image Version in the target region. Changing this forces a new resource to be created.

excludeFromLatestEnabledB
 |Specifies whether this Shared Image Version should be excluded when querying for the `latest` version. Defaults to `false`.
G
name" ;The Azure Region in which this Image Version should exist.
b
regionalReplicaCount FThe number of replicas of the Image Version to be created per region.

storageAccountTypeB" ûThe storage account type for the image version. Possible values are `Standard_LRS`, `Premium_LRS` and `Standard_ZRS`. Defaults to `Standard_LRS`. You can store all of your image version replicas in Zone Redundant Storage by specifying `Standard_ZRS`.
:Ì
j
computeSnapshotEncryptionSettingsCazure:compute/SnapshotEncryptionSettings:SnapshotEncryptionSettingsÝ
Úë
diskEncryptionKey£: 

compute+SnapshotEncryptionSettingsDiskEncryptionKeyeazure:compute/SnapshotEncryptionSettingsDiskEncryptionKey:SnapshotEncryptionSettingsDiskEncryptionKey0A `disk_encryption_key` block as defined below.
é
keyEncryptionKey£B :

compute*SnapshotEncryptionSettingsKeyEncryptionKeycazure:compute/SnapshotEncryptionSettingsKeyEncryptionKey:SnapshotEncryptionSettingsKeyEncryptionKey/A `key_encryption_key` block as defined below.
:»

compute+SnapshotEncryptionSettingsDiskEncryptionKeyeazure:compute/SnapshotEncryptionSettingsDiskEncryptionKey:SnapshotEncryptionSettingsDiskEncryptionKey

	secretUrl" The URL to the Key Vault Secret used as the Disk Encryption Key. This can be found as `id` on the `azure.keyvault.Secret` resource.
z
sourceVaultId" eThe ID of the source Key Vault. This can be found as `id` on the `azure.keyvault.KeyVault` resource.
:­

compute*SnapshotEncryptionSettingsKeyEncryptionKeycazure:compute/SnapshotEncryptionSettingsKeyEncryptionKey:SnapshotEncryptionSettingsKeyEncryptionKey

keyUrl" }The URL to the Key Vault Key used as the Key Encryption Key. This can be found as `id` on the `azure.keyvault.Key` resource.
z
sourceVaultId" eThe ID of the source Key Vault. This can be found as `id` on the `azure.keyvault.KeyVault` resource.
:

compute$VirtualMachineAdditionalCapabilitiesWazure:compute/VirtualMachineAdditionalCapabilities:VirtualMachineAdditionalCapabilitiesó
ðí
ultraSsdEnabled
 ÕShould Ultra SSD disk be enabled for this Virtual Machine? Changing this forces a new resource to be created.

> **Note:** Azure Ultra Disk Storage is only available in a region that support availability zones and can only enabled on the following VM series: `ESv3`, `DSv3`, `FSv3`, `LSv2`, `M` and `Mv2`. For more information see the `Azure Ultra Disk Storage` [product documentation](https://docs.microsoft.com/azure/virtual-machines/windows/disks-enable-ultra-ssd).
:
s
computeVirtualMachineBootDiagnosticsIazure:compute/VirtualMachineBootDiagnostics:VirtualMachineBootDiagnostics
L
enabled
 =Should Boot Diagnostics be enabled for this Virtual Machine?
Ê

storageUri" ·The Storage Account's Blob Endpoint which should hold the virtual machine's diagnostic files.

> **NOTE:** This needs to be the root of a Storage Account and not a Storage Container.
:Ð	
^
computeVirtualMachineIdentity;azure:compute/VirtualMachineIdentity:VirtualMachineIdentityí
êÝ
identityIdsB*" ÅSpecifies a list of User Assigned Managed Identity IDs to be assigned to this Virtual Machine.

> **NOTE:** This is required when `type` is set to `UserAssigned` or `SystemAssigned, UserAssigned`.
U
principalIdB" @The Principal ID associated with this Managed Service Identity.

tenantIdB" 
type" Specifies the type of Managed Service Identity that should be configured on this Virtual Machine. Possible values are `SystemAssigned`, `UserAssigned`, `SystemAssigned, UserAssigned` (to enable both).

> **NOTE:** Managed Service Identity previously required the installation of a VM Extension, but this information [is now available via the Azure Instance Metadata Service](https://docs.microsoft.com/azure/active-directory/managed-service-identity/overview#how-does-it-work).

> **NOTE:** When `type` is set to `SystemAssigned`, identity the Principal ID can be retrieved after the virtual machine has been created. More details are available below. See [documentation](https://docs.microsoft.com/azure/active-directory/managed-service-identity/overview) for additional information.
:Ø
a
computeVirtualMachineOsProfile=azure:compute/VirtualMachineOsProfile:VirtualMachineOsProfileò
ï¨
adminPasswordB" (Optional for Windows, Optional for Linux) The password associated with the local administrator account.

> **NOTE:** If using Linux, it may be preferable to use SSH Key authentication (available in the `os_profile_linux_config` block) instead of password authentication.
L
adminUsername" 7Specifies the name of the local administrator account.
r
computerName" ^Specifies the name of the Virtual Machine. Changing this forces a new resource to be created.
ÿ

customDataB" êSpecifies custom data to supply to the machine. On Linux-based systems, this can be used as a cloud-init script. On other systems, this will be copied as a file on disk. Internally, this provider will base64 encode this value before sending it to the API. The maximum length of the binary array is 65535 bytes. Changing this forces a new resource to be created.
:Ú

compute"VirtualMachineOsProfileLinuxConfigSazure:compute/VirtualMachineOsProfileLinuxConfig:VirtualMachineOsProfileLinuxConfigÒ
Ï
disablePasswordAuthentication
 xSpecifies whether password authentication should be disabled. If set to `false`, an `admin_password` must be specified.
¬
sshKeys B*:

compute(VirtualMachineOsProfileLinuxConfigSshKey_azure:compute/VirtualMachineOsProfileLinuxConfigSshKey:VirtualMachineOsProfileLinuxConfigSshKey~One or more `ssh_keys` blocks as defined below. This field is required if `disable_password_authentication` is set to `true`.
:

compute(VirtualMachineOsProfileLinuxConfigSshKey_azure:compute/VirtualMachineOsProfileLinuxConfigSshKey:VirtualMachineOsProfileLinuxConfigSshKeyú
÷±
keyData" ¡The Public SSH Key which should be written to the `path` defined above.

> **Note:** Azure only supports RSA SSH2 key signatures of at least 2048 bits in length
À
path" ³The path of the destination file on the virtual machine

> **NOTE:** Due to a limitation in the Azure VM Agent the only allowed `path` is `/home/{username}/.ssh/authorized_keys`.
:À
s
computeVirtualMachineOsProfileSecretIazure:compute/VirtualMachineOsProfileSecret:VirtualMachineOsProfileSecretÈ
Å?
sourceVaultId" *Specifies the ID of the Key Vault to use.

vaultCertificates¯B¬*©:¦
£
compute-VirtualMachineOsProfileSecretVaultCertificateiazure:compute/VirtualMachineOsProfileSecretVaultCertificate:VirtualMachineOsProfileSecretVaultCertificate:One or more `vault_certificates` blocks as defined below.
:
£
compute-VirtualMachineOsProfileSecretVaultCertificateiazure:compute/VirtualMachineOsProfileSecretVaultCertificate:VirtualMachineOsProfileSecretVaultCertificateì
éª
certificateStoreB" (Required, on windows machines) Specifies the certificate store on the Virtual Machine where the certificate should be added to, such as `My`.
¹
certificateUrl" ¢The ID of the Key Vault Secret. Stored secret is the Base64 encoding of a JSON Object that which is encoded in UTF-8 of which the contents need to be:

```json
{
"data":"<Base64-encoded-certificate>",
"dataType":"pfx",
"password":"<pfx-file-password>"
}
```

> **NOTE:** If your certificate is stored in Azure Key Vault - this can be sourced from the `secret_id` property on the `azure.keyvault.Certificate` resource.
:à	

compute$VirtualMachineOsProfileWindowsConfigWazure:compute/VirtualMachineOsProfileWindowsConfig:VirtualMachineOsProfileWindowsConfigÒ
Ïµ
additionalUnattendConfigsÝBÚ*×:Ô
Ñ
compute<VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfigazure:compute/VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfig:VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfig8An `additional_unattend_config` block as defined below.
m
enableAutomaticUpgradesB
 LAre automatic updates enabled on this Virtual Machine? Defaults to `false`.
Û
provisionVmAgentB
 ÀShould the Azure Virtual Machine Guest Agent be installed on this Virtual Machine? Defaults to `false`.

> **NOTE:** This is different from the Default value used for this field within Azure.
ç
timezoneB" ÔSpecifies the time zone of the virtual machine, [the possible values are defined here](https://jackstromberg.com/2017/01/list-of-time-zones-consumed-by-azure/). Changing this forces a new resource to be created.
Ý
winrms£B *:

compute)VirtualMachineOsProfileWindowsConfigWinrmaazure:compute/VirtualMachineOsProfileWindowsConfigWinrm:VirtualMachineOsProfileWindowsConfigWinrm-One or more `winrm` blocks as defined below.
:
Ñ
compute<VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfigazure:compute/VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfig:VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfig·
´
	component" Specifies the name of the component to configure with the added content. The only allowable value is `Microsoft-Windows-Shell-Setup`.

content" Specifies the base-64 encoded XML formatted content that is added to the unattend.xml file for the specified path and component.
r
pass" fSpecifies the name of the pass that the content applies to. The only allowable value is `oobeSystem`.

settingName" {Specifies the name of the setting to which the content applies. Possible values are: `FirstLogonCommands` and `AutoLogon`.
:î

compute)VirtualMachineOsProfileWindowsConfigWinrmaazure:compute/VirtualMachineOsProfileWindowsConfigWinrm:VirtualMachineOsProfileWindowsConfigWinrmÑ
Îî
certificateUrlB" ÕThe ID of the Key Vault Secret which contains the encrypted Certificate which should be installed on the Virtual Machine. This certificate must also be specified in the `vault_certificates` block within the `os_profile_secrets` block.

> **NOTE:** This can be sourced from the `secret_id` field on the `azure.keyvault.Certificate` resource.
[
protocol" KSpecifies the protocol of listener. Possible values are `HTTP` or `HTTPS`.
:¡
R
computeVirtualMachinePlan3azure:compute/VirtualMachinePlan:VirtualMachinePlanÊ
ÇB
name" 6Specifies the name of the image from the marketplace.
H
product" 9Specifies the product of the image from the marketplace.
7
	publisher" &Specifies the publisher of the image.
:é
Ñ
compute<VirtualMachineScaleSetExtensionProtectedSettingsFromKeyVaultazure:compute/VirtualMachineScaleSetExtensionProtectedSettingsFromKeyVault:VirtualMachineScaleSetExtensionProtectedSettingsFromKeyVault
V
	secretUrl" EThe URL to the Key Vault Secret which stores the protected settings.
5
sourceVaultId"  The ID of the source Key Vault.
: 
s
computeVirtualMachineStorageDataDiskIazure:compute/VirtualMachineStorageDataDisk:VirtualMachineStorageDataDisk¨
¥
cachingB" rSpecifies the caching requirements for the Data Disk. Possible values include `None`, `ReadOnly` and `ReadWrite`.
©
createOption" Specifies how the data disk should be created. Possible values are `Attach`, `FromImage` and `Empty`.

> **NOTE:** If using an image that does not have data to be written to the Data Disk, use `Empty` as the create option in order to create the desired disk without any data.
F

diskSizeGbB 2Specifies the size of the data disk in gigabytes.

lun ~Specifies the logical unit number of the data disk. This needs to be unique within all the Data Disks on the Virtual Machine.
ó
managedDiskIdB" ÛSpecifies the ID of an Existing Managed Disk which should be attached to this Virtual Machine. When this field is set `create_option` must be set to `Attach`.

The following properties apply when using Unmanaged Disks:
¿
managedDiskTypeB" ¥Specifies the type of managed disk to create. Possible values are either `Standard_LRS`, `StandardSSD_LRS`, `Premium_LRS` or `UltraSSD_LRS`.

> **Note:** `managed_disk_type` of type `UltraSSD_LRS` is currently in preview and are not available to subscriptions that have not [requested](https://aka.ms/UltraSSDPreviewSignUp) onboarding to `Azure Ultra Disk Storage` preview. `Azure Ultra Disk Storage` is only available in `East US 2`, `North Europe`, and `Southeast Asia` regions. For more information see the `Azure Ultra Disk Storage` [product documentation](https://docs.microsoft.com/azure/virtual-machines/windows/disks-enable-ultra-ssd), [product blog](https://azure.microsoft.com/en-us/blog/announcing-the-general-availability-of-azure-ultra-disk-storage/) and [FAQ](https://docs.microsoft.com/azure/virtual-machines/windows/faq-for-disks#ultra-disks). You must also set `additional_capabilities.ultra_ssd_enabled` to `true`.
'
name" The name of the Data Disk.
T
vhdUriB" DSpecifies the URI of the VHD file backing this Unmanaged Data Disk.
å
writeAcceleratorEnabledB
 ÃSpecifies if Write Accelerator is enabled on the disk. This can only be enabled on `Premium_LRS` managed disks with no caching and [M-Series VMs](https://docs.microsoft.com/azure/virtual-machines/workloads/sap/how-to-enable-write-accelerator). Defaults to `false`.

The following properties apply when using Managed Disks:
:

compute#VirtualMachineStorageImageReferenceUazure:compute/VirtualMachineStorageImageReference:VirtualMachineStorageImageReference

idB" Specifies the ID of the Custom Image which the Virtual Machine should be created from. Changing this forces a new resource to be created.

offerB" xSpecifies the offer of the image used to create the virtual machine. Changing this forces a new resource to be created.

	publisherB" |Specifies the publisher of the image used to create the virtual machine. Changing this forces a new resource to be created.

skuB" vSpecifies the SKU of the image used to create the virtual machine. Changing this forces a new resource to be created.
Ï
versionB" ½Specifies the version of the image used to create the virtual machine. Changing this forces a new resource to be created.

To provision a Custom Image, the following fields are applicable:
:ô
m
computeVirtualMachineStorageOsDiskEazure:compute/VirtualMachineStorageOsDisk:VirtualMachineStorageOsDisk
ÿ
cachingB" pSpecifies the caching requirements for the OS Disk. Possible values include `None`, `ReadOnly` and `ReadWrite`.

createOption" pSpecifies how the OS Disk should be created. Possible values are `Attach` (managed disks only) and `FromImage`.
D

diskSizeGbB 0Specifies the size of the OS Disk in gigabytes.
Ä
imageUriB" ±Specifies the Image URI in the format `publisherName:offer:skus:version`. This field can also specify the [VHD URI](https://docs.microsoft.com/azure/virtual-machines/linux/tutorial-custom-images) of a custom VM image to clone. When cloning a Custom (Unmanaged) Disk Image the `os_type` field must be set.
ú
managedDiskIdB" âSpecifies the ID of an existing Managed Disk which should be attached as the OS Disk of this Virtual Machine. If this is set then the `create_option` must be set to `Attach`. Changing this forces a new resource to be created.
Ú
managedDiskTypeB" ÀSpecifies the type of Managed Disk which should be created. Possible values are `Standard_LRS`, `StandardSSD_LRS` or `Premium_LRS`.

The following properties apply when using Unmanaged Disks:
/
name" #Specifies the name of the OS Disk.
j
osTypeB" ZSpecifies the Operating System on the OS Disk. Possible values are `Linux` and `Windows`.

vhdUriB" uSpecifies the URI of the VHD file backing this Unmanaged OS Disk. Changing this forces a new resource to be created.
å
writeAcceleratorEnabledB
 ÃSpecifies if Write Accelerator is enabled on the disk. This can only be enabled on `Premium_LRS` managed disks with no caching and [M-Series VMs](https://docs.microsoft.com/azure/virtual-machines/workloads/sap/how-to-enable-write-accelerator). Defaults to `false`.

The following properties apply when using Managed Disks:
:¥

compute+WindowsVirtualMachineAdditionalCapabilitieseazure:compute/WindowsVirtualMachineAdditionalCapabilities:WindowsVirtualMachineAdditionalCapabilities
ÿQ
hibernationEnabledB
 5Whether to enable the hibernation capability or not.
©
ultraSsdEnabledB
 Should the capacity to enable Data Disks of the `UltraSSD_LRS` storage account type be supported on this Virtual Machine? Defaults to `false`.
:
¦
compute.WindowsVirtualMachineAdditionalUnattendContentkazure:compute/WindowsVirtualMachineAdditionalUnattendContent:WindowsVirtualMachineAdditionalUnattendContentæ
ãª
content" The XML formatted content that is added to the unattend.xml file for the specified path and component. Changing this forces a new resource to be created.
³
setting" £The name of the setting to which the content applies. Possible values are `AutoLogon` and `FirstLogonCommands`. Changing this forces a new resource to be created.
:¿

compute$WindowsVirtualMachineBootDiagnosticsWazure:compute/WindowsVirtualMachineBootDiagnostics:WindowsVirtualMachineBootDiagnostics±
®«
storageAccountUriB" The Primary/Secondary Endpoint for the Azure Storage Account which should be used to store Boot Diagnostics, including Console Output and Screenshots from the Hypervisor.

> **NOTE:** Passing a null value will utilize a Managed Storage Account to store Boot Diagnostics.
:ì

compute'WindowsVirtualMachineGalleryApplication]azure:compute/WindowsVirtualMachineGalleryApplication:WindowsVirtualMachineGalleryApplicationÕ
Ò¾
automaticUpgradeEnabledB
 Specifies whether the version will be automatically updated for the VM when a new Gallery Application version is available in PIR/SIG. Defaults to `false`.

configurationBlobUriB" lSpecifies the URI to an Azure Blob that will replace the default configuration for the package if provided.

orderB Specifies the order in which the packages have to be installed. Possible values are between `0` and `2147483647`. Defaults to `0`.
q
tagB" dSpecifies a passthrough value for more generic context. This field can be any valid `string` value.
®
&treatFailureAsDeploymentFailureEnabledB
 ~Specifies whether any failure for any operation in the VmApplication will fail the deployment of the VM. Defaults to `false`.
H
	versionId" 7Specifies the Gallery Application Version resource ID.
:ì
s
computeWindowsVirtualMachineIdentityIazure:compute/WindowsVirtualMachineIdentity:WindowsVirtualMachineIdentityô
ñå
identityIdsB*" ÍSpecifies a list of User Assigned Managed Identity IDs to be assigned to this Windows Virtual Machine.

> **NOTE:** This is required when `type` is set to `UserAssigned` or `SystemAssigned, UserAssigned`.
U
principalIdB" @The Principal ID associated with this Managed Service Identity.
O
tenantIdB" =The Tenant ID associated with this Managed Service Identity.
Þ
type" ÑSpecifies the type of Managed Service Identity that should be configured on this Windows Virtual Machine. Possible values are `SystemAssigned`, `UserAssigned`, `SystemAssigned, UserAssigned` (to enable both).
:õ
m
computeWindowsVirtualMachineOsDiskEazure:compute/WindowsVirtualMachineOsDisk:WindowsVirtualMachineOsDisk

caching" {The Type of Caching which should be used for the Internal OS Disk. Possible values are `None`, `ReadOnly` and `ReadWrite`.

diffDiskSettings¦B£: 

compute+WindowsVirtualMachineOsDiskDiffDiskSettingseazure:compute/WindowsVirtualMachineOsDiskDiffDiskSettings:WindowsVirtualMachineOsDiskDiffDiskSettingsÂA `diff_disk_settings` block as defined above. Changing this forces a new resource to be created.

> **NOTE:** `diff_disk_settings` can only be set when `caching` is set to `ReadOnly`. More information can be found [here](https://docs.microsoft.com/azure/virtual-machines/ephemeral-os-disks-deploy#vm-template-deployment)
¸
diskEncryptionSetIdB" The ID of the Disk Encryption Set which should be used to Encrypt this OS Disk. Conflicts with `secure_vm_disk_encryption_set_id`.

> **NOTE:** The Disk Encryption Set must have the `Reader` Role Assignment scoped on the Key Vault - in addition to an Access Policy to the Key Vault


diskSizeGbB íThe Size of the Internal OS Disk in GB, if you wish to vary from the size used in the image this Virtual Machine is sourced from.

> **NOTE:** If specified this must be equal to or larger than the size of the Image the Virtual Machine is based on. When creating a larger disk than exists in the image you'll need to repartition the disk to use the remaining space.
y
nameB" kThe name which should be used for the Internal OS Disk. Changing this forces a new resource to be created.

secureVmDiskEncryptionSetIdB" âThe ID of the Disk Encryption Set which should be used to Encrypt this OS Disk when the Virtual Machine is a Confidential VM. Conflicts with `disk_encryption_set_id`. Changing this forces a new resource to be created.

> **NOTE:** `secure_vm_disk_encryption_set_id` can only be specified when `security_encryption_type` is set to `DiskWithVMGuestState`.
º
securityEncryptionTypeB" Encryption Type when the Virtual Machine is a Confidential VM. Possible values are `VMGuestStateOnly` and `DiskWithVMGuestState`. Changing this forces a new resource to be created.

> **NOTE:** `vtpm_enabled` must be set to `true` when `security_encryption_type` is specified.

> **NOTE:** `encryption_at_host_enabled` cannot be set to `true` when `security_encryption_type` is set to `DiskWithVMGuestState`.

storageAccountType" çThe Type of Storage Account which should back this the Internal OS Disk. Possible values are `Standard_LRS`, `StandardSSD_LRS`, `Premium_LRS`, `StandardSSD_ZRS` and `Premium_ZRS`. Changing this forces a new resource to be created.
å
writeAcceleratorEnabledB
 ÃShould Write Accelerator be Enabled for this OS Disk? Defaults to `false`.

> **NOTE:** This requires that the `storage_account_type` is set to `Premium_LRS` and that `caching` is set to `None`.
:

compute+WindowsVirtualMachineOsDiskDiffDiskSettingseazure:compute/WindowsVirtualMachineOsDiskDiffDiskSettings:WindowsVirtualMachineOsDiskDiffDiskSettingsô
ñª
option" Specifies the Ephemeral Disk Settings for the OS Disk. At this time the only possible value is `Local`. Changing this forces a new resource to be created.
Á
	placementB" ­Specifies where to store the Ephemeral Disk. Possible values are `CacheDisk` and `ResourceDisk`. Defaults to `CacheDisk`. Changing this forces a new resource to be created.
:Ü

compute(WindowsVirtualMachineOsImageNotification_azure:compute/WindowsVirtualMachineOsImageNotification:WindowsVirtualMachineOsImageNotificationÂ
¿¼
timeoutB" ªLength of time a notification to be sent to the VM on the instance metadata server till the VM gets OS upgraded. The only possible value is `PT15M`. Defaults to `PT15M`.
:û
g
computeWindowsVirtualMachinePlanAazure:compute/WindowsVirtualMachinePlan:WindowsVirtualMachinePlan

name" Specifies the Name of the Marketplace Image this Virtual Machine should be created from. Changing this forces a new resource to be created.

product" Specifies the Product of the Marketplace Image this Virtual Machine should be created from. Changing this forces a new resource to be created.
Ë
	publisher" ¹Specifies the Publisher of the Marketplace Image this Virtual Machine should be created from. Changing this forces a new resource to be created.

> **NOTE:** If you use the `plan` block with one of Microsoft's marketplace images (e.g. `publisher = "MicrosoftWindowsServer"`). This may prevent the purchase of the offer. An example Azure API error: `The Offer: 'WindowsServer' cannot be purchased by subscription: '12345678-12234-5678-9012-123456789012' as it is not to be sold in market: 'US'. Please choose a subscription which is associated with a different market.`
:Î
µ
compute3WindowsVirtualMachineScaleSetAdditionalCapabilitiesuazure:compute/WindowsVirtualMachineScaleSetAdditionalCapabilities:WindowsVirtualMachineScaleSetAdditionalCapabilities

ultraSsdEnabledB
 óShould the capacity to enable Data Disks of the `UltraSSD_LRS` storage account type be supported on this Virtual Machine Scale Set? Possible values are `true` or `false`. Defaults to `false`. Changing this forces a new resource to be created.
:ª
¾
compute6WindowsVirtualMachineScaleSetAdditionalUnattendContent{azure:compute/WindowsVirtualMachineScaleSetAdditionalUnattendContent:WindowsVirtualMachineScaleSetAdditionalUnattendContentæ
ãª
content" The XML formatted content that is added to the unattend.xml file for the specified path and component. Changing this forces a new resource to be created.
³
setting" £The name of the setting to which the content applies. Possible values are `AutoLogon` and `FirstLogonCommands`. Changing this forces a new resource to be created.
:±

¸
compute4WindowsVirtualMachineScaleSetAutomaticInstanceRepairwazure:compute/WindowsVirtualMachineScaleSetAutomaticInstanceRepair:WindowsVirtualMachineScaleSetAutomaticInstanceRepairó
ðÐ
actionB" ¿The repair action that will be used for repairing unhealthy virtual machines in the scale set. Possible values include `Replace`, `Restart`, `Reimage`.

> **Note:**  Once the `action` field has been set it will always return the last value it was assigned if it is removed from the configuration file.

> **Note:**  If you wish to update the repair `action` of an existing `automatic_instance_repair` policy, you must first `disable` the `automatic_instance_repair` policy before you can re-enable the `automatic_instance_repair` policy with the new repair `action` defined.
b
enabled
 SShould the automatic instance repair be enabled on this Virtual Machine Scale Set?
¶
gracePeriodB"  Amount of time for which automatic repairs will be delayed. The grace period starts right after the VM is found unhealthy. Possible values are between `10` and `90` minutes. The time duration should be specified in `ISO 8601` format (e.g. `PT10M` to `PT90M`).

> **Note:**  Once the `grace_period` field has been set it will always return the last value it was assigned if it is removed from the configuration file.
:Â
»
compute5WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyyazure:compute/WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicy:WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicy
þH
disableAutomaticRollback
 (Should automatic rollbacks be disabled?
±
enableAutomaticOsUpgrade
 Should OS Upgrades automatically be applied to Scale Set instances in a rolling fashion when a newer version of the OS Image becomes available?
:Ö
 
compute,WindowsVirtualMachineScaleSetBootDiagnosticsgazure:compute/WindowsVirtualMachineScaleSetBootDiagnostics:WindowsVirtualMachineScaleSetBootDiagnostics°
­ª
storageAccountUriB" The Primary/Secondary Endpoint for the Azure Storage Account which should be used to store Boot Diagnostics, including Console Output and Screenshots from the Hypervisor.

> **Note:** Passing a null value will utilize a Managed Storage Account to store Boot Diagnostics
:

compute%WindowsVirtualMachineScaleSetDataDiskYazure:compute/WindowsVirtualMachineScaleSetDataDisk:WindowsVirtualMachineScaleSetDataDisk

caching" uThe type of Caching which should be used for this Data Disk. Possible values are `None`, `ReadOnly` and `ReadWrite`.
ß
createOptionB" ÈThe create option which should be used for this Data Disk. Possible values are `Empty` and `FromImage`. Defaults to `Empty`. (`FromImage` should only be used if the source image includes data disks).

diskEncryptionSetIdB" ðThe ID of the Disk Encryption Set which should be used to encrypt this Data Disk. Changing this forces a new resource to be created.

> **Note:** The Disk Encryption Set must have the `Reader` Role Assignment scoped on the Key Vault - in addition to an Access Policy to the Key Vault

> **Note:** Disk Encryption Sets are in Public Preview in a limited set of regions
E

diskSizeGb 3The size of the Data Disk which should be created.
f
lun [The Logical Unit Number of the Data Disk, which must be unique within the Virtual Machine.
)
nameB" The name of the Data Disk.
ç
storageAccountType" ÌThe Type of Storage Account which should back this Data Disk. Possible values include `Standard_LRS`, `StandardSSD_LRS`, `StandardSSD_ZRS`, `Premium_LRS`, `PremiumV2_LRS`, `Premium_ZRS` and `UltraSSD_LRS`.

> **Note:** `UltraSSD_LRS` is only supported when `ultra_ssd_enabled` within the `additional_capabilities` block is enabled.
¦
ultraSsdDiskIopsReadWriteB Specifies the Read-Write IOPS for this Data Disk. Only settable when `storage_account_type` is `PremiumV2_LRS` or `UltraSSD_LRS`.
±
ultraSsdDiskMbpsReadWriteB Specifies the bandwidth in MB per second for this Data Disk. Only settable when `storage_account_type` is `PremiumV2_LRS` or `UltraSSD_LRS`.
ç
writeAcceleratorEnabledB
 ÅShould Write Accelerator be enabled for this Data Disk? Defaults to `false`.

> **Note:** This requires that the `storage_account_type` is set to `Premium_LRS` and that `caching` is set to `None`.
:

compute&WindowsVirtualMachineScaleSetExtension[azure:compute/WindowsVirtualMachineScaleSetExtension:WindowsVirtualMachineScaleSetExtension
Ñ
autoUpgradeMinorVersionB
 ¯Should the latest version of the Extension be used at Deployment Time, if one is available? This won't auto-update the extension on existing installation. Defaults to `true`.

automaticUpgradeEnabledB
 rShould the Extension be automatically updated whenever the Publisher releases a new version of this VM Extension?
¨
forceUpdateTagB" A value which, when different to the previous value can be used to force-run the Extension even if the Extension Configuration hasn't changed.
B
name" 6The name for the Virtual Machine Scale Set Extension.
¢
protectedSettingsB" A JSON String which specifies Sensitive Settings (such as Passwords) for the Extension.

> **Note:** Keys within the `protected_settings` block are notoriously case-sensitive, where the casing required (e.g. TitleCase vs snakeCase) depends on the Extension being used. Please refer to the documentation for the specific Virtual Machine Extension you're looking to use for more information.
¬
protectedSettingsFromKeyVaultïBì:é
æ
computeCWindowsVirtualMachineScaleSetExtensionProtectedSettingsFromKeyVaultazure:compute/WindowsVirtualMachineScaleSetExtensionProtectedSettingsFromKeyVault:WindowsVirtualMachineScaleSetExtensionProtectedSettingsFromKeyVaultA `protected_settings_from_key_vault` block as defined below.

> **Note:** `protected_settings_from_key_vault` cannot be used with `protected_settings`
o
provisionAfterExtensionsB*" KAn ordered list of Extension names which this should be provisioned after.
;
	publisher" *Specifies the Publisher of the Extension.
ñ
settingsB" ÞA JSON String which specifies Settings for the Extension.

> **Note:** Keys within the `settings` block are notoriously case-sensitive, where the casing required (e.g. TitleCase vs snakeCase) depends on the Extension being used. Please refer to the documentation for the specific Virtual Machine Extension you're looking to use for more information.
1
type" %Specifies the Type of the Extension.
~
typeHandlerVersion" dSpecifies the version of the extension to use, available versions can be found using the Azure CLI.
:þ
æ
computeCWindowsVirtualMachineScaleSetExtensionProtectedSettingsFromKeyVaultazure:compute/WindowsVirtualMachineScaleSetExtensionProtectedSettingsFromKeyVault:WindowsVirtualMachineScaleSetExtensionProtectedSettingsFromKeyVault
V
	secretUrl" EThe URL to the Key Vault Secret which stores the protected settings.
5
sourceVaultId"  The ID of the source Key Vault.
:á
©
compute/WindowsVirtualMachineScaleSetGalleryApplicationmazure:compute/WindowsVirtualMachineScaleSetGalleryApplication:WindowsVirtualMachineScaleSetGalleryApplication²
¯¾
configurationBlobUriB" Specifies the URI to an Azure Blob that will replace the default configuration for the package if provided. Changing this forces a new resource to be created.
Æ
orderB ¶Specifies the order in which the packages have to be installed. Possible values are between `0` and `2147483647`. Defaults to `0`. Changing this forces a new resource to be created.
¥
tagB" Specifies a passthrough value for more generic context. This field can be any valid `string` value. Changing this forces a new resource to be created.
{
	versionId" jSpecifies the Gallery Application Version resource ID. Changing this forces a new resource to be created.
:

compute%WindowsVirtualMachineScaleSetIdentityYazure:compute/WindowsVirtualMachineScaleSetIdentity:WindowsVirtualMachineScaleSetIdentity
ï
identityIdsB*" ×Specifies a list of User Assigned Managed Identity IDs to be assigned to this Windows Virtual Machine Scale Set.

> **Note:** This is required when `type` is set to `UserAssigned` or `SystemAssigned, UserAssigned`.
U
principalIdB" @The Principal ID associated with this Managed Service Identity.
O
tenantIdB" =The Tenant ID associated with this Managed Service Identity.
è
type" ÛSpecifies the type of Managed Service Identity that should be configured on this Windows Virtual Machine Scale Set. Possible values are `SystemAssigned`, `UserAssigned`, `SystemAssigned, UserAssigned` (to enable both).
:·	
£
compute-WindowsVirtualMachineScaleSetNetworkInterfaceiazure:compute/WindowsVirtualMachineScaleSetNetworkInterface:WindowsVirtualMachineScaleSetNetworkInterface
o

dnsServersB*" YA list of IP Addresses of DNS Servers which should be assigned to the Network Interface.
v
enableAcceleratedNetworkingB
 QDoes this Network Interface support Accelerated Networking? Defaults to `false`.
d
enableIpForwardingB
 HDoes this Network Interface support IP Forwarding? Defaults to `false`.
©
ipConfigurationsÚ*×:Ô
Ñ
compute<WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationazure:compute/WindowsVirtualMachineScaleSetNetworkInterfaceIpConfiguration:WindowsVirtualMachineScaleSetNetworkInterfaceIpConfiguration8One or more `ip_configuration` blocks as defined above.
y
name" mThe Name which should be used for this Network Interface. Changing this forces a new resource to be created.
w
networkSecurityGroupIdB" WThe ID of a Network Security Group which should be assigned to this Network Interface.

primaryB
 Is this the Primary IP Configuration?

> **Note:** If multiple `network_interface` blocks are specified, one must be set to `primary`.
:Ì
Ñ
compute<WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationazure:compute/WindowsVirtualMachineScaleSetNetworkInterfaceIpConfiguration:WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationõ
ò°
'applicationGatewayBackendAddressPoolIdsB*" }A list of Backend Address Pools ID's from a Application Gateway which this Virtual Machine Scale Set should be connected to.

applicationSecurityGroupIdsB*" gA list of Application Security Group ID's which this Virtual Machine Scale Set should be connected to.
Ï
!loadBalancerBackendAddressPoolIdsB*" ¡A list of Backend Address Pools ID's from a Load Balancer which this Virtual Machine Scale Set should be connected to.

> **Note:**  When the Virtual Machine Scale Set is configured to have public IPs per instance are created with a load balancer, the SKU of the Virtual Machine instance IPs is determined by the SKU of the Virtual Machine Scale Sets Load Balancer (e.g. `Basic` or `Standard`). Alternatively, you may use the `public_ip_prefix_id` field to generate instance-level IPs in a virtual machine scale set as well. The zonal properties of the prefix will be passed to the Virtual Machine instance IPs, though they will not be shown in the output. To view the public IP addresses assigned to the Virtual Machine Scale Sets Virtual Machine instances use the **az vmss list-instance-public-ips --resource-group `ResourceGroupName` --name `VirtualMachineScaleSetName`** CLI command.

> **Note:** When using this field you'll also need to configure a Rule for the Load Balancer, and use a `depends_on` between this resource and the Load Balancer Rule.
½
loadBalancerInboundNatRulesIdsB*" A list of NAT Rule ID's from a Load Balancer which this Virtual Machine Scale Set should be connected to.

> **Note:** When using this field you'll also need to configure a Rule for the Load Balancer, and use a `depends_on` between this resource and the Load Balancer Rule.
E
name" 9The Name which should be used for this IP Configuration.
È
primaryB
 ¶Is this the Primary IP Configuration for this Network Interface? Defaults to `false`.

> **Note:** One `ip_configuration` block must be marked as Primary for each Network Interface.
Ð
publicIpAddressesB*:
þ
computeKWindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddress¥azure:compute/WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddress:WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddress.A `public_ip_address` block as defined below.

subnetIdB" The ID of the Subnet which this IP Configuration should be connected to.

> `subnet_id` is required if `version` is set to `IPv4`.

versionB" The Internet Protocol Version which should be used for this IP Configuration. Possible values are `IPv4` and `IPv6`. Defaults to `IPv4`.
:«
þ
computeKWindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddress¥azure:compute/WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddress:WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddress§
¤ù
domainNameLabelB" ßThe Prefix which should be used for the Domain Name Label for each Virtual Machine Instance. Azure concatenates the Domain Name Label and Virtual Machine Index to create a unique Domain Name Label for each Virtual Machine.

idleTimeoutInMinutesB eThe Idle Timeout in Minutes for the Public IP Address. Possible values are in the range `4` to `32`.

ipTagsB*:

computePWindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTag¯azure:compute/WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTag:WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagaOne or more `ip_tag` blocks as defined above. Changing this forces a new resource to be created.
=
name" 1The Name of the Public IP Address Configuration.

publicIpPrefixIdB" éThe ID of the Public IP Address Prefix from where Public IP Addresses should be allocated. Changing this forces a new resource to be created.

> **Note:** This functionality is in Preview and must be opted into via `az feature register --namespace Microsoft.Network --name AllowBringYourOwnPublicIpAddress` and then `az provider register -n Microsoft.Network`.
Ï
versionB" ½The Internet Protocol Version which should be used for this public IP address. Possible values are `IPv4` and `IPv6`. Defaults to `IPv4`. Changing this forces a new resource to be created.
:

computePWindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTag¯azure:compute/WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTag:WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagú
÷
tag" yThe IP Tag associated with the Public IP, such as `SQL` or `Storage`. Changing this forces a new resource to be created.
n
type" bThe Type of IP Tag, such as `FirstPartyUsage`. Changing this forces a new resource to be created.
:ï

compute#WindowsVirtualMachineScaleSetOsDiskUazure:compute/WindowsVirtualMachineScaleSetOsDisk:WindowsVirtualMachineScaleSetOsDiskä
á
caching" {The Type of Caching which should be used for the Internal OS Disk. Possible values are `None`, `ReadOnly` and `ReadWrite`.
·
diffDiskSettings¾B»:¸
µ
compute3WindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsuazure:compute/WindowsVirtualMachineScaleSetOsDiskDiffDiskSettings:WindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsbA `diff_disk_settings` block as defined above. Changing this forces a new resource to be created.
¿
diskEncryptionSetIdB" ¡The ID of the Disk Encryption Set which should be used to encrypt this OS Disk. Conflicts with `secure_vm_disk_encryption_set_id`. Changing this forces a new resource to be created.

> **Note:** The Disk Encryption Set must have the `Reader` Role Assignment scoped on the Key Vault - in addition to an Access Policy to the Key Vault

> **Note:** Disk Encryption Sets are in Public Preview in a limited set of regions


diskSizeGbB ôThe Size of the Internal OS Disk in GB, if you wish to vary from the size used in the image this Virtual Machine Scale Set is sourced from.

> **Note:** If specified this must be equal to or larger than the size of the Image the VM Scale Set is based on. When creating a larger disk than exists in the image you'll need to repartition the disk to use the remaining space.

secureVmDiskEncryptionSetIdB" ëThe ID of the Disk Encryption Set which should be used to Encrypt the OS Disk when the Virtual Machine Scale Set is Confidential VMSS. Conflicts with `disk_encryption_set_id`. Changing this forces a new resource to be created.

> **Note:** `secure_vm_disk_encryption_set_id` can only be specified when `security_encryption_type` is set to `DiskWithVMGuestState`.
Ä
securityEncryptionTypeB" £Encryption Type when the Virtual Machine Scale Set is Confidential VMSS. Possible values are `VMGuestStateOnly` and `DiskWithVMGuestState`. Changing this forces a new resource to be created.

> **Note:** `vtpm_enabled` must be set to `true` when `security_encryption_type` is specified.

> **Note:** `encryption_at_host_enabled` cannot be set to `true` when `security_encryption_type` is set to `DiskWithVMGuestState`.

storageAccountType" ëThe Type of Storage Account which should back this the Internal OS Disk. Possible values include `Standard_LRS`, `StandardSSD_LRS`, `StandardSSD_ZRS`, `Premium_LRS` and `Premium_ZRS`. Changing this forces a new resource to be created.
å
writeAcceleratorEnabledB
 ÃShould Write Accelerator be Enabled for this OS Disk? Defaults to `false`.

> **Note:** This requires that the `storage_account_type` is set to `Premium_LRS` and that `caching` is set to `None`.
:¯
µ
compute3WindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsuazure:compute/WindowsVirtualMachineScaleSetOsDiskDiffDiskSettings:WindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsô
ñª
option" Specifies the Ephemeral Disk Settings for the OS Disk. At this time the only possible value is `Local`. Changing this forces a new resource to be created.
Á
	placementB" ­Specifies where to store the Ephemeral Disk. Possible values are `CacheDisk` and `ResourceDisk`. Defaults to `CacheDisk`. Changing this forces a new resource to be created.
:ç

compute!WindowsVirtualMachineScaleSetPlanQazure:compute/WindowsVirtualMachineScaleSetPlan:WindowsVirtualMachineScaleSetPlanã
àu
name" iSpecifies the name of the image from the marketplace. Changing this forces a new resource to be created.
{
product" lSpecifies the product of the image from the marketplace. Changing this forces a new resource to be created.
j
	publisher" YSpecifies the publisher of the image. Changing this forces a new resource to be created.
:¬
¯
compute1WindowsVirtualMachineScaleSetRollingUpgradePolicyqazure:compute/WindowsVirtualMachineScaleSetRollingUpgradePolicy:WindowsVirtualMachineScaleSetRollingUpgradePolicy÷
ô³
crossZoneUpgradesEnabledB
 Should the Virtual Machine Scale Set ignore the Azure Zone boundaries when constructing upgrade batches? Possible values are `true` or `false`.
Ä
maxBatchInstancePercent ¤The maximum percent of total virtual machine instances that will be upgraded simultaneously by the rolling upgrade in one batch. As this is a maximum, unhealthy instances in previous or future batches can cause the percentage of instances in a batch to decrease to ensure higher reliability.
ì
maxUnhealthyInstancePercent ÈThe maximum percentage of the total virtual machine instances in the scale set that can be simultaneously unhealthy, either as a result of being upgraded, or by being found in an unhealthy state by the virtual machine health checks before the rolling upgrade aborts. This constraint will be checked prior to starting any batch.

#maxUnhealthyUpgradedInstancePercent áThe maximum percentage of upgraded virtual machine instances that can be found to be in an unhealthy state. This check will happen after each batch is upgraded. If this percentage is ever exceeded, the rolling update aborts.

maximumSurgeInstancesEnabledB
 ÞCreate new virtual machines to upgrade the scale set, rather than updating the existing virtual machines. Existing virtual machines will be deleted once the new virtual machines are created for each batch. Possible values are `true` or `false`.

> **Note:** `overprovision` must be set to `false` when `maximum_surge_instances_enabled` is specified.
É
pauseTimeBetweenBatches" ©The wait time between completing the update for all virtual machines in one batch and starting the next batch. The time duration should be specified in ISO 8601 format.
¡
#prioritizeUnhealthyInstancesEnabledB
 tUpgrade all unhealthy instances in a scale set before any healthy instances. Possible values are `true` or `false`.
:

compute$WindowsVirtualMachineScaleSetScaleInWazure:compute/WindowsVirtualMachineScaleSetScaleIn:WindowsVirtualMachineScaleSetScaleIn
Ò
forceDeletionEnabledB
 ³Should the virtual machines chosen for removal be force deleted when the virtual machine scale set is being scaled-in? Possible values are `true` or `false`. Defaults to `false`.
±
ruleB" ¢The scale-in policy rule that decides which virtual machines are chosen for removal when a Virtual Machine Scale Set is scaled in. Possible values for the scale-in policy rules are `Default`, `NewestVM` and `OldestVM`, defaults to `Default`. For more information about scale in policy, please [refer to this doc](https://docs.microsoft.com/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-scale-in-policy).
:Ü

compute#WindowsVirtualMachineScaleSetSecretUazure:compute/WindowsVirtualMachineScaleSetSecret:WindowsVirtualMachineScaleSetSecretÑ
Îõ
certificates¯*¬:©
¦
compute.WindowsVirtualMachineScaleSetSecretCertificatekazure:compute/WindowsVirtualMachineScaleSetSecretCertificate:WindowsVirtualMachineScaleSetSecretCertificate3One or more `certificate` blocks as defined above.
T

keyVaultId" BThe ID of the Key Vault from which all Secrets should be sourced.
:º
¦
compute.WindowsVirtualMachineScaleSetSecretCertificatekazure:compute/WindowsVirtualMachineScaleSetSecretCertificate:WindowsVirtualMachineScaleSetSecretCertificate
a
store" TThe certificate store on the Virtual Machine where the certificate should be added.
¥
url" The Secret URL of a Key Vault Certificate.

> **Note:** This can be sourced from the `secret_id` field within the `azure.keyvault.Certificate` Resource.
:ü
¯
compute1WindowsVirtualMachineScaleSetSourceImageReferenceqazure:compute/WindowsVirtualMachineScaleSetSourceImageReference:WindowsVirtualMachineScaleSetSourceImageReferenceÇ
Ä
offer" ySpecifies the offer of the image used to create the virtual machines. Changing this forces a new resource to be created.

	publisher" }Specifies the publisher of the image used to create the virtual machines. Changing this forces a new resource to be created.
O
sku" DSpecifies the SKU of the image used to create the virtual machines.
W
version" HSpecifies the version of the image used to create the virtual machines.
:ÿ

compute(WindowsVirtualMachineScaleSetSpotRestore_azure:compute/WindowsVirtualMachineScaleSetSpotRestore:WindowsVirtualMachineScaleSetSpotRestoreå
âö
enabledB
 äShould the Spot-Try-Restore feature be enabled? The Spot-Try-Restore feature will attempt to automatically restore the evicted Spot Virtual Machine Scale Set VM instances opportunistically based on capacity availability and pricing constraints. Possible values are `true` or `false`. Defaults to `false`. Changing this forces a new resource to be created.
æ
timeoutB" ÔThe length of time that the Virtual Machine Scale Set should attempt to restore the Spot VM instances which have been evicted. The time duration should be between `15` minutes and `120` minutes (inclusive). The time duration should be specified in the ISO 8601 format. Defaults to `PT1H`. Changing this forces a new resource to be created.
:ä
¸
compute4WindowsVirtualMachineScaleSetTerminationNotificationwazure:compute/WindowsVirtualMachineScaleSetTerminationNotification:WindowsVirtualMachineScaleSetTerminationNotification¦
£a
enabled
 RShould the termination notification be enabled on this Virtual Machine Scale Set?
½
timeoutB" «Length of time (in minutes, between 5 and 15) a notification to be sent to the VM on the instance metadata server till the VM gets deleted. The time duration should be specified in ISO 8601 format. Defaults to `PT5M`.

> **Note:** For more information about the termination notification, please [refer to this doc](https://docs.microsoft.com/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-terminate-notification).
:Ø

compute*WindowsVirtualMachineScaleSetWinrmListenercazure:compute/WindowsVirtualMachineScaleSetWinrmListener:WindowsVirtualMachineScaleSetWinrmListener¸
µ 
certificateUrlB" The Secret URL of a Key Vault Certificate, which must be specified when `protocol` is set to `Https`. Changing this forces a new resource to be created.

> **Note:** This can be sourced from the `secret_id` field within the `azure.keyvault.Certificate` Resource.

protocol" The Protocol of the WinRM Listener. Possible values are `Http` and `Https`. Changing this forces a new resource to be created.
:«
m
computeWindowsVirtualMachineSecretEazure:compute/WindowsVirtualMachineSecret:WindowsVirtualMachineSecret¹
¶Ý
certificates*:

compute&WindowsVirtualMachineSecretCertificate[azure:compute/WindowsVirtualMachineSecretCertificate:WindowsVirtualMachineSecretCertificate3One or more `certificate` blocks as defined above.
T

keyVaultId" BThe ID of the Key Vault from which all Secrets should be sourced.
:¢

compute&WindowsVirtualMachineSecretCertificate[azure:compute/WindowsVirtualMachineSecretCertificate:WindowsVirtualMachineSecretCertificate
a
store" TThe certificate store on the Virtual Machine where the certificate should be added.
¥
url" The Secret URL of a Key Vault Certificate.

> **NOTE:** This can be sourced from the `secret_id` field within the `azure.keyvault.Certificate` Resource.
:Ì

compute)WindowsVirtualMachineSourceImageReferenceaazure:compute/WindowsVirtualMachineSourceImageReference:WindowsVirtualMachineSourceImageReference¯
¬
offer" ySpecifies the offer of the image used to create the virtual machines. Changing this forces a new resource to be created.

	publisher" }Specifies the publisher of the image used to create the virtual machines. Changing this forces a new resource to be created.

sku" wSpecifies the SKU of the image used to create the virtual machines. Changing this forces a new resource to be created.

version" {Specifies the version of the image used to create the virtual machines. Changing this forces a new resource to be created.
:Æ
 
compute,WindowsVirtualMachineTerminationNotificationgazure:compute/WindowsVirtualMachineTerminationNotification:WindowsVirtualMachineTerminationNotification 
W
enabled
 HShould the termination notification be enabled on this Virtual Machine?
Á
timeoutB" ¯Length of time (in minutes, between `5` and `15`) a notification to be sent to the VM on the instance metadata server till the VM gets deleted. The time duration should be specified in ISO 8601 format. Defaults to `PT5M`.

> **NOTE:** For more information about the termination notification, please [refer to this doc](https://docs.microsoft.com/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-terminate-notification).
:Ñ

compute"WindowsVirtualMachineWinrmListenerSazure:compute/WindowsVirtualMachineWinrmListener:WindowsVirtualMachineWinrmListenerÉ
Æ²
certificateUrlB" The Secret URL of a Key Vault Certificate, which must be specified when `protocol` is set to `Https`. Changing this forces a new resource to be created.

protocol" ~Specifies the protocol of listener. Possible values are `Http` or `Https`. Changing this forces a new resource to be created.
:Û
s
computegetBastionHostIpConfigurationIazure:compute/getBastionHostIpConfiguration:getBastionHostIpConfigurationã
à*
name" The name of the Bastion Host.
[
publicIpAddressId" BReference to a Public IP Address associated to this Bastion Host.
U
subnetId" EReference to the subnet in which this Bastion Host has been created.
:
¯
compute1getConfidentialLedgerAzureadBasedServicePrincipalqazure:compute/getConfidentialLedgerAzureadBasedServicePrincipal:getConfidentialLedgerAzureadBasedServicePrincipalå
âT
ledgerRoleName" >The Ledger Role to grant this Certificate Security Principal.
F
principalId" 3The Principal ID of the AzureAD Service Principal.
B
tenantId" 2The Tenant ID for this AzureAD Service Principal.
:ª
¾
compute6getConfidentialLedgerCertificateBasedSecurityPrincipal{azure:compute/getConfidentialLedgerCertificateBasedSecurityPrincipal:getConfidentialLedgerCertificateBasedSecurityPrincipalæ
ãT
ledgerRoleName" >The Ledger Role to grant this Certificate Security Principal.

pemPublicKey" vThe public key, in PEM format, of the certificate used by this identity to authenticate with the Confidential Ledger.
:Ñ
p
computegetDiskEncryptionSetIdentityGazure:compute/getDiskEncryptionSetIdentity:getDiskEncryptionSetIdentityÜ
Ùh
identityIds*" SA list of User Assigned Managed Identity IDs assigned to this Disk Encryption Set.
=
principalId" *The (Client) ID of the Service Principal.
K
tenantId" ;The ID of the Tenant the Service Principal is assigned in.
a
type" UThe type of Managed Service Identity that is configured on this Disk Encryption Set.
:½
L
computegetImageDataDisk/azure:compute/getImageDataDisk:getImageDataDiskì
éN
blobUri" ?the URI in Azure storage of the blob used to create the image.
_
caching" Pthe caching mode for the Data Disk, such as `ReadWrite`, `ReadOnly`, or `None`.
5
lun *the logical unit number of the data disk.
M
managedDiskId" 8the ID of the Managed Disk used as the Data Disk Image.
0
sizeGb "the size of this Data Disk in GB.
:¯
F
computegetImageOsDisk+azure:compute/getImageOsDisk:getImageOsDiskä
áN
blobUri" ?the URI in Azure storage of the blob used to create the image.
_
caching" Pthe caching mode for the Data Disk, such as `ReadWrite`, `ReadOnly`, or `None`.
M
managedDiskId" 8the ID of the Managed Disk used as the Data Disk Image.
M
osState" >the State of the OS used in the Image, such as `Generalized`.
^
osType" Pthe type of Operating System used on the OS Disk. such as `Linux` or `Windows`.
0
sizeGb "the size of this Data Disk in GB.
:à
F
computegetImagesImage+azure:compute/getImagesImage:getImagesImage
¤
	dataDisksd*b:`
^
computegetImagesImageDataDisk;azure:compute/getImagesImageDataDisk:getImagesImageDataDisk1One or more `data_disk` blocks as defined below.
E
location" 5The supported Azure location where the Image exists.
#
name" The name of the Image.

osDisks^*\:Z
X
computegetImagesImageOsDisk7azure:compute/getImagesImageOsDisk:getImagesImageOsDisk%An `os_disk` block as defined below.
7
tags2" )A mapping of tags assigned to the Image.
1
zoneResilient
 Is zone resiliency enabled?
:£
^
computegetImagesImageDataDisk;azure:compute/getImagesImageDataDisk:getImagesImageDataDiskÀ
½N
blobUri" ?the URI in Azure storage of the blob used to create the image.
3
caching" $the caching mode for the Data Disk.
5
lun *the logical unit number of the data disk.
M
managedDiskId" 8the ID of the Managed Disk used as the Data Disk Image.
0
sizeGb "the size of this Data Disk in GB.
:»
X
computegetImagesImageOsDisk7azure:compute/getImagesImageOsDisk:getImagesImageOsDiskÞ
ÛN
blobUri" ?the URI in Azure storage of the blob used to create the image.
3
caching" $the caching mode for the Data Disk.
Y
diskEncryptionSetId" >the ID of the Disk Encryption Set used to encrypt this image.
M
managedDiskId" 8the ID of the Managed Disk used as the Data Disk Image.
6
osState" 'the State of the OS used in the Image.
@
osType" 2the type of Operating System used on the OS Disk.
0
sizeGb "the size of this Data Disk in GB.
:
y
computegetManagedDiskEncryptionSettingMazure:compute/getManagedDiskEncryptionSetting:getManagedDiskEncryptionSetting
þ
diskEncryptionKeysµ*²:¯
¬
compute0getManagedDiskEncryptionSettingDiskEncryptionKeyoazure:compute/getManagedDiskEncryptionSettingDiskEncryptionKey:getManagedDiskEncryptionSettingDiskEncryptionKey0A `disk_encryption_key` block as defined above.

enabled
 ù
keyEncryptionKeys²*¯:¬
©
compute/getManagedDiskEncryptionSettingKeyEncryptionKeymazure:compute/getManagedDiskEncryptionSettingKeyEncryptionKey:getManagedDiskEncryptionSettingKeyEncryptionKey/A `key_encryption_key` block as defined below.
:À
¬
compute0getManagedDiskEncryptionSettingDiskEncryptionKeyoazure:compute/getManagedDiskEncryptionSettingDiskEncryptionKey:getManagedDiskEncryptionSettingDiskEncryptionKey
R
	secretUrl" AThe URL to the Key Vault Secret used as the Disk Encryption Key.
5
sourceVaultId"  The ID of the source Key Vault.
:¶
©
compute/getManagedDiskEncryptionSettingKeyEncryptionKeymazure:compute/getManagedDiskEncryptionSettingKeyEncryptionKey:getManagedDiskEncryptionSettingKeyEncryptionKey
K
keyUrl" =The URL to the Key Vault Key used as the Key Encryption Key.
5
sourceVaultId"  The ID of the source Key Vault.
:ý
£
compute-getOrchestratedVirtualMachineScaleSetIdentityiazure:compute/getOrchestratedVirtualMachineScaleSetIdentity:getOrchestratedVirtualMachineScaleSetIdentityÔ
Ñ}
identityIds*" hThe list of User Assigned Managed Identity IDs assigned to this Orchestrated Virtual Machine Scale Set.

principalId" The Principal ID of the System Assigned Managed Service Identity that is configured on this Orchestrated Virtual Machine Scale Set.

tenantId" The Tenant ID of the System Assigned Managed Service Identity that is configured on this Orchestrated Virtual Machine Scale Set.
 
type" The Type of IP Tag.
:
»
compute5getOrchestratedVirtualMachineScaleSetNetworkInterfaceyazure:compute/getOrchestratedVirtualMachineScaleSetNetworkInterface:getOrchestratedVirtualMachineScaleSetNetworkInterfaceÎ
ËG
acceleratedNetworkingEnabled
 #Is accelerated networking enabled?
8

dnsServers*" $An array of the DNS servers in use.
º
ipConfigurationsò*ï:ì
é
computeDgetOrchestratedVirtualMachineScaleSetNetworkInterfaceIpConfigurationazure:compute/getOrchestratedVirtualMachineScaleSetNetworkInterfaceIpConfiguration:getOrchestratedVirtualMachineScaleSetNetworkInterfaceIpConfiguration1An `ip_configuration` block as documented below.
5
ipForwardingEnabled
 Is IP forwarding enabled?
E
name" 9The name of this Orchestrated Virtual Machine Scale Set.
M
networkSecurityGroupId" /The identifier for the network security group.
<
primary
 -If this ip_configuration is the primary one.
:Ð

é
computeDgetOrchestratedVirtualMachineScaleSetNetworkInterfaceIpConfigurationazure:compute/getOrchestratedVirtualMachineScaleSetNetworkInterfaceIpConfiguration:getOrchestratedVirtualMachineScaleSetNetworkInterfaceIpConfigurationá
Þz
'applicationGatewayBackendAddressPoolIds*" IAn array of references to backend address pools of application gateways.
P
applicationSecurityGroupIds*" +The application security group IDs to use.
n
!loadBalancerBackendAddressPoolIds*" CAn array of references to backend address pools of load balancers.
h
loadBalancerInboundNatRulesIds*" @An array of references to inbound NAT pools for load balancers.
E
name" 9The name of this Orchestrated Virtual Machine Scale Set.
<
primary
 -If this ip_configuration is the primary one.
µ
publicIpAddresses*:

computeSgetOrchestratedVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressµazure:compute/getOrchestratedVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddress:getOrchestratedVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddress~The virtual machines scale set IP Configuration's PublicIPAddress configuration. The `public_ip_address` is documented below.
.
subnetId" The identifier of the subnet.
G
version" 8The Internet Protocol Version of the public IP address.
:Ó

computeSgetOrchestratedVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressµazure:compute/getOrchestratedVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddress:getOrchestratedVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddress·
´C
domainNameLabel" ,The domain name label for the DNS settings.
9
idleTimeoutInMinutes The idle timeout in minutes.
ç
ipTags®*«:¨
¥
computeXgetOrchestratedVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTag¿azure:compute/getOrchestratedVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTag:getOrchestratedVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTag,A list of `ip_tag` blocks as defined below.
E
name" 9The name of this Orchestrated Virtual Machine Scale Set.
8
publicIpPrefixId"  The ID of the public IP prefix.
G
version" 8The Internet Protocol Version of the public IP address.
:
¥
computeXgetOrchestratedVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTag¿azure:compute/getOrchestratedVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTag:getOrchestratedVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTag[
Y5
tag" *The IP Tag associated with the Public IP.
 
type" The Type of IP Tag.
:¬
d
computegetSharedImageIdentifier?azure:compute/getSharedImageIdentifier:getSharedImageIdentifierÃ
À3
offer" &The Offer Name for this Shared Image.
P
	publisher" ?(Optional) The Purchase Plan Publisher for this Gallery Image.
7
sku" ,The Name of the SKU for this Gallery Image.
:¾
j
computegetSharedImagePurchasePlanCazure:compute/getSharedImagePurchasePlan:getSharedImagePurchasePlanÏ
Ì*
name" The name of the Shared Image.
L
product" =(Optional) The Purchase Plan Product for this Gallery Image.
P
	publisher" ?(Optional) The Purchase Plan Publisher for this Gallery Image.
:±

compute!getSharedImageVersionTargetRegionQazure:compute/getSharedImageVersionTargetRegion:getSharedImageVersionTargetRegion­
ª÷
name" êThe name of the Image Version.

> **Note:** You may specify `latest` to obtain the latest version or `recent` to obtain the most recently updated version.

> **Note:** In 3.0, `latest` may return an image version with `exclude_from_latest` set to `true`. Starting from 4.0 onwards `latest` will not return image versions with `exlude_from_latest` set to `true`.
b
regionalReplicaCount FThe number of replicas of the Image Version to be created per region.
J
storageAccountType" 0The storage account type for the image version.
:£
m
computegetSharedImageVersionsImageEazure:compute/getSharedImageVersionsImage:getSharedImageVersionsImage±
®R
excludeFromLatest
 9Is this Image Version excluded from the `latest` filter?
/
id" %The ID of this Shared Image Version.
T
location" DThe supported Azure location where the Shared Image Gallery exists.
e
managedImageId" OThe ID of the Managed Image which was the source of this Shared Image Version.
A
name" 5The Azure Region in which this Image Version exists.
>
tags2" 0A mapping of tags assigned to the Shared Image.
æ
targetRegions*:

compute'getSharedImageVersionsImageTargetRegion]azure:compute/getSharedImageVersionsImageTargetRegion:getSharedImageVersionsImageTargetRegion8One or more `target_region` blocks as documented below.
:

compute'getSharedImageVersionsImageTargetRegion]azure:compute/getSharedImageVersionsImageTargetRegion:getSharedImageVersionsImageTargetRegionö
óA
name" 5The Azure Region in which this Image Version exists.
b
regionalReplicaCount FThe number of replicas of the Image Version to be created per region.
J
storageAccountType" 0The storage account type for the image version.
:
p
computegetSnapshotEncryptionSettingGazure:compute/getSnapshotEncryptionSetting:getSnapshotEncryptionSetting
Ã
diskEncryptionKeys¬*©:¦
£
compute-getSnapshotEncryptionSettingDiskEncryptionKeyiazure:compute/getSnapshotEncryptionSettingDiskEncryptionKey:getSnapshotEncryptionSettingDiskEncryptionKey
enabled
 ¿
keyEncryptionKeys©*¦:£
 
compute,getSnapshotEncryptionSettingKeyEncryptionKeygazure:compute/getSnapshotEncryptionSettingKeyEncryptionKey:getSnapshotEncryptionSettingKeyEncryptionKey:Ð
£
compute-getSnapshotEncryptionSettingDiskEncryptionKeyiazure:compute/getSnapshotEncryptionSettingDiskEncryptionKey:getSnapshotEncryptionSettingDiskEncryptionKey(
&
	secretUrl" 
sourceVaultId" :Ê
 
compute,getSnapshotEncryptionSettingKeyEncryptionKeygazure:compute/getSnapshotEncryptionSettingKeyEncryptionKey:getSnapshotEncryptionSettingKeyEncryptionKey%
#
keyUrl" 
sourceVaultId" :
g
computegetVirtualMachineIdentityAazure:compute/getVirtualMachineIdentity:getVirtualMachineIdentity
f
identityIds*" QThe list of User Managed Identity IDs which are assigned to the Virtual Machine.
c
principalId" PThe ID of the System Managed Service Principal assigned to the Virtual Machine.
n
tenantId" ^The ID of the Tenant of the System Managed Service Principal assigned to the Virtual Machine.
W
type" KThe identity type of the Managed Identity assigned to the Virtual Machine.
:¯

compute!getVirtualMachineScaleSetIdentityQazure:compute/getVirtualMachineScaleSetIdentity:getVirtualMachineScaleSetIdentity«
¨p
identityIds*" [The list of User Assigned Managed Identity IDs assigned to this Virtual Machine Scale Set.

principalId" wThe Principal ID of the System Assigned Managed Service Identity that is configured on this Virtual Machine Scale Set.

tenantId" tThe Tenant ID of the System Assigned Managed Service Identity that is configured on this Virtual Machine Scale Set.
 
type" The Type of IP Tag.
:ø

compute!getVirtualMachineScaleSetInstanceQazure:compute/getVirtualMachineScaleSetInstance:getVirtualMachineScaleSetInstanceô
ñ:
computerName" &The Hostname of this Virtual Machine.
;

instanceId" )The Instance ID of this Virtual Machine.
]
latestModelApplied
 CWhether the latest model has been applied to this Virtual Machine.
8
name" ,The name of this Virtual Machine Scale Set.
:

powerState" (The power state of the virtual machine.
Y
privateIpAddress" AThe Primary Private IP Address assigned to this Virtual Machine.
]
privateIpAddresses*" AA list of Private IP Addresses assigned to this Virtual Machine.

publicIpAddress" ~The virtual machines scale set IP Configuration's PublicIPAddress configuration. The `public_ip_address` is documented below.
_
publicIpAddresses*" DA list of the Public IP Addresses assigned to this Virtual Machine.
>
virtualMachineId" &The unique ID of the virtual machine.
.
zone" "The zones of the virtual machine.
:Ù

compute)getVirtualMachineScaleSetNetworkInterfaceaazure:compute/getVirtualMachineScaleSetNetworkInterface:getVirtualMachineScaleSetNetworkInterface¼
¹8

dnsServers*" $An array of the DNS servers in use.
T
enableAcceleratedNetworking
 1Whether to enable accelerated networking or not.
H
enableIpForwarding
 .Whether IP forwarding is enabled on this NIC.

ipConfigurationsÍ*Ê:Ç
Ä
compute8getVirtualMachineScaleSetNetworkInterfaceIpConfigurationazure:compute/getVirtualMachineScaleSetNetworkInterfaceIpConfiguration:getVirtualMachineScaleSetNetworkInterfaceIpConfiguration1An `ip_configuration` block as documented below.
8
name" ,The name of this Virtual Machine Scale Set.
M
networkSecurityGroupId" /The identifier for the network security group.
<
primary
 -If this ip_configuration is the primary one.
:ú	
Ä
compute8getVirtualMachineScaleSetNetworkInterfaceIpConfigurationazure:compute/getVirtualMachineScaleSetNetworkInterfaceIpConfiguration:getVirtualMachineScaleSetNetworkInterfaceIpConfiguration°
­z
'applicationGatewayBackendAddressPoolIds*" IAn array of references to backend address pools of application gateways.
P
applicationSecurityGroupIds*" +The application security group IDs to use.
n
!loadBalancerBackendAddressPoolIds*" CAn array of references to backend address pools of load balancers.
h
loadBalancerInboundNatRulesIds*" @An array of references to inbound NAT pools for load balancers.
8
name" ,The name of this Virtual Machine Scale Set.
<
primary
 -If this ip_configuration is the primary one.

publicIpAddressesû*ø:õ
ò
computeGgetVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressazure:compute/getVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddress:getVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddress~The virtual machines scale set IP Configuration's PublicIPAddress configuration. The `public_ip_address` is documented below.
.
subnetId" The identifier of the subnet.
G
version" 8The Internet Protocol Version of the public IP address.
:þ
ò
computeGgetVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressazure:compute/getVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddress:getVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddress
C
domainNameLabel" ,The domain name label for the DNS settings.
9
idleTimeoutInMinutes The idle timeout in minutes.
Ã
ipTags*:

computeLgetVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTag§azure:compute/getVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTag:getVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTag,A list of `ip_tag` blocks as defined below.
8
name" ,The name of this Virtual Machine Scale Set.
8
publicIpPrefixId"  The ID of the public IP prefix.
G
version" 8The Internet Protocol Version of the public IP address.
:á

computeLgetVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTag§azure:compute/getVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTag:getVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTag[
Y5
tag" *The IP Tag associated with the Public IP.
 
type" The Type of IP Tag.
:ß

confidentialledger"LedgerAzureadBasedServicePrincipal^azure:confidentialledger/LedgerAzureadBasedServicePrincipal:LedgerAzureadBasedServicePrincipalÁ
¾
ledgerRoleName" Specifies the Ledger Role to grant this AzureAD Service Principal. Possible values are `Administrator`, `Contributor` and `Reader`.
P
principalId" =Specifies the Principal ID of the AzureAD Service Principal.
L
tenantId" <Specifies the Tenant ID for this AzureAD Service Principal.
:à
§
confidentialledger'LedgerCertificateBasedSecurityPrincipalhazure:confidentialledger/LedgerCertificateBasedSecurityPrincipal:LedgerCertificateBasedSecurityPrincipal³
° 
ledgerRoleName" Specifies the Ledger Role to grant this Certificate Security Principal. Possible values are `Administrator`, `Contributor` and `Reader`.

pemPublicKey" vThe public key, in PEM format, of the certificate used by this identity to authenticate with the Confidential Ledger.
