Package {
    name: "plant",
    display_name: None,
    plugin_download_url: None,
    version: "0.0.1",
    resources: {
        ElementId {
            namespace: [
                "tree",
                "v1",
            ],
            name: "Nursery",
            raw: "plant:tree/v1:Nursery",
        }: Resource {
            element_id: ElementId {
                namespace: [
                    "tree",
                    "v1",
                ],
                name: "Nursery",
                raw: "plant:tree/v1:Nursery",
            },
            description: None,
            input_properties: [
                InputProperty {
                    name: "sizes",
                    type: Option(
                        Object(
                            Ref(
                                Type(
                                    ElementId {
                                        namespace: [
                                            "tree",
                                            "v1",
                                        ],
                                        name: "TreeSize",
                                        raw: "plant:tree/v1:TreeSize",
                                    },
                                ),
                            ),
                        ),
                    ),
                    description: Some(
                        "The sizes of trees available",
                    ),
                },
                InputProperty {
                    name: "varieties",
                    type: Array(
                        Ref(
                            Type(
                                ElementId {
                                    namespace: [
                                        "tree",
                                        "v1",
                                    ],
                                    name: "RubberTreeVariety",
                                    raw: "plant:tree/v1:RubberTreeVariety",
                                },
                            ),
                        ),
                    ),
                    description: Some(
                        "The varieties available",
                    ),
                },
            ],
            output_properties: [],
        },
        ElementId {
            namespace: [
                "tree",
                "v1",
            ],
            name: "RubberTree",
            raw: "plant:tree/v1:RubberTree",
        }: Resource {
            element_id: ElementId {
                namespace: [
                    "tree",
                    "v1",
                ],
                name: "RubberTree",
                raw: "plant:tree/v1:RubberTree",
            },
            description: None,
            input_properties: [
                InputProperty {
                    name: "container",
                    type: Option(
                        Ref(
                            Type(
                                ElementId {
                                    namespace: [],
                                    name: "Container",
                                    raw: "plant::Container",
                                },
                            ),
                        ),
                    ),
                    description: None,
                },
                InputProperty {
                    name: "diameter",
                    type: Ref(
                        Type(
                            ElementId {
                                namespace: [
                                    "tree",
                                    "v1",
                                ],
                                name: "Diameter",
                                raw: "other:tree/v1:Diameter",
                            },
                        ),
                    ),
                    description: None,
                },
                InputProperty {
                    name: "farm",
                    type: Option(
                        DiscriminatedUnion(
                            [
                                Ref(
                                    Type(
                                        ElementId {
                                            namespace: [
                                                "tree",
                                                "v1",
                                            ],
                                            name: "Farm",
                                            raw: "plant:tree/v1:Farm",
                                        },
                                    ),
                                ),
                                String,
                            ],
                        ),
                    ),
                    description: None,
                },
                InputProperty {
                    name: "size",
                    type: Option(
                        Ref(
                            Type(
                                ElementId {
                                    namespace: [
                                        "tree",
                                        "v1",
                                    ],
                                    name: "TreeSize",
                                    raw: "plant:tree/v1:TreeSize",
                                },
                            ),
                        ),
                    ),
                    description: None,
                },
                InputProperty {
                    name: "type",
                    type: Ref(
                        Type(
                            ElementId {
                                namespace: [
                                    "tree",
                                    "v1",
                                ],
                                name: "RubberTreeVariety",
                                raw: "plant:tree/v1:RubberTreeVariety",
                            },
                        ),
                    ),
                    description: None,
                },
            ],
            output_properties: [
                OutputProperty {
                    name: "container",
                    type: Option(
                        Ref(
                            Type(
                                ElementId {
                                    namespace: [],
                                    name: "Container",
                                    raw: "plant::Container",
                                },
                            ),
                        ),
                    ),
                    description: None,
                },
                OutputProperty {
                    name: "diameter",
                    type: Ref(
                        Type(
                            ElementId {
                                namespace: [
                                    "tree",
                                    "v1",
                                ],
                                name: "Diameter",
                                raw: "other:tree/v1:Diameter",
                            },
                        ),
                    ),
                    description: None,
                },
                OutputProperty {
                    name: "farm",
                    type: Option(
                        DiscriminatedUnion(
                            [
                                Ref(
                                    Type(
                                        ElementId {
                                            namespace: [
                                                "tree",
                                                "v1",
                                            ],
                                            name: "Farm",
                                            raw: "plant:tree/v1:Farm",
                                        },
                                    ),
                                ),
                                String,
                            ],
                        ),
                    ),
                    description: None,
                },
                OutputProperty {
                    name: "size",
                    type: Option(
                        Ref(
                            Type(
                                ElementId {
                                    namespace: [
                                        "tree",
                                        "v1",
                                    ],
                                    name: "TreeSize",
                                    raw: "plant:tree/v1:TreeSize",
                                },
                            ),
                        ),
                    ),
                    description: None,
                },
                OutputProperty {
                    name: "type",
                    type: Ref(
                        Type(
                            ElementId {
                                namespace: [
                                    "tree",
                                    "v1",
                                ],
                                name: "RubberTreeVariety",
                                raw: "plant:tree/v1:RubberTreeVariety",
                            },
                        ),
                    ),
                    description: None,
                },
            ],
        },
    },
    functions: {},
    types: {
        ElementId {
            namespace: [],
            name: "CloudAuditOptionsLogName",
            raw: "plant::CloudAuditOptionsLogName",
        }: GlobalType {
            element_id: ElementId {
                namespace: [],
                name: "CloudAuditOptionsLogName",
                raw: "plant::CloudAuditOptionsLogName",
            },
            value: StringEnum(
                Some(
                    "The log_name to populate in the Cloud Audit Record. This is added to regress pulumi/pulumi issue #7913",
                ),
                [
                    StringEnumElement {
                        name: "UnspecifiedLogName",
                        value: Some(
                            "UNSPECIFIED_LOG_NAME",
                        ),
                        description: Some(
                            "Default. Should not be used.",
                        ),
                    },
                    StringEnumElement {
                        name: "AdminActivity",
                        value: Some(
                            "ADMIN_ACTIVITY",
                        ),
                        description: Some(
                            "Corresponds to \"cloudaudit.googleapis.com/activity\"",
                        ),
                    },
                    StringEnumElement {
                        name: "DataAccess",
                        value: Some(
                            "DATA_ACCESS",
                        ),
                        description: Some(
                            "Corresponds to \"cloudaudit.googleapis.com/data_access\"",
                        ),
                    },
                    StringEnumElement {
                        name: "Synthetic",
                        value: Some(
                            "SYNTHETIC",
                        ),
                        description: Some(
                            "What if triple quotes \"\"\" are used in the description",
                        ),
                    },
                ],
            ),
        },
        ElementId {
            namespace: [],
            name: "Container",
            raw: "plant::Container",
        }: GlobalType {
            element_id: ElementId {
                namespace: [],
                name: "Container",
                raw: "plant::Container",
            },
            value: Object(
                None,
                [
                    GlobalTypeProperty {
                        name: "brightness",
                        type: Option(
                            Ref(
                                Type(
                                    ElementId {
                                        namespace: [],
                                        name: "ContainerBrightness",
                                        raw: "plant::ContainerBrightness",
                                    },
                                ),
                            ),
                        ),
                        description: None,
                    },
                    GlobalTypeProperty {
                        name: "color",
                        type: Option(
                            DiscriminatedUnion(
                                [
                                    Ref(
                                        Type(
                                            ElementId {
                                                namespace: [],
                                                name: "ContainerColor",
                                                raw: "plant::ContainerColor",
                                            },
                                        ),
                                    ),
                                    String,
                                ],
                            ),
                        ),
                        description: None,
                    },
                    GlobalTypeProperty {
                        name: "material",
                        type: Option(
                            String,
                        ),
                        description: None,
                    },
                    GlobalTypeProperty {
                        name: "size",
                        type: Ref(
                            Type(
                                ElementId {
                                    namespace: [],
                                    name: "ContainerSize",
                                    raw: "plant::ContainerSize",
                                },
                            ),
                        ),
                        description: None,
                    },
                ],
            ),
        },
        ElementId {
            namespace: [],
            name: "ContainerBrightness",
            raw: "plant::ContainerBrightness",
        }: GlobalType {
            element_id: ElementId {
                namespace: [],
                name: "ContainerBrightness",
                raw: "plant::ContainerBrightness",
            },
            value: NumberEnum(
                None,
                [
                    NumberEnumElement {
                        name: "ZeroPointOne",
                        value: 0.1,
                        description: None,
                    },
                    NumberEnumElement {
                        name: "One",
                        value: 1.0,
                        description: None,
                    },
                ],
            ),
        },
        ElementId {
            namespace: [],
            name: "ContainerColor",
            raw: "plant::ContainerColor",
        }: GlobalType {
            element_id: ElementId {
                namespace: [],
                name: "ContainerColor",
                raw: "plant::ContainerColor",
            },
            value: StringEnum(
                Some(
                    "plant container colors",
                ),
                [
                    StringEnumElement {
                        name: "red",
                        value: None,
                        description: None,
                    },
                    StringEnumElement {
                        name: "blue",
                        value: None,
                        description: None,
                    },
                    StringEnumElement {
                        name: "yellow",
                        value: None,
                        description: None,
                    },
                ],
            ),
        },
        ElementId {
            namespace: [],
            name: "ContainerSize",
            raw: "plant::ContainerSize",
        }: GlobalType {
            element_id: ElementId {
                namespace: [],
                name: "ContainerSize",
                raw: "plant::ContainerSize",
            },
            value: IntegerEnum(
                Some(
                    "plant container sizes",
                ),
                [
                    IntegerEnumElement {
                        name: "FourInch",
                        value: 4,
                        description: None,
                    },
                    IntegerEnumElement {
                        name: "SixInch",
                        value: 6,
                        description: None,
                    },
                    IntegerEnumElement {
                        name: "EightInch",
                        value: 8,
                        description: None,
                    },
                ],
            ),
        },
        ElementId {
            namespace: [
                "tree",
                "v1",
            ],
            name: "Diameter",
            raw: "other:tree/v1:Diameter",
        }: GlobalType {
            element_id: ElementId {
                namespace: [
                    "tree",
                    "v1",
                ],
                name: "Diameter",
                raw: "other:tree/v1:Diameter",
            },
            value: NumberEnum(
                None,
                [
                    NumberEnumElement {
                        name: "sixinch",
                        value: 6.0,
                        description: None,
                    },
                    NumberEnumElement {
                        name: "twelveinch",
                        value: 12.0,
                        description: None,
                    },
                ],
            ),
        },
        ElementId {
            namespace: [
                "tree",
                "v1",
            ],
            name: "Farm",
            raw: "plant:tree/v1:Farm",
        }: GlobalType {
            element_id: ElementId {
                namespace: [
                    "tree",
                    "v1",
                ],
                name: "Farm",
                raw: "plant:tree/v1:Farm",
            },
            value: StringEnum(
                None,
                [
                    StringEnumElement {
                        name: "PulumiPlantersInc",
                        value: Some(
                            "Pulumi Planters Inc.",
                        ),
                        description: None,
                    },
                    StringEnumElement {
                        name: "PlantsRUs",
                        value: Some(
                            "Plants'R'Us",
                        ),
                        description: None,
                    },
                ],
            ),
        },
        ElementId {
            namespace: [
                "tree",
                "v1",
            ],
            name: "RubberTreeVariety",
            raw: "plant:tree/v1:RubberTreeVariety",
        }: GlobalType {
            element_id: ElementId {
                namespace: [
                    "tree",
                    "v1",
                ],
                name: "RubberTreeVariety",
                raw: "plant:tree/v1:RubberTreeVariety",
            },
            value: StringEnum(
                Some(
                    "types of rubber trees",
                ),
                [
                    StringEnumElement {
                        name: "Burgundy",
                        value: None,
                        description: Some(
                            "A burgundy rubber tree.",
                        ),
                    },
                    StringEnumElement {
                        name: "Ruby",
                        value: None,
                        description: Some(
                            "A ruby rubber tree.",
                        ),
                    },
                    StringEnumElement {
                        name: "Tineke",
                        value: None,
                        description: Some(
                            "A tineke rubber tree.",
                        ),
                    },
                ],
            ),
        },
        ElementId {
            namespace: [
                "tree",
                "v1",
            ],
            name: "TreeSize",
            raw: "plant:tree/v1:TreeSize",
        }: GlobalType {
            element_id: ElementId {
                namespace: [
                    "tree",
                    "v1",
                ],
                name: "TreeSize",
                raw: "plant:tree/v1:TreeSize",
            },
            value: StringEnum(
                None,
                [
                    StringEnumElement {
                        name: "small",
                        value: None,
                        description: None,
                    },
                    StringEnumElement {
                        name: "medium",
                        value: None,
                        description: None,
                    },
                    StringEnumElement {
                        name: "large",
                        value: None,
                        description: None,
                    },
                ],
            ),
        },
    },
    resource_name_map: {
        "plant:tree:v1:RubberTree": Resource {
            element_id: ElementId {
                namespace: [
                    "tree",
                    "v1",
                ],
                name: "RubberTree",
                raw: "plant:tree/v1:RubberTree",
            },
            description: None,
            input_properties: [
                InputProperty {
                    name: "container",
                    type: Option(
                        Ref(
                            Type(
                                ElementId {
                                    namespace: [],
                                    name: "Container",
                                    raw: "plant::Container",
                                },
                            ),
                        ),
                    ),
                    description: None,
                },
                InputProperty {
                    name: "diameter",
                    type: Ref(
                        Type(
                            ElementId {
                                namespace: [
                                    "tree",
                                    "v1",
                                ],
                                name: "Diameter",
                                raw: "other:tree/v1:Diameter",
                            },
                        ),
                    ),
                    description: None,
                },
                InputProperty {
                    name: "farm",
                    type: Option(
                        DiscriminatedUnion(
                            [
                                Ref(
                                    Type(
                                        ElementId {
                                            namespace: [
                                                "tree",
                                                "v1",
                                            ],
                                            name: "Farm",
                                            raw: "plant:tree/v1:Farm",
                                        },
                                    ),
                                ),
                                String,
                            ],
                        ),
                    ),
                    description: None,
                },
                InputProperty {
                    name: "size",
                    type: Option(
                        Ref(
                            Type(
                                ElementId {
                                    namespace: [
                                        "tree",
                                        "v1",
                                    ],
                                    name: "TreeSize",
                                    raw: "plant:tree/v1:TreeSize",
                                },
                            ),
                        ),
                    ),
                    description: None,
                },
                InputProperty {
                    name: "type",
                    type: Ref(
                        Type(
                            ElementId {
                                namespace: [
                                    "tree",
                                    "v1",
                                ],
                                name: "RubberTreeVariety",
                                raw: "plant:tree/v1:RubberTreeVariety",
                            },
                        ),
                    ),
                    description: None,
                },
            ],
            output_properties: [
                OutputProperty {
                    name: "container",
                    type: Option(
                        Ref(
                            Type(
                                ElementId {
                                    namespace: [],
                                    name: "Container",
                                    raw: "plant::Container",
                                },
                            ),
                        ),
                    ),
                    description: None,
                },
                OutputProperty {
                    name: "diameter",
                    type: Ref(
                        Type(
                            ElementId {
                                namespace: [
                                    "tree",
                                    "v1",
                                ],
                                name: "Diameter",
                                raw: "other:tree/v1:Diameter",
                            },
                        ),
                    ),
                    description: None,
                },
                OutputProperty {
                    name: "farm",
                    type: Option(
                        DiscriminatedUnion(
                            [
                                Ref(
                                    Type(
                                        ElementId {
                                            namespace: [
                                                "tree",
                                                "v1",
                                            ],
                                            name: "Farm",
                                            raw: "plant:tree/v1:Farm",
                                        },
                                    ),
                                ),
                                String,
                            ],
                        ),
                    ),
                    description: None,
                },
                OutputProperty {
                    name: "size",
                    type: Option(
                        Ref(
                            Type(
                                ElementId {
                                    namespace: [
                                        "tree",
                                        "v1",
                                    ],
                                    name: "TreeSize",
                                    raw: "plant:tree/v1:TreeSize",
                                },
                            ),
                        ),
                    ),
                    description: None,
                },
                OutputProperty {
                    name: "type",
                    type: Ref(
                        Type(
                            ElementId {
                                namespace: [
                                    "tree",
                                    "v1",
                                ],
                                name: "RubberTreeVariety",
                                raw: "plant:tree/v1:RubberTreeVariety",
                            },
                        ),
                    ),
                    description: None,
                },
            ],
        },
        "plant:tree:v1:Nursery": Resource {
            element_id: ElementId {
                namespace: [
                    "tree",
                    "v1",
                ],
                name: "Nursery",
                raw: "plant:tree/v1:Nursery",
            },
            description: None,
            input_properties: [
                InputProperty {
                    name: "sizes",
                    type: Option(
                        Object(
                            Ref(
                                Type(
                                    ElementId {
                                        namespace: [
                                            "tree",
                                            "v1",
                                        ],
                                        name: "TreeSize",
                                        raw: "plant:tree/v1:TreeSize",
                                    },
                                ),
                            ),
                        ),
                    ),
                    description: Some(
                        "The sizes of trees available",
                    ),
                },
                InputProperty {
                    name: "varieties",
                    type: Array(
                        Ref(
                            Type(
                                ElementId {
                                    namespace: [
                                        "tree",
                                        "v1",
                                    ],
                                    name: "RubberTreeVariety",
                                    raw: "plant:tree/v1:RubberTreeVariety",
                                },
                            ),
                        ),
                    ),
                    description: Some(
                        "The varieties available",
                    ),
                },
            ],
            output_properties: [],
        },
    },
    function_name_map: {},
    all_types: {
        ElementId {
            namespace: [],
            name: "CloudAuditOptionsLogName",
            raw: "plant::CloudAuditOptionsLogName",
        }: GlobalType {
            element_id: ElementId {
                namespace: [],
                name: "CloudAuditOptionsLogName",
                raw: "plant::CloudAuditOptionsLogName",
            },
            value: StringEnum(
                Some(
                    "The log_name to populate in the Cloud Audit Record. This is added to regress pulumi/pulumi issue #7913",
                ),
                [
                    StringEnumElement {
                        name: "UnspecifiedLogName",
                        value: Some(
                            "UNSPECIFIED_LOG_NAME",
                        ),
                        description: Some(
                            "Default. Should not be used.",
                        ),
                    },
                    StringEnumElement {
                        name: "AdminActivity",
                        value: Some(
                            "ADMIN_ACTIVITY",
                        ),
                        description: Some(
                            "Corresponds to \"cloudaudit.googleapis.com/activity\"",
                        ),
                    },
                    StringEnumElement {
                        name: "DataAccess",
                        value: Some(
                            "DATA_ACCESS",
                        ),
                        description: Some(
                            "Corresponds to \"cloudaudit.googleapis.com/data_access\"",
                        ),
                    },
                    StringEnumElement {
                        name: "Synthetic",
                        value: Some(
                            "SYNTHETIC",
                        ),
                        description: Some(
                            "What if triple quotes \"\"\" are used in the description",
                        ),
                    },
                ],
            ),
        },
        ElementId {
            namespace: [],
            name: "Container",
            raw: "plant::Container",
        }: GlobalType {
            element_id: ElementId {
                namespace: [],
                name: "Container",
                raw: "plant::Container",
            },
            value: Object(
                None,
                [
                    GlobalTypeProperty {
                        name: "brightness",
                        type: Option(
                            Ref(
                                Type(
                                    ElementId {
                                        namespace: [],
                                        name: "ContainerBrightness",
                                        raw: "plant::ContainerBrightness",
                                    },
                                ),
                            ),
                        ),
                        description: None,
                    },
                    GlobalTypeProperty {
                        name: "color",
                        type: Option(
                            DiscriminatedUnion(
                                [
                                    Ref(
                                        Type(
                                            ElementId {
                                                namespace: [],
                                                name: "ContainerColor",
                                                raw: "plant::ContainerColor",
                                            },
                                        ),
                                    ),
                                    String,
                                ],
                            ),
                        ),
                        description: None,
                    },
                    GlobalTypeProperty {
                        name: "material",
                        type: Option(
                            String,
                        ),
                        description: None,
                    },
                    GlobalTypeProperty {
                        name: "size",
                        type: Ref(
                            Type(
                                ElementId {
                                    namespace: [],
                                    name: "ContainerSize",
                                    raw: "plant::ContainerSize",
                                },
                            ),
                        ),
                        description: None,
                    },
                ],
            ),
        },
        ElementId {
            namespace: [],
            name: "ContainerBrightness",
            raw: "plant::ContainerBrightness",
        }: GlobalType {
            element_id: ElementId {
                namespace: [],
                name: "ContainerBrightness",
                raw: "plant::ContainerBrightness",
            },
            value: NumberEnum(
                None,
                [
                    NumberEnumElement {
                        name: "ZeroPointOne",
                        value: 0.1,
                        description: None,
                    },
                    NumberEnumElement {
                        name: "One",
                        value: 1.0,
                        description: None,
                    },
                ],
            ),
        },
        ElementId {
            namespace: [],
            name: "ContainerColor",
            raw: "plant::ContainerColor",
        }: GlobalType {
            element_id: ElementId {
                namespace: [],
                name: "ContainerColor",
                raw: "plant::ContainerColor",
            },
            value: StringEnum(
                Some(
                    "plant container colors",
                ),
                [
                    StringEnumElement {
                        name: "red",
                        value: None,
                        description: None,
                    },
                    StringEnumElement {
                        name: "blue",
                        value: None,
                        description: None,
                    },
                    StringEnumElement {
                        name: "yellow",
                        value: None,
                        description: None,
                    },
                ],
            ),
        },
        ElementId {
            namespace: [],
            name: "ContainerSize",
            raw: "plant::ContainerSize",
        }: GlobalType {
            element_id: ElementId {
                namespace: [],
                name: "ContainerSize",
                raw: "plant::ContainerSize",
            },
            value: IntegerEnum(
                Some(
                    "plant container sizes",
                ),
                [
                    IntegerEnumElement {
                        name: "FourInch",
                        value: 4,
                        description: None,
                    },
                    IntegerEnumElement {
                        name: "SixInch",
                        value: 6,
                        description: None,
                    },
                    IntegerEnumElement {
                        name: "EightInch",
                        value: 8,
                        description: None,
                    },
                ],
            ),
        },
        ElementId {
            namespace: [
                "tree",
                "v1",
            ],
            name: "Diameter",
            raw: "other:tree/v1:Diameter",
        }: GlobalType {
            element_id: ElementId {
                namespace: [
                    "tree",
                    "v1",
                ],
                name: "Diameter",
                raw: "other:tree/v1:Diameter",
            },
            value: NumberEnum(
                None,
                [
                    NumberEnumElement {
                        name: "sixinch",
                        value: 6.0,
                        description: None,
                    },
                    NumberEnumElement {
                        name: "twelveinch",
                        value: 12.0,
                        description: None,
                    },
                ],
            ),
        },
        ElementId {
            namespace: [
                "tree",
                "v1",
            ],
            name: "Farm",
            raw: "plant:tree/v1:Farm",
        }: GlobalType {
            element_id: ElementId {
                namespace: [
                    "tree",
                    "v1",
                ],
                name: "Farm",
                raw: "plant:tree/v1:Farm",
            },
            value: StringEnum(
                None,
                [
                    StringEnumElement {
                        name: "PulumiPlantersInc",
                        value: Some(
                            "Pulumi Planters Inc.",
                        ),
                        description: None,
                    },
                    StringEnumElement {
                        name: "PlantsRUs",
                        value: Some(
                            "Plants'R'Us",
                        ),
                        description: None,
                    },
                ],
            ),
        },
        ElementId {
            namespace: [
                "tree",
                "v1",
            ],
            name: "RubberTreeVariety",
            raw: "plant:tree/v1:RubberTreeVariety",
        }: GlobalType {
            element_id: ElementId {
                namespace: [
                    "tree",
                    "v1",
                ],
                name: "RubberTreeVariety",
                raw: "plant:tree/v1:RubberTreeVariety",
            },
            value: StringEnum(
                Some(
                    "types of rubber trees",
                ),
                [
                    StringEnumElement {
                        name: "Burgundy",
                        value: None,
                        description: Some(
                            "A burgundy rubber tree.",
                        ),
                    },
                    StringEnumElement {
                        name: "Ruby",
                        value: None,
                        description: Some(
                            "A ruby rubber tree.",
                        ),
                    },
                    StringEnumElement {
                        name: "Tineke",
                        value: None,
                        description: Some(
                            "A tineke rubber tree.",
                        ),
                    },
                ],
            ),
        },
        ElementId {
            namespace: [
                "tree",
                "v1",
            ],
            name: "TreeSize",
            raw: "plant:tree/v1:TreeSize",
        }: GlobalType {
            element_id: ElementId {
                namespace: [
                    "tree",
                    "v1",
                ],
                name: "TreeSize",
                raw: "plant:tree/v1:TreeSize",
            },
            value: StringEnum(
                None,
                [
                    StringEnumElement {
                        name: "small",
                        value: None,
                        description: None,
                    },
                    StringEnumElement {
                        name: "medium",
                        value: None,
                        description: None,
                    },
                    StringEnumElement {
                        name: "large",
                        value: None,
                        description: None,
                    },
                ],
            ),
        },
    },
}