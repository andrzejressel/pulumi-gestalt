Package {
    name: "example",
    display_name: None,
    plugin_download_url: None,
    version: "1.0.0",
    resources: {
        ElementId {
            namespace: [],
            name: "ExampleServer",
            raw: "example:index:ExampleServer",
        }: Resource {
            element_id: ElementId {
                namespace: [],
                name: "ExampleServer",
                raw: "example:index:ExampleServer",
            },
            description: None,
            input_properties: [
                InputProperty {
                    name: "mapArrayEnum",
                    type: Option(
                        Array(
                            Object(
                                Ref(
                                    Type(
                                        ElementId {
                                            namespace: [],
                                            name: "AnnotationStoreSchemaValueType",
                                            raw: "example:index:AnnotationStoreSchemaValueType",
                                        },
                                    ),
                                ),
                            ),
                        ),
                    ),
                    description: None,
                },
            ],
            output_properties: [
                OutputProperty {
                    name: "mapArrayEnum",
                    type: Option(
                        Array(
                            Object(
                                Ref(
                                    Type(
                                        ElementId {
                                            namespace: [],
                                            name: "AnnotationStoreSchemaValueType",
                                            raw: "example:index:AnnotationStoreSchemaValueType",
                                        },
                                    ),
                                ),
                            ),
                        ),
                    ),
                    description: None,
                },
            ],
        },
    },
    functions: {},
    types: {
        ElementId {
            namespace: [],
            name: "AnnotationStoreSchemaValueType",
            raw: "example:index:AnnotationStoreSchemaValueType",
        }: GlobalType {
            element_id: ElementId {
                namespace: [],
                name: "AnnotationStoreSchemaValueType",
                raw: "example:index:AnnotationStoreSchemaValueType",
            },
            value: StringEnum(
                None,
                [
                    StringEnumElement {
                        name: "Long",
                        value: Some(
                            "LONG",
                        ),
                        description: None,
                    },
                    StringEnumElement {
                        name: "Int",
                        value: Some(
                            "INT",
                        ),
                        description: None,
                    },
                    StringEnumElement {
                        name: "String",
                        value: Some(
                            "STRING",
                        ),
                        description: None,
                    },
                    StringEnumElement {
                        name: "Float",
                        value: Some(
                            "FLOAT",
                        ),
                        description: None,
                    },
                    StringEnumElement {
                        name: "Double",
                        value: Some(
                            "DOUBLE",
                        ),
                        description: None,
                    },
                    StringEnumElement {
                        name: "Boolean",
                        value: Some(
                            "BOOLEAN",
                        ),
                        description: None,
                    },
                ],
            ),
        },
    },
    resource_name_map: {
        "example:ExampleServer": Resource {
            element_id: ElementId {
                namespace: [],
                name: "ExampleServer",
                raw: "example:index:ExampleServer",
            },
            description: None,
            input_properties: [
                InputProperty {
                    name: "mapArrayEnum",
                    type: Option(
                        Array(
                            Object(
                                Ref(
                                    Type(
                                        ElementId {
                                            namespace: [],
                                            name: "AnnotationStoreSchemaValueType",
                                            raw: "example:index:AnnotationStoreSchemaValueType",
                                        },
                                    ),
                                ),
                            ),
                        ),
                    ),
                    description: None,
                },
            ],
            output_properties: [
                OutputProperty {
                    name: "mapArrayEnum",
                    type: Option(
                        Array(
                            Object(
                                Ref(
                                    Type(
                                        ElementId {
                                            namespace: [],
                                            name: "AnnotationStoreSchemaValueType",
                                            raw: "example:index:AnnotationStoreSchemaValueType",
                                        },
                                    ),
                                ),
                            ),
                        ),
                    ),
                    description: None,
                },
            ],
        },
    },
    function_name_map: {},
    all_types: {
        ElementId {
            namespace: [],
            name: "AnnotationStoreSchemaValueType",
            raw: "example:index:AnnotationStoreSchemaValueType",
        }: GlobalType {
            element_id: ElementId {
                namespace: [],
                name: "AnnotationStoreSchemaValueType",
                raw: "example:index:AnnotationStoreSchemaValueType",
            },
            value: StringEnum(
                None,
                [
                    StringEnumElement {
                        name: "Long",
                        value: Some(
                            "LONG",
                        ),
                        description: None,
                    },
                    StringEnumElement {
                        name: "Int",
                        value: Some(
                            "INT",
                        ),
                        description: None,
                    },
                    StringEnumElement {
                        name: "String",
                        value: Some(
                            "STRING",
                        ),
                        description: None,
                    },
                    StringEnumElement {
                        name: "Float",
                        value: Some(
                            "FLOAT",
                        ),
                        description: None,
                    },
                    StringEnumElement {
                        name: "Double",
                        value: Some(
                            "DOUBLE",
                        ),
                        description: None,
                    },
                    StringEnumElement {
                        name: "Boolean",
                        value: Some(
                            "BOOLEAN",
                        ),
                        description: None,
                    },
                ],
            ),
        },
    },
}