name: Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: "full"

permissions:
  contents: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  build-base:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-24.04, windows-2022, macos-14]
    steps:
      - run: git config --system core.longpaths true
        if: runner.os == 'Windows'
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          submodules: true
#      - uses: testspace-com/setup-testspace@v1
#        with:
#          domain: ${{github.repository_owner}}
      - uses: extractions/setup-just@e33e0265a09d6d736e2ee1e0eb685ef1de4669ff # v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: cargo-bins/cargo-binstall@5cbf019d8cb9b9d5b086218c41458ea35d817691 # v1.12.5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Install requirements
        run: just install-requirements
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Install Protoc
        uses: arduino/setup-protoc@c65c819552d16ad3c9b72d9dfd5ba5237b9c906b # v3.0.0
        with:
          version: "25.3"
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - run: protoc --version
      - run: brew install pulumi
        if: runner.os == 'macOS'
      - run: pulumi version
      - run: pulumi login --local
      - uses: Swatinem/rust-cache@9d47c6ad4b02e050fd481d890b2ea34778fd09d6 # v2.7.8
      - name: Cache Pulumi providers
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: ~/.pulumi/plugins
          key: ${{ runner.os }}-pulumi-${{ hashFiles('regenerator/src/main.rs') }}
          restore-keys: |
            ${{ runner.os }}-pulumi-
      - run: just base-ci-flow
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload coverage data to codecov
        uses: codecov/codecov-action@18283e04ce6e62d37312384ff67231eb8fd56d24 # v5.4.3
        with:
          files: covertura.xml
          fail_ci_if_error: true
      - name: Upload test results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@47f89e9acb64b76debcd5ea40642d25a4adced9f # v1.1.1
        with:
          files: target/nextest/default/junit.xml
          fail_ci_if_error: true
#      - name: Publish Results to Testspace
#        run: testspace "[ examples/${{ matrix.os }} ]target/nextest/default/junit.xml"
      - run: git add . && git diff
      - run: git diff --cached
      - name: Ensure no files have changed
        run: git add . && git diff --quiet && git diff --cached --quiet

  build-generated-provider:
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        # DO NOT EDIT - PROVIDER START
        provider: [array-of-enum-map, azure-native-nested-types, cloudflare, cyclic-types, different-enum, docker, functions-secrets, mini-awsnative, nested-module, nested-module-thirdparty, output-funcs, output-funcs-edgeorder, plain-object-defaults, plain-object-disable-defaults, random, reserved_names, unions-inline, unions-inside-arrays, workarounds, aws-0, aws-1, aws-2, aws-3, aws-4, aws-5, aws-6, aws-7, aws-8, aws-9, aws-10, aws-11, aws-12, aws-13, aws-14, aws-15, aws-16, aws-17, aws-18, aws-19, aws-20, aws-21, azure-0, azure-1, azure-2, azure-3, azure-4, azure-5, azure-6, azure-7, azure-8, azure-9, azure-10, azure-11, azure-12, azure-13, filtering-0, filtering-1, filtering-2, gcp-0, gcp-1, gcp-2, gcp-3, gcp-4, gcp-5, gcp-6, gcp-7, gcp-8, gcp-9, gcp-10, gcp-11, gcp-12, gcp-13]
# DO NOT EDIT - PROVIDER END
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          submodules: true
#      - uses: testspace-com/setup-testspace@v1
#        with:
#          domain: ${{github.repository_owner}}
      - uses: extractions/setup-just@e33e0265a09d6d736e2ee1e0eb685ef1de4669ff # v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: cargo-bins/cargo-binstall@5cbf019d8cb9b9d5b086218c41458ea35d817691 # v1.12.5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Install requirements
        run: just install-requirements
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: Swatinem/rust-cache@9d47c6ad4b02e050fd481d890b2ea34778fd09d6 # v2.7.8
        with:
          lookup-only: "true"
          save-if: "false"
      - name: Install Protoc
        uses: arduino/setup-protoc@c65c819552d16ad3c9b72d9dfd5ba5237b9c906b # v3.0.0
        with:
          version: "25.3"
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - run: protoc --version
      - run: just test-provider-compilation ${{ matrix.provider }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload coverage data to codecov
        uses: codecov/codecov-action@18283e04ce6e62d37312384ff67231eb8fd56d24 # v5.4.3
        with:
          files: covertura.xml
          fail_ci_if_error: true
      - name: Upload test results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@47f89e9acb64b76debcd5ea40642d25a4adced9f # v1.1.1
        with:
          files: target/nextest/default/junit.xml
          fail_ci_if_error: true
#      - name: Publish Results to Testspace
#        run: testspace "[ provider/${{ matrix.provider }} ]target/nextest/default/junit.xml"
      - run: git add . && git diff
      - run: git diff --cached
      - name: Ensure no files have changed
        run: git add . && git diff --quiet && git diff --cached --quiet

  build-housekeeping:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-24.04, windows-2022, macos-14]
    steps:
      - run: git config --system core.longpaths true
        if: runner.os == 'Windows'
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          submodules: true
      - uses: extractions/setup-just@e33e0265a09d6d736e2ee1e0eb685ef1de4669ff # v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: cargo-bins/cargo-binstall@5cbf019d8cb9b9d5b086218c41458ea35d817691 # v1.12.5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Install requirements
        run: just install-requirements
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: brew install pulumi
        if: runner.os == 'macOS'
      - run: pulumi version
      - run: pulumi login --local
      - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version: '^1.22.0'
          cache-dependency-path: "**/go.sum"
      - uses: Swatinem/rust-cache@9d47c6ad4b02e050fd481d890b2ea34778fd09d6 # v2.7.8
      - name: Install Protoc
        uses: arduino/setup-protoc@c65c819552d16ad3c9b72d9dfd5ba5237b9c906b # v3.0.0
        with:
          version: "25.3"
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - run: protoc --version
      - name: Cache Pulumi providers
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: ~/.pulumi/plugins
          key: ${{ runner.os }}-pulumi-${{ hashFiles('regenerator/src/main.rs') }}
          restore-keys: |
            ${{ runner.os }}-pulumi-
      - run: just housekeeping-ci-flow
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: git add . && git diff
      - run: git diff --cached
      - name: Ensure no files have changed
        run: git add . && git diff --quiet && git diff --cached --quiet

  build-rust-docs:
    runs-on: ubuntu-24.04

    steps:
      - run: git config --system core.longpaths true
        if: runner.os == 'Windows'
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          submodules: true
      - uses: extractions/setup-just@e33e0265a09d6d736e2ee1e0eb685ef1de4669ff # v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: cargo-bins/cargo-binstall@5cbf019d8cb9b9d5b086218c41458ea35d817691 # v1.12.5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Install requirements
        run: just install-requirements
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: brew install pulumi
        if: runner.os == 'macOS'
      - run: pulumi version
      - run: pulumi login --local
      - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version: '^1.22.0'
          cache-dependency-path: "**/go.sum"
      - name: Install Protoc
        uses: arduino/setup-protoc@c65c819552d16ad3c9b72d9dfd5ba5237b9c906b # v3.0.0
        with:
          version: "25.3"
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - run: protoc --version
      - uses: Swatinem/rust-cache@9d47c6ad4b02e050fd481d890b2ea34778fd09d6 # v2.7.8
      - name: Cache Pulumi providers
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: ~/.pulumi/plugins
          key: ${{ runner.os }}-pulumi-${{ hashFiles('regenerator/src/main.rs') }}
          restore-keys: |
            ${{ runner.os }}-pulumi-
      - run: just test-docs-ci-flow
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: git add . && git diff
      - run: git diff --cached
      - name: Ensure no files have changed
        run: git add . && git diff --quiet && git diff --cached --quiet

  build-examples:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-24.04, windows-2022, macos-14]
    steps:
      - run: git config --system core.longpaths true
        if: runner.os == 'Windows'
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          submodules: true
#      - uses: testspace-com/setup-testspace@v1
#        with:
#          domain: ${{github.repository_owner}}
      - uses: extractions/setup-just@e33e0265a09d6d736e2ee1e0eb685ef1de4669ff # v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: cargo-bins/cargo-binstall@5cbf019d8cb9b9d5b086218c41458ea35d817691 # v1.12.5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: brew install pulumi
        if: runner.os == 'macOS'
      - run: pulumi version
      - run: pulumi login --local
      - name: Pull required docker images
        if: runner.os == 'Linux'
        uses: nick-fields/retry@ce71cc2ab81d554ebbe88c79ab5975992d79ba08 # v3.0.2
        with:
          timeout_minutes: 10
          max_attempts: 10
          command: docker pull public.ecr.aws/ubuntu/ubuntu:latest
      - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version: '^1.22.0'
          cache-dependency-path: "**/go.sum"
      - run: go version
      - name: Install Protoc
        uses: arduino/setup-protoc@c65c819552d16ad3c9b72d9dfd5ba5237b9c906b # v3.0.0
        with:
          version: "25.3"
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - run: protoc --version
      - name: Install requirements
        run: just install-requirements
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: Swatinem/rust-cache@9d47c6ad4b02e050fd481d890b2ea34778fd09d6 # v2.7.8
        with:
          shared-key: build-examples
      - run: just examples-ci-flow
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload coverage data to codecov
        uses: codecov/codecov-action@18283e04ce6e62d37312384ff67231eb8fd56d24 # v5.4.3
        with:
          files: covertura.xml
          fail_ci_if_error: true
      - name: Upload test results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@47f89e9acb64b76debcd5ea40642d25a4adced9f # v1.1.1
        with:
          files: target/nextest/default/junit.xml
          fail_ci_if_error: true
#      - name: Publish Results to Testspace
#        run: testspace "[ examples/${{ matrix.os }} ]target/nextest/default/junit.xml"
      - run: git add . && git diff
      - run: git diff --cached
      - name: Ensure no files have changed
        run: git add . && git diff --quiet && git diff --cached --quiet

  build-c:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-24.04, windows-2022, macos-13, macos-14]

    steps:
      - run: git config --system core.longpaths true
        if: runner.os == 'Windows'
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          submodules: true
      - uses: extractions/setup-just@e33e0265a09d6d736e2ee1e0eb685ef1de4669ff # v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: cargo-bins/cargo-binstall@5cbf019d8cb9b9d5b086218c41458ea35d817691 # v1.12.5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Install requirements
        run: just install-requirements
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: brew install pulumi
        if: runner.os == 'macOS'
      - run: pulumi version
      - run: pulumi login --local
      - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version: '^1.22.0'
          cache-dependency-path: "**/go.sum"
      - name: Install Protoc
        uses: arduino/setup-protoc@c65c819552d16ad3c9b72d9dfd5ba5237b9c906b # v3.0.0
        with:
          version: "25.3"
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - run: protoc --version
      - uses: Swatinem/rust-cache@9d47c6ad4b02e050fd481d890b2ea34778fd09d6 # v2.7.8
      - run: just c-ci-flow
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: git add . && git diff
      - run: git diff --cached
      - name: Ensure no files have changed
        run: git add . && git diff --quiet && git diff --cached --quiet

  build-native:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-24.04, windows-2022, macos-13, macos-14]

    steps:
      - run: git config --system core.longpaths true
        if: runner.os == 'Windows'
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          submodules: true
      - uses: extractions/setup-just@e33e0265a09d6d736e2ee1e0eb685ef1de4669ff # v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: cargo-bins/cargo-binstall@5cbf019d8cb9b9d5b086218c41458ea35d817691 # v1.12.5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Install requirements
        run: just install-requirements
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: brew install pulumi
        if: runner.os == 'macOS'
      - run: pulumi version
      - run: pulumi login --local
      - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version: '^1.22.0'
          cache-dependency-path: "**/go.sum"
      - name: Install Protoc
        uses: arduino/setup-protoc@c65c819552d16ad3c9b72d9dfd5ba5237b9c906b # v3.0.0
        with:
          version: "25.3"
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - run: protoc --version
      - uses: Swatinem/rust-cache@9d47c6ad4b02e050fd481d890b2ea34778fd09d6 # v2.7.8
      - run: just build-native-examples
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: git add . && git diff
      - run: git diff --cached
      - name: Ensure no files have changed
        run: git add . && git diff --quiet && git diff --cached --quiet
