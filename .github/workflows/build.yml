name: Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:

    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    env:
      RUST_BACKTRACE: "full"

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
#    - uses: Swatinem/rust-cache@v2
#      with:
#        workspaces: |
#          ./
#          pulumi_wasm_generator_lib/tests/output/command_provider/
#          pulumi_wasm_generator_lib/tests/output/docker_provider/
#          pulumi_wasm_generator_lib/tests/output/pulumi_cyclic-types/
#          pulumi_wasm_generator_lib/tests/output/pulumi_mini-awsnative/
#          pulumi_wasm_generator_lib/tests/output/random_provider/
#    - uses: actions/setup-go@v5
#      with:
#        go-version: '^1.22.0'
#        cache-dependency-path: "**/go.sum"
#    - run: go version
#    - name: Install Protoc
#      uses: arduino/setup-protoc@v3
#      with:
#        version: "25.3"
#        repo-token: ${{ secrets.GITHUB_TOKEN }}
#    - run: protoc --version
#    - run: brew install pulumi
#      if: runner.os == 'macOS'
#    - run: pulumi version
#    - run: pulumi login --local
#    - uses: extractions/setup-just@v2
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#    - uses: cargo-bins/cargo-binstall@main
#    - name: Regenerate provider list
#      run: just regenerate-provider-list
#    - name: Install requirements
#      run: just install-requirements
#    - name: Check
#      run: just check
#    - name: Build
#      run: just build
#    - name: Test
#      run: just test
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        RUST_BACKTRACE: "full"
#    - name: Ensure no files have changed
#      run: git diff --exit-code
    - uses: benjlevesque/short-sha@v3.0
      id: short-sha
      with:
        length: 7
    - name: Release
      uses: softprops/action-gh-release@v2
      if: github.ref == 'refs/heads/deploy-from-main' && runner.os == 'Ubuntu'
      with:
        name: ${{ steps.short-sha.outputs.sha }}
        prerelease: true
        files: |
          *.md
