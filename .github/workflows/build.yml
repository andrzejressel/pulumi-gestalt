name: Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: "full"

permissions:
  contents: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  build-base:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-24.04, windows-2022, macos-14]
    steps:
      - run: git config --system core.longpaths true
        if: runner.os == 'Windows'
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          submodules: true
#      - uses: testspace-com/setup-testspace@v1
#        with:
#          domain: ${{github.repository_owner}}
      - uses: extractions/setup-just@dd310ad5a97d8e7b41793f8ef055398d51ad4de6 # v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: cargo-bins/cargo-binstall@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Install requirements
        run: just install-requirements
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Install Protoc
        uses: arduino/setup-protoc@v3
        with:
          version: "25.3"
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - run: protoc --version
      - run: brew install pulumi
        if: runner.os == 'macOS'
      - run: pulumi version
      - run: pulumi login --local
      - uses: Swatinem/rust-cache@f0deed1e0edfc6a9be95417288c0e1099b1eeec3 # v2
      - name: Cache Pulumi providers
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4
        with:
          path: ~/.pulumi/plugins
          key: ${{ runner.os }}-pulumi-${{ hashFiles('regenerator/src/main.rs') }}
          restore-keys: |
            ${{ runner.os }}-pulumi-
      - run: just base-ci-flow
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload coverage data to codecov
        uses: codecov/codecov-action@13ce06bfc6bbe3ecf90edbbf1bc32fe5978ca1d3 # v5
        with:
          files: covertura.xml
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Upload test results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@44ecb3a270cd942bdf0fa8f2ce14cb32493e810a # v1
        with:
          files: target/nextest/default/junit.xml
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
#      - name: Publish Results to Testspace
#        run: testspace "[ examples/${{ matrix.os }} ]target/nextest/default/junit.xml"
      - run: git add . && git diff
      - run: git diff --cached
      - name: Ensure no files have changed
        run: git add . && git diff --quiet && git diff --cached --quiet

  build-generated-provider:
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        # DO NOT EDIT - PROVIDER START
        provider: [array-of-enum-map, azure-native-nested-types, cloudflare, cyclic-types, different-enum, docker, functions-secrets, mini-awsnative, nested-module, nested-module-thirdparty, output-funcs, output-funcs-edgeorder, plain-object-defaults, plain-object-disable-defaults, random, reserved_names, unions-inline, unions-inside-arrays, workarounds, aws-0, aws-1, aws-2, aws-3, aws-4, aws-5, aws-6, aws-7, aws-8, aws-9, aws-10, aws-11, aws-12, aws-13, aws-14, aws-15, aws-16, aws-17, aws-18, aws-19, aws-20, aws-21, azure-0, azure-1, azure-2, azure-3, azure-4, azure-5, azure-6, azure-7, azure-8, azure-9, azure-10, azure-11, azure-12, azure-13, filtering-0, filtering-1, filtering-2, gcp-0, gcp-1, gcp-2, gcp-3, gcp-4, gcp-5, gcp-6, gcp-7, gcp-8, gcp-9, gcp-10, gcp-11, gcp-12, gcp-13]
# DO NOT EDIT - PROVIDER END
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          submodules: true
#      - uses: testspace-com/setup-testspace@v1
#        with:
#          domain: ${{github.repository_owner}}
      - uses: extractions/setup-just@dd310ad5a97d8e7b41793f8ef055398d51ad4de6 # v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: cargo-bins/cargo-binstall@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Install requirements
        run: just install-requirements
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: Swatinem/rust-cache@f0deed1e0edfc6a9be95417288c0e1099b1eeec3 # v2
        with:
          lookup-only: "true"
          save-if: "false"
      - run: just test-provider-compilation ${{ matrix.provider }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload coverage data to codecov
        uses: codecov/codecov-action@13ce06bfc6bbe3ecf90edbbf1bc32fe5978ca1d3 # v5
        with:
          files: covertura.xml
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Upload test results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@44ecb3a270cd942bdf0fa8f2ce14cb32493e810a # v1
        with:
          files: target/nextest/default/junit.xml
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
#      - name: Publish Results to Testspace
#        run: testspace "[ provider/${{ matrix.provider }} ]target/nextest/default/junit.xml"
      - run: git add . && git diff
      - run: git diff --cached
      - name: Ensure no files have changed
        run: git add . && git diff --quiet && git diff --cached --quiet

  build-housekeeping:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-24.04, windows-2022, macos-14]
    steps:
      - run: git config --system core.longpaths true
        if: runner.os == 'Windows'
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          submodules: true
      - uses: extractions/setup-just@dd310ad5a97d8e7b41793f8ef055398d51ad4de6 # v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: cargo-bins/cargo-binstall@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Install requirements
        run: just install-requirements
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: brew install pulumi
        if: runner.os == 'macOS'
      - run: pulumi version
      - run: pulumi login --local
      - uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34 # v5
        with:
          go-version: '^1.22.0'
          cache-dependency-path: "**/go.sum"
      - uses: Swatinem/rust-cache@f0deed1e0edfc6a9be95417288c0e1099b1eeec3 # v2
      - name: Cache Pulumi providers
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4
        with:
          path: ~/.pulumi/plugins
          key: ${{ runner.os }}-pulumi-${{ hashFiles('regenerator/src/main.rs') }}
          restore-keys: |
            ${{ runner.os }}-pulumi-
      - run: just housekeeping-ci-flow
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: git add . && git diff
      - run: git diff --cached
      - name: Ensure no files have changed
        run: git add . && git diff --quiet && git diff --cached --quiet

  build-rust-docs:
    runs-on: ubuntu-24.04

    steps:
      - run: git config --system core.longpaths true
        if: runner.os == 'Windows'
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          submodules: true
      - uses: extractions/setup-just@dd310ad5a97d8e7b41793f8ef055398d51ad4de6 # v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: cargo-bins/cargo-binstall@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Install requirements
        run: just install-requirements
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: brew install pulumi
        if: runner.os == 'macOS'
      - run: pulumi version
      - run: pulumi login --local
      - uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34 # v5
        with:
          go-version: '^1.22.0'
          cache-dependency-path: "**/go.sum"
      - name: Install Protoc
        uses: arduino/setup-protoc@v3
        with:
          version: "25.3"
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - run: protoc --version
      - uses: Swatinem/rust-cache@f0deed1e0edfc6a9be95417288c0e1099b1eeec3 # v2
      - name: Cache Pulumi providers
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4
        with:
          path: ~/.pulumi/plugins
          key: ${{ runner.os }}-pulumi-${{ hashFiles('regenerator/src/main.rs') }}
          restore-keys: |
            ${{ runner.os }}-pulumi-
      - run: just test-docs-ci-flow
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: git add . && git diff
      - run: git diff --cached
      - name: Ensure no files have changed
        run: git add . && git diff --quiet && git diff --cached --quiet

  build-examples:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-24.04, windows-2022, macos-14]
    steps:
      - run: git config --system core.longpaths true
        if: runner.os == 'Windows'
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          submodules: true
#      - uses: testspace-com/setup-testspace@v1
#        with:
#          domain: ${{github.repository_owner}}
      - uses: extractions/setup-just@dd310ad5a97d8e7b41793f8ef055398d51ad4de6 # v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: cargo-bins/cargo-binstall@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: brew install pulumi
        if: runner.os == 'macOS'
      - run: pulumi version
      - run: pulumi login --local
      - name: Pull required docker images
        if: runner.os == 'Linux'
        uses: nick-fields/retry@7152eba30c6575329ac0576536151aca5a72780e # v3
        with:
          timeout_minutes: 10
          max_attempts: 10
          command: docker pull public.ecr.aws/ubuntu/ubuntu:latest
      - uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34 # v5
        with:
          go-version: '^1.22.0'
          cache-dependency-path: "**/go.sum"
      - run: go version
      - name: Install Protoc
        uses: arduino/setup-protoc@v3
        with:
          version: "25.3"
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - run: protoc --version
      - name: Install requirements
        run: just install-requirements
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: Swatinem/rust-cache@f0deed1e0edfc6a9be95417288c0e1099b1eeec3 # v2
        with:
          shared-key: build-examples
      - run: just examples-ci-flow
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload coverage data to codecov
        uses: codecov/codecov-action@13ce06bfc6bbe3ecf90edbbf1bc32fe5978ca1d3 # v5
        with:
          files: covertura.xml
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Upload test results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@44ecb3a270cd942bdf0fa8f2ce14cb32493e810a # v1
        with:
          files: target/nextest/default/junit.xml
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
#      - name: Publish Results to Testspace
#        run: testspace "[ examples/${{ matrix.os }} ]target/nextest/default/junit.xml"
      - run: git add . && git diff
      - run: git diff --cached
      - name: Ensure no files have changed
        run: git add . && git diff --quiet && git diff --cached --quiet

  build-cpp:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-24.04, windows-2022, macos-13, macos-14]

    steps:
      - run: git config --system core.longpaths true
        if: runner.os == 'Windows'
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          submodules: true
      - uses: extractions/setup-just@dd310ad5a97d8e7b41793f8ef055398d51ad4de6 # v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: cargo-bins/cargo-binstall@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Install requirements
        run: just install-requirements
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: brew install pulumi
        if: runner.os == 'macOS'
      - run: pulumi version
      - run: pulumi login --local
      - uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34 # v5
        with:
          go-version: '^1.22.0'
          cache-dependency-path: "**/go.sum"
      - name: Install Protoc
        uses: arduino/setup-protoc@v3
        with:
          version: "25.3"
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - run: protoc --version
      - uses: Swatinem/rust-cache@f0deed1e0edfc6a9be95417288c0e1099b1eeec3 # v2
      - run: just cpp-ci-flow
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: git add . && git diff
      - run: git diff --cached
      - name: Ensure no files have changed
        run: git add . && git diff --quiet && git diff --cached --quiet

  deploy:
    runs-on: ubuntu-24.04
    needs: [build-base, build-generated-provider, build-examples, build-housekeeping, build-rust-docs,  build-cpp]
    if: success() && github.ref == 'refs/heads/main'
    steps:
    - name: Cleanup unused stuff
      run: |
        df -h /
        sudo rm -rf \
        "$AGENT_TOOLSDIRECTORY" \
        /opt/google/chrome \
        /opt/microsoft/msedge \
        /opt/microsoft/powershell \
        /opt/pipx \
        /usr/lib/mono \
        /usr/local/julia* \
        /usr/local/lib/android \
        /usr/local/lib/node_modules \
        /usr/local/share/chromium \
        /usr/local/share/powershell \
        /usr/share/dotnet \
        /usr/share/swift
        df -h /
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      with:
        submodules: true
        token: ${{ secrets.PAT }}
    - uses: extractions/setup-just@dd310ad5a97d8e7b41793f8ef055398d51ad4de6 # v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - uses: cargo-bins/cargo-binstall@main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Install requirements
      run: just install-requirements
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Pull required docker images
      if: runner.os == 'Linux'
      uses: nick-fields/retry@7152eba30c6575329ac0576536151aca5a72780e # v3
      with:
        timeout_minutes: 10
        max_attempts: 10
        command: docker pull public.ecr.aws/ubuntu/ubuntu:latest
    - uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34 # v5
      with:
        go-version: '^1.22.0'
        cache-dependency-path: "**/go.sum"
    - run: go version
    - name: Install Protoc
      uses: arduino/setup-protoc@v3
      with:
        version: "25.3"
        repo-token: ${{ secrets.GITHUB_TOKEN }}
    - run: protoc --version
    - run: brew install pulumi
      if: runner.os == 'macOS'
    - run: pulumi version
    - run: pulumi login --local

    - uses: Swatinem/rust-cache@f0deed1e0edfc6a9be95417288c0e1099b1eeec3 # v2
      with:
        shared-key: build-examples
        save-if: false
    - uses: benjlevesque/short-sha@599815c8ee942a9616c92bcfb4f947a3b670ab0b # v3.0
      id: short-sha
      with:
        length: 7
    - name: Generate new version
      run: |
        echo "new_version=$(date +'%y.%-m.%-d')-${{ steps.short-sha.outputs.sha }}" >> $GITHUB_ENV
    - name: Replace version
      run: just update-version "${{ env.new_version }}"

    - name: Base and e2e tests
      run: just base-ci-flow examples-ci-flow
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Clone Repository
      run: |
        git clone https://${{ secrets.RELEASE_TOKEN }}@github.com/andrzejressel/pulumi-wasm-releases /tmp/repo
        cd /tmp/repo
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"

    - name: Create release Commit
      run: |
        cd /tmp/repo
        git commit --allow-empty -m "Commit for version ${{ env.new_version }}"
        git push origin main

    - name: Release
      uses: softprops/action-gh-release@c95fe1489396fe8a9eb87c0abf8aa5b2ef267fda # v2
      with:
        name: ${{ env.new_version }}
        tag_name: "v${{ env.new_version }}"
        prerelease: true
        repository: andrzejressel/pulumi-wasm-releases
        token: ${{ secrets.RELEASE_TOKEN }}
        body: ""

    - name: Create commit
      run: |
        git config --local user.name "GitHub Actions"
        git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git add -A
        git commit -m "Release v${{ env.new_version }}"
        git tag "v${{ env.new_version }}"
        git push origin "v${{ env.new_version }}"
