name: Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: "full"

permissions:
  contents: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  build-base:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-24.04, windows-2022, macos-14]
    steps:
      - run: git config --system core.longpaths true
        if: runner.os == 'Windows'
      - uses: actions/checkout@v4
        with:
          submodules: true
#      - uses: testspace-com/setup-testspace@v1
#        with:
#          domain: ${{github.repository_owner}}
      - uses: extractions/setup-just@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: cargo-bins/cargo-binstall@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Install requirements
        run: just install-requirements
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Install Protoc
        uses: arduino/setup-protoc@v3
        with:
          version: "25.3"
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - run: protoc --version
      - run: brew install pulumi
        if: runner.os == 'macOS'
      - run: pulumi version
      - run: pulumi login --local
      - uses: Swatinem/rust-cache@v2
      - name: Cache Pulumi providers
        uses: actions/cache@v4
        with:
          path: ~/.pulumi/plugins
          key: ${{ runner.os }}-pulumi-${{ hashFiles('regenerator/src/main.rs') }}
          restore-keys: |
            ${{ runner.os }}-pulumi-
      - run: just base-ci-flow
      - name: Upload coverage data to codecov
        uses: codecov/codecov-action@v5
        with:
          files: covertura.xml
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Upload test results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@v1
        with:
          files: target/nextest/default/junit.xml
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
#      - name: Publish Results to Testspace
#        run: testspace "[ examples/${{ matrix.os }} ]target/nextest/default/junit.xml"
      - run: git add . && git diff
      - run: git diff --cached
      - name: Ensure no files have changed
        run: git add . && git diff --quiet && git diff --cached --quiet

  build-generated-provider:
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        # DO NOT EDIT - PROVIDER START
        provider: [array-of-enum-map, azure-native-nested-types, cloudflare, cyclic-types, different-enum, docker, functions-secrets, mini-awsnative, nested-module, nested-module-thirdparty, output-funcs, output-funcs-edgeorder, plain-object-defaults, plain-object-disable-defaults, random, reserved_names, unions-inline, unions-inside-arrays, workarounds, azure-0, azure-1, azure-2, azure-3, azure-4, azure-5, azure-6, azure-7, azure-8, azure-9, azure-10, azure-11, azure-12, azure-13, filtering-0, filtering-1, filtering-2]
# DO NOT EDIT - PROVIDER END
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
#      - uses: testspace-com/setup-testspace@v1
#        with:
#          domain: ${{github.repository_owner}}
      - uses: extractions/setup-just@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: cargo-bins/cargo-binstall@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Install requirements
        run: just install-requirements
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: Swatinem/rust-cache@v2
        with:
          lookup-only: "true"
          save-if: "false"
      - run: just test-provider-compilation ${{ matrix.provider }}
      - name: Upload coverage data to codecov
        uses: codecov/codecov-action@v5
        with:
          files: covertura.xml
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Upload test results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@v1
        with:
          files: target/nextest/default/junit.xml
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
#      - name: Publish Results to Testspace
#        run: testspace "[ provider/${{ matrix.provider }} ]target/nextest/default/junit.xml"
      - run: git add . && git diff
      - run: git diff --cached
      - name: Ensure no files have changed
        run: git add . && git diff --quiet && git diff --cached --quiet

  build-housekeeping:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-24.04, windows-2022, macos-14]
    steps:
      - run: git config --system core.longpaths true
        if: runner.os == 'Windows'
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: extractions/setup-just@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: cargo-bins/cargo-binstall@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Install requirements
        run: just install-requirements
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: brew install pulumi
        if: runner.os == 'macOS'
      - run: pulumi version
      - run: pulumi login --local
      - uses: actions/setup-go@v5
        with:
          go-version: '^1.22.0'
          cache-dependency-path: "**/go.sum"
      - uses: Swatinem/rust-cache@v2
      - name: Cache Pulumi providers
        uses: actions/cache@v4
        with:
          path: ~/.pulumi/plugins
          key: ${{ runner.os }}-pulumi-${{ hashFiles('regenerator/src/main.rs') }}
          restore-keys: |
            ${{ runner.os }}-pulumi-
      - run: just housekeeping-ci-flow
      - run: git add . && git diff
      - run: git diff --cached
      - name: Ensure no files have changed
        run: git add . && git diff --quiet && git diff --cached --quiet

  build-rust-docs:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-24.04, windows-2022, macos-14]
    steps:
      - run: git config --system core.longpaths true
        if: runner.os == 'Windows'
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: extractions/setup-just@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: cargo-bins/cargo-binstall@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Install requirements
        run: just install-requirements
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: brew install pulumi
        if: runner.os == 'macOS'
      - run: pulumi version
      - run: pulumi login --local
      - uses: actions/setup-go@v5
        with:
          go-version: '^1.22.0'
          cache-dependency-path: "**/go.sum"
      - name: Install Protoc
        uses: arduino/setup-protoc@v3
        with:
          version: "25.3"
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - run: protoc --version
      - uses: Swatinem/rust-cache@v2
      - name: Cache Pulumi providers
        uses: actions/cache@v4
        with:
          path: ~/.pulumi/plugins
          key: ${{ runner.os }}-pulumi-${{ hashFiles('regenerator/src/main.rs') }}
          restore-keys: |
            ${{ runner.os }}-pulumi-
      - run: just test-docs-ci-flow
      - run: git add . && git diff
      - run: git diff --cached
      - name: Ensure no files have changed
        run: git add . && git diff --quiet && git diff --cached --quiet

  build-examples:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-24.04, windows-2022, macos-14]
    steps:
      - run: git config --system core.longpaths true
        if: runner.os == 'Windows'
      - uses: actions/checkout@v4
        with:
          submodules: true
#      - uses: testspace-com/setup-testspace@v1
#        with:
#          domain: ${{github.repository_owner}}
      - uses: extractions/setup-just@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: cargo-bins/cargo-binstall@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: brew install pulumi
        if: runner.os == 'macOS'
      - run: pulumi version
      - run: pulumi login --local
      - name: Pull required docker images
        if: runner.os == 'Linux'
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 10
          max_attempts: 10
          command: docker pull public.ecr.aws/ubuntu/ubuntu:latest
      - uses: actions/setup-go@v5
        with:
          go-version: '^1.22.0'
          cache-dependency-path: "**/go.sum"
      - run: go version
      - name: Install Protoc
        uses: arduino/setup-protoc@v3
        with:
          version: "25.3"
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - run: protoc --version
      - name: Install requirements
        run: just install-requirements
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: build-examples
      - run: just examples-ci-flow
      - name: Upload coverage data to codecov
        uses: codecov/codecov-action@v5
        with:
          files: covertura.xml
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Upload test results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@v1
        with:
          files: target/nextest/default/junit.xml
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
#      - name: Publish Results to Testspace
#        run: testspace "[ examples/${{ matrix.os }} ]target/nextest/default/junit.xml"
      - run: git add . && git diff
      - run: git diff --cached
      - name: Ensure no files have changed
        run: git add . && git diff --quiet && git diff --cached --quiet

  deploy:
    runs-on: ubuntu-24.04
    needs: [build-base, build-generated-provider, build-examples, build-housekeeping, build-rust-docs]
    if: success() && github.ref == 'refs/heads/main'
    steps:
    - name: Cleanup unused stuff
      run: |
        df -h /
        sudo rm -rf \
        "$AGENT_TOOLSDIRECTORY" \
        /opt/google/chrome \
        /opt/microsoft/msedge \
        /opt/microsoft/powershell \
        /opt/pipx \
        /usr/lib/mono \
        /usr/local/julia* \
        /usr/local/lib/android \
        /usr/local/lib/node_modules \
        /usr/local/share/chromium \
        /usr/local/share/powershell \
        /usr/share/dotnet \
        /usr/share/swift
        df -h /
    - uses: actions/checkout@v4
      with:
        submodules: true
        token: ${{ secrets.PAT }}
    - uses: extractions/setup-just@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - uses: cargo-bins/cargo-binstall@main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Install requirements
      run: just install-requirements
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Pull required docker images
      if: runner.os == 'Linux'
      uses: nick-fields/retry@v3
      with:
        timeout_minutes: 10
        max_attempts: 10
        command: docker pull public.ecr.aws/ubuntu/ubuntu:latest
    - uses: actions/setup-go@v5
      with:
        go-version: '^1.22.0'
        cache-dependency-path: "**/go.sum"
    - run: go version
    - name: Install Protoc
      uses: arduino/setup-protoc@v3
      with:
        version: "25.3"
        repo-token: ${{ secrets.GITHUB_TOKEN }}
    - run: protoc --version
    - run: brew install pulumi
      if: runner.os == 'macOS'
    - run: pulumi version
    - run: pulumi login --local

    - uses: Swatinem/rust-cache@v2
      with:
        shared-key: build-examples
        save-if: false
    - uses: benjlevesque/short-sha@v3.0
      id: short-sha
      with:
        length: 7
    - name: Replace version
      run: just update-version "0.0.0-NIGHTLY-${{ steps.short-sha.outputs.sha }}"

    - name: Base and e2e tests
      run: just base-ci-flow examples-ci-flow
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Create commit
      run: |
        git config --local user.name "GitHub Actions"
        git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git add -A
        git commit -m "Release v0.0.0-NIGHTLY-${{ steps.short-sha.outputs.sha }}"
        git tag "v0.0.0-NIGHTLY-${{ steps.short-sha.outputs.sha }}"
        git push origin "v0.0.0-NIGHTLY-${{ steps.short-sha.outputs.sha }}"
