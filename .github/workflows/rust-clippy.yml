# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# rust-clippy is a tool that runs a bunch of lints to catch common
# mistakes in your Rust code and help improve your Rust code.
# More details at https://github.com/rust-lang/rust-clippy
# and https://rust-lang.github.io/rust-clippy/

name: rust-clippy analyze

on:
  push:
    branches: [ "main" ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ "main" ]
  schedule:
    - cron: '0 22 * * *'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  rust-clippy-analyze:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-24.04
        #  - windows-2022 Windows has mixed paths that mess GitHub reader up (https://github.com/github/codeql/issues/15209)
          - macos-14

    name: Run rust-clippy analyzing
    permissions:
      contents: read
      security-events: write
    steps:
    - run: git config --system core.longpaths true
      if: runner.os == 'Windows'
    - name: Checkout code
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        submodules: true
    - uses: Swatinem/rust-cache@98c8021b550208e191a6a3145459bfc9fb29c4c0 # v2.8.0
    - name: Install Protoc
      uses: arduino/setup-protoc@c65c819552d16ad3c9b72d9dfd5ba5237b9c906b # v3.0.0
      with:
        version: "25.3"
        repo-token: ${{ secrets.GITHUB_TOKEN }}
    - uses: extractions/setup-just@e33e0265a09d6d736e2ee1e0eb685ef1de4669ff # v3
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Install required cargo
      run: |
        cargo install clippy-sarif || clippy-sarif --version
        cargo install sarif-fmt || sarif-fmt --version
    - run: brew install pulumi
      if: runner.os == 'macOS'
    - run: pulumi version
    - run: pulumi login --local
    - name: Prerun clippy
      run: just clippy
    - name: Run rust-clippy
      run: just clippy-to-file
    - name: Upload analysis results to GitHub
      uses: github/codeql-action/upload-sarif@ce28f5bb42b7a9f2c824e633a3f6ee835bab6858 # v3.29.0
      with:
        sarif_file: rust-clippy-results.sarif
        wait-for-processing: true
        category: Rust-${{ runner.os }}
