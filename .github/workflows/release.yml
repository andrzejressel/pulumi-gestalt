name: Release
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'New version'
        required: true
        type: string

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: "full"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  release:
    runs-on: ubuntu-24.04
    steps:
      - name: Cleanup unused stuff
        run: |
          df -h /
          sudo rm -rf \
          "$AGENT_TOOLSDIRECTORY" \
          /opt/google/chrome \
          /opt/microsoft/msedge \
          /opt/microsoft/powershell \
          /opt/pipx \
          /usr/lib/mono \
          /usr/local/julia* \
          /usr/local/lib/android \
          /usr/local/lib/node_modules \
          /usr/local/share/chromium \
          /usr/local/share/powershell \
          /usr/share/dotnet \
          /usr/share/swift
          df -h /
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          submodules: true
          ssh-key: ${{ secrets.DEPLOY_KEY }}
      - uses: extractions/setup-just@dd310ad5a97d8e7b41793f8ef055398d51ad4de6 # v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: cargo-bins/cargo-binstall@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Install requirements
        run: just install-requirements
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Pull required docker images
        if: runner.os == 'Linux'
        uses: nick-fields/retry@ce71cc2ab81d554ebbe88c79ab5975992d79ba08 # v3
        with:
          timeout_minutes: 10
          max_attempts: 10
          command: docker pull public.ecr.aws/ubuntu/ubuntu:latest
      - uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34 # v5
        with:
          go-version: '^1.22.0'
          cache-dependency-path: "**/go.sum"
      - run: go version
      - name: Install Protoc
        uses: arduino/setup-protoc@v3
        with:
          version: "25.3"
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - run: protoc --version
      - run: brew install pulumi
        if: runner.os == 'macOS'
      - run: pulumi version
      - run: pulumi login --local

      - uses: Swatinem/rust-cache@f0deed1e0edfc6a9be95417288c0e1099b1eeec3 # v2
        with:
          shared-key: build-examples
          save-if: false

      - name: Replace version
        run: just update-version "${{ github.event.inputs.version }}"

      - name: Base and e2e tests
        run: just base-ci-flow examples-ci-flow
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Clone Repository
        run: |
          git clone https://${{ secrets.RELEASE_TOKEN }}@github.com/andrzejressel/pulumi-gestalt-releases /tmp/repo
          cd /tmp/repo
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Create release Commit
        run: |
          cd /tmp/repo
          git commit --allow-empty -m "Commit for version ${{ github.event.inputs.version }}"
          git push origin main

      - name: Release
        uses: softprops/action-gh-release@c95fe1489396fe8a9eb87c0abf8aa5b2ef267fda # v2
        with:
          name: ${{ github.event.inputs.version }}
          tag_name: "v${{ github.event.inputs.version }}"
          prerelease: true
          repository: andrzejressel/pulumi-gestalt-releases
          token: ${{ secrets.RELEASE_TOKEN }}
          body: ""

      - name: Create commit
        run: |
          git config --local user.name "GitHub Actions"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -A
          git commit -m "Release v${{ github.event.inputs.version }}"
          git tag "v${{ github.event.inputs.version }}"
          git push origin "v${{ github.event.inputs.version }}"
