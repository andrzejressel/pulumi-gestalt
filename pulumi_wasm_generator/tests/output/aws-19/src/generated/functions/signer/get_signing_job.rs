pub mod get_signing_job {
    #[derive(pulumi_wasm_rust::__private::bon::Builder, Clone)]
    #[builder(finish_fn = build_struct)]
    #[allow(dead_code)]
    pub struct GetSigningJobArgs {
        /// ID of the signing job on output.
        #[builder(into)]
        pub job_id: pulumi_wasm_rust::Output<String>,
    }
    #[allow(dead_code)]
    pub struct GetSigningJobResult {
        /// Date and time in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) that the signing job was completed.
        pub completed_at: pulumi_wasm_rust::Output<String>,
        /// Date and time in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) that the signing job was created.
        pub created_at: pulumi_wasm_rust::Output<String>,
        /// The provider-assigned unique ID for this managed resource.
        pub id: pulumi_wasm_rust::Output<String>,
        pub job_id: pulumi_wasm_rust::Output<String>,
        /// IAM entity that initiated the signing job.
        pub job_invoker: pulumi_wasm_rust::Output<String>,
        /// AWS account ID of the job owner.
        pub job_owner: pulumi_wasm_rust::Output<String>,
        /// A human-readable name for the signing platform associated with the signing job.
        pub platform_display_name: pulumi_wasm_rust::Output<String>,
        /// Platform to which your signed code image will be distributed.
        pub platform_id: pulumi_wasm_rust::Output<String>,
        /// Name of the profile that initiated the signing operation.
        pub profile_name: pulumi_wasm_rust::Output<String>,
        /// Version of the signing profile used to initiate the signing job.
        pub profile_version: pulumi_wasm_rust::Output<String>,
        /// IAM principal that requested the signing job.
        pub requested_by: pulumi_wasm_rust::Output<String>,
        /// Revocation record if the signature generated by the signing job has been revoked. Contains a timestamp and the ID of the IAM entity that revoked the signature.
        pub revocation_records: pulumi_wasm_rust::Output<
            Vec<super::super::super::types::signer::GetSigningJobRevocationRecord>,
        >,
        /// The time when the signature of a signing job expires.
        pub signature_expires_at: pulumi_wasm_rust::Output<String>,
        /// Name of the S3 bucket where the signed code image is saved by code signing.
        pub signed_objects: pulumi_wasm_rust::Output<
            Vec<super::super::super::types::signer::GetSigningJobSignedObject>,
        >,
        /// Object that contains the name of your S3 bucket or your raw code.
        pub sources: pulumi_wasm_rust::Output<
            Vec<super::super::super::types::signer::GetSigningJobSource>,
        >,
        /// Status of the signing job.
        pub status: pulumi_wasm_rust::Output<String>,
        /// String value that contains the status reason.
        pub status_reason: pulumi_wasm_rust::Output<String>,
    }
    ///
    /// Registers a new resource with the given unique name and arguments
    ///
    #[allow(non_snake_case, unused_imports, dead_code)]
    pub fn invoke(args: GetSigningJobArgs) -> GetSigningJobResult {
        use pulumi_wasm_rust::__private::pulumi_wasm_wit::client_bindings::component::pulumi_wasm::register_interface;
        use std::collections::HashMap;
        let job_id_binding = args.job_id.get_inner();
        let request = register_interface::ResourceInvokeRequest {
            token: "aws:signer/getSigningJob:getSigningJob".into(),
            object: Vec::from([
                register_interface::ObjectField {
                    name: "jobId".into(),
                    value: &job_id_binding,
                },
            ]),
            results: Vec::from([
                register_interface::ResultField {
                    name: "completedAt".into(),
                },
                register_interface::ResultField {
                    name: "createdAt".into(),
                },
                register_interface::ResultField {
                    name: "id".into(),
                },
                register_interface::ResultField {
                    name: "jobId".into(),
                },
                register_interface::ResultField {
                    name: "jobInvoker".into(),
                },
                register_interface::ResultField {
                    name: "jobOwner".into(),
                },
                register_interface::ResultField {
                    name: "platformDisplayName".into(),
                },
                register_interface::ResultField {
                    name: "platformId".into(),
                },
                register_interface::ResultField {
                    name: "profileName".into(),
                },
                register_interface::ResultField {
                    name: "profileVersion".into(),
                },
                register_interface::ResultField {
                    name: "requestedBy".into(),
                },
                register_interface::ResultField {
                    name: "revocationRecords".into(),
                },
                register_interface::ResultField {
                    name: "signatureExpiresAt".into(),
                },
                register_interface::ResultField {
                    name: "signedObjects".into(),
                },
                register_interface::ResultField {
                    name: "sources".into(),
                },
                register_interface::ResultField {
                    name: "status".into(),
                },
                register_interface::ResultField {
                    name: "statusReason".into(),
                },
            ]),
        };
        let o = register_interface::invoke(&request);
        let mut hashmap: HashMap<String, _> = o
            .fields
            .into_iter()
            .map(|f| (f.name, f.output))
            .collect();
        GetSigningJobResult {
            completed_at: pulumi_wasm_rust::__private::into_domain(
                hashmap.remove("completedAt").unwrap(),
            ),
            created_at: pulumi_wasm_rust::__private::into_domain(
                hashmap.remove("createdAt").unwrap(),
            ),
            id: pulumi_wasm_rust::__private::into_domain(hashmap.remove("id").unwrap()),
            job_id: pulumi_wasm_rust::__private::into_domain(
                hashmap.remove("jobId").unwrap(),
            ),
            job_invoker: pulumi_wasm_rust::__private::into_domain(
                hashmap.remove("jobInvoker").unwrap(),
            ),
            job_owner: pulumi_wasm_rust::__private::into_domain(
                hashmap.remove("jobOwner").unwrap(),
            ),
            platform_display_name: pulumi_wasm_rust::__private::into_domain(
                hashmap.remove("platformDisplayName").unwrap(),
            ),
            platform_id: pulumi_wasm_rust::__private::into_domain(
                hashmap.remove("platformId").unwrap(),
            ),
            profile_name: pulumi_wasm_rust::__private::into_domain(
                hashmap.remove("profileName").unwrap(),
            ),
            profile_version: pulumi_wasm_rust::__private::into_domain(
                hashmap.remove("profileVersion").unwrap(),
            ),
            requested_by: pulumi_wasm_rust::__private::into_domain(
                hashmap.remove("requestedBy").unwrap(),
            ),
            revocation_records: pulumi_wasm_rust::__private::into_domain(
                hashmap.remove("revocationRecords").unwrap(),
            ),
            signature_expires_at: pulumi_wasm_rust::__private::into_domain(
                hashmap.remove("signatureExpiresAt").unwrap(),
            ),
            signed_objects: pulumi_wasm_rust::__private::into_domain(
                hashmap.remove("signedObjects").unwrap(),
            ),
            sources: pulumi_wasm_rust::__private::into_domain(
                hashmap.remove("sources").unwrap(),
            ),
            status: pulumi_wasm_rust::__private::into_domain(
                hashmap.remove("status").unwrap(),
            ),
            status_reason: pulumi_wasm_rust::__private::into_domain(
                hashmap.remove("statusReason").unwrap(),
            ),
        }
    }
}
